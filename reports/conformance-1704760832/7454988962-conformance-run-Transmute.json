{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e8d9eba6-1251-43d9-8033-fe00f3c9d399",
        "name": "Clear Cache",
        "item": [
          {
            "id": "32619470-38b1-47a4-9b36-ec58b49e7a68",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc9de6a3-bb7e-4a5c-bba5-7f7d01ee23be",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5d77f41-0624-4b60-b53b-b4077f859f0f"
                }
              }
            ]
          },
          {
            "id": "0c0c7e0b-573d-4149-a66e-658a4025f6fd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "220452b5-92d8-418b-9158-c16dc671fcf5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21a83d36-6bb2-45e9-9ccc-a76856669f26"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "66d26167-4298-49f9-aef7-4a47f79775b6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "422eac43-7328-4788-b90c-96fc92cc1d63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f99f47b7-e6be-4158-99a7-875f659300c2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dff2679-19bd-48fa-a411-e5f6c9180b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "821b9211-98b7-4791-9944-8c47b2cdc685"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79740526-215c-42a4-9b20-fa6ba260dd97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0deff27-5dbd-4929-bb22-cb1f3d0216fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecb5f5f4-173c-4073-aade-b560984e19f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d746b90-8fc8-495c-a1c1-34e443195a0c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b67d997a-30fc-4b5f-b322-b3826edeecc3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "402e702c-faa9-4da4-baec-b254a6e5f920"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d41edd5-dcb2-4c76-8979-d3d9e9f30ee2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6283305-b42d-4fd1-87ca-8a3d327ebe6c"
            }
          }
        ]
      },
      {
        "id": "661cade5-b80b-4ec2-94f8-4f56dca29734",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2fae2b92-4a29-4f5b-b3d3-6d1caa514a4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77e9621a-2349-46a8-8d9c-9c47d13cb283",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a590b835-b866-4ab5-b956-3cecc0a73ec3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245f99da-57b8-44ca-aa81-22c1a544b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7cfff79-642f-43f2-81fd-921cc936cca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45472464-f0b6-4bda-9ea2-42b740d72453",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cdebf6-bcb1-4a13-945d-98618e5552cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa89801d-9cff-41d1-b19c-80375101d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3a8e85-beed-4a47-a382-4224b4fef0a6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6c1f1e-cfb9-46bd-85c2-3c7f78291bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64712b08-d921-46f2-a228-b59c0527426e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b521588-c586-4363-951a-93eba3239bf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "329b5646-13b5-4b79-9c39-bf20a690273b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30ad957-c250-4da9-905c-29ee28310db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79a5bb0d-ecb2-4006-b9c6-47c31e23584f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb673ed-7e03-4de8-a54f-9706e8cda843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d583833d-d3be-4903-bb09-dd80acb08d52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25b84234-1fcf-4343-bd64-57e475b9a2bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e34c5eff-81a0-4439-9fb9-f15591327a60",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84275522-4ee4-4d95-a924-51649d40b8c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d6c525f6-1eb8-4abf-8761-15b5eb3faad2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "010003b4-c2ed-484c-b1de-c246b9b28611",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bc816ce2-0c66-49e4-b87f-4fe88d86ea0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a96bc50-4341-4ad4-82df-576b15447d16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7687342d-e33b-4254-ba77-47b4bf1ba490"
            }
          }
        ]
      },
      {
        "id": "a721195d-7eb4-481f-ac95-c9755a72a70a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7fe4a83d-52e5-4590-9e70-0c193e09c3e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f58b12de-fdfe-4e6c-94db-5d65c860b47f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "43fcdedf-705d-4419-8e54-9d3656053461",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfa9b6c-f265-4c00-b4d4-25ad9418df99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf9dab9-e5f5-4e95-86d3-54eac92a5816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec337e1-53a3-42a0-ad07-41624bba6514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69dfff75-c3dd-43f0-90bd-a8459dee76c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b336a-dc83-4920-9544-ea5cadc1287c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f170ac1-3660-4c4b-a027-e39813ae5b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245b0254-12e8-4201-9333-2b400a5727b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eadaaa8-470f-475c-8629-c563551459b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc9a494a-8526-4a07-a52a-8f692492bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe3bba8-adf5-4c7d-b0a0-6b9e75819201",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5769315-21b8-4197-8c41-c6e7fd657571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9f6632-2f91-40ae-8939-e6ab56c57cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f9b4a7-f440-4f06-aa23-e58891217841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "176c86ae-5ca9-4d04-949d-daa1837e15a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653f3d6-15c0-4c1d-a2d9-3101d3676f14",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6822806-d7da-4d6c-a0c8-6adab723121a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53905387-c6c3-4eec-a7a2-added90173fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638429a1-f875-4539-a16a-30a1fd15decd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736c2953-c433-42c4-84af-0130491570fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9df198-7b42-411e-b6ec-f5927660b6bf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2217db27-a542-48d8-a171-1dd00fff1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692a61da-51b6-49d8-8438-e767d8c6ea9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a97a16e-3c95-46db-974f-c8e46ad89842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0c31a0f-1b8b-40f7-a1b2-0a3f4bfb379b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a15a67-4d21-403f-8494-9782631d981a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739c6e0b-2888-48af-9da9-a9b1012f7de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934a9ee9-a8bd-4b63-877f-202eb55f1eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ed0c78-5bb2-4c04-9e9c-d0152a9a1ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd56134-ae0c-4e6b-91fc-7b984192d1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb270ec-5f08-497e-8b94-88da96a78804",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2010445-7805-4e71-b246-2efbf3621978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55a2406-571a-469b-b172-4980b0a01fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275ed738-f961-4d44-991b-41c171be5a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02366631-c091-48c0-911a-a0826dffcc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a504d824-9c31-447e-967d-4e882d548b2a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea196d85-1581-4757-9f22-31961fcaa1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7914f30-d7c0-4179-b11a-10b18491f446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41407bd2-7fbc-4f99-b759-f4ee973b2c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fbccde5-33ba-4562-b12f-39da06bb3689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed42aeb9-15c2-4110-9ac5-65f0672cc0a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8e72e1-15f3-40e1-9db7-9e9c16a7d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc17fca-8f95-4aca-b75c-ddbc12e73715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bafd15c-11be-4bf4-a8bf-de348619cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dead3d8-82fd-4fb7-9d2a-ba95d801a25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f801dc3-e250-48ab-8690-ea9da1f600dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c582b3-730e-427a-82bc-0dd9b97751ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7147de-e150-445d-b3c6-6e26bd436458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450efa44-d553-47f4-8f87-15ad675671ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "975e873e-e348-4268-9ab2-8cae412a1910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330bd3dc-78d6-4785-8cb1-02952ebf1ad3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d4f59-c9b7-453e-9571-6fb52471dd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7e9d65-00aa-490c-9fa0-4ccb14f17222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c7e3e4-1812-4a95-a657-d33f34f89a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa42192a-9888-432e-91d7-7f5ad8835669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f144683-d5f7-410e-8566-55f4dbc588b7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c555272f-18db-451e-8626-a4c7e24896af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc3084c-26a2-4f70-ac8d-a259cf4b876d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2940228-053c-433a-b5dd-d3db55a90928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b8de0c1-f139-4285-ab68-b81106f00ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea31d7a-0764-4750-bc0c-cc1378b5c4a7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbfcd46-32b1-41a6-81f4-358055d4d717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b402ab39-9775-4e57-9f87-27c5b00e41df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76916108-2f36-4af9-8294-1e45c4a8a58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc212c3f-dbdd-44b0-8440-5dc30e0bc9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f222ee05-aa97-48fd-a4f6-9537f9d037ac",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6630c27f-0430-4b2f-b4d7-d2fce2df4ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f86ee4-f856-4717-82ef-4ab4d08461a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde2302a-61c3-431d-af92-f9596bda2ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af557503-534f-49db-83a4-56b192bb8d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b813eba-0cd1-49b5-9c22-4619e1613a90",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e6ed72-efac-4148-a4b9-8a5cc7132b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3c2095-8338-493f-b2f1-902e34d88ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086f7589-775d-4170-95b0-e1ab20883871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "999dfaaa-4c52-4442-bb7a-99f725a1ca5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7aad8c-ef9b-4aae-b3a1-e28983533b53",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79df949-e9b5-45d2-a45a-daa9fed5b039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7c1d02-38ca-46b7-8e82-957511eafc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874f2fc-a143-4a60-a638-91a706ab9fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64bf1f9a-9e27-4e52-9a72-5bebf3640cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08346385-d3df-4d25-a947-4cae40877715",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eb106b-67b9-41e1-a951-4ee3cf1fbad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1229f7-728f-4176-a111-089bcb5da582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e1b09-5efc-42b7-9d93-44f198bc5b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da88064c-85c0-4125-9c85-034fbffd587e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cda7bc-0695-4542-8b0d-0fa76730e6a1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c9ef87-f947-4637-87bf-bb782931c74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d08b139-fa01-4d41-a7d5-4c6a6c5d7d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5048e21f-9bff-4222-9650-655a5560225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df3a6fa-0e5a-40ba-9eb3-2ff25ae6dd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa438a-4a2a-4398-b9a0-cc18527eb702",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf68db63-78e3-4995-8a15-42b630bbeae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b94e1e-bd6b-4a0e-a348-73c7496ce3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc895f1-e12f-4ac2-8392-4182e4f767f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "869a0f8e-399b-4ac2-a8d3-106b2246bbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d1d4ae-9c81-4dda-9232-0ea97875f461",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e49ea2-642a-4915-bca6-17a0edef9b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e756b556-f679-4851-ba1a-4409d0939f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dd9da8-bb73-416b-be56-f2fec9246627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a5fa4a-a164-4051-b6f6-cf03bd207244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6190bf-0100-4be4-a2d3-1bb39254af31",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d333a5-07da-4704-bb4f-d4ea9fae51f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0129ee65-046d-4349-b9d3-407fa59e5aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0272ea-2a96-4496-b76d-af8a5d1fab73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdde8c1a-a7e6-44fd-b6b7-3ca2247b42aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6916a10-5a28-427b-83ec-f6f3cd414745",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fa0862-1592-4c3c-9119-9d24a8fe7bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3f9a88-220b-49ec-8539-2973792363e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5989e9d-cd8f-41a4-a86d-d861a85eabfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fdbc35-0d1d-4abb-be13-e985b7b1740d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4487a1a4-2471-431f-aacf-a19dcbc9b3a0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff824da1-2967-475b-bd5b-52e3ea52b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef8d6d4-aae8-4c8e-828c-aadce39b5b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27a2918-0396-4af1-8253-e8ddc5f147eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e167498a-aa54-428f-a49b-6472d001b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c185c1-a745-4a85-ab38-727087c9f298",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad158dbd-9c65-4217-a1f5-bea9dbf145d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a260021-ca68-4fef-a9e0-93bc1067ab9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fda49b4-f8c2-4106-9408-5237ed431026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6ebf60-e26b-4157-ad1f-42e0b5f0924c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd66966c-b9a4-4731-807f-94e2e438bb32",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b729b7b6-d877-4f2c-a65f-db88f69bc3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24180661-3643-422f-bacd-cbfff8ddc58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8ce467-d784-4e24-90a9-69f05c8ccece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cd8af1-60e9-4222-b3a9-5dcd267e640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e13064-51a3-455d-9936-dc4d662e5f3f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d8946-7f5c-43f1-b0e9-57e30caeb3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea3cb28-14a6-42e0-a8fb-7a27e9a50ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55de2c7e-37a8-4ea5-b7e4-7d95645ddde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c102b7b4-8b6d-4017-b116-329cb22de413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81216c74-553b-4ea0-a7b8-db581e03314a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2dfce7-0ab0-402c-ab93-0de8d4d3be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2c7571-eda0-4735-9cd2-43553ab685ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d3b518-fa3d-445c-ae85-f77db1e8ad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af76c159-3da3-4d64-ac2f-0eda65dc7dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87b126e-f611-4eec-8e00-007f4b159bb6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9319b5e0-fbb4-4333-a349-68c781140648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf69619-f704-441b-b1ab-2f9c970b9ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460ad20a-e79a-4c48-84b5-bbf009efa5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58fb09ec-b533-40aa-b1b5-f1e25cc7c240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f886d4ab-1716-49e2-a573-3cd536470754",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35096636-f95a-4f3e-a015-12e304c39cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d9c630-c104-40c0-bf67-6b456252c18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2815d204-ecc7-430e-9231-cdd1e96f5674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbd4409-a66e-4f4c-9f5f-47eb62033363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beea0e9-05f3-4bf4-a45b-180f34d85d7d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69275bb9-7117-4f88-954f-59e304614266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39029c66-e898-4791-9575-ad8d5ee93139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b165fc20-4125-482a-8b72-df0df21fd371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2322828-1922-4501-8bee-1edd200c6e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6ca3df-991d-4be3-8d32-f0d07f5408e6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c95a43-4fb3-476b-bbda-230a3038e5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea10b258-4207-4bb6-b9f2-98c19e29a31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625a4e2f-0bec-4cb9-8fcf-61c3d3505500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1831c3ab-af72-4a0f-bd0c-496c7a12f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe01404-49c1-4eb6-86b9-3963a4e66840",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6066554-e599-42a5-b332-9110a33b96e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455fab47-dc8f-4776-8ad2-ed0adfce9641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c916f447-eafc-44b4-89fb-10ea92531227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e01f007a-248c-4cf3-b968-2282d75ef71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af1311c-a06e-4307-801b-2e594e03db27",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59298684-b658-407d-bcc1-1cd88457a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93007092-3c37-4e4f-b7e9-24a8884856b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bebcc9-0c25-4b57-b3bc-87571e66ca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "448422e0-87b2-47fb-93ca-2807ae76e862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7e5c9c-8b66-4504-8d10-436819b643f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e8a8a-671d-488f-9e70-008fcb41ba34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5d3e21-016b-4f95-9dfc-6f688cce8b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeb5e5f-d5df-4949-afb7-a92e0ab68ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c16d0e-65d1-4fb1-b768-f6695b33df2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5cc77d-5df8-4c61-b4fb-a35b464b55d2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0c9d59-d43f-45a9-b3b1-821ab8f5eb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a506078-796b-4fbe-b483-f13035bf6c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4571180a-5f43-4415-88d5-81b7a59ffc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "57673802-0409-43f0-9835-c56d90828722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc772128-22ca-45d9-860c-a39e697a0a2f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b5b3ae-c6a0-4e3b-b49c-27d169a44407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84a48a8f-3b82-442d-81b0-a715c65a0c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fff6de-1bd8-4614-a0cc-d7a29b0932a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db54e291-0a6c-4c89-a946-cc28f1cd1b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78295dc-630b-4a3c-8c9e-78928a2a5dde",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b8b577-c4bf-44aa-98c1-d6220b0254ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d589dc-59dc-4c0e-abaf-a8b65fc2a9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764337ae-3848-47ab-9501-122464b43e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5563c453-959c-4d75-ad8e-6d75dbbaa97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19968c7-f1b0-462a-a1bf-118a6b0c6251",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cbcbff-25ab-4f24-ab1c-b8898cb944d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd0da64-4304-4fd7-b7cc-1d7f0511cf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6794eac-3a46-446c-af6c-3390d666b8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34654282-aeaa-414b-9a0d-2508b92e369c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7d6a78-ea33-4861-a9e3-ff555bef93f4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe18035f-906b-4e2a-9268-3e89be89a032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5632d6-2512-4c01-91f9-cf8b14807f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5e9adf-d31a-4b24-b33c-6fae50eeb352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7292fce7-744f-41b1-b502-c866f17f231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdd4ed9-b150-44f3-be4e-83c18ab91374",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a097e1a-8140-4c42-8433-5534343229ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54b646e-f087-4541-ace7-3a8bd35f4517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e5b04-8f86-4be4-a86c-3d1e5e4be445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb85d3ec-cb84-4907-aec6-a205d2b1f795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242d6ef6-6223-44da-b237-2845fe6d0291",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b231bb1-8707-4a15-9fe4-3bcdf261ba29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4125552d-419d-42a1-b6fb-e952b70f38a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57fcf13-9c6a-474a-bcf3-f880be677080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "682f2753-fd05-4d8a-8717-6f77033fa945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23119838-b017-4c5a-8437-2f0355430a25",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99f4017-0e29-49e6-a29e-10169265843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f91331d-6983-4669-a9d8-b259fea373c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b319d4b0-fec6-45c5-a4ed-2289c499137b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8c53a1-ce12-45ab-b7b3-f5b17cbc4f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2073e4b6-73b6-4e68-a448-80dd64c9b497",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ae877-f047-4ecd-b6bc-fda87cd3e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba38477-071f-4997-b8ab-d459bc699061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60b91b2-1a1e-45aa-b0c7-538393aa1825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a53d60c-f427-4552-8579-c09f24a67a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344f8c6c-5cda-4aff-9e48-877f46bc2676",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c06f4a-646c-48df-a916-d3e2b7537357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ef9d05-05e5-4823-8d8c-29f97efbb65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d7a6a9-82c8-495e-935d-4b50e0337085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84540f75-dbb1-431f-89f9-57544cedfa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af32a64b-a4ef-4b5c-9f79-5307f63a4950",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39600952-fddd-426a-a7dd-d31f13bed424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc194d6-280e-4fdf-af7f-1f01033485dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaef0209-2e9a-49dd-b4e1-1e736389c792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d322a5e-360f-4b11-a66f-a97330dfa535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04781e37-20f3-4297-abb1-6eeced816fd5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851a0dd1-c091-4bbd-89b4-041b9a638131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0459628-b326-46ab-a5cb-ea7f10ff6f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291db67b-3ebe-41b0-bb02-a66683de4899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d061b86f-14d2-4f4e-921d-069ba6b79b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae00f77f-9344-428e-aee2-70233ce51d5e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9378c757-f0fa-43e1-918f-fe993553989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6e13b1-169d-414d-9de2-d24f2c3165fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63baf45d-0284-40f7-8ffb-faeae5c61d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc74e57-16de-439f-aa26-b104e805a6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474dbe21-8eac-4d89-88f4-584c3b916a71",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a7af06-343f-467a-b151-4d9736bbe643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c5f1ec-3420-4c66-83c4-c161cbee73ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ca741-3f75-45e1-892d-2e2c0705e63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "386fb8c1-b98f-42f2-81e9-9b11e0f1d26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6087cc0-0647-40bd-984e-a723c8accb18",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277e3ef1-382c-45a6-92fd-24d4a5c73f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122cc500-5010-408d-bd05-4cd982ff49b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c2fe23-4250-4dff-9dcb-69e3bd6c8aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce84c59b-cba6-4d72-be69-4605c85b3265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee5f242-6f88-415c-9268-09c50d4410ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dd6647-afc8-4a63-a816-f124586e3310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab7fb3e-e446-43f6-ae20-5ce78552d53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b42e45-11e1-436a-a5ec-919ebf5b19a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7845146-7e2f-4108-8c24-5c4f4450237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92628556-d0b5-417d-b565-e2322d9cea09",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c780b1-7f77-4e21-9ecb-87c1e889c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6db692-5b0c-44a4-9789-7e9c871dfd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17480186-4e93-485e-bd4a-1bb3794d13e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb34854-cf4f-4a4e-9239-9ff12f663cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5696be57-bc82-4658-b841-8323ac125e26",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf2d7c-68df-4696-90ff-4d61049063f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa20ccc8-d0a4-42e5-9799-33c1dc51a12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548261d5-9868-45a9-8e0c-b765660d3960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "700240d8-9190-4587-bc9e-b98ce3a57593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42caac53-f47d-47bc-9864-5da7edcb59f6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f0921c-30dc-4f5e-ad31-c0b0aa9fc44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76291b42-5026-4d63-8c4e-f9b2384894bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f719d2c-51b5-4a46-bae7-8b2211057e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfa312a-844f-4c5b-9c0a-bf04d99bfda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48325342-ee26-4ddd-95f7-4fdfa54e4272",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4e2dc0-99c6-42f3-b195-bd3b28fa71f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd941363-1982-40d8-a306-6fbf32a592a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f18350-890b-47d9-bcf8-ce39d585c095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "208de4ca-ec51-4873-9598-51e2f6419bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc4e1e1-b5f6-49ac-9863-0bc393a2e800",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68304e9-63c0-4aaa-b006-4aee8802437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38639095-ca55-4d95-b9c7-2ddabfe50011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4946c2bb-8ab1-4a7b-a72a-e305c3aa1db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d1d2ed-fdfd-4970-94c7-de8d7e687982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bc5068-f611-48c8-b751-02c6f6b4012c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a899d4a-6808-44ed-8357-61b854dbdc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f9940f-bbcf-4fbc-a75d-3aef0d36eaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc29dfca-fafd-4809-b491-2430c7ac5aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "83c27d38-edad-4d2a-875e-711518cd5d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7ba0d7-b9d5-43f8-99ad-2e236c5839d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab772ae-803a-44d7-b75d-e7f3cf1ecf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4409b82-4ec0-450c-9d98-9acd2381a95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f62c45-e431-4a97-9f44-1b0481f123bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94e75ab6-95b8-455b-b94f-a42364e3110a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17459dde-e6ec-462d-a136-67499c8ac27f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ec385-1d02-4db7-9329-e121b61f53ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e8b7e-6c02-42bc-96c3-4030091a5b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455aac9d-0621-448c-be95-b125e22e4efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0d4776-43d9-423d-8a00-a0a4389cc927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbab0b15-4bbd-4b1e-8ed3-181f920ed6f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a23870-4aae-4ae5-812b-730e8bc06d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b61da8-82b0-48df-8886-9c9b98cca1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad184499-0be6-45fa-b13c-2cf83c715481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa38dea-2eee-4d00-9a61-846c1d17dbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46816e86-4adf-4739-ad89-2da6ac5046e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb47ef17-d822-4132-8fb2-9456dcd22683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df11e59-d91c-4d2a-babc-15e6ab6740ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b271d89-ec61-4bd6-bb04-62b3490c3c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40b65e95-801c-4d54-84f8-4529648859d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb1034f-d1f5-433e-9dd8-04af29d69843",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ac96d4-8f73-4ce9-a987-6b5f8f1379c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09428424-4d35-46b4-ae5d-2e3e40cfe525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff107de9-3ebb-47d9-a478-f5441cd4f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a41493ab-e500-42f5-ae33-c127167babdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe47eaaf-bbab-4735-aa00-81dff624049d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7336919f-1739-4c25-b5b0-de1dc3286699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3215d2ab-c298-4996-9542-958ff6ad52ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ec4de6-0869-426a-b677-8f9cbded6d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4ae8d4-9e67-4b07-bfeb-6a7cb0372fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828208af-1a3b-49f8-a666-bc232e062124",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb71684e-4962-43b0-bb69-939121deb11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a182977-64eb-45a4-b908-cecedc2a7562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c0e0cb-76be-4021-842e-2e0964af101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d100f5d6-0899-4a40-be3c-c4a7d4a1bf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3206e6ee-aef6-470e-98bf-0649785a52cd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d6709-24fe-4a60-8a12-95f4af19232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080286fc-cb99-4aa9-8f18-37474960391f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc15ec2-b03b-442c-8fcb-4fa0ebecf34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0ad2d4-0a6e-400f-82cc-6f4094839a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f965d656-d58c-4a29-a5a0-0a1f1213297c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7bacf2-b535-4a6b-a0e1-8ffb50a1eec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d054e8-ee99-4ba4-bd58-e667da451663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab336997-ae12-4d43-9013-c78d7734b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2d79b5-7090-4ae0-8ddf-c2d054c1c163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf1f581-7572-4ff4-ac82-273d714f90f5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432c8ee1-0cd7-4099-823d-81c1a5880dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e244b433-df92-404d-a942-b73c141bb270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99369cc3-0f7f-400f-b83a-570aebba2a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2261a0f-b708-48f2-b2ff-4b3b22435294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3b682-4bb6-442f-a27b-e87356f67935",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb8344e-d50a-4513-bbc7-fde31672e21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322896d4-99e2-480a-93cd-5d0bc3165157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d2e19b-62cb-4296-9c59-fff73d512103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a5b219-5f9a-4b0a-9148-3446a30f175c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a10009b-aa59-4934-b020-cc12b6620fa2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42904337-295e-41cc-a4b4-4dbc208c4739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc79458-e138-4e62-9028-be0bf28a754f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba706c4-d441-47e1-923d-91bf9ab321e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1799a15f-713a-42c5-95d9-adc69eb36d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2326a726-2ae6-4ad4-a094-d8a1adbb716a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b11a86-e1a7-440a-ae45-4e1f31f864d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72f5515-0582-457e-8feb-787a687450b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6bd121-843b-438c-91cb-f962a1326f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bfb49a-91d3-4cb3-a3f9-2bc0232a49ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80baaf6c-b6b9-4ddc-bdb0-a1cb57f83abb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde59a57-94d4-4bb8-9089-091efb11c670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cafd747-dd65-4ff8-a2cd-920722d4e24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84407253-28cb-4190-9795-0d107ff685c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19dced0b-66b2-42b3-b69f-8acd830b1a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5458c9f2-7d26-4861-ab95-0c01eb72c69c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc02fb-d7e9-48ff-b283-bdd809e0e4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f675261-3109-41be-8c12-743dd27e855e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fd6761-5683-4bbf-ac63-0857cd05b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e9a63d-729e-49fd-bd8f-228658f3fae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f398105d-3599-4b15-84c6-22ebb8e17609",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f80984b-b27f-4368-8b72-ba571595d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd76f1a9-f1a4-40c0-8daa-34c85ad38081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986d82b-b62b-4652-a671-8bcceda244e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55c786b-a184-4825-bd60-ce582c610cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7135d4ee-2f5f-497b-ba8e-3c3608654623",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818fdf22-88ef-4d76-be12-48a744c35207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cff9b17-3de7-4b39-a9fc-9dd921d46192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134fa3e7-74cf-4ebd-979f-cdf6315c4c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc157938-75ae-4cca-a4d9-bd52ef99d188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39c669a-5112-40ac-864a-49400a5712a9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c059eac2-58b6-4914-b5b9-03ed7387d539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686cdb42-e25d-4144-8824-27e888dd73fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b239b9-bf52-4c0c-87bf-802ece9e3df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62f09cd6-ea64-472b-adf2-c8ccee40c982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bddeb83-7c35-414e-91e2-8dd11a58e165",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f68799e-d678-437a-aeaa-fe9fdb7e2bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb11a4e3-01b4-4ca6-9555-e84c11b2d12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982e485e-9d8c-449a-8e16-94c05a1f1986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "907057c8-a331-42e5-acd5-1cdb654eb35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7e35b3-0d2d-40a6-9a02-40b5dbf852a1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eb0ccb-ed38-4467-b122-42dc61686790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0416f3-e6ba-4e73-a2c8-3dabe9cc92e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9514d822-8de7-40c0-858e-92ad333ab81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2928609-bfa3-4c26-8697-2da5ffb4e06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db08629f-2b6c-4dc4-aa6e-bcc2c9d9868d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf593e1-3f35-4ee7-b1ef-9dbfa831a32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40136cab-0af3-41b5-811b-8da26950c508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c55a285-e719-4966-a9a3-e34db046b170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de19bf3e-d460-4961-b21f-0344ba0e2f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535d09bf-0659-4b92-b61c-d1d02a4a95a2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d185503-cbce-4a3d-9c5e-77c13c662c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1464ab-a80f-4d61-9ac1-1065b798e5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb394fb-22b6-469d-a5ec-7955175dcaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1bf2f3-f849-4a50-bf85-b693bcbdbca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58937239-2862-4b8c-a50d-b0a919cc99fc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ae476-cac4-4805-9787-670556597972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f453fa08-d5d4-49e3-b38f-9defcb9bb9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2eaf71-4b8b-47e4-9b8a-4af40ced8b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "703bb14a-484c-4b96-90ad-8e9c7a316b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb14826-742b-4f96-9bb3-8d0cdbd5d46c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0f99b6-0e90-4dd0-b4de-c2d0f6624f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b3346d-a4f4-425c-9a40-c1584ea2ebc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17415c6e-de9e-4f7e-991c-ce7384812769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f120245-196b-45d7-967b-ab80544cb031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10660885-ac96-43d6-9749-c67576c2c06a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d098f23-286f-4701-aef9-319ed6df36de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79075195-8dbe-465f-bac9-b6806d7edea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9640193a-6e2c-48e9-88e9-1ee6060b763d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df3287f-4a6b-489f-afff-99ce4fc61203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011d734b-c8a6-443e-900d-71d21fb3c844",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4f1b53-6e91-42bd-8ff1-64ee382c242e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71adacf-ca56-4380-a275-a88d3ddf79e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6043e93-5d02-475f-8035-7654e6349409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee322b26-7bd7-48b5-9840-7ef7c11d59db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55376239-75b5-4857-9614-0039ed702564",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898ec891-91d6-46d4-b930-38b411f2d503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdc260b-eccc-4f60-98e8-b3e2940a2b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e16b5d7-80ea-405e-b51b-93d992cde82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4390c848-3678-47f9-8fcc-00dbb0e7745a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999e25d2-2533-41e2-8fce-d4a22d97db3e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3105b62f-5d19-4077-8a3f-8cd221fd2301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2a354d-2eb9-4c9e-bc83-5610626f477d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b316f070-9d46-4fe6-ab8e-344c0d595ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf1b90d-d31b-4901-9159-dc2d8d74ef6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccb662e-4608-4483-af07-5ece73ba10ca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd20f926-6c0e-4299-9f3b-1341e53c4fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304b8d57-ec92-4294-88e4-764c87cd4a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d2ee19-3d13-42c7-8b58-28b0a3b46793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26256cfc-079f-4b74-8c65-c20142d4e352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2539b5a0-8033-4168-aeec-1abd985c72f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88f4061-19a7-4766-ad94-3ccd25f1b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e44a72-4f99-4680-be72-67d683c9dc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c510a65-b57c-4d76-a071-631e3af466b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d18ca7f-9126-47ef-85b1-2d988767bd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51262eba-dbbe-4fdf-b0ef-0231f672cdef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e541e27-e47d-421c-9fe2-bf19ff90726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4904a89-08a7-45f3-8c4f-8043e18ab613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655fdd4a-e963-4d9f-8c8f-86d0b0a5e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d07f87c1-0c7f-42f3-960d-727241d79fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabdcaaf-cb84-4edf-947a-8198be042952",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d425044-9b7d-4187-9ce4-fc8ac4d5f4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd64313-967a-4e6d-adfe-cf008745ec5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23418f-c5e0-4710-ae15-c7399e5b6fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1136d8-e7e3-4e81-9c7b-7f92a0cedb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb7340b-b2de-4296-9ea0-e38dc361fba9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a7b951-e272-4ad9-a47d-6752f36ebe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16217128-743f-47c9-a31b-98703bbceeaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937e99a6-37f1-474c-85db-c05e54c5e8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b091e903-4ea4-4892-83af-77f11fc97b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64ff880-2422-4b8a-a9fa-59a3e6c74fa6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc4b66c-e5d5-4c22-aacf-d11883c4cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e8b5f9-140e-4992-b003-b93db351333a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad4d7b6-a183-42bd-bec9-38d61ff0bf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd0161b-1685-432a-b628-9275eba6aac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86f1dec-7849-4bcd-8361-e2f36b3db309",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5494cd6-deae-4c80-9dd8-9619ed9a36ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29778f8d-2822-416e-a67b-8c91bc7cfe1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07289fab-b1aa-4221-8aa8-e8e7942fbf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c97f32-3d9e-4b2b-991e-0ab21963735c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f851d991-83ef-402e-abdd-7f95a14c28eb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6332ab38-de4f-4703-97a7-12bef75e93ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a275024a-c1c2-45f7-b91b-8c7de8d2f015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f137006e-84d8-4ea5-8b74-7d0b9b98b947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67c1f5c-cef1-466d-8bae-ff9a1d2ca760"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74fc4d29-d9a9-45ae-ab51-a98082b8417d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "796babf9-2883-4b39-991d-96b01f00150f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30389d9a-318c-481b-950a-9a9a48b029a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74977370-2893-4bf0-b392-ce41f7b34118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab76cb09-3609-471b-bb2a-9016cef7e795",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f0d7bc9-26fa-4f41-9f24-30919707594d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c8ff238-4f86-43b6-a5ab-252a1103c620",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa446ff1-2813-4d03-b235-5351cf50e00a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc204d8d-0c9c-49a3-9556-cd3b1a3ca5e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca429983-ecf5-4ed4-b746-65baf17e3b2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38293454-b3e6-4f2a-8bd6-76761a70d9c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edaa15f9-d357-4aff-8eda-e331c9f10b02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae396a82-a98c-4826-a80a-45d4716d4e25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e841d98-b717-4ada-bfc2-33f6a0ee760a"
                }
              }
            ]
          },
          {
            "id": "6fa4636d-0b08-486c-9c88-2e86ad7a81bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc944563-aeea-4d72-af63-a6d277651a46",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6583d2de-27f3-42de-8b27-a5ac78edfea3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45eaa1b-c091-401a-b8dc-e0cfa8227e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af727379-b07a-4358-a2a5-9020c80ce820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647978e7-e1cf-4eec-939d-20efbfad5853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4c19fa-a368-4f63-a4b2-bef1833cfbf9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b0c6495-dab9-46c2-9763-36eb493232f8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "500cade1-ee3c-4fb1-85d1-7ce6610e24d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2eea3dc-3a26-4a7c-a33a-1d5bb70cb944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87550fdd-69f2-4ce6-9f11-fe19f554736b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f396a4d6-8e25-4c2a-b8d5-cc7e2d108c2b"
                    }
                  }
                ]
              },
              {
                "id": "ad055145-688b-4ada-a804-784df780b5d4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6bd995d-6562-4e4b-8f9a-36b6fdf0218b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe4a82f5-d5c0-4c4c-9ce0-8f327ed11aa6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5aa2352-5f9d-4d82-84d7-306f43fc4676",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4e1996f-9f72-4a8c-a163-8a50a1554e27"
                    }
                  }
                ]
              },
              {
                "id": "05cda6c3-39e7-41ff-9661-08e1c0642d27",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47f20a2-1863-434b-8a22-9798d0d60951",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5984530c-971a-4aec-a8dd-66b0032bb7f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46982dd1-60ab-4ab5-8388-4de0c866715a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba5e3f7d-9ba1-4063-b798-8d694ef70c15"
                    }
                  }
                ]
              },
              {
                "id": "01f9a33d-97fc-4407-a4c9-6eecbe2504d5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29bf9dfe-acb3-4834-9e0d-f2dcca239dea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb025f87-f356-4595-b7bf-88d539cfcd0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "356fb24a-378f-450e-b14a-bf860c32c57e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "394885a6-db53-4bc5-b977-0a3749af567c"
                    }
                  }
                ]
              },
              {
                "id": "7a72d9f2-4d96-4bdb-8e0e-e970ef8aa028",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "222c77aa-053e-4abf-a7a5-d586ed218de4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bf8ff8f-aeaf-44db-a68c-4f11456da4db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a5a4d0c-5657-4019-8055-f018687231eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "75c56229-6d75-4d98-8516-d42ce1ae9a79"
                    }
                  }
                ]
              },
              {
                "id": "b22276d1-da32-4d69-a127-035db0044177",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d6e964d-fcac-489b-a954-9cf5a4d40984",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0efdeeb0-11c9-434d-8b8c-443ad53bd6d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef28fad2-8e17-474d-b6c6-c415b7479ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fc61d19-abd0-4350-8f54-d6696d85814c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e232fb9b-c287-45e7-ad6e-2fd5db49b895",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ec67ba5-c65d-4645-8959-1502933fff24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86b57583-6b41-4c45-8bb9-dbb32e4a7bf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9644e7a5-38be-40f7-84be-bd790427cb07"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "616a37e9-1f90-4356-b02c-6e1f1d6b6045",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b711ed11-c67c-4144-bee2-565d9b305c79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df7c3237-8933-4622-a70b-ce5608fb9d5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "835f714d-e49b-49f6-9591-f0cab585c297"
            }
          }
        ]
      },
      {
        "id": "2d7cf3e6-cb16-4d98-8105-588611fd19c2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c002c94a-0f8e-49fb-b082-f4af66b9fda6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a83684b3-d139-4a22-85ff-45b11f053297",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e7a84c6-e038-467c-a420-d787d7b211fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bffe5d-61d1-46f2-8f91-f386f9fd02ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7108c2-b403-4753-8747-ecff6c2d8a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d1b2ae-d6c9-4f88-b1f9-5bfc050fc931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1861dda-e311-49ba-a7df-aaea3e4d3848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacb1248-e4fa-4d1d-a3c7-67a8b0a22471",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd57b6d2-f777-4585-878d-555bb37ea93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642f8523-3844-4786-bcf3-a4fcd81921c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701e4536-452c-4868-af92-a6c554ca337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78a4bd1-3e8d-4640-ab9c-63f31c3c17a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d399082-29e9-4c50-b52c-bdc1ab4dfbe4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c331fc3-fc78-42fd-bdf9-8b726e061abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebc7eb9-ee98-4383-be75-a65dbacc5dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc68ed3f-efc9-4c75-80a4-4518fde30f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "135c1331-fb97-467b-97a0-614a78e6b680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e313c01a-c58e-4cc1-ae22-e3341eff2fcf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b072c7-4c70-4103-beb3-f4abf393e2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3b2e08-b559-4b1d-86d3-11e2d140f7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64223fcd-7649-422f-ae3c-88d270750fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "847f4555-e97f-454c-8412-0863cd05ba8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325cfc0-c661-474d-81e1-989d529e7983",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805be495-e40b-4d42-91b3-74c933c84614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b095857e-b4e0-4d2a-8d3f-a39276496020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95f9180-0b58-4908-bd2c-0bc1dbf15d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d46f174-8a52-42e3-8a81-2538b1de58cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7510a9e2-ba7c-46d3-93b0-8ef9d09635d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8102ec7e-114e-4e61-88e9-3684c78e55f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a0bc0a-760a-4098-918a-fe77d5026c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691d6823-e395-48b3-a452-eaec8f35d9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9612aa-b47f-48d6-9aa4-ff6ab8485fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc500773-00d3-4b57-a8bb-db41ba959ba7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55204ddd-ab72-408c-9441-c357f9415480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4af4179-22fe-4110-852d-04ab6dbef202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1b6d63-9d0b-4243-affe-babcbd2edd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5088b18c-de8d-4d0c-8d43-9e24f8be9d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a8ddea-9529-41a4-8ad4-ac57becc6332",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3011f8a4-e2cb-43f3-a238-fb3eb8b04349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ae715a-2601-40af-bb11-e575d1f3fb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24070240-d97e-487d-affa-ae5ddb96f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8430a8c9-438e-4af9-9eea-4bfeb99a0bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b80def-eeba-45a7-8148-2a1ba7fc5225",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fdb88e-a740-4dce-a5f3-732d93191da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d8af37-541a-41e0-a5ad-c184929b6142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5581ddb-63fa-40b7-973a-29cc02b4c404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29218a9d-09b0-4332-9e53-74c9af124f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3498f48-1854-4327-95b3-9b1dc371afd4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7523c73a-5a45-45e1-bdcc-c84dd628ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d140b5f-09e2-4b6d-9bd2-7b0cf7a43510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7dd941-04bf-4e7a-acaa-ed9fad1c4658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "110be14d-df9c-411c-acbb-ef8d2421be3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd65070-498d-4c16-a6ef-acfbdaae0772",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3a9f11-4fb2-441c-8ff2-ec401f4a803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426a8a45-af00-4fee-ab39-e13d0f8a99bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5144d42-f122-4c49-b1b8-6d07bedf0e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "73530b9e-21f6-47f8-bab5-626123e9ec32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525c0461-baf1-4f07-8e98-666c1956f6bc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4028ca0-c27b-4def-98c4-f55664e61c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dbef75-99fe-4450-91dd-caae9742e0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b787904b-f5a4-48d3-beee-23b75b16b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efd6c62f-bf53-437f-8c89-8d58badf8d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8529fa1-d78e-4887-a09c-4f5b96ae4a80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e78f3-bf5b-46ab-b5db-3b48033987d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67363591-8196-4c68-9db5-12695957e3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a91b79e-e7e6-4baf-b247-4818950c759f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62eac3d4-5c8b-406f-9cb2-bd5db567ef4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3000a3-3fec-4330-af92-09cb69d1e424",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6ae5d-6ad3-4632-bd5f-859bdaeab87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4aae365-6782-428c-89de-e151ef397d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1216cd46-0260-4bfd-823f-daf6221362f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a185685-ac3b-4495-9cba-c38f15eb3905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9769d7be-6377-4315-86b4-42e75f220387",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159c270e-65dd-4703-87ff-01375413dc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10d14de-ce00-40b5-968f-df8c2f8d5a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d854b1-6f56-426e-94d2-5481f0399615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e55780e-618a-46eb-8468-efcae21083ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc025f4d-7c05-4050-9f54-e2e785f2536f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a6a707-9159-4f9d-b6e0-4afbc42e7c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246a65c3-429c-4de7-9f46-b914bbac125f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69af3c41-ce91-4bf0-aff3-bb1f8880212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "09eb9c16-25ba-4a23-b192-aa88eddc4910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd26eb1-0d7f-4fa1-9064-6078be774f90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660e876e-2bc3-486a-b95c-ebf91be45497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0913a8-5e10-448c-a8f5-3a3ef055a64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3860e7d-e94e-4612-8e6e-e3565dc003a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13f4d20-0e02-441c-a0a2-bc0e5d3ae2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148dcf27-a521-430b-9972-21bf429c17f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6aadf6-3083-49d3-a453-3b423f7eb195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19debd3b-bb0c-467c-be1e-189c7df3fe2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad05a983-56ee-4b79-a21d-e72d5b0c5649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe126d7-3711-4aba-9811-4156540d4cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf96356e-5f57-41ac-aa64-04d76aa413b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b885d1-79ce-4aff-a943-a1d9f40382a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12e3c8f-72a8-4356-9e34-f1737e2ebadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0576db2-38eb-490b-8f06-2de5373c05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae97b80-332e-4730-8df7-0a24cbb77443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187079f6-3f9e-434b-880d-57109c110cbe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148b5db1-bb15-42b3-8767-24ee39dece7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13377565-7f5e-43f0-9333-f0e8b2363963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8259278a-9e5f-4e4c-bda6-05ad8e6b452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78418adb-29b1-433c-b998-24d60f0d0d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351f969f-f2f7-4104-bf60-bfbf93130341",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc4cddb-6496-42a2-bb01-64fd5cde4469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a289cc-c50a-4f65-aaeb-f36a7eaf805d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159086cb-0d38-47a9-8d78-5194655a0ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4960d740-a4bb-4842-930a-86d9c059e71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9de056-533f-40c8-9b35-d31200de4bbc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e166209-cce9-4c4b-a968-44d9b58bf3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e69c8b-d1f1-4411-9142-108986cc29fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9595a06d-50ad-447e-8161-d17a9637eb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bc1c2a-7aec-46e0-9b36-ec0fd9107fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c57a4c-fc86-4e69-9a2c-473e4cd87a16",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d885771-e455-43c9-b492-9aeb27249e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f92bda6-ced2-4fa5-bb58-eee132327912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb105939-63d7-4e05-bd87-b374a05569d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24732efa-44f4-47bf-bd36-cc1f37b9722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff040b4e-72a4-4cf1-b965-66ca06f3c025",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833e3d4c-dade-49ff-954a-a3d957aecf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0a10f5-f724-4628-ae47-931ead2ca32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eada4d9f-3022-415a-ab5f-964eeecc129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c9328a-6e58-4e07-984d-6d1b7289ac62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5655f846-9fd2-44de-b9c4-7ab97c8bf1bd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3a8741-b420-4d19-ab52-d309b6ad9549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3745215b-aac1-4c1c-81d2-45bdb633d6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c1282-c4f7-4f21-b2d3-46e3acd33cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb9d0fa-8fd9-486a-954f-b2abbbde558e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c81c665-158c-4e4a-94da-93a025c8e868",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee94e10-6ea9-43c5-b5ef-fe1b9959288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ff0b25-6b30-4a57-9bed-45f2055ac1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add9ce7c-96f8-4206-aa58-66bb1b795923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "289fe526-ac68-4320-849a-f5e2b166665e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a8e2f3-0e08-4238-9c68-8bf4d8a5ff83",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2b8bd4-1fbb-47d6-a256-5718ae6d856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c744fed-4614-455a-8548-bb1bd74491f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8477ca65-09fd-4a60-bb55-034ddc1ad621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db301db4-4454-41dc-9a1f-1dd397b3f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03df6841-8ffe-4992-9527-0928d4b91ebe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd77af2-90b4-42bb-8fa4-ccce7b010943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ffe934-483e-46ac-aa5a-66dc4f6d9dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3ae935-af40-41e4-9aa3-f1a9e78fc4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbf5e85-a269-4ba0-b09b-c37da0ea06c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61519c6-dca3-42ef-b945-7af70286d885",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc87542-610f-47bf-b276-ff39ca5243a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fada5b6-b9d6-41c3-bde1-49669415a0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea213845-cd25-4462-b3bb-8e392a4f78a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d648b3-d1d7-48df-a57c-04b06b66c5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37185f34-f200-4a49-8804-beef928321a0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f965103c-02a3-453e-9a2e-2371580bb215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5acbda-c119-4b3f-b2b2-2b3e4ba26a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d907a5-fba4-4e3e-9653-e8424864c8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aefe710e-6b20-4098-a611-3ca207b53f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed95dc3-5e4b-42b9-b584-9cea85a3b014",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41874c0-d5ef-49f7-9555-03edceaa0118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b0be5c-de45-49df-b622-c1c5be6ab483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81a0118-92f9-4793-8c69-1a44499e1afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a39c11e-8445-4763-a46a-ca30a4b8d49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dad862-9149-46df-9bb3-12942433f29b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e90fff-581a-46ed-b89f-98a7c9c1eb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90900b33-372d-4ab3-a3d8-c1d25db2fcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d625aac-a9e4-4119-91e4-9d77773507ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc990cf2-ac2c-48a7-9baa-a031b7ab69c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bc0d691-b9a0-4c0f-b494-da6c8562f635",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "095fa7cc-e238-48bc-a2e6-affddb73bc1b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97034d85-f841-40b3-a7c9-4426bf8e81bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "591b528a-9a64-48b3-8588-b1c21fc5fa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e577aff-0dfe-48d3-9223-b0141a6f0b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a963476-04d3-410c-9fb0-eb154c12fcb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "176f9141-6379-47e8-99ab-89a2461cf2a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e9d3e4d-fee0-4287-857d-c7977c83ba6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b62aa65-a9fa-4a93-9819-f513bca2b2d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec12bee8-2791-46eb-8d9f-9fe1a40f7f9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34dd5b75-080c-4967-a2dc-7651bc60ff40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5be2e466-4326-456f-8378-aaf1421dd00d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "790d7a58-ef06-47ce-9407-1b014b6e0da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e6f4697-13c8-4f9a-a3fa-3344b499fb7f"
            }
          }
        ]
      },
      {
        "id": "f4778f80-15e7-47b9-b86e-ee05a1026c10",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b1524a7d-a173-4f16-8a98-487325c93b79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4245d910-b413-4f6c-8220-833408196dcb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13430741-9938-4cb7-8a9e-49173e1cd0ec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efacfe34-d383-4c99-a208-d44355ee202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bf3187-92ef-4bac-9473-68cd5d2daa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217bca3-8b4f-4b36-96a5-b7ef3bf96476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac97902d-0e30-4573-af50-48e1f00b20da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308502af-d281-468a-a720-b8d628bbf6b3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1bc597-0d3c-4f51-96db-209cb6613172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf3ed74-eddf-4002-8ef0-382de791fc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdfe130-0c56-4cd5-9ba0-f5e33e297afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c585779-5ec2-4de4-891f-7256ededf463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82173de7-241a-4d86-9e08-4ad2efd81621",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadb8b3f-8350-4f97-b8cb-51ce24a254d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da89fcb9-3a88-48a4-9bce-9ffd1f741b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4bbdc-d092-41f6-baf7-7509cd5eccc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d463489-aa38-450f-8bed-469a5e767c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bfaae5-a1d8-474e-9777-ac94a2190b58",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf814de-6a01-47e2-ae77-af1e1bdc27f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b85b3f0-2256-4caa-93fe-d2e0aea05694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3129613-68e9-41da-9238-838e0c40f4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c5a2be-bd35-4a6a-aa7b-431ef2e1c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c864c0c-0674-4253-a066-b44df5a2e768",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8957a-4d7a-4fad-9b0d-c6f134058f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5a751f-a2eb-435e-818d-975f13ff9b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa2c241-d9de-4131-aba4-9b9d179603dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f560559e-f39b-4dd2-b0b6-697af8f639eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b54414d-858c-400e-9bef-f93776fda900",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d68c664-2d65-4c0a-a7db-ff820838eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dea39c1-ad5b-4cc6-833b-1b9fe9288330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4042cd-5e56-49e8-bc81-f677541eb99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6685c831-926a-4921-8ef4-8c6cda452752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bc9ae8-9289-4f3a-b861-051f7c441448",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84173f2-de5b-4643-8e63-ca19057ca44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d59a85-35b1-42ea-a8d7-fad26d6db8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e1d3b8-0942-4548-8e0e-2654b699d534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1aeb852-5a40-4b75-aeb8-8d1c8b306130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c62d8cd-8916-417c-91a0-e16e07fb7717",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60167c9b-dd76-48f3-be3f-08763f4053a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8c4d08-aa01-4d68-a3e2-4730142cfa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f526a63e-0cfe-4a4e-b2d2-9a8da82acf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28674b77-4648-402d-a853-b4cc38eff01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6d2751-34f3-4b43-9ecc-6df55fc42108",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993410b2-c176-442c-b215-3991d620203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4493d9-e485-4cf6-b160-d700f90eef96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6d4ad4-4ec9-439e-8711-ed9fbe5ef46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bde64ab-5934-4c55-947d-b932af4d1b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8636c23e-4c3e-4794-8d78-b3bd85c8404e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a46cc7-230a-447c-9415-3e9a564b0772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2785ed4e-d59b-4b09-aa74-ff542727fd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d562276b-29a8-401f-b39b-08f7042a478f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cee1316-f576-4e19-8968-20b9713b64f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c79809-1f4a-42a3-8ba3-431967db3039",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db64e53a-fa02-483e-8fc2-cfae731b7a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb088fb-ab26-4391-901b-3318e0dffb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404271db-3b55-4656-989d-a92ecd26cb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c86acf6-7d90-4dd0-b70c-a688b8ee1c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2044b21-252d-4480-b3dc-4fb935cf02b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39a577f-e75a-4369-96ad-c23842ff40e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d2878e-37f5-4a3b-8e59-15b73e73d1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a70ad6-7198-4edb-9d0d-2f36c15dd655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9b8c54-6e4a-403d-b7b2-ad7404674d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dee3b1-99f1-4e94-afe8-ea5a0c59107d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ca1544-b30e-4830-9f97-44d2f42c8f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281704d4-14df-4550-a58d-48d9c3fb513c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5add8c-67fd-471f-b45c-192944e4dff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b86a153-4de0-45bc-b477-481688426de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed66fca-02ca-4b01-90b3-4eca27766149",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8029e4-5122-4f35-842e-4e394365c026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8119227e-4717-465e-846d-162a9cb4f472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c134697a-bb4b-4930-9a52-744f3c7209e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "99067364-5989-43fe-b8f7-d528ec9e5c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95069872-a56f-4ee6-bbb0-5ae6c529f6b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c00141-bad0-48d2-bc4b-ca3601ef33e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5f0db7-8d1e-41cb-beb0-0f0877fca257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e257cc-169d-4846-aa14-63ff76ce94a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "78271f6e-e9bb-45de-aeec-ab776f810898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5436de32-5dab-45fa-9241-a4de9e5c3afd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d23e8c-4c93-43db-87d5-74378707251e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea43753-4353-47bc-bbd0-e7cc5afb9750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095c6da0-2a55-4824-8743-6c39ca5870a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a260ac9c-c2a7-4ec2-90f6-107ce1810f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab406ee1-1621-46b7-b34e-5d690d87fda2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c315bff-5f47-4747-8c33-0523b15456a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fda3a9-baa1-45c4-9697-12ce6b8fcff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e31804-8cbb-4ffe-8a72-2bc56186272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd49a0ea-5113-4b77-8ced-b3ae7d7de09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb68ea-5a33-4fa6-9f05-c0e3a8ecc788",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2126c406-b7b4-47ab-9c70-1dcc4c992b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940e9c80-a143-4502-b7f7-3222ef35e79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31edc71c-f4ec-42b9-8873-b964d1581ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f69269-fdc2-4f25-9574-e71a2ce4ac71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3768f73-7645-417c-b0a1-edc4d68f8182",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a252fe1e-391f-4a2d-a33e-bca41b60241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60d98c1-b871-41b7-8167-e42343b2b9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a897467-89cc-49a6-bc47-7a8a4f36ef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ed778b-2622-460a-b958-d6b0647613b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c36662b-32cb-4b40-a8f6-e823b1d0dd4a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c16afff-2f15-4733-a550-3e07dd9ea11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3883d43-c9fc-467d-8860-d5eb6cf8f082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85370b4d-4bee-4d45-a66d-21a525245b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4ef647-5650-43a4-882b-7293db849523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4232e8-070b-43e9-bfdd-11947e4524fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f837618d-f5e9-41d1-837c-34dbf31f55fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638df6a6-4849-4e8d-aaae-6d8fb1cf0a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599361cb-e83e-47e5-bdb0-66c4fd11ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c92d613-54d8-4012-a9e0-e3852659931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337d04e5-45c6-4e5e-aa58-079f35f56861",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723e3b85-c514-41c3-915d-e537847e3c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379b3af7-0639-4a14-8a4c-d705aa933559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74de2dd8-7482-4346-ae10-962e2145ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816b76b0-1ca5-4d8c-a32a-9f24b1fd52cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a612a0f-2d20-4625-8059-932daff690e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbe4ae8-9f9d-470d-966f-c444a406cf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0d5061-e1a0-49e6-be64-5931ca95189a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3a4cf2-b955-4fcf-88a9-ff418473a630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54cbc03-702a-40f8-8bb8-2048635a995c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a04be1-0749-4a56-b5d2-5f554e0cdcf3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2afccc-3401-4680-a30d-50584f28a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae496bc-e8e3-4b2c-b57c-b854ec11a0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d090a90e-415d-4720-9788-70b85e6788d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea92e83-18cf-4154-823e-7b1d47ac7271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc40b0dc-2735-4546-a567-7a8ac9469ac5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee1e654-870f-4827-b5c8-cf9774504210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f869f03-6996-49d1-b890-d7ceed38af06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc574fd-cef0-4aaf-98a0-839ecd094b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf6fb61-526a-4639-b018-9622b390d22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44c8dd3-4666-4ebd-a885-568f92a051b8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15da99a-9066-4c5d-bf42-e62faed5c099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ea6d44-48e7-4c69-a433-332bfa0c4c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b955fd33-5b5a-45c9-a318-34f6fa10df8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae86c11-f719-4aba-941f-04a5f22f4fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c11c494-3071-4f4a-a991-314f3430d1d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8d53ae-c683-4f44-9a09-16288de57c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791400e4-864e-4b89-96da-79145cf27141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a502338-d477-4f5a-af68-5ad6ef4e40b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5a507c-6507-434a-b690-76f989dc6bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe8e334-ba13-48ed-9b9d-9b849fca36b0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fda2e6d-e1e3-4795-8013-40ed0411378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7d5ac3-e51a-4d6a-a250-8926e02bc665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711fade3-4218-4980-a5da-0ab90667cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d393de-753a-48e2-b9ab-7f4185d4eb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740f0920-1553-423e-a53d-d73a68e6836e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19952ca-661e-4f26-bf6e-1d5b8dcbf793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90344e85-0ba1-4120-be52-83fded539ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4127ef-0c14-426d-8ecd-803fc4725784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e692464-df27-48aa-b126-1e0ec8b65970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981f61ad-cb13-4a23-b1ac-e2dba25feb61",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4c87fa-8c53-407c-8353-35e8ecd894c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c4a63e-45b0-4d64-8771-e00751cbb496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaea1ab9-5e07-4f2a-b3dc-bc9d91a8f6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "022cb797-7bf5-4dec-b22b-1353e5f15ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84cd660-3a75-4e4d-a6f5-95e058cad916",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94247533-0243-4cc1-8e32-e0f5d1ef4410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda4732d-05d8-42b2-a043-ad89c2eaebdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25059fb-06bd-4eb1-a3af-3277a11d24ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5216f908-acb0-44f7-9875-14b7bf9fb391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51cc610-7446-45f7-b952-64022f74dc8b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d759e2d-02ba-450f-950d-4359cba14a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabc9227-a382-4050-b99e-d96d306e9451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa905f-3014-4567-bffe-719cda273d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1ebc28-9de0-493e-8016-fbc4030087b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7e09ce-d974-4a09-8fc0-11fcede847f2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea76088d-f2fb-487a-8963-b9184eff54d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca1bd44-0074-4d9d-9383-43147faec12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c643ecc-f769-4a84-ab7f-92cffae03ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2c02e0-533b-47f9-97d4-76d977cdd09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70317949-0975-4dcc-b69f-23e38f76e89f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07448922-e52d-46be-8a82-59e09cc1171d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a512e5c-40ff-4574-baf3-cc8c5d6c06ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51566062-23e9-4d28-a5fe-9734e233974b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cefc98-7caa-4ef9-b421-019fd1aa9589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c816cf4-fcc0-4a10-b642-d893c19d33d1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7463a45-5651-4a4e-88bf-207ee23e9aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00e8786-7c88-424b-aad7-e0bff41dc125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403da13c-c4e1-4517-9b73-76072179f6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbb58f9-04fb-4c55-b1af-20f9e368a53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf5bb0c-62dd-4edd-9f51-ac245c5dcb03",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b5fefc-c7fc-4ed5-996e-ae6272f7783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceac6eab-fd26-4a9f-8450-f637d45e2aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3304c9-96b9-4af8-bba4-400c2b818107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3261da15-ad24-46c9-950d-e1f614c4b985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729d6122-88c4-4f51-86f9-134c8a9be020",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ba70c8-00d9-47aa-8967-68dba049be8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f9957d-2f46-4f27-9fa1-91eb3eccd659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4564d9-336d-4840-8390-4a3880c725a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d734ec-3f93-4071-a558-86a595fdb9ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fd9aa1a-59fe-4f63-ac92-2bea44a97a14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "694c3ad2-233c-4f49-83b4-df00e904a1b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493a8127-7b3e-4a9c-bb8f-6cc737e6f203",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff47157-c475-4d16-8a1f-252fbb2cc51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9158ffc-50ae-4b93-a447-d44a79e247ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da6d5707-ffe9-4299-b72c-f65b5b7cb033"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf4ae480-8b2e-4fff-bb8d-3b8dc745d00c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4331104-7e59-4137-807d-f9c496b0ccde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3df70278-b7d6-4814-870e-d116fb933125",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02da0495-c401-4ce7-bc12-088b21926faf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e787d5b-e2b8-4b02-bb88-b169b06a0624",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13274fa1-9b53-4476-955f-ffda5ddc58bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0414964e-a20c-444e-b066-4ff7d31c5a29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cca1cdfa-515d-4b77-bcba-064589efc9de"
            }
          }
        ]
      },
      {
        "id": "174f2b46-97a9-4a48-8e72-7f21f3a5683c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ac9ded3e-7743-4a94-925a-27fcfea38e8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89677336-2cc5-4574-83fd-91ae3ac64576",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf168b49-582c-42aa-b3a6-cf55f95f5d2c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5c783a-4084-42de-9ab2-266e6d7e0e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db2409f-a60e-4477-bb59-117d047281e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51c3891-094b-4cdd-ad3c-a19928ecf44a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd8b62b-7f2d-4d13-8fa3-708d6de748ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1de2340-2a89-4cb3-9102-c9be301ff182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe6ee0b-e6db-4bd4-a70f-3f5e87ff8369",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3434901-fbfc-4a1c-b520-e0771b30ac7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e52ec0-7ff9-4465-bfaf-b4d10a699154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a6298e-847f-4cd0-87df-49460da54d51",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218a131d-b871-4ea2-a8d2-cf3e1371f579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6faa720-8dd4-4cad-aaad-bad1d16f0c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75afffaf-dfb5-4f58-ace8-a1e09f66ef8f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b86305-f510-472e-8c58-2f934f9b9bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d84b82-afd4-496e-8a0a-ed944150a221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c6a40a-d4a7-419c-a6b9-512e23551386",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33591846-21c5-4e67-8283-ccf2065f6409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a8c8a9-da56-4764-bc7e-19ee50ffb72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9128841b-f86b-46ff-aab7-b2eaf2030cba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6657ea7a-8a9c-4976-b91a-43bb53520327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea12090-1d77-48f1-bf11-4891137b647e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4a6c9e-59e9-4e75-9d29-16a12ff6bdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1f8316-6822-4141-bac5-371d293c4f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f1dbf0-9e60-4955-aabe-c1e6fb088a8a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4b4b2d-2d3d-4410-9ad2-54ebab7257c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb112462-7c09-4e73-911d-d5104302798b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833340ff-810d-4e27-becb-46b376f64a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4adce6-92f3-4554-871c-bb1de626355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6dd9d0-7c33-4868-a1cc-886359e2379e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539fc3a3-9c4f-431b-9f58-1b988699b418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffac6e4e-da00-400d-b8ef-191c8266a801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812d8243-9446-4051-96be-52cc5519d24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0398a540-692c-49bf-a5e2-ed4814ad4337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d76033-7ef7-4b32-9a1c-6a3149590b06",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a33b92b-c03c-4b4b-a3d4-9821bdccf0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e521f25-b5ac-4165-b741-85d9a8544fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52da347-9955-47fb-b9f8-cdbb7dd99a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e76be2c-e225-4e17-86bb-305945d1bce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5351ec25-dbec-4999-af38-d98d6e4f1c76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d77be6-b6f0-4b6e-9556-10ca1a482419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d934498a-7a43-4434-80e7-73eb7a5882f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b416b4b-6f31-4d13-9343-6b782813e99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414e0c87-92c2-465e-8f71-bc726f9980e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2e8ccd-295d-4ba1-9359-d09729ad80fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e866db-e84b-4d08-857e-224e99e13a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3984559-4dae-47d2-9147-fe796dd13e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04f011c-0664-4827-b7b7-230cd8caefd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a385c3c-7a0b-4b91-9b84-c1d9c4452786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6ce257-7da7-4fd3-bf6e-b6968deb9fab",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d168593d-ff4f-4106-be09-a96c3d956636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd910c4-00e0-42dd-9115-2a2785b0c926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd3763-9f59-4aa0-8122-1b5c5adb4a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080403c7-2d7d-482d-abd4-dad27c0e2af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94468aa7-0375-42ca-8a86-b409a6622f33",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cf7103-1242-4d9d-979d-60791166debc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64412ac0-427b-437a-bdfd-2daa2b8dd094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999b6c16-c42b-41c4-837d-95106dd50e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e490dd57-e96a-442a-b213-a99d2f6de82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2102d093-0389-48a8-a73e-d2f2d5510e93",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62abf93-8ddd-4ece-8582-baa643c4ac7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63009d7b-4932-4a8d-bd8b-57a15cd89218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f547dc8c-cce2-4a8d-bc06-1d24e2159a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e691179d-0340-4223-a420-013edf800dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6217a9d-224e-4d87-8297-4cb1c99cbd40",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feea7641-63e4-4c1c-898e-84e3407b37b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1c9cc7-0f30-4fd4-9062-c4cbb7efe502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e29d9b-1de9-4624-9783-35eaf591d275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69128453-b278-420e-b38d-29f2b05e8f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3e029b-2911-4dd7-a637-1d5095f4c990",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52772370-3263-4501-b95f-a5d6fc7ef7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca43de5-c60f-434e-8a51-a891efb35e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e07fdf-acc4-48c6-9efd-65c0f701a965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b23b3d-87f6-41eb-ade8-e8758843b321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc1254d-3e7a-4fd5-b5f6-23af358aa45c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db06b414-cdbd-4dbb-867e-c5be79fda3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf130d5-03f2-4f82-8559-271af8ea2e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803140be-da84-42d0-9245-f1be969186f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcb6d58-85ab-414f-ab06-fd4935654542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e46506b-5b8d-4106-8ace-d5a9210481e8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83e0a10-17fe-451b-a36f-2d387d4e4798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fd68a1-aa0b-4a89-abb8-fe38b61ca36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f91c47-e8b2-41e5-b6cb-3c7dcff70c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b93a0fa-9274-422a-b49d-8978d2fd194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a333ce-3510-4288-b5fe-4c00ba87e756",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15e8512-d0c6-49ba-b8b4-980bdba1b3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf139a8-6299-41f5-8a43-aeb73a83a813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aacec60-3c0e-4f33-b2a8-49e352233cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5b0310-876b-4e0f-863f-f2d9b915f4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e437e556-659e-4ced-9411-5d32f486c7ae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154131fe-210b-45fd-a831-a68d61ef7593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c050a51-cfc4-4a98-816c-b1673ed89116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0b1466-e4c6-4889-bf54-b47baf6bd364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb18966-a765-43cb-8632-34192a137171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce86ed4-1961-47d8-9322-afb6c9e9ab5c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e60244-48af-4e86-88c9-1c9498f9240a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d657b1bb-ee4d-4abf-9714-68093dd690d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207a8eb7-dfd1-4e68-82e0-e0ad5bea9124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f827615c-4519-4303-8514-17d793ef1534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf52ff18-c27d-40e9-9046-a8b62698e208",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82600d93-0c9e-4ad7-baa4-a4b5faf774c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8b5654-470b-43ce-a0de-26c0e75a7757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceb111f-59a3-4ace-91ac-d3564bb0fd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a44e834-6874-4255-bc78-3900e4412e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f636c143-9b37-4995-9b58-7d99e2dc169b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83abf07f-2f16-4d17-a62a-6ee5603f491c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e016a0-0091-4266-936f-cd6a3f92a757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09706542-c6c3-4208-8301-bb21f327e6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56981509-580b-4b0e-8a6b-5d4c54008bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2517c4-8d50-4540-9b85-97a5da1be8e2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56012c15-61da-4a4f-8cbe-dbc59af96140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6371655d-00bb-422a-adb6-819bb6762e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552d14e4-ba43-42e7-beb3-4a8618fc220e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b4a3c7-d741-4fb5-99eb-153b353d20b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2ba078-cf6d-47e9-b8d1-c8400237b83a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed76609-0eb3-4c39-8f4c-91abdf5d51de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ce3d8e-84d9-4d28-b2ae-ce6f5f536b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a873533-75fe-4a5c-a938-5195ad8e6ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376d3bbb-3871-43d3-adc0-3c4a6733c03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e944873f-4791-436e-9904-eba9c6157694",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80defd82-fc98-4552-a1f4-b7f88ac042c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a6ba9c-6581-4fa6-aaff-11d39c653bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b8ea6b-e222-4f52-868a-1cf82822acf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4dc447-9a5b-4eb6-a7b4-346023023a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a26a9a-183a-40b1-a975-59a51a11ab06",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ec156d-39db-4323-b5ed-44f1ffc929d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa68a161-2a00-44c0-8e89-c4c8714bb675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93752ead-a113-4cfb-9a81-94ccdb11f38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d6af8a-6d86-4a9b-a40d-24634da33744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e829f682-6003-4441-a642-a3065d729c87",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fff4375-44cb-4b59-af0f-bbac7f0e4f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc016b9-f5d4-4de3-94a6-5a7f88528e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eb5189-7b9f-4dcd-89e2-6c7ad12dff80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73c5938-31cb-485e-9d05-83e6fc4d6075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f17a939-68cd-4e8d-aa3a-0de7eca30267",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0ab99e-02ad-4e44-93a3-95ddaa7a9438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c9e02b-6457-46ff-a627-7f6fec0b24e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a50bcd0-3bc2-4c29-bd4e-26cbfb66a616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb766fd5-56e2-48d5-97d8-0a7512481b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cb19d8-0027-4828-8311-a95f44810adf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e760ff3d-3436-47c8-8789-fe0650bcc29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087d6d93-bf0b-4bee-8e38-f9ed726b0f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851ce099-948d-480c-8032-c536720552de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c3af36-4fee-4bde-95a6-6204ce88b037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c029ee96-2bb4-4ef3-b9dd-55d490d8c7d6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d98a26c-32c2-4c85-82bd-3b3e9fdd9e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4e915f-d429-4685-9bac-fbdcb9621687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424a12fd-2c82-4216-9c0b-ec485cf678c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89fe078-3439-42f1-8f3b-c6e7965aa467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910ac9b3-3e7d-4706-9c56-516e58aeab2e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493dcdb2-137c-4e8f-92ee-338a98fe5ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aed2662-8e7e-4cb5-8b09-6b2f0defebd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8505d56c-5280-4881-a83c-da5f526c95fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ccc767-b4f4-4d67-bca8-040dcfbf3edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9028cc47-0433-4736-8132-2ba847c56a66",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f8cb25-cb8a-4462-8e0f-0cd5e1495f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32829f73-a8ee-4380-b02d-9cd167e697ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d99ab5-a7d6-4b3a-8318-e662930e8aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d9f953-62a6-4601-b46f-6cf5dc572998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17540d50-71a5-404c-9a19-3a173e619fca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c55e15-1c61-4f60-a04e-3743fade33d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e4b172-cf5b-4ac1-8d24-f0533e280f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3b9223-8c7e-45b8-911a-381173385a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611d267b-4e87-4896-9e6b-d3b9aa1d51e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeb802f-f17b-4618-8e1d-15afc9ae562c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11183872-ea01-48a8-88d1-bcde2968eb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8b92cf-be21-4ff7-801e-36cec6143393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b149b0f-8c2f-4daa-a73a-464ca337f2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4caeba3-1b40-4430-b6eb-06f07eeb6825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2e5244-27e5-4332-bad4-f8747012edf0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be8cfb7-b647-4190-93e8-82e65d0bf77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be51160-4c00-440c-b3b3-fb5dbca52a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17b8aa1-38ba-4844-8529-745c513852ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a555938-768b-4f59-a140-993d3934a046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7d9f9-7a45-4925-b805-8d387f54312c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f2e32c-a065-440c-a4d6-d201e1d22fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d182ac-0258-4e60-88f8-a6c21b16a5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c99ea74-0a3d-4a19-8c1f-98fa1ada977f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bd7f8e-99d7-4508-b88e-1db7d68eadd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f15dff7-0ae5-45fd-9420-d883c17f9733",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b970ce-aa05-4ba7-a35b-3721c5b626b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef80205-7822-4d4e-9454-6eb9c086de0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e745f5-03b7-4a25-acb1-d3c8f0325bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c526ce-5534-4118-b028-d6dde9cfca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5da928-c476-4929-868d-ffca2b2a099a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0ad700-4192-461f-ad9a-d4f211d05b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8878da8-6cf1-4fdb-b898-460e6c1d189f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91ee830-e4ab-49f2-aa3f-467a05dce613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb4a54b-3607-42b9-9376-5b0cc12a11e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2756f997-5757-4ab0-8138-4918bb27e516",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557f622-0235-4ae9-98a2-8a51606a1455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535679de-6928-433a-9ed5-3c7c15d3257a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69948746-0598-436d-a17f-317c6858dd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9de281e-e658-42e6-9ca0-39468f315c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd1435c-1f70-419d-95f1-13b0fd4a9398",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657928e7-4d29-495d-b156-608bb08594f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc9e335-c6a1-448a-a738-f92bddc77a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3571d17b-cfd8-4f64-bd08-b76f0fb03a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4afcdad-fe4a-498e-864f-c7a5a5a0b3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af3ed6-dbc2-4be1-a24e-41190eb95ad1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3203e5fd-6176-41e2-8f68-9013c12865aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be569c33-7bed-44d0-a07b-53a6b69dde93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eda628f-4bd1-4861-acfc-4069d1901238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3e7d85-9afb-403d-98db-f2e2da33848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8fc34d-23b1-4708-805f-146d2ad3b54a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028a5698-da9e-4534-9d9c-097fe1f0c6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea8f9e6-d245-447e-8ea2-ce8fac749800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eff660a-f6a6-4948-8c6b-29ec93ed2793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09d4d68-7298-44a2-8942-904dcf4d332d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02191e9-2891-4450-91ee-5a7a349dce07",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc78fd8a-a260-4899-a765-a710949cd57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950e46c1-67b0-4672-8fdc-72012acf2c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55177f8a-cf1c-4f9d-b7c2-cb96163fadea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9198dcde-b077-40c5-a961-7d2d6792af19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59016ea-15dc-4603-b47b-ad9a2abd777a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99203c5f-1666-483a-a061-ac4643c9b1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563e2bb7-4318-4f84-a76a-00c46f7b3de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1408c24a-bc4d-4dd6-863b-673483702f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a8a3d0-3aa7-4569-bf04-4f65201a0cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3139926-f11a-48e1-a42b-9b7a919a9435",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5dde0b-886e-493e-938d-bf3c00a124af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885788fe-874a-4a37-8092-afbca7ccacfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65a294d-acda-4e2c-88e4-59fc9e651c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07a2eb0-4217-4f68-9a0d-e9b23d741127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af90b14-9d57-4198-b9e2-a05df8a92a68",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bd6eae-84ed-4d2d-9896-66e88cee4b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6d6026-21d8-40b2-a482-6cf7f5f94b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c997c9a-2dab-4419-a508-ad0579838ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441b487e-bf48-431f-9f62-e5cadf5ce858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b132288-0169-4ccd-bdca-1d7c547b7e8f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1756b68f-e22e-403e-abfe-141942c7c3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf68d4f-ae76-4032-895b-de9aa85854bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24014c3b-3bcc-4698-b87c-daf1c676fe4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6954a67-41a5-4505-bdce-f13ac0c3af08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e41f4f7-38a6-45f2-95d9-3df922d8cec7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a76a8a-56f0-4612-a21e-0e341f5cbd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703f1a27-8f09-4837-b379-78b8bfa98c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a73a50-5962-4879-96e6-abb9544b1143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a8549d-7bb6-442b-bfcc-98f74a2e1ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf18307b-104d-4901-b704-c50ec825e5a0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48abf18-f864-4ac3-9952-7b5953c571f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf615e62-ffa5-4122-bff1-01bcda95022c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2f0110-f3c9-422d-acc4-410791eb77a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b28db1-483e-4b29-ab9c-ed6d1b19974b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994c6078-1043-4efb-971a-d5455c395b61",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963b1235-f060-4a7d-9ab8-a9f6fde038e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3e93d1-6bd9-4029-bd26-795cf2972023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf340465-88ff-4814-b8d4-8a6bbcd1ac96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2574e9-7bf7-4772-a195-116368c58fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc21963-5393-4a27-81f7-b2f7c6ddf6ec",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4947c902-725f-4fed-8b6e-8ef3de7ce216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac0d7cc-c6a5-40c8-be2a-43393da516fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99155bb8-009a-4621-8665-7e50b814f301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002d00f8-6964-44c2-bb02-b3f125d3ec8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd03f0c-0d18-4b72-bb2a-4072a428de35",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ea9e09-1865-4eee-a091-88ccbaa29cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbea8bf3-11db-4599-ba08-0fe58a140495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187805bd-4ef6-46dd-a2c7-eb70c1d99748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74710586-416a-4959-a074-518b3761a03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74f3ba7-6dfe-4f1b-b64f-2c78aca91f39",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8104f1-8dbc-4214-9fc9-4e7ee2004e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39b65f4-ed65-4da2-8eff-46574dd2f034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00cb9c1-db4c-4e77-9e43-51988e29e9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494541e9-0430-4966-ab5b-372c6fdcc0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91341092-63f5-4072-8861-1027b4c93fea",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270155e9-384e-4222-89d2-f161783c93ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0982e5bb-6cde-4ffc-a4c7-457eed8245d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f97fe5c-bab0-4740-b388-5b7791a00f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb584708-3449-47e1-8f93-605067dc89a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4413ee6e-b0db-4ca3-9a91-9ce39eb8e0c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f6d028-17b7-400d-b67d-0da384729863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01344d37-d66c-4fe8-b932-ccf3c25ec311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101cde02-4a5d-4f04-8c36-f320909abf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e49936-761b-4777-ad5d-e89ac8143662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855bc7e6-f7cb-4569-9a5b-b36cad891a74",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47606633-0daa-4be8-9f83-e121b4302b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb200b2e-a683-476e-b81d-6b2efc3f8f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd04264d-0a9d-41ff-a406-8fc132dcef7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b60a00-15c8-46c0-843e-92bd33b51612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde2100c-acfc-4402-8eeb-6b6ecb1cc142",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9647de2-300f-436f-9d79-a793484de73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cc1b32-3eee-4e14-a641-9e2c407cdda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1e1642-10d4-4c9b-b94e-8d262cd8ee5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb5b5f7-9596-4368-93fc-9725e77cbe83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdde9844-e98c-4ec5-a865-ffee03d4e9f1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3504aa-ae81-4822-b742-f9bbf7bcc9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425af05c-9682-4a4d-ba31-304aaf876681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f67768-9c04-4af1-a762-9f78d9a253c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc706129-98ea-431c-aac1-ff732a5498e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3f37e4-dc9c-46b1-9fea-7721c04dd5f3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea25f188-04e4-410f-bc43-4511e681dc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21cb8d1-3827-473e-9505-59882fb66b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8259c17-c40b-497a-9b44-81f4cd59965e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c2c7ba-179a-4422-b605-de7679933ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039af6a9-7f77-4343-9d2c-5d7e73fa43ce",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc66c231-0f7a-4442-a414-7a747f558dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6342a0c6-845a-440c-aece-9ead47c731fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2653bb21-b3e9-4a44-bbab-43a723429c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72d3018-b474-46fb-9992-bd43fa261f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fe67b7-de22-4a1f-94b8-6bd082f8618b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47facffc-f274-46be-a8be-2f3c1fe11e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5910bf-a7a4-4de9-b15d-559b3b8eb9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20167477-453a-4d1e-8ad3-a5976b1fa828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7bb0f7-0ae8-499b-9741-22b22c25083e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af14cb38-1b5b-4681-a722-a158042ed5f7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87fb2a6-b5e1-4e94-a882-0cad3562550b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab7dfea-135e-499d-9169-4e30ac112c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f4ee16-3aca-4d18-92d3-b1e51b0635db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dca75f-718d-4e55-a81b-68b640c9181b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671b06c4-28d4-4865-8bb4-d31c95c07092",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929579ff-194e-48ab-964b-d52a7ea8ffe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24538690-f8c8-458c-97a8-cd7ce759cbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d056e1e7-eff6-420e-9e63-4d8b2b224e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b0d267-1ee1-4263-b3be-b26069135da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7c72dc-5af8-41ed-8b73-3e60f7fab9e2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc3223a-a6b4-4a00-9f0b-174717e4bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7ff57a-e959-4322-b457-4c49a81218be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d56935-9179-48b8-bd2f-74441cb37396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d4e1c6-d032-4d50-9fe1-e868bb7738d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1407c141-aa07-4e80-b3f4-5f5b3737de3f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f7dd65-326e-4749-8011-dd8fd3d21fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a63b08-a5eb-4589-901b-af8a36445cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83fd224-162b-4a5e-91a3-d624df826e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db107ec1-d460-4606-a100-64725beea4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fa1d98-acad-43ed-be6f-67aa28f7917f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148944f-7843-4e61-bb47-9e1bbb24fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dca36e8-331c-4f99-a72d-37f7c9b97818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be4162c-38dd-4c95-917f-524dd79e4841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabf73c5-e08e-4157-9f0f-4bfdf6a6944a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494154e1-cbe1-49c5-9e0d-4e27ee641b9c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c28822c-8e0a-4f23-ace0-e0107f9fa551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf11f2c-7c08-4dd7-bd03-b8bb6f9b9ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ed56ad-b15f-45c3-a3ce-28bc3e246673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b08335-d48b-45d8-a82d-18133db4627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb06a07-8094-4f58-963d-13cfcd68a39c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb65209-71c0-4695-a63f-f4d754a9341c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9e2b42-d1f3-4a61-948f-33cfa3576140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522d143c-b119-42ba-bf31-b3bcddb1223c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0ed853-1a06-4019-9b31-53d668309c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebd4256-bb53-486d-bc88-1d1ac74455e6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de53e09d-4b98-4b7a-8ac6-3ee73f297d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ba243a-c62f-4bd5-96d3-02ca7927cfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1a4201-d9f6-49c8-8cea-14c6bda35c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a570c946-0b61-42dc-9a56-f08021640bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a01bc-36fc-4606-97a4-da386ed48169",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61baf645-4c35-4519-b771-431674c83e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc866d4-8aaf-4cca-8a02-e72f9ce1ce68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9f25fb-fa02-4774-987b-e7546e526cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f64ff5-ae20-4da1-994d-5078468ae256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfc8d71-5f15-491d-a257-46868ba15006",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fd58c2-48b0-4fba-9962-4905d5b37d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d82b085-2e12-47fb-b17d-8189f5504e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246703dd-a29a-4ab4-9bac-8dadab9b9617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076a6ba8-86da-430c-afe0-06df0e7f2fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d6b885-0fac-4b49-8968-0093688d0db3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4442801e-d141-40cb-9e36-27a5b6dc9726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f90c9ec6-efda-4edf-8211-7a0536e0d87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db442cf5-785c-4d6f-850b-dc0cb1bc8844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a956ba8-819c-4448-801a-e7b8ba22ac12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47d2afc-d95b-43c7-b041-9557b1f24ec3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e86e74-0499-42d2-be03-b2e638ed2326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b7def0-ec91-4cd2-93d5-b9c545442543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afbe8a6-4968-4b85-b992-947f8b1d19e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769570a1-ba8a-4578-8e07-2f92c1e5b05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4868d311-f2fc-4378-96d5-5d0261d10f6e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99c396e-b760-4e5a-8246-d78242e12953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6976acae-0344-48b6-97f0-7b2f1f35fe58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1bc9b1-40ae-4c51-ae0b-a8b727a83226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6623114f-4b1c-46ba-92a4-dbd9822673f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae4f390-b8b5-4638-9901-271111805092",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324c6704-86a4-4ec3-9f0a-fb226afe0c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80cf53a2-32d6-43a0-91b1-c47f5ec67ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f822ac-c10c-4356-88fe-4c2ee8dfbb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b32fbaa-286b-4d0a-99d3-f9d85dfb024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ba8158-3cc8-42cc-9bca-dfa91094b1ce",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dec1b2-d905-4842-8a42-7c1928656861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac70b11-915a-4bd0-a151-a0b2af944a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58794151-f63f-420c-9dc5-3ef5d9febb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8871116-2219-49f4-91a4-4e2963b3e7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5323ce-47f2-41bf-aabd-fc05f07d878b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fb8e97-c6e7-45f5-ac88-f9e58be3dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bcb9ab7-7e7e-4089-8e66-c1d22642c764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48660dbc-7f3d-490b-90ac-591c1366bd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2796aebd-1334-4f59-810a-a04375f6e95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0540b60-1239-4522-a3e4-70e6ba391885",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e291e338-58ba-43ec-9cb1-de062b57d213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64456743-8a35-464e-bed2-e772e1c091b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b1cfdb-c571-4fe9-a590-274be8f117f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61582590-c636-425f-a3f1-de615538c37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c82fb-1d34-453c-bb89-c62d058d92c1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28882cef-5ae5-44a7-98f7-92a3ea1f852f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5d1e11-a1c7-4c39-94e4-7ea7e557e5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c353cc-acec-4558-829a-4e79a981bb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f293fd8-5f2b-4b37-a791-9e492da96d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ebe6c7-fe5d-4826-9630-ed03f1edade3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766ffcbd-5643-42b6-867f-d8566f3ce37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ac61b3-d9c1-4ce5-b9fb-9e64a96effb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c7d664-6f2d-4db5-9ae6-396c7f84b25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1751ee-4340-4d21-b6e8-7590502a0bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb823d-c922-4b99-9fff-fa8c920c5144",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b813fa16-3aaa-466a-9d43-b52ac9073404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00d5a86-64da-4b88-b172-3c1705d98837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43776ba5-da81-48b1-99c7-697ac60764e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db847fdd-5937-4195-a480-87970ebcd41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d83e5b9-de7f-4249-8496-80c0d40a7d1b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef1d360-29fd-4aee-97f6-1f3f64f60152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd94515-b7b1-40ff-8b98-4cb92fcac51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a9e69c-f655-4b35-8f05-c9176ddfab4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347267a3-694c-4c39-a4a9-d7ec0b102f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714b7eea-f41c-4562-b66a-779bdb42d674",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5720a1b9-a95d-49f6-bfa7-686ec58fea47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5ddd9a-14af-4f9e-a469-6b48927cc347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc2fd6-9f51-402b-950a-50cd6ad44f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e21122d-15bd-4e0a-a939-1c63d76284ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef06952-c30e-47ef-92e4-490f661d72ee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f2afc6-0b69-4c34-ad0d-9b788fcd82b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e3c1cd-0734-4baa-86cc-685fe5ebb4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d4610e-0a80-4a3d-a6a7-815bda210da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93662e6-8624-4db3-93ba-d538608c7020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0cd2bd-1855-41ac-bbe4-8549c7542819",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b4e074-909b-4d2d-b0bf-0418d0ec4bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7739ac74-70b4-4b4f-b247-9d4e76829ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a07fc9-f408-4108-913a-2be0c6c6e388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c62177c-006e-471d-b5de-ef7ca306129c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414a8de5-5832-4267-a603-709c6d2cbce8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0637085c-d0b8-42f3-b3da-37e78c5d8505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be62cd0-4d1c-4cad-91da-16ab048ab8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f12806-8c24-4259-b380-f6152892ec4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf80b2e-264b-4522-8015-e6232eb448bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241f4f8b-9a4f-4817-bac9-35dabe348893",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efabd37-645a-48df-9963-c784e5e109b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028c925b-c998-4e7b-88bf-cd88c85f5723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b39370b-6de3-41f3-bdc8-621324508170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37db26a1-c65f-4055-b23f-3c924c4aa743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77be312a-d4f4-497e-8cf1-e5319d092df4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078f0dca-374f-446d-b578-9b7721b444a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b707c857-6464-4a94-a6f6-c5244229feda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc734fd-14ed-4cbb-b0cd-e5b9b92f10ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5270e4a7-6030-43bc-b593-cfe14ab70b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62facab-e75c-421d-80ab-463c7f5a46d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e7ac07-cd86-4c5f-83b6-a50d930518b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3dffa52-b087-4055-9df9-3d0bff8fca5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c879abbe-f3b6-4927-9176-a9c8d116ba51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6539b14f-3b73-4a2f-80e0-23579b1fcb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1c13a3-06db-410d-8af7-bdf65b874f8d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17968f6b-b55a-4a71-b6ba-b730885a9549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406c4a84-1198-4598-939e-a351567c302d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2741465b-e1d8-486d-b2d1-496cfb3622a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd731537-11e7-41df-b23f-6b39a269fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfd1d7c-1f79-4293-a562-7238c22ff5b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723cbad1-eab5-4a61-997e-add9f99ca4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68fe2067-5dfe-4331-a087-3f30283e72cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81df53e-d7a0-44cb-92e9-74a21a0052de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2d7145-1a51-4690-bba0-e1d48c483333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f061eea4-cbc7-4de8-98a3-186618a94407",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91041349-fb27-49da-be70-ee302c190eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a911c4-663c-46c1-960f-9ad997d22f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f26d26-64b1-4b7b-8524-43b11c50f93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80ae572-fa10-435a-9093-092dc93843eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749b6601-c5ef-452c-bb78-001e8b155ace",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3e3278-7ad2-4e9f-b613-f3120f6ac01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17cf21e7-0f6d-480b-934f-8ad64d46ef94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdece10b-b60d-4cd2-821c-189b7a2d203f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d6d32b-3e9d-4a0e-8c77-b644efad7244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733b9027-6cd6-4d77-b769-49d177478cb0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003bd655-c02a-42c7-bedb-959a2fb023e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3571bd1b-7201-408d-847e-b78387929fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d1080-5399-4d42-9b6d-801754fe385d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b868d3-0caf-40f8-97de-13dafdf667f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5012e1-1903-4dd7-a735-4288b86aa270",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a6111-55e6-455e-8a27-25527da8d78f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54f3a88-048f-4700-b3cb-98ed520638ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc849ce-5a9d-4da2-868d-d0a4ec47b458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2a82e3-73a5-4596-befe-fb934c859b13"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4285fcbb-e3da-476d-8c40-1164300c8d1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "346b37d4-f7f1-4f1a-8336-8019be1e7ebd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bba960b-1fc5-49d4-98a7-485406d07614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30db7a26-3461-4676-8fda-5876731bbd86"
                    }
                  }
                ]
              },
              {
                "id": "d3c8642f-e36a-4de0-b311-47223b3a0331",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80427eb8-6396-4dcc-bf39-352a9331023d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2822d11c-b49c-433c-8098-eeb6fc855724",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4560669e-0651-4562-a205-3db86541c68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bec237-7339-4818-b8e9-0961a819af57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b21926a-ca67-44c3-8166-9fc329b4bab4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a645e14-3b7f-4308-9124-84f927b5ee2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7d8cbb6-6a7d-4cb9-ae98-b76fe234b312"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac03aa1b-d53e-4d44-8be8-ff832e4fa454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd27e70-2ba5-42f9-a47b-3d1291972d19"
                    }
                  }
                ]
              },
              {
                "id": "b66263a7-cd85-40ab-b712-0e40d0e27773",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d19c65c-d90e-4664-9b74-9b8955635e3e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2530a2-503b-4f2c-a8ef-4a3307577bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7b84c209-ed47-473d-8da9-7100ac19f1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e364cd-1b22-4f2a-a394-58b71d83db9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5a3f1a-d87e-4a46-93e6-c2afea7ce9db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2f9aefaa-897e-4cad-86cd-3f11401ec026",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c98ce69f-a1f3-4a30-812c-7a613dec2ad3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59efb218-12f0-46b9-ba2d-fa98bb7d00f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b23125d5-6168-4bf0-8032-79a8949617ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ce1cc26-aef5-4ff5-85c0-eaae56df5e34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed8975ba-559a-4048-826d-b66a62355f69"
                    }
                  }
                ]
              },
              {
                "id": "ef1d3dec-90bc-42bb-8acc-06aac8485173",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cde34df4-3d31-4669-a9e6-9ec5fee49b16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22f55896-fc68-445a-be5e-a24af7871034"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ffda5a4-702d-48ae-9190-bf7445866520",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70462b77-d932-4660-a621-09e6f8d2ffe4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d50a106-320a-46f2-a458-3af13dea6217",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e240ccb7-0ffc-4dee-8cc2-1c435c605709"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0f0ce23-3b67-445f-90cb-c5c8a314c865",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac5e5e0c-3c87-43ec-88a9-f642b8a97451"
            }
          }
        ]
      },
      {
        "id": "25d565b9-7660-4f71-b352-669a84788525",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f2806e14-99e7-4286-92b1-b6aecdfce20a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04fb1f9b-14c1-4868-82a8-1e3ba2f15010",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e25ff87-34b6-4c9f-b078-0466cc7ef3b8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f1190-0273-4a60-8db8-ceb71592f28d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0c320185-ed78-4cde-811e-d4045bb8b03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cc6c3c-2d6e-44f5-a180-45afc13dca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc596f3f-c9f4-4780-84a5-3750bd20bc2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ec5a605-ac63-42d8-9aed-ffeec2779b3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "478014e3-6b9c-442e-8bad-0dd5b3dc3b48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "109d6379-4774-4fe1-9cf1-7261348dbe53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0959a119-aead-4d61-83e8-d1ba5d7d3e40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16665982-c1d4-47ad-9ebf-f4026af7e7f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ba4a128-6738-4717-a26d-62dd43d1bac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d9ed3a1-cd30-4faf-91aa-30fc220403cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "555c60d7-12d1-462e-8998-73149f575d52"
            }
          }
        ]
      },
      {
        "id": "361666ec-d10d-4ed4-9866-a25836d4140a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3d9d48c8-5955-48e0-829f-f8b289b52875",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9edba68a-9ee0-48aa-93e9-0ee2d8aaab8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f77c50e-d0bd-4253-95be-178a4ae45241",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf9a26-38a2-43c4-90d8-31ff0035b48d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d6acf88-b59f-4b5e-9a75-a3958b8acbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fa6919-d747-4b96-89a1-fd73adb7054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f706ab70-cad3-42fc-bc7e-234f2e2d12b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d54cf7fd-d463-4c13-9018-4188e5f3ea5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b045ea2-3125-4b87-82c8-5070b8c5554c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7743191e-1b3c-4f39-afb9-64b8cf18fefc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f54d13b-e3d1-46a0-a6a8-957373358b60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afc5743d-0fcd-4aa0-abc6-c56f40764247",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "143b8d3c-4bae-4720-9f51-bf104f923e1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfe2aa81-fb2c-4201-909b-0f3c88f8e965",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad61f25d-dfa0-40f8-bcb4-a7a23d07589b"
            }
          }
        ]
      },
      {
        "id": "48a41099-76d7-48ed-89fc-fdae6646ffff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "919b9ee8-857a-4ff9-b892-dd202cad64a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93d62574-f809-4042-b35d-512719e8275b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca26e07a-9dc4-4e08-819a-c5366561049d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08446805-1fbb-4b48-ad24-4e530e8127a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9587350b-5433-4ce7-8001-fc67738709e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5985753-ab79-4b74-83a8-61c9dcfe643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a83f9d61-6958-44da-892a-663a49764ca4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3715a46b-16b2-4aa2-974c-8373ef003483",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a4efd5b-51f9-46b7-8826-2b4ee176200c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b3cb7d8-b402-4797-bc15-563c3ca51461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49d75b03-6d98-486a-96a8-f110ff650a41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11c64b06-c785-4ee1-94b7-68aead92c6eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "300fa5b0-e829-4e6e-bf9f-912a515097d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48d76593-7dae-4d63-a044-f612e8867f57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e1ca254-544d-4efd-8b8a-5facc8601106"
            }
          }
        ]
      },
      {
        "id": "ab3b48f9-fe7d-4ae7-9126-7ebf231c1dbe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aba3090-c2b8-4270-a1ca-2517d59ec2f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d57217fa-d8cc-4e97-b7dd-6211f78228fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f54dc882-d017-4697-a501-970920d7fd95",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "faf0674f-caaa-471c-a334-58ffc855c24b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3940c2ad-c6a9-4c8b-b937-1bc1f2a00eae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 144.8947368421053,
      "responseMin": 20,
      "responseMax": 3221,
      "responseSd": 348.31812864711645,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704760605801,
      "completed": 1704760656287
    },
    "executions": [
      {
        "id": "32619470-38b1-47a4-9b36-ec58b49e7a68",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "36a0cb47-3e4c-480c-820c-124531c2c2ee",
          "httpRequestId": "d198f4a2-ac85-4046-b341-c65c4ad7cb26"
        },
        "item": {
          "id": "32619470-38b1-47a4-9b36-ec58b49e7a68",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c1868374-18dc-4736-902d-d26a7f862852",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "0c0c7e0b-573d-4149-a66e-658a4025f6fd",
        "cursor": {
          "ref": "36e62ced-69cc-418f-8389-aab64502fb6b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "af826380-14fd-4af4-9a9d-f75b66e3489c"
        },
        "item": {
          "id": "0c0c7e0b-573d-4149-a66e-658a4025f6fd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bfdda094-80c7-41ff-90ac-24768579b63e",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "f99f47b7-e6be-4158-99a7-875f659300c2",
        "cursor": {
          "ref": "6e23fc61-07a1-40af-8f21-af1e75f3ce65",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dfc440f9-2eef-44f8-8404-fdf4932d0234"
        },
        "item": {
          "id": "f99f47b7-e6be-4158-99a7-875f659300c2",
          "name": "did_json"
        },
        "response": {
          "id": "fe1d32f2-4488-4791-a7c2-305d1ce09ae6",
          "status": "OK",
          "code": 200,
          "responseTime": 628,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a590b835-b866-4ab5-b956-3cecc0a73ec3",
        "cursor": {
          "ref": "204f5a2e-bc34-4b90-9c62-ef453de409fe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f60e3831-b27f-4bd1-8e96-78f33742c256"
        },
        "item": {
          "id": "a590b835-b866-4ab5-b956-3cecc0a73ec3",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b77745b-c289-4947-8614-f5851938cadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a590b835-b866-4ab5-b956-3cecc0a73ec3",
        "cursor": {
          "ref": "204f5a2e-bc34-4b90-9c62-ef453de409fe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f60e3831-b27f-4bd1-8e96-78f33742c256"
        },
        "item": {
          "id": "a590b835-b866-4ab5-b956-3cecc0a73ec3",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b77745b-c289-4947-8614-f5851938cadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45472464-f0b6-4bda-9ea2-42b740d72453",
        "cursor": {
          "ref": "3cc41fed-6b41-4591-a4dd-d293c64a10b6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "79a6f2ca-6c90-48ec-a787-1f6af1b53115"
        },
        "item": {
          "id": "45472464-f0b6-4bda-9ea2-42b740d72453",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1287cb94-4a6a-4727-a9aa-b60c5d52a7f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 173,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3a8e85-beed-4a47-a382-4224b4fef0a6",
        "cursor": {
          "ref": "edde0784-d33c-4266-929a-3bc807448195",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "038c7176-1a99-401e-aab2-edda3ca7fef6"
        },
        "item": {
          "id": "be3a8e85-beed-4a47-a382-4224b4fef0a6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7a408a13-a6aa-4d66-97bb-c1684307bb86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 86,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329b5646-13b5-4b79-9c39-bf20a690273b",
        "cursor": {
          "ref": "b66ee578-ba73-43dd-9408-022ecc09ba02",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9e135a62-3273-4620-b17a-0471a8ce8a75"
        },
        "item": {
          "id": "329b5646-13b5-4b79-9c39-bf20a690273b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1e396b17-1272-44c7-8f37-b87defee0e8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c5eff-81a0-4439-9fb9-f15591327a60",
        "cursor": {
          "ref": "f8177650-91f3-44ff-93fc-5b5fed1d492e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd59ee2b-9531-4ed0-96af-af7e03067b7e"
        },
        "item": {
          "id": "e34c5eff-81a0-4439-9fb9-f15591327a60",
          "name": "identifiers"
        },
        "response": {
          "id": "0f2a60b8-850f-47d0-b168-5495c24a1cbf",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fcdedf-705d-4419-8e54-9d3656053461",
        "cursor": {
          "ref": "581e82c4-4928-41fb-9269-6875ecec9e68",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d55f0db2-a348-460e-9a3e-8b2997e97c3b"
        },
        "item": {
          "id": "43fcdedf-705d-4419-8e54-9d3656053461",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0e6719f7-d3c4-4a9c-b06a-2b3b169185af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b336a-dc83-4920-9544-ea5cadc1287c",
        "cursor": {
          "ref": "87c85b74-1fbc-4fe4-9fcf-f1b9721c9252",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3d18d5d9-24b9-4560-9b67-e81981beed2f"
        },
        "item": {
          "id": "9f7b336a-dc83-4920-9544-ea5cadc1287c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ddf0444c-2306-4e1b-9d4f-c692f9f3ec22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe3bba8-adf5-4c7d-b0a0-6b9e75819201",
        "cursor": {
          "ref": "72187f65-12f4-4afe-be36-a7e04b05eae5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4ca07ea1-90c2-44ba-b496-973fe6e0852b"
        },
        "item": {
          "id": "1fe3bba8-adf5-4c7d-b0a0-6b9e75819201",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0eafdbb5-b012-4e6d-942c-0ecc9537e062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653f3d6-15c0-4c1d-a2d9-3101d3676f14",
        "cursor": {
          "ref": "0ec2cc6e-de57-4466-a8d6-9f0b0b2a5822",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86a1f40d-3863-4608-a9f5-8990263409bf"
        },
        "item": {
          "id": "6653f3d6-15c0-4c1d-a2d9-3101d3676f14",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2609d6a9-08f8-4b8d-9497-b069a683a072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9df198-7b42-411e-b6ec-f5927660b6bf",
        "cursor": {
          "ref": "02a0b61c-52db-4d64-829c-a044b58c763c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e7082626-17bf-446e-a39b-40442e27eeb2"
        },
        "item": {
          "id": "bf9df198-7b42-411e-b6ec-f5927660b6bf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3075f340-0ed5-49ca-b1fb-7cfb7f096f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a15a67-4d21-403f-8494-9782631d981a",
        "cursor": {
          "ref": "90951a41-d852-4a76-8388-991aadcccca5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "22e5668d-9d66-46aa-ba3f-ea9b27278d12"
        },
        "item": {
          "id": "36a15a67-4d21-403f-8494-9782631d981a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d61ee17e-ffc6-4e61-964a-eb382b0b1bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb270ec-5f08-497e-8b94-88da96a78804",
        "cursor": {
          "ref": "69c70102-8271-48a8-9f1b-9c3fb3999d49",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "02cbfb4e-c796-4fd8-81e7-df2e309b52c6"
        },
        "item": {
          "id": "2cb270ec-5f08-497e-8b94-88da96a78804",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aaf9f75c-9afe-4cac-935c-d6d2594912af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a504d824-9c31-447e-967d-4e882d548b2a",
        "cursor": {
          "ref": "0380e69c-ac0b-4a42-965b-0f8e84f3d3be",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2ef05598-3240-4b2a-bf45-7dab5f7c3c95"
        },
        "item": {
          "id": "a504d824-9c31-447e-967d-4e882d548b2a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0522fea5-72d9-4873-ba18-fda593a05458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed42aeb9-15c2-4110-9ac5-65f0672cc0a9",
        "cursor": {
          "ref": "658f7304-05ca-4065-8a7b-355c3c303e32",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c2658016-39e2-4f07-9728-3f21545d7702"
        },
        "item": {
          "id": "ed42aeb9-15c2-4110-9ac5-65f0672cc0a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "778659e1-e308-4daa-854d-64af77f854c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f801dc3-e250-48ab-8690-ea9da1f600dd",
        "cursor": {
          "ref": "045785a8-1c81-4c6e-a330-d406d43ad778",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "85686fec-31a6-4091-8eaa-897cde7491a1"
        },
        "item": {
          "id": "2f801dc3-e250-48ab-8690-ea9da1f600dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "42ed7807-6a53-4630-b7d7-14aacf337ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330bd3dc-78d6-4785-8cb1-02952ebf1ad3",
        "cursor": {
          "ref": "71c2716f-3fd9-43a7-8ada-c5a26a8ef634",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0a768b6e-198a-4a1a-a6af-a54c4a0a5ece"
        },
        "item": {
          "id": "330bd3dc-78d6-4785-8cb1-02952ebf1ad3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c3447338-0b39-44cb-b6b0-97d44abb9872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f144683-d5f7-410e-8566-55f4dbc588b7",
        "cursor": {
          "ref": "5f60f819-ad6d-4a78-816a-d3739e401560",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7f4500ba-e564-4272-b72d-d8e301773501"
        },
        "item": {
          "id": "9f144683-d5f7-410e-8566-55f4dbc588b7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "61dbd621-1e3f-4954-9340-123f225ef8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea31d7a-0764-4750-bc0c-cc1378b5c4a7",
        "cursor": {
          "ref": "5a0c9c58-04d3-45d9-acac-206cf051389a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4fbcbb44-bb4f-4be0-920f-513f8d4cb71e"
        },
        "item": {
          "id": "6ea31d7a-0764-4750-bc0c-cc1378b5c4a7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f5b92d7d-7863-47af-976a-98a91ebb9a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f222ee05-aa97-48fd-a4f6-9537f9d037ac",
        "cursor": {
          "ref": "cef9271f-c491-4af7-91ec-efc852926218",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a1dfb2ef-8b2f-478d-9fe6-94ce25e72949"
        },
        "item": {
          "id": "f222ee05-aa97-48fd-a4f6-9537f9d037ac",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70b50959-8e61-48ae-befc-917672d771d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b813eba-0cd1-49b5-9c22-4619e1613a90",
        "cursor": {
          "ref": "b949629e-7d32-468d-8455-f48fe41807c9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "408a5c0e-58e4-4077-9f4a-134fa849d498"
        },
        "item": {
          "id": "0b813eba-0cd1-49b5-9c22-4619e1613a90",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "67d1e287-1fbf-42a5-8c6c-a2553f35f2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7aad8c-ef9b-4aae-b3a1-e28983533b53",
        "cursor": {
          "ref": "a73fe566-4132-450c-b9cd-89cbd80a56f8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f5d2f00c-4405-42f8-b929-a8800e041774"
        },
        "item": {
          "id": "ef7aad8c-ef9b-4aae-b3a1-e28983533b53",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea281291-5387-4818-b5d2-97118b2b845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08346385-d3df-4d25-a947-4cae40877715",
        "cursor": {
          "ref": "54705ee8-b839-4ecd-af34-ba549a7846d7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b356d1af-8f2f-4436-9850-e85e942ae9b1"
        },
        "item": {
          "id": "08346385-d3df-4d25-a947-4cae40877715",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d474ebbd-4f23-4927-a48d-eab10730cec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cda7bc-0695-4542-8b0d-0fa76730e6a1",
        "cursor": {
          "ref": "ddb3d44f-8a22-4c7b-8d3b-8dcf118efd52",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ca00621b-1591-4397-ab09-c3acd5a1a05e"
        },
        "item": {
          "id": "e4cda7bc-0695-4542-8b0d-0fa76730e6a1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "69f8c71a-f981-46a7-bcb9-fa372fc0eecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa438a-4a2a-4398-b9a0-cc18527eb702",
        "cursor": {
          "ref": "92ad2f11-d34d-4390-81a6-8112153a85c4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "792995aa-0b3b-4d98-9838-52fe44245af0"
        },
        "item": {
          "id": "4bfa438a-4a2a-4398-b9a0-cc18527eb702",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b66dd6f0-2ee3-4b45-9190-3c063dcb0ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d1d4ae-9c81-4dda-9232-0ea97875f461",
        "cursor": {
          "ref": "8ce6c3da-4aae-4070-910c-147809ad9d06",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "14b32b0f-2769-429e-91df-d8b930a0d1e8"
        },
        "item": {
          "id": "46d1d4ae-9c81-4dda-9232-0ea97875f461",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "38ec31eb-fc48-4272-8488-0fa3ae693080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6190bf-0100-4be4-a2d3-1bb39254af31",
        "cursor": {
          "ref": "d50ff796-63d2-4c2f-8776-f898920cbd89",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "daa2e3c7-f7ed-4148-9ee8-e429331ba9c7"
        },
        "item": {
          "id": "8d6190bf-0100-4be4-a2d3-1bb39254af31",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dd24aa9a-37a4-41b7-8dcb-cd64b14b78aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6916a10-5a28-427b-83ec-f6f3cd414745",
        "cursor": {
          "ref": "ffe855b4-3985-4ed2-8f74-c4eb41933bf1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "927b986b-5eb4-4be7-b32e-3c7d7ab8dec0"
        },
        "item": {
          "id": "d6916a10-5a28-427b-83ec-f6f3cd414745",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b67dacae-0855-4423-b474-843e9add310e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4487a1a4-2471-431f-aacf-a19dcbc9b3a0",
        "cursor": {
          "ref": "b4a2dae5-c2b5-4641-8f63-733da13a5c90",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a5457bff-5c84-4110-bc8e-ee7af7b95145"
        },
        "item": {
          "id": "4487a1a4-2471-431f-aacf-a19dcbc9b3a0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "db13da94-07be-4aed-87a3-7820ecad55b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c185c1-a745-4a85-ab38-727087c9f298",
        "cursor": {
          "ref": "042becae-7905-468d-b182-3a8c917148b4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e37e9204-2969-4539-8e82-6a67560b2cc3"
        },
        "item": {
          "id": "c7c185c1-a745-4a85-ab38-727087c9f298",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "35deffe7-7b75-4121-937a-82ef6e8ae8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd66966c-b9a4-4731-807f-94e2e438bb32",
        "cursor": {
          "ref": "c6e28e18-f965-49aa-8938-6c5fc1a007ab",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a616c7f0-a7d6-44e4-9191-d2e0cf061f73"
        },
        "item": {
          "id": "cd66966c-b9a4-4731-807f-94e2e438bb32",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "12be9313-1c2b-48f7-b2c1-02c3e41e809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e13064-51a3-455d-9936-dc4d662e5f3f",
        "cursor": {
          "ref": "19e445ff-8b8f-4038-9211-86f3ce4599e3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b3d117b9-834a-43cc-9506-067d03bb3be1"
        },
        "item": {
          "id": "03e13064-51a3-455d-9936-dc4d662e5f3f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ca8396f9-7b35-40c8-87ee-a200196e00e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81216c74-553b-4ea0-a7b8-db581e03314a",
        "cursor": {
          "ref": "93b8073e-384a-4691-8759-b032380ee3c2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f1133032-fcf9-49c4-9148-317221e3bb06"
        },
        "item": {
          "id": "81216c74-553b-4ea0-a7b8-db581e03314a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bedc0bd9-ea55-4f5a-bade-4ea1a1cfd5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b126e-f611-4eec-8e00-007f4b159bb6",
        "cursor": {
          "ref": "091690f4-42e2-4ebd-8e58-06ab9c496ea2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a8ea3768-5b49-43c2-a1d0-abf7c13b4603"
        },
        "item": {
          "id": "f87b126e-f611-4eec-8e00-007f4b159bb6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "40ca6530-2e45-48f1-be37-9f0a46b71703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886d4ab-1716-49e2-a573-3cd536470754",
        "cursor": {
          "ref": "0ba7db25-b893-4b26-9331-6c2015d1c9fe",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "198f399b-9247-4781-b95e-d28876b4bc53"
        },
        "item": {
          "id": "f886d4ab-1716-49e2-a573-3cd536470754",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8819c7c6-abe3-418c-b7f8-f2b966202f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beea0e9-05f3-4bf4-a45b-180f34d85d7d",
        "cursor": {
          "ref": "4d140e4c-d8d3-4a8a-a06e-0b613f37efd3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "52c3419a-fc17-4780-a329-bb1e40805b86"
        },
        "item": {
          "id": "6beea0e9-05f3-4bf4-a45b-180f34d85d7d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "be9cc005-05a8-4a88-897d-f5dfba24da60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6ca3df-991d-4be3-8d32-f0d07f5408e6",
        "cursor": {
          "ref": "c66c0b91-da3b-4b82-9857-4ab38162bf5e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9955217e-1003-4934-aa15-8073fbd18445"
        },
        "item": {
          "id": "0d6ca3df-991d-4be3-8d32-f0d07f5408e6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bb8372ef-9875-4bc4-bfca-693a862bd6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe01404-49c1-4eb6-86b9-3963a4e66840",
        "cursor": {
          "ref": "ea33fed2-cc7d-4a78-b4e2-3c19308f07b2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "96c6fb77-54ce-4826-906d-a9da68fac1fc"
        },
        "item": {
          "id": "bfe01404-49c1-4eb6-86b9-3963a4e66840",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf5966cb-bcc3-4931-a9ca-bed9b3d566a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af1311c-a06e-4307-801b-2e594e03db27",
        "cursor": {
          "ref": "dbb0c855-fd15-47a6-925f-3f8e1ad0e9ec",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a10fe732-cc41-4143-93f7-f897dd96ec5b"
        },
        "item": {
          "id": "1af1311c-a06e-4307-801b-2e594e03db27",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "57f42688-0097-428d-9045-bd00cd2e94d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7e5c9c-8b66-4504-8d10-436819b643f2",
        "cursor": {
          "ref": "9b356fde-6760-4cb7-9f9e-24139240a625",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "430d51f9-3bf3-4008-8127-2f465b7e5048"
        },
        "item": {
          "id": "0e7e5c9c-8b66-4504-8d10-436819b643f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "302703c3-6670-4eb3-ba77-1ea429191c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5cc77d-5df8-4c61-b4fb-a35b464b55d2",
        "cursor": {
          "ref": "aed55280-d576-4eb2-a8b7-291963fa44e5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "28f2964f-3f0d-4a63-97aa-d1ecef19f7a4"
        },
        "item": {
          "id": "fc5cc77d-5df8-4c61-b4fb-a35b464b55d2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9a76a365-c596-427e-9455-b07cd68d2d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc772128-22ca-45d9-860c-a39e697a0a2f",
        "cursor": {
          "ref": "94588ce1-8908-4212-ba5a-cb9be0488218",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0cb20b92-36a7-4dc5-b7c6-f5ddd47a8384"
        },
        "item": {
          "id": "fc772128-22ca-45d9-860c-a39e697a0a2f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d45efb66-f89b-47c4-97d2-95fa89e157e2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 354,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78295dc-630b-4a3c-8c9e-78928a2a5dde",
        "cursor": {
          "ref": "66aa3075-6bd0-4a4c-8133-b6ae05b6207f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0b6709ec-bb93-4f1d-a1eb-74987b985424"
        },
        "item": {
          "id": "a78295dc-630b-4a3c-8c9e-78928a2a5dde",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9b8f108a-6d6d-4443-80cf-da6adecf7124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19968c7-f1b0-462a-a1bf-118a6b0c6251",
        "cursor": {
          "ref": "4bf3e6a3-8fcd-4f85-b9d9-7b429b31755c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "62ba15b7-ddc7-4922-b1ef-62d4831b338c"
        },
        "item": {
          "id": "e19968c7-f1b0-462a-a1bf-118a6b0c6251",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b3402a2e-869a-44cf-9f4a-0cafc4d0e856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7d6a78-ea33-4861-a9e3-ff555bef93f4",
        "cursor": {
          "ref": "710203dc-06a7-401c-89d5-615d9a18597f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b34b5577-38fc-41f3-8cc1-92adfe669027"
        },
        "item": {
          "id": "4c7d6a78-ea33-4861-a9e3-ff555bef93f4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "089ff48f-aeb1-451d-9857-fd2b8ad51a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdd4ed9-b150-44f3-be4e-83c18ab91374",
        "cursor": {
          "ref": "44cfe2c0-5fbe-4968-98b6-5d89ac4f5d07",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5232ce07-ffaa-4ed6-a64a-7b57b403387c"
        },
        "item": {
          "id": "3fdd4ed9-b150-44f3-be4e-83c18ab91374",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "451bf355-9dcf-41a9-bddd-51943141b87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242d6ef6-6223-44da-b237-2845fe6d0291",
        "cursor": {
          "ref": "98579947-1678-40d0-9b0c-b121a463b3f8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2170861b-90dc-473d-a436-3f1b7ea5fc70"
        },
        "item": {
          "id": "242d6ef6-6223-44da-b237-2845fe6d0291",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "81ceaa9b-f78f-47df-9b4f-a5a1106ca64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23119838-b017-4c5a-8437-2f0355430a25",
        "cursor": {
          "ref": "455bf178-3e49-4031-ad11-b9de397521c8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6af6efd3-20ad-4fc0-af72-78094804cabb"
        },
        "item": {
          "id": "23119838-b017-4c5a-8437-2f0355430a25",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fe2c1ff5-7cb8-4ebf-bc9d-f6e5d78c3b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2073e4b6-73b6-4e68-a448-80dd64c9b497",
        "cursor": {
          "ref": "fca42323-285d-4faa-9aa6-5a9aeec8137f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3c0dfbd1-7834-4798-8d71-1323b70c38c5"
        },
        "item": {
          "id": "2073e4b6-73b6-4e68-a448-80dd64c9b497",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "74617b0d-071c-40ef-a4a0-02db193a68ca",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 360,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344f8c6c-5cda-4aff-9e48-877f46bc2676",
        "cursor": {
          "ref": "b9b545fb-35a1-42d6-b5a8-99287069c6ff",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f51b6309-e823-4d57-bc06-7cfb533b85be"
        },
        "item": {
          "id": "344f8c6c-5cda-4aff-9e48-877f46bc2676",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e50d2c75-aa8c-4c39-8132-327eb525e254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af32a64b-a4ef-4b5c-9f79-5307f63a4950",
        "cursor": {
          "ref": "cae1c4d9-9bc5-40b3-879b-73132456f458",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "eb88f398-0c47-43ac-8e4b-3ce5b8e897a2"
        },
        "item": {
          "id": "af32a64b-a4ef-4b5c-9f79-5307f63a4950",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd6197b2-74e0-4100-ab81-6cdf0a9911cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04781e37-20f3-4297-abb1-6eeced816fd5",
        "cursor": {
          "ref": "f253bf3a-c134-45a7-a019-8a297c405d7e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2d7d5b42-457b-4643-b304-142484dcc10e"
        },
        "item": {
          "id": "04781e37-20f3-4297-abb1-6eeced816fd5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "984673f5-c79e-43e9-a077-14dc5fe6d563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae00f77f-9344-428e-aee2-70233ce51d5e",
        "cursor": {
          "ref": "16bd225e-f572-4c8a-ba6a-15fe2ea2b1a0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9b34d26b-7f63-4b07-a9e6-38902a9d98f5"
        },
        "item": {
          "id": "ae00f77f-9344-428e-aee2-70233ce51d5e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "44f35676-928e-40e7-a05a-d65431c67215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474dbe21-8eac-4d89-88f4-584c3b916a71",
        "cursor": {
          "ref": "2414d7c4-6d93-48ea-ba1d-1222045c5d92",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b3ea48d2-91d8-4de5-adf3-58295b62f42a"
        },
        "item": {
          "id": "474dbe21-8eac-4d89-88f4-584c3b916a71",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "44abd8d8-2160-43c6-b38c-477fe3f7e901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6087cc0-0647-40bd-984e-a723c8accb18",
        "cursor": {
          "ref": "e2d8cc91-dc40-4560-9143-b6cd1fe3f554",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0d7191b1-7736-429b-9ff3-472c1ceba6a7"
        },
        "item": {
          "id": "f6087cc0-0647-40bd-984e-a723c8accb18",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "74307291-6ff1-48d2-83fe-ef369bee54bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee5f242-6f88-415c-9268-09c50d4410ef",
        "cursor": {
          "ref": "d3799362-e1f6-4b8b-a2af-d70ca8a3b952",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de051a0d-1488-4f3a-ad88-b6148b6ddc06"
        },
        "item": {
          "id": "aee5f242-6f88-415c-9268-09c50d4410ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a428309-41ec-4bcd-afd6-b28ae5e53d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92628556-d0b5-417d-b565-e2322d9cea09",
        "cursor": {
          "ref": "bf941c95-d6e0-4892-b9f9-c289cd640e30",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2394fb92-dd85-4b93-9d90-b0d621facf59"
        },
        "item": {
          "id": "92628556-d0b5-417d-b565-e2322d9cea09",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "440a3a75-e32f-4c9f-b4ab-0cf4bf865e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5696be57-bc82-4658-b841-8323ac125e26",
        "cursor": {
          "ref": "9ce231be-95e5-4e43-bb58-060d718fbfa4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "56fd663d-27f6-43f8-ab80-0e178e19f23d"
        },
        "item": {
          "id": "5696be57-bc82-4658-b841-8323ac125e26",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d590dd44-c45b-4926-8eae-3b130564db48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42caac53-f47d-47bc-9864-5da7edcb59f6",
        "cursor": {
          "ref": "1fa67acd-2fb7-42d2-9ce6-81e3703d5ebe",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dfddf87c-7e93-453f-8c1f-23f2deebfab1"
        },
        "item": {
          "id": "42caac53-f47d-47bc-9864-5da7edcb59f6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1b81c79-dcf1-44ae-a124-874de1b6e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48325342-ee26-4ddd-95f7-4fdfa54e4272",
        "cursor": {
          "ref": "55d0d2d6-ab81-40ba-8db0-ce1d4650d726",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60f9a1df-7e4d-441f-adfa-6224262937b8"
        },
        "item": {
          "id": "48325342-ee26-4ddd-95f7-4fdfa54e4272",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "08b8025d-7dd1-48ce-b1a3-04ef909bac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc4e1e1-b5f6-49ac-9863-0bc393a2e800",
        "cursor": {
          "ref": "e1ae5054-bfd0-4611-a70d-dc276ffe7865",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "901dc898-f970-4baa-8929-c13b8536164c"
        },
        "item": {
          "id": "2fc4e1e1-b5f6-49ac-9863-0bc393a2e800",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "30f44b09-2312-419f-8fe1-a4f43dcacb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bc5068-f611-48c8-b751-02c6f6b4012c",
        "cursor": {
          "ref": "867724e1-3ea5-45e8-9f74-5b68f1d08739",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c4e2f917-730e-4e70-9ac3-df4acfbf4b5f"
        },
        "item": {
          "id": "49bc5068-f611-48c8-b751-02c6f6b4012c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8a1bd085-5561-4ab2-b5df-e18a7343f771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7ba0d7-b9d5-43f8-99ad-2e236c5839d2",
        "cursor": {
          "ref": "d5aa37fb-00a9-4bc3-8638-e88af245c8ce",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ec5b8a0d-bcf8-4060-800d-55ccc7264ea0"
        },
        "item": {
          "id": "8e7ba0d7-b9d5-43f8-99ad-2e236c5839d2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "613fb3ce-e472-4b1b-9f3d-7e73f2bd9cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17459dde-e6ec-462d-a136-67499c8ac27f",
        "cursor": {
          "ref": "1b8e0d81-41d3-4b85-a1cb-72729149fe5b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2e67eff2-aa61-4a90-86e0-13fb634116d0"
        },
        "item": {
          "id": "17459dde-e6ec-462d-a136-67499c8ac27f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ad2e0504-a7d8-49c7-a545-a42f869f90f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbab0b15-4bbd-4b1e-8ed3-181f920ed6f5",
        "cursor": {
          "ref": "8ef10de6-3603-463f-8317-7114253570c1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d7972fb5-d9a6-4c36-9025-547d56b710cf"
        },
        "item": {
          "id": "cbab0b15-4bbd-4b1e-8ed3-181f920ed6f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6fb55160-cf36-4a50-8c89-09f66a948837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46816e86-4adf-4739-ad89-2da6ac5046e8",
        "cursor": {
          "ref": "2cb8ff04-880d-46f2-9fe7-15b852694ac3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46cefb28-7d79-4c17-9c25-2e32fef167fd"
        },
        "item": {
          "id": "46816e86-4adf-4739-ad89-2da6ac5046e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b8f7e8b3-8763-4144-bde3-021bac1776ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb1034f-d1f5-433e-9dd8-04af29d69843",
        "cursor": {
          "ref": "1bf4d645-ae99-45f4-bda7-62e0c48677d6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "77f6cce0-de69-4cfd-884b-3e64a3f3ed00"
        },
        "item": {
          "id": "dbb1034f-d1f5-433e-9dd8-04af29d69843",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3dac5211-9200-47f7-b74f-f9b8e75f7300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe47eaaf-bbab-4735-aa00-81dff624049d",
        "cursor": {
          "ref": "c0c040e1-492f-49fc-99c5-99a804dffa00",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "03f7432a-8fd7-4e2f-87c9-6b11c92bfa77"
        },
        "item": {
          "id": "fe47eaaf-bbab-4735-aa00-81dff624049d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c67c9db0-2e29-4ea9-967d-fe4b8a0dc6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828208af-1a3b-49f8-a666-bc232e062124",
        "cursor": {
          "ref": "a76a04e5-97b6-436d-aa14-f6785b35823a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "91408ebe-a9fb-48c2-8e81-7ab083fd6f60"
        },
        "item": {
          "id": "828208af-1a3b-49f8-a666-bc232e062124",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "efd6f6a6-7fd5-4307-99cc-a47626884988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3206e6ee-aef6-470e-98bf-0649785a52cd",
        "cursor": {
          "ref": "f6b884a6-e588-4db7-a51e-5f8b63afb303",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd8d9dbe-2ca7-4cd8-8a24-b849527fb998"
        },
        "item": {
          "id": "3206e6ee-aef6-470e-98bf-0649785a52cd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2a504de9-35ca-4578-aec7-f627901ec551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f965d656-d58c-4a29-a5a0-0a1f1213297c",
        "cursor": {
          "ref": "625ea554-660b-49f0-b25d-c9cdcbb00da8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2de3b120-39f5-45e3-ac02-eede8af81800"
        },
        "item": {
          "id": "f965d656-d58c-4a29-a5a0-0a1f1213297c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7e94af1d-122e-46fa-a521-6547cf8e9634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf1f581-7572-4ff4-ac82-273d714f90f5",
        "cursor": {
          "ref": "bc4ecba3-7d07-4d93-974e-f064e7f33562",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "daebd036-b4f5-46ef-b638-ad44e2e438f3"
        },
        "item": {
          "id": "fcf1f581-7572-4ff4-ac82-273d714f90f5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "32df5875-d7a5-48d1-9a37-14bc4120c0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3b682-4bb6-442f-a27b-e87356f67935",
        "cursor": {
          "ref": "8f1a2717-1ed0-4ff8-9308-f93aee0b1faa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "68059462-a43d-4ff6-ac85-ea17a86750fd"
        },
        "item": {
          "id": "78f3b682-4bb6-442f-a27b-e87356f67935",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7a8fb878-9140-4915-bc14-72d885919b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a10009b-aa59-4934-b020-cc12b6620fa2",
        "cursor": {
          "ref": "c4503217-73a5-4e72-b2be-c35d4167b1cf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d0dca272-98d8-414c-89f4-3d88b7dbc44f"
        },
        "item": {
          "id": "1a10009b-aa59-4934-b020-cc12b6620fa2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bb3bf6dd-3a47-456e-a317-0283992e5ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2326a726-2ae6-4ad4-a094-d8a1adbb716a",
        "cursor": {
          "ref": "d897ae8d-d8e4-4a4b-8142-621e4887fd7d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a6d9f4e7-6c3e-4c8e-8d01-fd3ce396871d"
        },
        "item": {
          "id": "2326a726-2ae6-4ad4-a094-d8a1adbb716a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c08270e8-ed70-4faa-a2f2-47ba67c3ca66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80baaf6c-b6b9-4ddc-bdb0-a1cb57f83abb",
        "cursor": {
          "ref": "4118489a-6169-4388-8342-9dc2d7b3a139",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5f8e23de-c8f6-4894-bc8a-846abbbbfaa3"
        },
        "item": {
          "id": "80baaf6c-b6b9-4ddc-bdb0-a1cb57f83abb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9ccf95eb-eda0-4e7a-945a-370a07966310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5458c9f2-7d26-4861-ab95-0c01eb72c69c",
        "cursor": {
          "ref": "85fb702c-43f3-4719-a05f-dcc3d8dc6fac",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cb529574-7a37-4aa7-ae3a-9eea9f4fe9d6"
        },
        "item": {
          "id": "5458c9f2-7d26-4861-ab95-0c01eb72c69c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e7d7b2a1-2814-4289-a97a-a4a4bdfb4685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f398105d-3599-4b15-84c6-22ebb8e17609",
        "cursor": {
          "ref": "34a24efd-8da8-4d92-93a8-7e50d94c8a0c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8edc3ad9-3acc-4d60-a1ec-b1e0db4813ae"
        },
        "item": {
          "id": "f398105d-3599-4b15-84c6-22ebb8e17609",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "351d0014-eb43-4cd1-bcbb-4c89c170074e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135d4ee-2f5f-497b-ba8e-3c3608654623",
        "cursor": {
          "ref": "353f33b0-ec15-4c36-a584-fa5ed83523c8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "285544ca-d5d6-4c9f-b93c-6ead0051d5f3"
        },
        "item": {
          "id": "7135d4ee-2f5f-497b-ba8e-3c3608654623",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "72729523-1349-4cfe-be9d-2002580a1502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39c669a-5112-40ac-864a-49400a5712a9",
        "cursor": {
          "ref": "fc803b07-cf7f-4e25-9a7d-54266352594d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c3038139-e2fe-4ae3-9836-f1c286ca4345"
        },
        "item": {
          "id": "f39c669a-5112-40ac-864a-49400a5712a9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bd6840a7-ef82-4fec-8ad9-5943c2e045eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bddeb83-7c35-414e-91e2-8dd11a58e165",
        "cursor": {
          "ref": "f16089b5-dbca-48e3-bcd4-3b7efa998017",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3864b38-613e-4b96-a254-73b82f4b9e24"
        },
        "item": {
          "id": "3bddeb83-7c35-414e-91e2-8dd11a58e165",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bf33bd2f-7698-4264-8fa1-769fd9c2d512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7e35b3-0d2d-40a6-9a02-40b5dbf852a1",
        "cursor": {
          "ref": "89487645-10ed-41c1-9b49-6069e5eac887",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2c4b4ad6-340e-4936-8ad9-11f9ce77c979"
        },
        "item": {
          "id": "5e7e35b3-0d2d-40a6-9a02-40b5dbf852a1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4cd3de4f-7365-438d-bea5-f469333118fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db08629f-2b6c-4dc4-aa6e-bcc2c9d9868d",
        "cursor": {
          "ref": "1c8b62e1-6bd5-47a3-a566-12043794b2d1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bb72eb80-54c8-4c7f-9afa-2eabc5a889d3"
        },
        "item": {
          "id": "db08629f-2b6c-4dc4-aa6e-bcc2c9d9868d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ca7fac63-6861-404f-a6b2-255445375b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535d09bf-0659-4b92-b61c-d1d02a4a95a2",
        "cursor": {
          "ref": "9dfbe995-797d-485b-af80-843b804ca574",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8d34aabc-5194-448e-b784-e1bbe83e7565"
        },
        "item": {
          "id": "535d09bf-0659-4b92-b61c-d1d02a4a95a2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cc639e11-a6bf-4250-b793-092299322593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58937239-2862-4b8c-a50d-b0a919cc99fc",
        "cursor": {
          "ref": "c965482d-bbea-4c4a-a9d0-611093a06e07",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "88c34281-bb3b-4894-9206-2e4aa4d27a0c"
        },
        "item": {
          "id": "58937239-2862-4b8c-a50d-b0a919cc99fc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9c54d4fd-12c8-4524-991a-2f5b883f2da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb14826-742b-4f96-9bb3-8d0cdbd5d46c",
        "cursor": {
          "ref": "474ef2d2-88b2-4cc3-a716-b9e7c41207fb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "08975b21-8399-457e-8b85-3ec457ca819e"
        },
        "item": {
          "id": "7bb14826-742b-4f96-9bb3-8d0cdbd5d46c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "397aba93-65ac-463b-973c-99795acbf88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10660885-ac96-43d6-9749-c67576c2c06a",
        "cursor": {
          "ref": "cf2bd707-89b1-4a6e-ae75-5f2040340c23",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b551dbea-6cb4-48b4-ae94-c226ab61b904"
        },
        "item": {
          "id": "10660885-ac96-43d6-9749-c67576c2c06a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b700b625-3374-4f9e-8667-1aa4837ff047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011d734b-c8a6-443e-900d-71d21fb3c844",
        "cursor": {
          "ref": "87ed48c3-726a-45a4-b5cf-a5a0d0a2dd5f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "10469293-7b1c-487f-9c7c-48e3e8327be4"
        },
        "item": {
          "id": "011d734b-c8a6-443e-900d-71d21fb3c844",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d187141b-2565-4668-846d-9c0aedb8c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55376239-75b5-4857-9614-0039ed702564",
        "cursor": {
          "ref": "cbdb3f75-0599-4aa4-bc95-40a04aa4fdae",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e6f9a37b-4c44-405b-a05e-1cc8650b1d51"
        },
        "item": {
          "id": "55376239-75b5-4857-9614-0039ed702564",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "18c958ae-fc74-4949-92fa-e552d0d40d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999e25d2-2533-41e2-8fce-d4a22d97db3e",
        "cursor": {
          "ref": "126b992a-8a3e-4862-953d-3191c7240a0a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f8e3e39-ff80-4c4f-946f-e18235d17e91"
        },
        "item": {
          "id": "999e25d2-2533-41e2-8fce-d4a22d97db3e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "51253b34-7760-4cb0-bb56-cfd7631c893c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccb662e-4608-4483-af07-5ece73ba10ca",
        "cursor": {
          "ref": "0aa201f2-dd5a-4f47-a80a-79025280bdae",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c6f13240-4b01-4ae3-9307-fe96545b4568"
        },
        "item": {
          "id": "dccb662e-4608-4483-af07-5ece73ba10ca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "769bf761-f2f2-4c45-81e9-82cafcaa9c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2539b5a0-8033-4168-aeec-1abd985c72f2",
        "cursor": {
          "ref": "93c76728-cb47-4d94-806c-9573f595504c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17cdabe0-9b40-4753-a361-bc1242c80669"
        },
        "item": {
          "id": "2539b5a0-8033-4168-aeec-1abd985c72f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f549020-a9cb-4df4-a22a-18a22fd8c07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51262eba-dbbe-4fdf-b0ef-0231f672cdef",
        "cursor": {
          "ref": "1b31dcf2-c25a-4ff0-b79d-863cdd887cf4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2c273034-17d9-4cf1-8a40-5c7265e0bc7b"
        },
        "item": {
          "id": "51262eba-dbbe-4fdf-b0ef-0231f672cdef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "50150b31-1637-4fe1-9b06-440bddf41e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabdcaaf-cb84-4edf-947a-8198be042952",
        "cursor": {
          "ref": "521329b2-be4f-4841-ae97-e3b396d682e1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "da68a1e3-33b3-443f-8cc8-5360f23a9061"
        },
        "item": {
          "id": "cabdcaaf-cb84-4edf-947a-8198be042952",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "be5e79fa-ed63-4c07-86b8-be631d57fe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb7340b-b2de-4296-9ea0-e38dc361fba9",
        "cursor": {
          "ref": "09f7675a-6c7d-45cf-b209-b238588879e3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3ffa9864-b791-44ed-943b-6d91ac42e95b"
        },
        "item": {
          "id": "abb7340b-b2de-4296-9ea0-e38dc361fba9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5cc0c559-80fe-42da-9a09-048927021e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ff880-2422-4b8a-a9fa-59a3e6c74fa6",
        "cursor": {
          "ref": "992b6a63-4767-4e11-aa28-e7196910ccef",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ad740315-0cbc-4f58-a73c-e28eda016bca"
        },
        "item": {
          "id": "b64ff880-2422-4b8a-a9fa-59a3e6c74fa6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eb1afe76-ac7c-4590-885d-aec13c7949d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86f1dec-7849-4bcd-8361-e2f36b3db309",
        "cursor": {
          "ref": "72d7c67e-5bf7-49f6-9b06-1c42610940cf",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a5faaf96-5fbc-44d5-b689-f7ef630696de"
        },
        "item": {
          "id": "d86f1dec-7849-4bcd-8361-e2f36b3db309",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3859d081-a34f-490e-a8f7-1031fb31d790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f851d991-83ef-402e-abdd-7f95a14c28eb",
        "cursor": {
          "ref": "dd379a1f-f001-49b9-a6d3-215ef5ecc233",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6565f40b-914b-4861-8a6c-d4ab76a0d2fa"
        },
        "item": {
          "id": "f851d991-83ef-402e-abdd-7f95a14c28eb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7a186f11-ea18-461e-b221-7345aa87baf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796babf9-2883-4b39-991d-96b01f00150f",
        "cursor": {
          "ref": "c864fd55-6ff1-430a-9729-4f41a00af513",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44d280eb-14c5-43e5-ae5e-57c31b355602"
        },
        "item": {
          "id": "796babf9-2883-4b39-991d-96b01f00150f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a56605b9-0aed-45e3-b629-7df4a5cc3ef4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6583d2de-27f3-42de-8b27-a5ac78edfea3",
        "cursor": {
          "ref": "1799a963-f6f6-4cee-a4d2-3d2833ecfa40",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "61136f53-4432-4010-bd73-d7b77b5530a2"
        },
        "item": {
          "id": "6583d2de-27f3-42de-8b27-a5ac78edfea3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dbd90953-c1cf-42c3-8a43-015eb256ed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4b0c6495-dab9-46c2-9763-36eb493232f8",
        "cursor": {
          "ref": "4ca87e4b-5828-4e94-8eee-2821c697413e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "36734e63-76ba-434c-ba43-9bf74d60c5f9"
        },
        "item": {
          "id": "4b0c6495-dab9-46c2-9763-36eb493232f8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7835cc0a-14eb-4211-a124-0c9b432eadcf",
          "status": "Created",
          "code": 201,
          "responseTime": 2781,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad055145-688b-4ada-a804-784df780b5d4",
        "cursor": {
          "ref": "b4cb20a8-7064-4ee8-a719-ac6308bef4f9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8b7c68a1-1640-4e0a-b570-05430ed643aa"
        },
        "item": {
          "id": "ad055145-688b-4ada-a804-784df780b5d4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "62edb2f2-1f32-423b-a3a9-02fd9cfb4236",
          "status": "Created",
          "code": 201,
          "responseTime": 3221,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cda6c3-39e7-41ff-9661-08e1c0642d27",
        "cursor": {
          "ref": "34479732-223a-49bb-9f09-6016f88f15c9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a5c951e-d3c3-41ce-9f6c-a66f41c35a45"
        },
        "item": {
          "id": "05cda6c3-39e7-41ff-9661-08e1c0642d27",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b295f787-e947-428f-a8e4-8c0f65f7b6c0",
          "status": "Created",
          "code": 201,
          "responseTime": 2188,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f9a33d-97fc-4407-a4c9-6eecbe2504d5",
        "cursor": {
          "ref": "241f102d-1cbb-4162-bb33-4a34b4165824",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3c8f7a1c-2699-4402-adf1-b7093526c888"
        },
        "item": {
          "id": "01f9a33d-97fc-4407-a4c9-6eecbe2504d5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26099fe3-772a-4905-bfb3-f2b885f1b032",
          "status": "Created",
          "code": 201,
          "responseTime": 2217,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a72d9f2-4d96-4bdb-8e0e-e970ef8aa028",
        "cursor": {
          "ref": "9989fe60-fefe-40b6-a418-8bfbea0bd004",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6db59695-8622-47e7-ba55-db43f66dff0b"
        },
        "item": {
          "id": "7a72d9f2-4d96-4bdb-8e0e-e970ef8aa028",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d780fb26-14bf-4416-a71b-67d37d88e9ec",
          "status": "Created",
          "code": 201,
          "responseTime": 2213,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22276d1-da32-4d69-a127-035db0044177",
        "cursor": {
          "ref": "ee6f2aec-3035-4776-9a44-793526add59f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9a786b92-5d30-4d04-8da4-70c8462d8e98"
        },
        "item": {
          "id": "b22276d1-da32-4d69-a127-035db0044177",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "02f44449-6bd6-4927-95da-066f1298a266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8e7a84c6-e038-467c-a420-d787d7b211fb",
        "cursor": {
          "ref": "fd12f1ad-b4e6-409c-b55e-0731cdcde547",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "325d7142-e800-4fbf-9de4-34cf996075ae"
        },
        "item": {
          "id": "8e7a84c6-e038-467c-a420-d787d7b211fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2ee166e4-69cc-41ea-ab7d-34653438b766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacb1248-e4fa-4d1d-a3c7-67a8b0a22471",
        "cursor": {
          "ref": "0a762de2-1dbb-46b3-923e-b7ec0b75578f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "638be203-181b-421b-87b8-42f2c3bd8f5f"
        },
        "item": {
          "id": "dacb1248-e4fa-4d1d-a3c7-67a8b0a22471",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "57f9dcac-ffdc-459f-8981-2784f26d2ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d399082-29e9-4c50-b52c-bdc1ab4dfbe4",
        "cursor": {
          "ref": "2316467f-a107-4154-bf3f-e26c880bf3fb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8654e60f-eb8d-4aee-ae20-dc79069662b7"
        },
        "item": {
          "id": "4d399082-29e9-4c50-b52c-bdc1ab4dfbe4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2189e1b0-3610-44d0-a00b-94e969dbf02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e313c01a-c58e-4cc1-ae22-e3341eff2fcf",
        "cursor": {
          "ref": "b5cbef69-087a-4ee7-941b-b7a7f2b6a627",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e826089a-8e40-4174-8cad-8ebd4c18e2fc"
        },
        "item": {
          "id": "e313c01a-c58e-4cc1-ae22-e3341eff2fcf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d040dbdd-7171-41ef-873a-5f2feb8466d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325cfc0-c661-474d-81e1-989d529e7983",
        "cursor": {
          "ref": "c33cc85f-ac62-4fc5-a613-56145e79dc9f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "df89e7aa-295f-47e4-9557-6537d08e6a5f"
        },
        "item": {
          "id": "b325cfc0-c661-474d-81e1-989d529e7983",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b66c326e-66d8-487b-bb5e-1d98bfd1bac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7510a9e2-ba7c-46d3-93b0-8ef9d09635d5",
        "cursor": {
          "ref": "da9447a8-9a28-4011-b8b1-261cd0ad9219",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "acbd3b04-a674-4b10-a24a-960f96845a2a"
        },
        "item": {
          "id": "7510a9e2-ba7c-46d3-93b0-8ef9d09635d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0e6f7207-4ef2-4344-9433-14235a226831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc500773-00d3-4b57-a8bb-db41ba959ba7",
        "cursor": {
          "ref": "4dfdf7c5-a2de-4975-bc5d-8f2798eab35e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9d8346dc-91f3-4c92-88d5-5e429583e7c9"
        },
        "item": {
          "id": "dc500773-00d3-4b57-a8bb-db41ba959ba7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee7613e5-2234-4494-a29d-402ff810776d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a8ddea-9529-41a4-8ad4-ac57becc6332",
        "cursor": {
          "ref": "fd8ea3f1-e5ad-4663-b32b-92a6bc796bef",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "de481187-db48-4db6-9a36-26fa7fb2c8f0"
        },
        "item": {
          "id": "15a8ddea-9529-41a4-8ad4-ac57becc6332",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d878c6bd-2433-4330-844b-92ef7708404c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b80def-eeba-45a7-8148-2a1ba7fc5225",
        "cursor": {
          "ref": "f5637db8-6528-4789-99a8-0062674a7ac5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d38653c9-ef70-4030-b1f6-32401dc6e251"
        },
        "item": {
          "id": "56b80def-eeba-45a7-8148-2a1ba7fc5225",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9d1c0bb2-586c-4b60-b115-73e06ee1ad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3498f48-1854-4327-95b3-9b1dc371afd4",
        "cursor": {
          "ref": "4b714dc9-e20f-4501-a862-1fc905516c35",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "64ed9dcd-9735-4b32-9d99-77b940261cef"
        },
        "item": {
          "id": "a3498f48-1854-4327-95b3-9b1dc371afd4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22c5b66c-bd58-412e-8b6b-1e0523b596c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd65070-498d-4c16-a6ef-acfbdaae0772",
        "cursor": {
          "ref": "0318bceb-0eb9-4096-a118-4daaac8065d7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "41cf9ea3-968e-4dfc-99dd-5dc6241d37e4"
        },
        "item": {
          "id": "5dd65070-498d-4c16-a6ef-acfbdaae0772",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ef93f50-de68-450b-9ddb-5e48d08942fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525c0461-baf1-4f07-8e98-666c1956f6bc",
        "cursor": {
          "ref": "a50356c1-e71b-4fb8-af0a-f7a7f7ffcc03",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb498276-453c-4332-9701-8068b2811a0d"
        },
        "item": {
          "id": "525c0461-baf1-4f07-8e98-666c1956f6bc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2209c0aa-edc9-4817-9126-9839a7fc382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8529fa1-d78e-4887-a09c-4f5b96ae4a80",
        "cursor": {
          "ref": "a9a02783-8200-482f-9f65-95cc80657332",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "15bb0037-9c06-4fb0-89a8-07273d9a6747"
        },
        "item": {
          "id": "b8529fa1-d78e-4887-a09c-4f5b96ae4a80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2462f4e7-118b-450e-a7cd-a64ad66df566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3000a3-3fec-4330-af92-09cb69d1e424",
        "cursor": {
          "ref": "f61e1517-4ee7-4488-a04c-4f9226274899",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0804a9d5-ecda-4e4a-bec8-9bc8da4e4790"
        },
        "item": {
          "id": "6c3000a3-3fec-4330-af92-09cb69d1e424",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d17d5517-2db4-47c0-8b99-69c08bc6fad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9769d7be-6377-4315-86b4-42e75f220387",
        "cursor": {
          "ref": "cea3e848-43a1-4dfc-a83b-cbd984240955",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "52e54bc4-dc61-40b7-84ce-787a783bc62f"
        },
        "item": {
          "id": "9769d7be-6377-4315-86b4-42e75f220387",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1eaca5aa-e979-4771-a712-6e4198fcb82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc025f4d-7c05-4050-9f54-e2e785f2536f",
        "cursor": {
          "ref": "974b59fc-b2f9-428f-953e-365df1e67948",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27f394e9-4ce3-4390-ba1c-338c0bcb0f38"
        },
        "item": {
          "id": "fc025f4d-7c05-4050-9f54-e2e785f2536f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d129c81b-a06b-4a8e-828c-021bdc544448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd26eb1-0d7f-4fa1-9064-6078be774f90",
        "cursor": {
          "ref": "3720369d-1f56-4968-b0b3-4358859589bc",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ae734cac-a367-4f5f-8778-5f21f544df10"
        },
        "item": {
          "id": "bfd26eb1-0d7f-4fa1-9064-6078be774f90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ed2dd2b-8460-4275-a5d3-27570a88adb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148dcf27-a521-430b-9972-21bf429c17f8",
        "cursor": {
          "ref": "a683daf0-d79f-4228-97a3-1a2a1b024576",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "228961ac-e461-4976-9cc8-7bc1a053386c"
        },
        "item": {
          "id": "148dcf27-a521-430b-9972-21bf429c17f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c3a193f0-3f92-4dca-b1a7-fac78c001c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf96356e-5f57-41ac-aa64-04d76aa413b2",
        "cursor": {
          "ref": "6567d347-fd68-4084-b7fc-66d1f6e93593",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f781a8d4-c755-489d-9cd8-5d416eeef1aa"
        },
        "item": {
          "id": "cf96356e-5f57-41ac-aa64-04d76aa413b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83963fae-b319-436d-8a1c-68092319fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187079f6-3f9e-434b-880d-57109c110cbe",
        "cursor": {
          "ref": "03cc419e-8ad9-49da-9855-696dfa552fc6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0b7efb37-0c18-4a7c-bdfe-2be655829e67"
        },
        "item": {
          "id": "187079f6-3f9e-434b-880d-57109c110cbe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f5858ef8-aecf-4e6f-9619-ee64e11fd948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351f969f-f2f7-4104-bf60-bfbf93130341",
        "cursor": {
          "ref": "e3da2a9c-78b0-4d47-bc19-ffa0ac6d43fa",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8ab7bc78-b5d9-4e22-a212-4571eb6d2b22"
        },
        "item": {
          "id": "351f969f-f2f7-4104-bf60-bfbf93130341",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6e9cb007-8cfd-40bc-bec1-dfff82854b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9de056-533f-40c8-9b35-d31200de4bbc",
        "cursor": {
          "ref": "52cff7af-dc8c-4835-8927-9e3790191fb3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8832f2ca-72ed-40b3-b7a4-34c30c56cc21"
        },
        "item": {
          "id": "1c9de056-533f-40c8-9b35-d31200de4bbc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "03cadb55-eee3-4b03-93a2-d6d6fa6bbd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c57a4c-fc86-4e69-9a2c-473e4cd87a16",
        "cursor": {
          "ref": "8c1eb95a-2dee-41d8-be61-7599884785cc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "515d3a51-f135-465d-b8d0-ed97c44c169d"
        },
        "item": {
          "id": "f9c57a4c-fc86-4e69-9a2c-473e4cd87a16",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fe8eb3b0-454a-49bc-9c1b-822fda88f881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff040b4e-72a4-4cf1-b965-66ca06f3c025",
        "cursor": {
          "ref": "8395f5a3-7669-492d-8ebf-fa4f9aecefc5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "694df07b-b39b-4986-a910-6d23c30456c8"
        },
        "item": {
          "id": "ff040b4e-72a4-4cf1-b965-66ca06f3c025",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "32c6ae2a-3372-4673-982d-a0728ebf6480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5655f846-9fd2-44de-b9c4-7ab97c8bf1bd",
        "cursor": {
          "ref": "4177df5d-10ec-4f43-8f58-e1931470781d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a682ef0d-cdfc-447f-8a8e-c04cdf10141f"
        },
        "item": {
          "id": "5655f846-9fd2-44de-b9c4-7ab97c8bf1bd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d0095e7-af9b-4208-8bf9-d474e58e7d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c81c665-158c-4e4a-94da-93a025c8e868",
        "cursor": {
          "ref": "21e37b52-7834-4f76-b349-7f2267e2a0ca",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9e78e596-3876-4daa-8b82-0eea5e26dd19"
        },
        "item": {
          "id": "7c81c665-158c-4e4a-94da-93a025c8e868",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c9cd091-6a85-4a9c-8259-c45c0a058fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a8e2f3-0e08-4238-9c68-8bf4d8a5ff83",
        "cursor": {
          "ref": "63168ad9-abfc-4426-8a29-de3e817db7aa",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f5eebf82-3931-4aad-b963-0454ad55332f"
        },
        "item": {
          "id": "e8a8e2f3-0e08-4238-9c68-8bf4d8a5ff83",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff225d07-3951-4cd4-adbf-e6d383a45366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03df6841-8ffe-4992-9527-0928d4b91ebe",
        "cursor": {
          "ref": "0671d6b7-53c1-4ea5-9d55-f660846806a7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bbafbb2c-2507-44f4-813d-3476e28e1be1"
        },
        "item": {
          "id": "03df6841-8ffe-4992-9527-0928d4b91ebe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3ba7e618-9313-46e0-9c34-3d057d98b9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61519c6-dca3-42ef-b945-7af70286d885",
        "cursor": {
          "ref": "3b52fe98-3fa1-4e6c-a75f-e3c4fd93a1af",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5ea65b6-4aa7-48ea-b051-f5e30d682935"
        },
        "item": {
          "id": "c61519c6-dca3-42ef-b945-7af70286d885",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "143ca231-e557-4d9f-a40b-90889e108c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37185f34-f200-4a49-8804-beef928321a0",
        "cursor": {
          "ref": "c2a807aa-a7c8-4bdf-b65a-2404ac629396",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "da96668f-a2b6-4f85-88b1-c3b2b4556394"
        },
        "item": {
          "id": "37185f34-f200-4a49-8804-beef928321a0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "253ec105-ae27-490d-8e20-b2381589d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed95dc3-5e4b-42b9-b584-9cea85a3b014",
        "cursor": {
          "ref": "3744cca3-b212-4dc5-9fe4-555c7b42c477",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5df2e642-8b0a-4ca1-a5de-af4f0207d058"
        },
        "item": {
          "id": "5ed95dc3-5e4b-42b9-b584-9cea85a3b014",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b96d456b-0bbd-43cc-8d1b-af3526f800a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dad862-9149-46df-9bb3-12942433f29b",
        "cursor": {
          "ref": "441ef132-d0fd-4ade-b17b-24479e2d8373",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2723c99d-8ca1-467a-a98b-d5381ad5ce4a"
        },
        "item": {
          "id": "36dad862-9149-46df-9bb3-12942433f29b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "716d97d9-ed61-4ecd-a157-58d4108889fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095fa7cc-e238-48bc-a2e6-affddb73bc1b",
        "cursor": {
          "ref": "dc012a7a-8648-40f4-92b9-0c6888d91f49",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "77d4c250-4654-4a4f-acab-8d04edadce2a"
        },
        "item": {
          "id": "095fa7cc-e238-48bc-a2e6-affddb73bc1b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9a3609cf-9b5a-42fb-9566-6d4dfce999e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13430741-9938-4cb7-8a9e-49173e1cd0ec",
        "cursor": {
          "ref": "38cd5961-c177-4e84-964c-8a9e9bcacc60",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dc9d7ce6-81ea-46a9-becc-7028c08c822e"
        },
        "item": {
          "id": "13430741-9938-4cb7-8a9e-49173e1cd0ec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "82aac6a6-037b-4c2b-9f79-3c7c63a2454c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308502af-d281-468a-a720-b8d628bbf6b3",
        "cursor": {
          "ref": "13c6d618-d307-43d7-91e1-b3a6b1247fa7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cf1338a0-4f9a-4771-aa6e-065fb498c6f0"
        },
        "item": {
          "id": "308502af-d281-468a-a720-b8d628bbf6b3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6c7b4cb5-6f3d-41fd-8441-4a4ac48001b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82173de7-241a-4d86-9e08-4ad2efd81621",
        "cursor": {
          "ref": "ceef85b4-d837-4c61-b52d-d7ad0541e488",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f2c451b0-1c9b-4214-aa8e-c9fb1523813e"
        },
        "item": {
          "id": "82173de7-241a-4d86-9e08-4ad2efd81621",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cad2289-6810-4309-84fa-5d6d8c38291a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bfaae5-a1d8-474e-9777-ac94a2190b58",
        "cursor": {
          "ref": "d1804b43-912c-445b-ba41-715eb7689822",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6ae6a5dd-d1dc-413e-9c9f-174be6c6d44f"
        },
        "item": {
          "id": "67bfaae5-a1d8-474e-9777-ac94a2190b58",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0678ba6-31cf-44cc-9b12-c60c62ef712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c864c0c-0674-4253-a066-b44df5a2e768",
        "cursor": {
          "ref": "9b366b45-7745-4db4-b8d7-7b2c8d5edc9a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8d3a328f-8235-453b-9c72-a8ad9eaeabf8"
        },
        "item": {
          "id": "1c864c0c-0674-4253-a066-b44df5a2e768",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "12a9f23c-1110-4eac-aaf5-76f1b814188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b54414d-858c-400e-9bef-f93776fda900",
        "cursor": {
          "ref": "a18bebd8-ac36-418c-b132-de1b00e9145b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b9b2e656-36ca-4662-b8ed-a05638a8b843"
        },
        "item": {
          "id": "3b54414d-858c-400e-9bef-f93776fda900",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "77a0e99b-1340-4fb5-aee3-463fb5dd710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bc9ae8-9289-4f3a-b861-051f7c441448",
        "cursor": {
          "ref": "aacb5e03-9315-47df-94f3-02479c6f55ce",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "00feb67f-8c17-421b-8587-c4885f835a3b"
        },
        "item": {
          "id": "92bc9ae8-9289-4f3a-b861-051f7c441448",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aeabb0d7-ab32-4cfd-97e8-1745165a5893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c62d8cd-8916-417c-91a0-e16e07fb7717",
        "cursor": {
          "ref": "2d014811-0fca-4126-a3c3-3bd58aa3e10f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "85045097-a93e-499e-90f2-dbab357a0ca2"
        },
        "item": {
          "id": "4c62d8cd-8916-417c-91a0-e16e07fb7717",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d023af87-dc3d-42db-973d-332f00b1d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6d2751-34f3-4b43-9ecc-6df55fc42108",
        "cursor": {
          "ref": "7ec2738d-f664-4b9c-8bd2-b92a98de6f39",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f5455fa8-13dd-4fad-965e-b3f6a9267181"
        },
        "item": {
          "id": "8b6d2751-34f3-4b43-9ecc-6df55fc42108",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf865cea-707c-4e2e-aa67-a06f79586b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8636c23e-4c3e-4794-8d78-b3bd85c8404e",
        "cursor": {
          "ref": "b7c2e386-6cf4-4ce9-8ab1-146c44a22e15",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dd3a9738-0933-4048-825e-728976ffcb7e"
        },
        "item": {
          "id": "8636c23e-4c3e-4794-8d78-b3bd85c8404e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7d20e416-7944-4ad2-94a4-dc1e420c6519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c79809-1f4a-42a3-8ba3-431967db3039",
        "cursor": {
          "ref": "52794702-02a9-44f9-8f8b-0abf51a48bdf",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "be96bb05-3122-46a6-97c4-164fa788cdb9"
        },
        "item": {
          "id": "79c79809-1f4a-42a3-8ba3-431967db3039",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9f3bef76-745e-40b0-abfd-b5c387748493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2044b21-252d-4480-b3dc-4fb935cf02b9",
        "cursor": {
          "ref": "e6033b7e-6167-4ce5-938c-8125bd38bb52",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cd290e00-85ce-40aa-81f1-b3f32df2c03d"
        },
        "item": {
          "id": "c2044b21-252d-4480-b3dc-4fb935cf02b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aeedcee3-7dbf-4edb-8faf-4a4d55464ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dee3b1-99f1-4e94-afe8-ea5a0c59107d",
        "cursor": {
          "ref": "3d80c39a-acc3-4e4a-a5e3-cc500918c25e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cdb1ffc9-c642-47c9-9716-f641bcd82b6c"
        },
        "item": {
          "id": "f8dee3b1-99f1-4e94-afe8-ea5a0c59107d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "120e7cb8-7f52-425e-835c-bccc5d8c137b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed66fca-02ca-4b01-90b3-4eca27766149",
        "cursor": {
          "ref": "0ed6d1c2-fdad-4b35-bb7a-1188d4ed2301",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8473b6bc-ce2d-481b-b4e8-68636279fd29"
        },
        "item": {
          "id": "4ed66fca-02ca-4b01-90b3-4eca27766149",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "760a629e-d539-4a4f-a6e6-437bdd19d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95069872-a56f-4ee6-bbb0-5ae6c529f6b7",
        "cursor": {
          "ref": "d9b9a5c8-4149-41d4-a5d4-46941e23f393",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ddc002c2-6615-4033-b201-4a4bfb46a75f"
        },
        "item": {
          "id": "95069872-a56f-4ee6-bbb0-5ae6c529f6b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c7288a2-a656-40fe-a4f9-c89df3b2d520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5436de32-5dab-45fa-9241-a4de9e5c3afd",
        "cursor": {
          "ref": "2106baab-cc84-48ae-a213-f1a3564d07af",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44ab998a-5ee8-428f-a18c-b446e33a78a7"
        },
        "item": {
          "id": "5436de32-5dab-45fa-9241-a4de9e5c3afd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14ef7ca1-a992-465c-be2b-a748cdd29464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab406ee1-1621-46b7-b34e-5d690d87fda2",
        "cursor": {
          "ref": "7a2b12dd-dbc1-42dc-9f5c-45c8a5a60c5e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6b2f41e7-31ca-4886-bead-2f53cc9a2ab8"
        },
        "item": {
          "id": "ab406ee1-1621-46b7-b34e-5d690d87fda2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db388f6e-46f8-4ef5-a76b-f1e5200b6240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb68ea-5a33-4fa6-9f05-c0e3a8ecc788",
        "cursor": {
          "ref": "cdf83582-0190-4ebd-b1ec-5d96e3c3d17e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6217f769-25b2-467f-af99-83b9879b015b"
        },
        "item": {
          "id": "4cdb68ea-5a33-4fa6-9f05-c0e3a8ecc788",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e72a0cb7-14cb-4a82-a925-7561ab3c03a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3768f73-7645-417c-b0a1-edc4d68f8182",
        "cursor": {
          "ref": "1061a680-060f-4380-bbd9-68982d881c95",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3a41fed0-85b2-4e23-a9ef-7b2985090ce3"
        },
        "item": {
          "id": "a3768f73-7645-417c-b0a1-edc4d68f8182",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b5c26835-550a-4b55-ad68-dc1cd7fbd871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c36662b-32cb-4b40-a8f6-e823b1d0dd4a",
        "cursor": {
          "ref": "0fcc9cb6-a97e-4808-bab0-b343b58881c6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a96fd89e-cd55-4c3f-a0b0-9e8437c36118"
        },
        "item": {
          "id": "0c36662b-32cb-4b40-a8f6-e823b1d0dd4a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b070aa7-da27-45f9-8283-5e9457a8b8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4232e8-070b-43e9-bfdd-11947e4524fe",
        "cursor": {
          "ref": "ec5e4852-da7c-42ab-9430-299da1959d51",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "13217c2a-903d-4f74-98a8-d7f12f505f1d"
        },
        "item": {
          "id": "2f4232e8-070b-43e9-bfdd-11947e4524fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5598c45a-6239-49ce-8053-e95bd9731c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337d04e5-45c6-4e5e-aa58-079f35f56861",
        "cursor": {
          "ref": "92859f99-93db-47e9-b38e-82e15de51bb8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ab4a1b00-38d8-429b-8db5-7f1e191ba0fb"
        },
        "item": {
          "id": "337d04e5-45c6-4e5e-aa58-079f35f56861",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e0f19ee-f556-4f1d-b90d-eed9ff8efd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a612a0f-2d20-4625-8059-932daff690e7",
        "cursor": {
          "ref": "6b8d0bc2-0647-4b24-b78a-3d4b0217e1ad",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5e3936f7-50ec-4d93-ad78-503a5bb6c4d4"
        },
        "item": {
          "id": "0a612a0f-2d20-4625-8059-932daff690e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d88932f2-c367-41c1-af71-21499641b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a04be1-0749-4a56-b5d2-5f554e0cdcf3",
        "cursor": {
          "ref": "0095268c-5eca-4cfb-ae5f-0c433a697864",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "074f6e5b-3a14-4da7-828e-dae9430f565f"
        },
        "item": {
          "id": "24a04be1-0749-4a56-b5d2-5f554e0cdcf3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5d3583b3-c3b1-4ca3-97bd-40d23166fdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc40b0dc-2735-4546-a567-7a8ac9469ac5",
        "cursor": {
          "ref": "3ef61e8e-c72f-4730-8825-6866d233eaae",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b2587738-cf58-43c3-80a2-3d70e88a8532"
        },
        "item": {
          "id": "cc40b0dc-2735-4546-a567-7a8ac9469ac5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a67a3cd7-8886-4cde-a9e7-3041bca84803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44c8dd3-4666-4ebd-a885-568f92a051b8",
        "cursor": {
          "ref": "ddcaf38a-98fa-4e65-ac9b-a1a802efd850",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "178ee490-95c6-4565-a92a-b81fb425d85c"
        },
        "item": {
          "id": "f44c8dd3-4666-4ebd-a885-568f92a051b8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cd679b0b-75ad-477f-9445-d3348c095e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c11c494-3071-4f4a-a991-314f3430d1d4",
        "cursor": {
          "ref": "63f1f672-a22f-4435-a35b-0ad4e107c91e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d09a1194-ae62-416e-9f82-326e94782585"
        },
        "item": {
          "id": "3c11c494-3071-4f4a-a991-314f3430d1d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "81ffebe6-eba3-4704-afc8-738834b39dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe8e334-ba13-48ed-9b9d-9b849fca36b0",
        "cursor": {
          "ref": "fe0c4561-d32f-45da-aea8-11ba68d638c1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "af22a0f2-6a6a-43cf-8a2a-52afefc37e7a"
        },
        "item": {
          "id": "fbe8e334-ba13-48ed-9b9d-9b849fca36b0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c0ae14bf-5b37-44c7-a68f-360a62f708a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740f0920-1553-423e-a53d-d73a68e6836e",
        "cursor": {
          "ref": "3f7d9ca5-8b7e-4f5c-abc3-66db946e458e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9dec62e7-d19f-414c-930f-c0941d1d8fa3"
        },
        "item": {
          "id": "740f0920-1553-423e-a53d-d73a68e6836e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39af0332-69f6-497d-9446-8f116908dfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f61ad-cb13-4a23-b1ac-e2dba25feb61",
        "cursor": {
          "ref": "bcaf1732-4d63-44e9-b847-828d50c369df",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ad7104c1-459c-43f6-bdb2-74b6bad4d6d7"
        },
        "item": {
          "id": "981f61ad-cb13-4a23-b1ac-e2dba25feb61",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "63c4e199-98b7-44a0-9c5a-81ed829cba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84cd660-3a75-4e4d-a6f5-95e058cad916",
        "cursor": {
          "ref": "b0d3299b-eb66-49cd-971c-30c7dd40db22",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d9b58abc-bc40-4f1d-a43c-33b04decbd9f"
        },
        "item": {
          "id": "d84cd660-3a75-4e4d-a6f5-95e058cad916",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "962db3aa-5325-4f7a-bf97-a41d9beb60b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51cc610-7446-45f7-b952-64022f74dc8b",
        "cursor": {
          "ref": "76f75d20-1a03-4f3e-9f77-184391b807c1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ffbe42c4-622b-4b94-8949-e6a1f8ed563e"
        },
        "item": {
          "id": "c51cc610-7446-45f7-b952-64022f74dc8b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9e632e3b-4cff-4326-a331-162f4bb72cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7e09ce-d974-4a09-8fc0-11fcede847f2",
        "cursor": {
          "ref": "b748b74c-3a81-4726-a78d-1db8ab16c9eb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "450293e6-f4c0-4406-ace7-b4acf7320948"
        },
        "item": {
          "id": "6c7e09ce-d974-4a09-8fc0-11fcede847f2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5e4a9551-8e74-44cb-bc4b-a2211c360744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70317949-0975-4dcc-b69f-23e38f76e89f",
        "cursor": {
          "ref": "68463295-31da-4692-9aaa-7ac29a093af0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6cc39962-1ebf-463a-be39-e98d9d39cbae"
        },
        "item": {
          "id": "70317949-0975-4dcc-b69f-23e38f76e89f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3ad5ebbd-9393-4880-93aa-49d160ee5323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c816cf4-fcc0-4a10-b642-d893c19d33d1",
        "cursor": {
          "ref": "2e6c1c1c-ff63-40b8-98d3-3ed064981bd6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "508192be-e51f-4c50-af87-bbaffc78874e"
        },
        "item": {
          "id": "1c816cf4-fcc0-4a10-b642-d893c19d33d1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "04ef450e-0964-48dd-a3f2-63cddf7b0bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf5bb0c-62dd-4edd-9f51-ac245c5dcb03",
        "cursor": {
          "ref": "f4bf04cb-3473-4f92-8812-bb68ca078a96",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eef6cf18-b1c7-4f64-be28-59221ec53a4f"
        },
        "item": {
          "id": "acf5bb0c-62dd-4edd-9f51-ac245c5dcb03",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "12b3136e-4748-400c-85a1-da9e1cebb7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729d6122-88c4-4f51-86f9-134c8a9be020",
        "cursor": {
          "ref": "a04cb428-c664-4360-88be-75f78640541a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e6c64fbc-bcb3-4d97-bd11-d8fdb0d0dd7b"
        },
        "item": {
          "id": "729d6122-88c4-4f51-86f9-134c8a9be020",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ae76d8f3-0c7f-4fc2-aaab-e14526159683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694c3ad2-233c-4f49-83b4-df00e904a1b9",
        "cursor": {
          "ref": "d039f37b-c2a4-42be-a611-2faf9b7eb55d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ccff8bde-4009-45b0-8484-06f8e245e16f"
        },
        "item": {
          "id": "694c3ad2-233c-4f49-83b4-df00e904a1b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ef0e814a-26b3-4ad1-a00e-eeab47dacbaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf168b49-582c-42aa-b3a6-cf55f95f5d2c",
        "cursor": {
          "ref": "84004339-fcda-4f45-976f-a2e994511853",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0012b6e7-eb95-4e79-96a0-d759b41f652e"
        },
        "item": {
          "id": "cf168b49-582c-42aa-b3a6-cf55f95f5d2c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5040479-8098-444f-82f8-c63637899bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51c3891-094b-4cdd-ad3c-a19928ecf44a",
        "cursor": {
          "ref": "eb06bf50-4a36-46dd-acb8-cecd9ead1172",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cc1bcd61-bb16-46bc-803b-3a686d22ce4a"
        },
        "item": {
          "id": "a51c3891-094b-4cdd-ad3c-a19928ecf44a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e869e5d7-d2cb-4112-98c6-4a84b12f0020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe6ee0b-e6db-4bd4-a70f-3f5e87ff8369",
        "cursor": {
          "ref": "904e9b79-d89e-4368-85aa-4583cd07b307",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "560fdb88-e337-4ebc-897e-6649b4206fd6"
        },
        "item": {
          "id": "bfe6ee0b-e6db-4bd4-a70f-3f5e87ff8369",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bb52552d-9845-497e-961c-9ac881f608d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a6298e-847f-4cd0-87df-49460da54d51",
        "cursor": {
          "ref": "ad15e641-a75a-468b-9d0b-a3d970704c45",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8bd96d24-c27c-44d7-8951-bd8135f11347"
        },
        "item": {
          "id": "93a6298e-847f-4cd0-87df-49460da54d51",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9f391ce6-542e-46f1-bef7-de8c287c16bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75afffaf-dfb5-4f58-ace8-a1e09f66ef8f",
        "cursor": {
          "ref": "663fa5af-38c0-46c8-9b75-9ce873b8da4a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6628c22c-258e-4297-9b96-ccf7001af54e"
        },
        "item": {
          "id": "75afffaf-dfb5-4f58-ace8-a1e09f66ef8f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9d5ec9d6-34e2-486a-9681-8b7cd173d9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c6a40a-d4a7-419c-a6b9-512e23551386",
        "cursor": {
          "ref": "a944ff37-9cd0-4fec-b1f8-6f5d4c4a793e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "595904a4-0abc-4085-adc6-61c77444f402"
        },
        "item": {
          "id": "81c6a40a-d4a7-419c-a6b9-512e23551386",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b19fb1e-627f-48f3-9a07-ebf425722c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9128841b-f86b-46ff-aab7-b2eaf2030cba",
        "cursor": {
          "ref": "1f4fd531-a11b-4172-883a-b2a05073d99a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5001a7bd-7513-46d0-9493-bf2c94763682"
        },
        "item": {
          "id": "9128841b-f86b-46ff-aab7-b2eaf2030cba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7e78fc4a-cfed-437a-9b0a-26b08d3a3cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f1dbf0-9e60-4955-aabe-c1e6fb088a8a",
        "cursor": {
          "ref": "a170f0c7-ec0a-4020-9b35-284f4e089796",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2ed26784-f2be-46a1-86fb-8504215ec169"
        },
        "item": {
          "id": "94f1dbf0-9e60-4955-aabe-c1e6fb088a8a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ca293701-561c-4bd9-8c25-5b583af47bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6dd9d0-7c33-4868-a1cc-886359e2379e",
        "cursor": {
          "ref": "cc8c3ec9-f8d6-47c5-aae2-d6512b55f0c9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d7fe5937-769f-4c05-a8d0-86fcf19f2e98"
        },
        "item": {
          "id": "9f6dd9d0-7c33-4868-a1cc-886359e2379e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1f40a317-bf06-439f-ba14-a8a391946eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d76033-7ef7-4b32-9a1c-6a3149590b06",
        "cursor": {
          "ref": "8b2d6f69-a9cc-4a56-9aa4-d222ea8b3b0e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "11a42c1d-03a7-4378-98d6-015d9fef3db0"
        },
        "item": {
          "id": "f1d76033-7ef7-4b32-9a1c-6a3149590b06",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b07b460-9432-48ba-b7bf-4b759ab3a603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5351ec25-dbec-4999-af38-d98d6e4f1c76",
        "cursor": {
          "ref": "18a8c154-a651-4365-8b2b-bf1592ff3185",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "05395a0b-b1ec-4bd4-9925-2f17d8d3e420"
        },
        "item": {
          "id": "5351ec25-dbec-4999-af38-d98d6e4f1c76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "825dfd2d-c1fe-4260-95be-4cf0fc8917a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2e8ccd-295d-4ba1-9359-d09729ad80fd",
        "cursor": {
          "ref": "85adc0cf-6acf-423c-bf64-b8befc76be17",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "de5d1de1-c5b8-4949-8d2d-84b5216b1690"
        },
        "item": {
          "id": "de2e8ccd-295d-4ba1-9359-d09729ad80fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a2a2378-c217-48b5-b247-e3f6c2c1f1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6ce257-7da7-4fd3-bf6e-b6968deb9fab",
        "cursor": {
          "ref": "a4af03d5-3b79-48e8-8a7e-d4c117d8dd0d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "063f7d52-6be3-4e55-b748-bd19611b0ca4"
        },
        "item": {
          "id": "3a6ce257-7da7-4fd3-bf6e-b6968deb9fab",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "618bec57-cc45-4ad6-8d62-6fd375012dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94468aa7-0375-42ca-8a86-b409a6622f33",
        "cursor": {
          "ref": "ae937f4e-38f9-47d1-804d-d65ce42e1037",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9267643b-2781-4bbd-bca4-a6f5723b9726"
        },
        "item": {
          "id": "94468aa7-0375-42ca-8a86-b409a6622f33",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "76ca76ce-9382-401a-9f39-2c934dbfe0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2102d093-0389-48a8-a73e-d2f2d5510e93",
        "cursor": {
          "ref": "1651c720-835d-45af-8678-03db4ac678ce",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a35f6f82-b7a0-42da-b899-9f35717fce7c"
        },
        "item": {
          "id": "2102d093-0389-48a8-a73e-d2f2d5510e93",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a4cc0fcb-538c-40a6-8feb-b581793390f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6217a9d-224e-4d87-8297-4cb1c99cbd40",
        "cursor": {
          "ref": "7e9de939-631b-4c94-8bf1-0fb579572f5b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6784ce96-1fea-4332-aa79-719f90d09da2"
        },
        "item": {
          "id": "e6217a9d-224e-4d87-8297-4cb1c99cbd40",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2e2a6408-e186-4f88-bb84-139841cfae54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e029b-2911-4dd7-a637-1d5095f4c990",
        "cursor": {
          "ref": "42915300-65bb-4ddb-b4f4-be1c15964738",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "30dc46bc-18b6-4c54-8119-aea339329af0"
        },
        "item": {
          "id": "8c3e029b-2911-4dd7-a637-1d5095f4c990",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4498bdfa-1422-4f8b-a967-c854ad4d5b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc1254d-3e7a-4fd5-b5f6-23af358aa45c",
        "cursor": {
          "ref": "825f80b9-c6f1-4666-8c5a-df74f4c6f793",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "094aee2f-3d54-43cb-8322-e7a9d75a340c"
        },
        "item": {
          "id": "dcc1254d-3e7a-4fd5-b5f6-23af358aa45c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "615f2fd7-347b-423b-b8da-fbae3f13d015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e46506b-5b8d-4106-8ace-d5a9210481e8",
        "cursor": {
          "ref": "12193a35-a48e-4d04-ba0c-cdaf6dfc53bd",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "be5e3ee6-a517-4a65-9968-85e8d7be5289"
        },
        "item": {
          "id": "6e46506b-5b8d-4106-8ace-d5a9210481e8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "08537e1b-5b99-4f34-a8f5-c53cf9397a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a333ce-3510-4288-b5fe-4c00ba87e756",
        "cursor": {
          "ref": "c9ad6840-b2dc-4227-a92d-73191ccfe02c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "be4ac3fb-191b-4712-8674-477b1b5e0c2b"
        },
        "item": {
          "id": "64a333ce-3510-4288-b5fe-4c00ba87e756",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e72d455c-9a13-4ed4-8550-1bb1a2d4f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e437e556-659e-4ced-9411-5d32f486c7ae",
        "cursor": {
          "ref": "be7f9241-ce7b-4cf8-adb4-3a9079ccf659",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a40b6867-232b-4c28-bc36-aa3060248133"
        },
        "item": {
          "id": "e437e556-659e-4ced-9411-5d32f486c7ae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8bdc07ad-d8d7-44ae-9232-844449a1c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce86ed4-1961-47d8-9322-afb6c9e9ab5c",
        "cursor": {
          "ref": "cc93edcf-6d74-4cbf-99c4-1d1a93667bb9",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10785724-0fb9-4467-b426-2c4688c6d11e"
        },
        "item": {
          "id": "6ce86ed4-1961-47d8-9322-afb6c9e9ab5c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "29dd338a-d344-498e-a3db-90a340a18c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf52ff18-c27d-40e9-9046-a8b62698e208",
        "cursor": {
          "ref": "5d871f76-a6f0-4f18-b860-dafd1a0b18a9",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "86bd47bb-3181-4fa5-8228-7c621d93b39f"
        },
        "item": {
          "id": "cf52ff18-c27d-40e9-9046-a8b62698e208",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5655d77c-063e-43ff-ae5e-ed4dc7b2d568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f636c143-9b37-4995-9b58-7d99e2dc169b",
        "cursor": {
          "ref": "784f8179-90d1-4e9b-b910-ced184b11a53",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b5a5b6f-6e7c-497c-9e3d-41e288d67c6c"
        },
        "item": {
          "id": "f636c143-9b37-4995-9b58-7d99e2dc169b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8a59e63d-594c-4df1-9a51-89ee76cb5c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2517c4-8d50-4540-9b85-97a5da1be8e2",
        "cursor": {
          "ref": "fb2c56e8-5cd3-4d44-b0a3-086e3c060926",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b9838f81-dc9c-43e3-8931-50fe58d62162"
        },
        "item": {
          "id": "0e2517c4-8d50-4540-9b85-97a5da1be8e2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6ebcd351-0d8b-4f7f-b19b-b18aa60f785c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2ba078-cf6d-47e9-b8d1-c8400237b83a",
        "cursor": {
          "ref": "81c1e595-85b2-43c2-9f1f-88e2a9df5bbc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7f13784c-5df4-46fe-b8e8-9bc448144c54"
        },
        "item": {
          "id": "1a2ba078-cf6d-47e9-b8d1-c8400237b83a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0b3fd5f9-5311-42ff-bb21-18c3355b2dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e944873f-4791-436e-9904-eba9c6157694",
        "cursor": {
          "ref": "b74f751b-5c2e-44a8-9d87-b6a2f88b8717",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "74d9a1a5-6265-496d-957f-8e91f84d03d4"
        },
        "item": {
          "id": "e944873f-4791-436e-9904-eba9c6157694",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1aa4fb11-e32b-49d1-85ca-626915250fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a26a9a-183a-40b1-a975-59a51a11ab06",
        "cursor": {
          "ref": "23ea9723-8897-4d92-8339-30a7d485d685",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1eac9681-6be0-429a-9a68-ed5d6c329aaf"
        },
        "item": {
          "id": "30a26a9a-183a-40b1-a975-59a51a11ab06",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bacfc5dc-9c9c-4f1e-a04f-5a6f2a26beb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e829f682-6003-4441-a642-a3065d729c87",
        "cursor": {
          "ref": "1d09f98b-0515-4f89-a3df-5c80ed672ce2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a197114f-643c-446e-a42d-25b4894cb8f1"
        },
        "item": {
          "id": "e829f682-6003-4441-a642-a3065d729c87",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9f38eed0-36ff-440b-87fc-86fee25af035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f17a939-68cd-4e8d-aa3a-0de7eca30267",
        "cursor": {
          "ref": "53c46820-2cd2-4e0c-a3d4-62ae07399b70",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dcc97cea-eaae-4989-bb1b-44fa1ac9ac08"
        },
        "item": {
          "id": "7f17a939-68cd-4e8d-aa3a-0de7eca30267",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "23430e5c-466b-4f5e-a74b-b7376fa7c7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cb19d8-0027-4828-8311-a95f44810adf",
        "cursor": {
          "ref": "e9d7339b-af9c-45eb-99a8-4442cec6ec64",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5c95e054-8ef3-4cb8-9c38-454aeab730e6"
        },
        "item": {
          "id": "06cb19d8-0027-4828-8311-a95f44810adf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9974178b-2cbc-46d7-9610-69231eb91582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c029ee96-2bb4-4ef3-b9dd-55d490d8c7d6",
        "cursor": {
          "ref": "885030e4-3dd9-42c8-8502-cd4d183a1474",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "03a558f5-cd43-4c40-a1d0-f61cbdaf47b0"
        },
        "item": {
          "id": "c029ee96-2bb4-4ef3-b9dd-55d490d8c7d6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "94066cad-11a7-4a45-892a-e2fb072737e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910ac9b3-3e7d-4706-9c56-516e58aeab2e",
        "cursor": {
          "ref": "156242dc-1222-422d-898b-abcba8298f89",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b24f38d0-b008-4a4e-a035-fac847284158"
        },
        "item": {
          "id": "910ac9b3-3e7d-4706-9c56-516e58aeab2e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4070b759-f1d3-441a-aaf5-1ecfa5d39466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9028cc47-0433-4736-8132-2ba847c56a66",
        "cursor": {
          "ref": "765df174-2417-48af-b771-6eb152625d60",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "05a92bd4-75d0-4f35-bfe0-418c6d695b50"
        },
        "item": {
          "id": "9028cc47-0433-4736-8132-2ba847c56a66",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f6a4c140-4c65-4593-ba5b-060184c5b8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17540d50-71a5-404c-9a19-3a173e619fca",
        "cursor": {
          "ref": "b72203c3-70a0-48ea-bfa6-b0901c3f1040",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "447707db-0581-46c7-8e0e-179c85be5a73"
        },
        "item": {
          "id": "17540d50-71a5-404c-9a19-3a173e619fca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8f7ea5d8-335d-40f3-bd31-8f78f291822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeb802f-f17b-4618-8e1d-15afc9ae562c",
        "cursor": {
          "ref": "36793518-b97d-4f46-b269-9b7e690d2d91",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cdc45aea-6318-4af3-b7ce-5df3a486affe"
        },
        "item": {
          "id": "ffeb802f-f17b-4618-8e1d-15afc9ae562c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f32ee279-43cb-4837-ad0b-1f5080b519c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2e5244-27e5-4332-bad4-f8747012edf0",
        "cursor": {
          "ref": "5d4f7be9-e8de-4404-a5fd-4ca402710389",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f013ee83-c848-42af-afad-651fcc3b52c1"
        },
        "item": {
          "id": "3a2e5244-27e5-4332-bad4-f8747012edf0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2ea8a2b3-e52a-4107-88c1-aa64a05f98b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7d9f9-7a45-4925-b805-8d387f54312c",
        "cursor": {
          "ref": "d0dd9c04-f650-431b-b19d-2d54055a2d7c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c8835597-fb6b-4a64-b09f-25fa0df4e1af"
        },
        "item": {
          "id": "5cd7d9f9-7a45-4925-b805-8d387f54312c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df16e48e-059c-486e-971b-2b31c943683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f15dff7-0ae5-45fd-9420-d883c17f9733",
        "cursor": {
          "ref": "1bc59635-87e1-44da-ac0b-327dda0f8305",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fe7cab79-9ca7-4e5d-861e-3b41bfabd636"
        },
        "item": {
          "id": "8f15dff7-0ae5-45fd-9420-d883c17f9733",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cdd8470d-7a74-464b-85dd-35dc3786b3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5da928-c476-4929-868d-ffca2b2a099a",
        "cursor": {
          "ref": "9ead3757-2c7e-470d-9977-ae036011e4e3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a2c2a90e-a793-4c64-8a86-5025e06a523e"
        },
        "item": {
          "id": "0c5da928-c476-4929-868d-ffca2b2a099a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "599a2721-a2d6-4ede-9487-a86e590fcbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2756f997-5757-4ab0-8138-4918bb27e516",
        "cursor": {
          "ref": "5c3fd71c-d9fb-403b-a548-d2177140e02c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "556abb07-5687-4a8f-964e-fb0fa2d48a02"
        },
        "item": {
          "id": "2756f997-5757-4ab0-8138-4918bb27e516",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd34f69e-5af1-4dc1-9f39-7323d56e2bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd1435c-1f70-419d-95f1-13b0fd4a9398",
        "cursor": {
          "ref": "436bfd3e-6834-49f2-b76a-8d8497524313",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ea0258d6-ecc5-4a8e-be8d-643c456cdf6b"
        },
        "item": {
          "id": "8fd1435c-1f70-419d-95f1-13b0fd4a9398",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "71204f87-9f1b-49aa-a068-5172ee03977f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af3ed6-dbc2-4be1-a24e-41190eb95ad1",
        "cursor": {
          "ref": "60f83bd9-6c7f-4178-b26b-4acc24bb1fa3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d7f39c6c-0a73-4d95-b6a2-2a25be931f2d"
        },
        "item": {
          "id": "b7af3ed6-dbc2-4be1-a24e-41190eb95ad1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f364bef5-a999-4277-9852-436123a1bd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8fc34d-23b1-4708-805f-146d2ad3b54a",
        "cursor": {
          "ref": "c3b4c946-fd84-4bcf-b225-1086ad6ad62c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4212bb4e-355d-4346-8416-4f953f61575d"
        },
        "item": {
          "id": "0a8fc34d-23b1-4708-805f-146d2ad3b54a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b2d1a6e5-ff8d-4599-bcb4-06ce24eec4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02191e9-2891-4450-91ee-5a7a349dce07",
        "cursor": {
          "ref": "7ca535ea-bac8-4e89-b9be-d5f8413c46b3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9e2a2632-a94d-4d4e-a1b6-cbe0313d5e78"
        },
        "item": {
          "id": "c02191e9-2891-4450-91ee-5a7a349dce07",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3bf2e984-ce2f-4859-a388-cf3953b5f8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59016ea-15dc-4603-b47b-ad9a2abd777a",
        "cursor": {
          "ref": "c710c5f2-f5e9-4843-97e7-e81c87ffb711",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8ac25f2e-91e9-42fc-ab98-05828d4d507e"
        },
        "item": {
          "id": "f59016ea-15dc-4603-b47b-ad9a2abd777a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6a1f3b86-a481-408c-a09e-c1059e7571e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3139926-f11a-48e1-a42b-9b7a919a9435",
        "cursor": {
          "ref": "d291053e-a162-4283-8c43-91117f318e5d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4c55ae70-f2e7-46c5-8cca-ea732236c4e1"
        },
        "item": {
          "id": "e3139926-f11a-48e1-a42b-9b7a919a9435",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0129a5cf-7f1a-46c1-accf-c702c2adb8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af90b14-9d57-4198-b9e2-a05df8a92a68",
        "cursor": {
          "ref": "a9714e51-3d8d-4808-a5fa-e746a48774e5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "36dddb02-5b57-404b-b1e9-cc682563150c"
        },
        "item": {
          "id": "9af90b14-9d57-4198-b9e2-a05df8a92a68",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "af8d05f9-a80b-41ca-8911-0352718756a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b132288-0169-4ccd-bdca-1d7c547b7e8f",
        "cursor": {
          "ref": "c0bc715a-c9ce-4b65-a779-80f73122df7a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1e2b1f6d-7361-4e8a-9e03-8ebd9c72d9f4"
        },
        "item": {
          "id": "0b132288-0169-4ccd-bdca-1d7c547b7e8f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "63b1d08f-86b6-449d-a412-73be70772013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e41f4f7-38a6-45f2-95d9-3df922d8cec7",
        "cursor": {
          "ref": "5cfa6351-0d2a-4a35-9353-8efabd888de7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "98df306c-9b32-4012-9206-05df97b213b9"
        },
        "item": {
          "id": "1e41f4f7-38a6-45f2-95d9-3df922d8cec7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "57f02b69-2d4e-4c7e-8071-1086b97bce2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf18307b-104d-4901-b704-c50ec825e5a0",
        "cursor": {
          "ref": "a306d137-a242-4954-9e2e-16e33cf1f729",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "80201433-54b7-43e6-969d-49276a320fad"
        },
        "item": {
          "id": "cf18307b-104d-4901-b704-c50ec825e5a0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "40919c4c-5555-41fc-97c6-7c4482668b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994c6078-1043-4efb-971a-d5455c395b61",
        "cursor": {
          "ref": "7d52dcb6-d34f-459e-94f7-4acc7119625f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "13947f6c-73a7-49b2-a04b-156e1af9e3ed"
        },
        "item": {
          "id": "994c6078-1043-4efb-971a-d5455c395b61",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7796c1d5-b192-47e3-b763-90b47a132d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc21963-5393-4a27-81f7-b2f7c6ddf6ec",
        "cursor": {
          "ref": "0c00df7f-240d-4348-9eca-e2ee7e1e5528",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d8f82b3a-9f54-4568-b342-1b778b640d10"
        },
        "item": {
          "id": "3bc21963-5393-4a27-81f7-b2f7c6ddf6ec",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2837611d-a092-492c-a686-28b801a94710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd03f0c-0d18-4b72-bb2a-4072a428de35",
        "cursor": {
          "ref": "fb1adc8d-95b8-4279-a0bd-5d9907730ed8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5afaca93-97a8-4fa0-abde-40c8989cd344"
        },
        "item": {
          "id": "acd03f0c-0d18-4b72-bb2a-4072a428de35",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f85a9daa-1fd3-4373-ac48-911b3faf2bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74f3ba7-6dfe-4f1b-b64f-2c78aca91f39",
        "cursor": {
          "ref": "10b5cb71-ca15-4175-91d1-d287d9901704",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "76931295-1d08-4a83-96cb-8e22f08b1c60"
        },
        "item": {
          "id": "d74f3ba7-6dfe-4f1b-b64f-2c78aca91f39",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4434831d-d5d3-4890-946b-23100dcab158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91341092-63f5-4072-8861-1027b4c93fea",
        "cursor": {
          "ref": "d5f62e27-be30-493e-9a3f-c6e7639868d9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "520bfdf9-6617-40bb-be8c-e02c9be49f6c"
        },
        "item": {
          "id": "91341092-63f5-4072-8861-1027b4c93fea",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cd1254fb-4e0e-4c18-9de3-1693e531b1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4413ee6e-b0db-4ca3-9a91-9ce39eb8e0c6",
        "cursor": {
          "ref": "88ae5bad-e621-4832-8e55-77f0efde9a7f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe64272b-d173-41e2-b9f0-7e5e240d1de7"
        },
        "item": {
          "id": "4413ee6e-b0db-4ca3-9a91-9ce39eb8e0c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2aa0774e-d5c2-45d4-8cf7-c7e2fdb27377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855bc7e6-f7cb-4569-9a5b-b36cad891a74",
        "cursor": {
          "ref": "f1e7e853-3a98-429c-bf2c-5f60e98eaf96",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ecce1c76-5897-45f2-84df-e46c918305bb"
        },
        "item": {
          "id": "855bc7e6-f7cb-4569-9a5b-b36cad891a74",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f28c29c0-1f60-45ee-8223-3ccad1700dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde2100c-acfc-4402-8eeb-6b6ecb1cc142",
        "cursor": {
          "ref": "1e0fbd16-b144-4d92-9c47-0229ca4b41b3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "56f0301f-351d-4368-82de-a331c736580e"
        },
        "item": {
          "id": "dde2100c-acfc-4402-8eeb-6b6ecb1cc142",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "702cc2b2-80b3-4a44-ac33-0e22dff3f61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdde9844-e98c-4ec5-a865-ffee03d4e9f1",
        "cursor": {
          "ref": "1f089af2-3232-445c-94bc-699cd842bc5d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bbba4454-3161-422e-a8ed-9a86f8bdb985"
        },
        "item": {
          "id": "cdde9844-e98c-4ec5-a865-ffee03d4e9f1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8da24956-fd49-44f0-a649-957540a59f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3f37e4-dc9c-46b1-9fea-7721c04dd5f3",
        "cursor": {
          "ref": "03c42bc4-df4c-47c7-b5a8-a0b74b8a4f05",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d4493abc-67bb-4be2-ba09-bcf1bf564cb0"
        },
        "item": {
          "id": "3b3f37e4-dc9c-46b1-9fea-7721c04dd5f3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "67aa2f4e-97cf-41aa-9f28-9e963437cfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039af6a9-7f77-4343-9d2c-5d7e73fa43ce",
        "cursor": {
          "ref": "7a7df82f-06d2-408c-8067-68c2f6006cd1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "650a00c6-8cda-41ed-beee-f9efea61d493"
        },
        "item": {
          "id": "039af6a9-7f77-4343-9d2c-5d7e73fa43ce",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6fb2e295-3d0f-4e54-b5f8-061f4ec7e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fe67b7-de22-4a1f-94b8-6bd082f8618b",
        "cursor": {
          "ref": "fcd6448a-316e-4907-ba05-16cfae821199",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "afb5113d-6f94-4158-a7d6-47b0a01d77de"
        },
        "item": {
          "id": "c1fe67b7-de22-4a1f-94b8-6bd082f8618b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "592fb65c-efbc-483f-8bd7-8f83cdc7bb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af14cb38-1b5b-4681-a722-a158042ed5f7",
        "cursor": {
          "ref": "7602b39d-a3e0-459e-8339-ef1556164cf1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "907ed7b1-5cd9-46e6-9742-d19397a711f9"
        },
        "item": {
          "id": "af14cb38-1b5b-4681-a722-a158042ed5f7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42cdb720-8b0a-4087-a561-9c7b50ebab20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671b06c4-28d4-4865-8bb4-d31c95c07092",
        "cursor": {
          "ref": "0292a640-d164-4eb4-841a-3b2a80ce8d60",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "82ac0719-50d8-40c3-b7aa-c28281acabeb"
        },
        "item": {
          "id": "671b06c4-28d4-4865-8bb4-d31c95c07092",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2473799f-edf1-4b4f-b789-0dff9724bf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7c72dc-5af8-41ed-8b73-3e60f7fab9e2",
        "cursor": {
          "ref": "c101d2c6-ccb2-49b2-a217-7702d73df564",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "967b6fcf-5dc5-43e3-abed-d06d96fb5c1d"
        },
        "item": {
          "id": "ee7c72dc-5af8-41ed-8b73-3e60f7fab9e2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "99b3b4c7-de76-4fde-85ad-3e216ac1f51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1407c141-aa07-4e80-b3f4-5f5b3737de3f",
        "cursor": {
          "ref": "d84a1956-4e5f-49ad-a82f-5ead375398b4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c5186474-1a91-415b-b79e-9d56a27f3eac"
        },
        "item": {
          "id": "1407c141-aa07-4e80-b3f4-5f5b3737de3f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eb2da5ed-6686-4963-9705-4ef6e72f992a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa1d98-acad-43ed-be6f-67aa28f7917f",
        "cursor": {
          "ref": "88f3cb33-a59d-4834-a4c2-1fa00a2dc94e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6766e34b-717f-47dc-ad58-2dba0fc46780"
        },
        "item": {
          "id": "e3fa1d98-acad-43ed-be6f-67aa28f7917f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "67fabe8f-f10f-4bd8-bd24-d6e844298ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494154e1-cbe1-49c5-9e0d-4e27ee641b9c",
        "cursor": {
          "ref": "b14eb36f-daf1-4450-9706-8c3a22bd8483",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4aa1d28e-fe99-4a92-8dd1-bf32c1012848"
        },
        "item": {
          "id": "494154e1-cbe1-49c5-9e0d-4e27ee641b9c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "23d5c7da-00de-47fb-85e8-9e23ef69f24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb06a07-8094-4f58-963d-13cfcd68a39c",
        "cursor": {
          "ref": "25da2557-35da-4ed4-ab90-7f67373d7819",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5c59fee6-30bd-43d2-979d-4b1e4f735d63"
        },
        "item": {
          "id": "1eb06a07-8094-4f58-963d-13cfcd68a39c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3e8e4fb8-2dba-4751-a352-ee74d449963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebd4256-bb53-486d-bc88-1d1ac74455e6",
        "cursor": {
          "ref": "9eb52289-1c0d-4af3-bfef-6ef1d235311b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed4dc611-b295-4e7c-893c-99654eec4409"
        },
        "item": {
          "id": "0ebd4256-bb53-486d-bc88-1d1ac74455e6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d1c6b226-2bcd-4453-86e3-ddd9b6226ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a01bc-36fc-4606-97a4-da386ed48169",
        "cursor": {
          "ref": "ffac901b-7c57-4145-9c88-3a22bf872ea9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cbb1faec-74e0-4e92-b7ea-e43d992ef15f"
        },
        "item": {
          "id": "249a01bc-36fc-4606-97a4-da386ed48169",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4d8ee664-2692-4d52-96ed-bb2d7a4c0a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfc8d71-5f15-491d-a257-46868ba15006",
        "cursor": {
          "ref": "a3cb0e01-1f84-46ca-af49-060d54c87363",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "adc6bc0f-dfe3-446f-937a-03c2672b404d"
        },
        "item": {
          "id": "ecfc8d71-5f15-491d-a257-46868ba15006",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0f52e11c-f7ec-433a-a2be-4f67e0733cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d6b885-0fac-4b49-8968-0093688d0db3",
        "cursor": {
          "ref": "f55ed83b-3bee-46d1-b969-64ffc0ab9131",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bce96d4d-196f-4224-90d7-703e57a02dd7"
        },
        "item": {
          "id": "99d6b885-0fac-4b49-8968-0093688d0db3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5bec4122-7a37-45cd-b44f-bbf5b6f0c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47d2afc-d95b-43c7-b041-9557b1f24ec3",
        "cursor": {
          "ref": "2d44cee5-080c-42a3-9639-ab39cd51b324",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7c0ac043-1ba5-4e5a-bafb-be28f1817b5e"
        },
        "item": {
          "id": "b47d2afc-d95b-43c7-b041-9557b1f24ec3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9d3cc415-ef30-4bca-825d-7c46aa34bf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4868d311-f2fc-4378-96d5-5d0261d10f6e",
        "cursor": {
          "ref": "49a828e9-2cb9-4a16-b6b8-c56b5409c2d9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dc794c80-5d57-4f93-872e-1922bff66704"
        },
        "item": {
          "id": "4868d311-f2fc-4378-96d5-5d0261d10f6e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e9e07fa9-5582-4c3a-8484-48e6ea9c72ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae4f390-b8b5-4638-9901-271111805092",
        "cursor": {
          "ref": "6b5f72b1-ea3f-4aac-a47e-7250dd5807d0",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cc74ed05-80b5-437c-ae2e-a77d790327fd"
        },
        "item": {
          "id": "1ae4f390-b8b5-4638-9901-271111805092",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8e8762f0-89fe-4ad8-8ce8-34ca942d044f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ba8158-3cc8-42cc-9bca-dfa91094b1ce",
        "cursor": {
          "ref": "3608d8f1-122f-472c-9e94-b1569ae0fc0e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2a6b6dd4-32a3-4214-8ab5-b70907b601df"
        },
        "item": {
          "id": "e1ba8158-3cc8-42cc-9bca-dfa91094b1ce",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b547e211-8c0c-492d-bc4c-49f5537ae1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5323ce-47f2-41bf-aabd-fc05f07d878b",
        "cursor": {
          "ref": "d619076a-8417-4a60-ad23-7272e28dbdd2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7456eee9-c411-4c7c-9ef6-5bb6575bfb15"
        },
        "item": {
          "id": "da5323ce-47f2-41bf-aabd-fc05f07d878b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "96c6dc05-4d8d-435c-b9d0-80bf4edc2479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0540b60-1239-4522-a3e4-70e6ba391885",
        "cursor": {
          "ref": "93b69c42-267a-450c-aabc-7bb512882547",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3b546e34-4988-4b37-bfac-0ed82545286f"
        },
        "item": {
          "id": "a0540b60-1239-4522-a3e4-70e6ba391885",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "68956800-ccea-4229-a5f0-34000eeabe2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c82fb-1d34-453c-bb89-c62d058d92c1",
        "cursor": {
          "ref": "bb6f8c07-59e5-4c09-b1a1-c5528195bca1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d30c691a-c01a-438e-85d5-598c098677ca"
        },
        "item": {
          "id": "bc9c82fb-1d34-453c-bb89-c62d058d92c1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b799ed6-a7cf-4dec-ac82-2394d72c9685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ebe6c7-fe5d-4826-9630-ed03f1edade3",
        "cursor": {
          "ref": "4d92bd06-d71a-4a21-8083-8fbd9d24c4bd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "07504fdc-7d22-46b3-8549-02ecefec654c"
        },
        "item": {
          "id": "36ebe6c7-fe5d-4826-9630-ed03f1edade3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9b81342b-c38f-4dc9-852e-fa2b1cf7d5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb823d-c922-4b99-9fff-fa8c920c5144",
        "cursor": {
          "ref": "a506aa4a-b929-4967-9789-316473e2b5f8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "084d0b03-cc10-4f79-8a0b-132cc54071aa"
        },
        "item": {
          "id": "cecb823d-c922-4b99-9fff-fa8c920c5144",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ebde2f3c-080d-4427-819e-63448cf691b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d83e5b9-de7f-4249-8496-80c0d40a7d1b",
        "cursor": {
          "ref": "1c3528d4-0848-4288-8878-68c14333efd1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ea0df231-e166-4271-aed4-9c789ddea3c8"
        },
        "item": {
          "id": "4d83e5b9-de7f-4249-8496-80c0d40a7d1b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3d114716-e4d4-4922-a3c2-1f9e9a7aea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714b7eea-f41c-4562-b66a-779bdb42d674",
        "cursor": {
          "ref": "ae7db691-c31a-4b0a-aa2e-3255af58ec56",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "260bee05-aa33-4a86-8562-8d12f9b63833"
        },
        "item": {
          "id": "714b7eea-f41c-4562-b66a-779bdb42d674",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f39aa329-e222-497b-b7f1-b0093e7f2cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef06952-c30e-47ef-92e4-490f661d72ee",
        "cursor": {
          "ref": "907f8166-5224-45ab-8e91-447865c8e1ce",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e170c36f-30ab-45c8-ad41-acc413daa913"
        },
        "item": {
          "id": "7ef06952-c30e-47ef-92e4-490f661d72ee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3b078757-aafd-4cf9-9e0d-fdfaf8db8c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0cd2bd-1855-41ac-bbe4-8549c7542819",
        "cursor": {
          "ref": "beee1b7c-849f-451d-8d32-da9fe247975c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6adecbc3-5588-4de8-a408-febf10aad12c"
        },
        "item": {
          "id": "ba0cd2bd-1855-41ac-bbe4-8549c7542819",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "13040445-278c-4127-82a4-d7bc9430d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414a8de5-5832-4267-a603-709c6d2cbce8",
        "cursor": {
          "ref": "00201743-c80a-4b44-aa4f-e202b5403e86",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "76db5476-8704-450c-b4ea-0996ec940aba"
        },
        "item": {
          "id": "414a8de5-5832-4267-a603-709c6d2cbce8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3349abd0-1a31-4296-8de9-13412de84d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241f4f8b-9a4f-4817-bac9-35dabe348893",
        "cursor": {
          "ref": "2104de6f-eb73-40ff-accb-5f42a252721f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6452a6ee-55aa-4e76-b54f-096db8d50e9d"
        },
        "item": {
          "id": "241f4f8b-9a4f-4817-bac9-35dabe348893",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f66b7888-e979-4a60-b5d2-c401618b2f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77be312a-d4f4-497e-8cf1-e5319d092df4",
        "cursor": {
          "ref": "800561fd-dbb8-45f0-8ab3-9491fdf56a49",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f332c94c-13c4-4f93-b48d-a49ba2a24fbc"
        },
        "item": {
          "id": "77be312a-d4f4-497e-8cf1-e5319d092df4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "37d5c8c4-21e2-4dea-8102-c986de4ea03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62facab-e75c-421d-80ab-463c7f5a46d2",
        "cursor": {
          "ref": "1a7b1b3e-cd2a-4e94-b9c0-05d1252b5234",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b4436abe-2c0f-4cdf-a02a-e0f4c95d097d"
        },
        "item": {
          "id": "b62facab-e75c-421d-80ab-463c7f5a46d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7da0a6f4-bd7c-4fe5-972b-895d895f9534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1c13a3-06db-410d-8af7-bdf65b874f8d",
        "cursor": {
          "ref": "6e9d6f74-63ad-4585-84a0-5c2389b259dc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "abdee23e-3e96-48ef-8297-7553f8682152"
        },
        "item": {
          "id": "7d1c13a3-06db-410d-8af7-bdf65b874f8d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b3111406-584f-4ace-be09-d83b8eca27fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd1d7c-1f79-4293-a562-7238c22ff5b8",
        "cursor": {
          "ref": "1df2e94f-748b-417c-bd73-f45a8de5cfda",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "890dfc16-f8b9-4d5f-b8d2-09115596634e"
        },
        "item": {
          "id": "9cfd1d7c-1f79-4293-a562-7238c22ff5b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2350c965-2277-4528-8ba1-70ad63067fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f061eea4-cbc7-4de8-98a3-186618a94407",
        "cursor": {
          "ref": "4ded1c80-53f8-4f0a-91e6-7dd130103cf3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5967d3b2-4f30-464d-9bcc-a27dd265c918"
        },
        "item": {
          "id": "f061eea4-cbc7-4de8-98a3-186618a94407",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "547d1c22-5aa0-4dd6-84d0-39111738bd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749b6601-c5ef-452c-bb78-001e8b155ace",
        "cursor": {
          "ref": "4079921e-656f-4b43-a87f-0399d92dd2d3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "399b3f50-ae34-4c16-8911-1d25a85c5f02"
        },
        "item": {
          "id": "749b6601-c5ef-452c-bb78-001e8b155ace",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e8f7779-400c-49a9-bc5f-0b4f4c50b3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733b9027-6cd6-4d77-b769-49d177478cb0",
        "cursor": {
          "ref": "6cb10952-5a64-4767-99ba-79841c9c76b4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "62c1f07d-d9a8-4e12-9ebf-e467373c0805"
        },
        "item": {
          "id": "733b9027-6cd6-4d77-b769-49d177478cb0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e813f5ab-ff5e-4a05-8f8b-8cf4b1793b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5012e1-1903-4dd7-a735-4288b86aa270",
        "cursor": {
          "ref": "0031cd3b-dffe-4300-b9d7-12f10777561f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c6812b5f-964e-4742-a851-5a6e9be6be8e"
        },
        "item": {
          "id": "9e5012e1-1903-4dd7-a735-4288b86aa270",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ec81b3af-7a25-483f-b44a-6cf3bad97efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80427eb8-6396-4dcc-bf39-352a9331023d",
        "cursor": {
          "ref": "9afcc694-c9d3-4de8-8aa5-9c5addb421f5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "be62a8b5-aa8c-429c-b1f9-f3e7dd9bf3a7"
        },
        "item": {
          "id": "80427eb8-6396-4dcc-bf39-352a9331023d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "27610f34-ce94-4a87-8634-2313a2976c14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d19c65c-d90e-4664-9b74-9b8955635e3e",
        "cursor": {
          "ref": "74a3cec1-a8f5-432a-9d2b-4575a21647ce",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b1fdfc71-ad02-4319-86ff-7bfcd82c4613"
        },
        "item": {
          "id": "6d19c65c-d90e-4664-9b74-9b8955635e3e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "50b1917b-51e9-4c50-858a-08a4d2fec507",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98ce69f-a1f3-4a30-812c-7a613dec2ad3",
        "cursor": {
          "ref": "bcd1132f-d8d0-443c-9465-050a30f0e22a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "004e9ed4-1174-4b29-98ea-878771c076bf"
        },
        "item": {
          "id": "c98ce69f-a1f3-4a30-812c-7a613dec2ad3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c06df76b-5568-4b94-8073-0221570e7441",
          "status": "OK",
          "code": 200,
          "responseTime": 1509,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1d3dec-90bc-42bb-8acc-06aac8485173",
        "cursor": {
          "ref": "41bd61a0-176f-42be-83f9-980b9c83332f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a84010b3-4132-475a-ae74-031030530b05"
        },
        "item": {
          "id": "ef1d3dec-90bc-42bb-8acc-06aac8485173",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5b7c00ff-41f7-4ab7-bba6-1343426b9c5b",
          "status": "OK",
          "code": 200,
          "responseTime": 1509,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e25ff87-34b6-4c9f-b078-0466cc7ef3b8",
        "cursor": {
          "ref": "99a28dd7-22a4-411a-bc2b-c0cf04966965",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "464fd4b2-7aca-4d2f-8169-df88474ecfd8"
        },
        "item": {
          "id": "8e25ff87-34b6-4c9f-b078-0466cc7ef3b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b58120d6-2b94-4f73-a219-9de63da3776b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e25ff87-34b6-4c9f-b078-0466cc7ef3b8",
        "cursor": {
          "ref": "99a28dd7-22a4-411a-bc2b-c0cf04966965",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "464fd4b2-7aca-4d2f-8169-df88474ecfd8"
        },
        "item": {
          "id": "8e25ff87-34b6-4c9f-b078-0466cc7ef3b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b58120d6-2b94-4f73-a219-9de63da3776b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f77c50e-d0bd-4253-95be-178a4ae45241",
        "cursor": {
          "ref": "dcfed2b8-093f-4823-ba22-1f40e8e03c51",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a78af65f-1ead-49ae-b6e9-8c417f76b8e9"
        },
        "item": {
          "id": "5f77c50e-d0bd-4253-95be-178a4ae45241",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1b4d5b09-8e92-4643-9ba1-965d5da46bd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca26e07a-9dc4-4e08-819a-c5366561049d",
        "cursor": {
          "ref": "67d57ccf-3979-44bc-822c-407596a52987",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bba45eae-ef8f-463c-a88c-a2dbf86cd990"
        },
        "item": {
          "id": "ca26e07a-9dc4-4e08-819a-c5366561049d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7afbddf-d54d-4cc1-822d-dc34f306e504",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}