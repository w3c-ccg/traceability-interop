{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b0fad16-a18e-4670-b7f4-558f3509005d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0a7bf686-d1ec-46f9-8c68-d06b2905fb5e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01884a8b-0b8d-4bc7-97f7-457c23850446",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38c6c47a-d88a-4ddd-88fb-8c35dceb9937"
                }
              }
            ]
          },
          {
            "id": "111ac20b-c6d5-4ece-bd7d-6f2e147166db",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de007d86-d283-4c93-ae78-77da45f0f350",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "101bf80c-9516-42e8-8c94-86d0a0549c12"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "93e9fd71-b60a-4471-afa3-8409deb2862d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c090f3cf-c8c2-422a-9822-669f4a70bd91",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bace6d81-cb73-4499-b744-cd1f7ce94834",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "722e7f71-1325-4c5c-9ca9-589524fe1c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ec52d41-1a0d-4d4f-a4bf-f37f62a45371"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63846aca-1992-4a54-9464-fc8ded068a3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f93b8937-40b2-48ec-b440-1964cbe701c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a79b267-4661-4d21-9660-6087938310f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c93dfcf-dc8d-4f61-8abe-f57463d510a1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62f6e356-584b-4e24-8cca-992e6931b2cb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9c03ed58-5773-4234-8afd-ea11a201af7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e099bde-51d2-4950-a4ff-63e38b83334a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7c3de89-41aa-4c21-8bc9-1d6a941a3d5b"
            }
          }
        ]
      },
      {
        "id": "f52ac105-7532-43fe-b1eb-94f6759b2114",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5c1afa78-51b8-4a4f-9dfe-f2e6ae431c5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf6620b1-1650-42a1-82df-cc1f35879a84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c0ce87e-550a-44e4-82a5-178d4b93b882",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5d0949-934b-4c0f-8257-ed23d41ac3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dde603d-42c2-42ee-8fd6-3154357e976d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635c7d25-e480-413c-ae9d-294e3f1ff1d3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79850313-3865-42c2-8658-a369319301cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43bf6e0f-6346-4612-8746-e6674e46e9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed114f4-6471-477b-9301-1ad2dd1c504a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fd6545-20e0-44d3-8edf-b695107a525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f30a762-d7ed-494a-bcdd-8720ec4c5d88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ace5b49c-e472-44a1-a4a1-e264b0d2b897",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32085b98-c5b2-4047-93ee-c1dddcaa1556",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967871e7-6094-4d60-9982-ad1658d1d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a45983c-d124-4fa7-8897-2e5f8936e308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebde9e7-b698-4dbc-9209-68c37945486e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c478b7b-0a2a-4508-a778-069262291cca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "646d4e3f-ed6e-4e8c-a0a4-41f5307fb77e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8cfb0a5-1f17-48a7-97de-ec659957c186",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5c05430-86a0-4bac-92bc-9005af162f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c1261d57-cf84-4783-9668-ea691b9e3dab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7586b67b-ccaa-4c6a-9c19-31b1a2992303",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0fa741f9-79d5-4a52-b991-9e0cb580c25c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4670f18-ad58-49cf-9438-0f71dcd7a88f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "847cb407-45d7-490f-8d51-11da7a026098"
            }
          }
        ]
      },
      {
        "id": "5f41d0c2-ec35-46e8-afe9-f1968c4e3c59",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5f7af885-d43a-4bf3-9ed5-b38c7cc0be2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "896e3c36-b7fa-4e0b-b0e1-e82862ab4447",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b73f3fad-51c3-4b0e-9446-1cc72f94ec18",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05726fc5-51bf-4e4a-9332-d31ecc7e7362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a22ee8f-b99b-4c38-8b82-8c6abdea8f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68acb4d-14e9-4f89-9433-bb1a4599c311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee2bcb66-f96a-417e-914f-d60947677e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b8f06f-4fb3-460a-bf7f-33c914ed1fa3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef06a88-955f-4095-b514-6386263d3992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e72aaf5-07ab-48dc-8ee9-fb4e05117d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829db2a8-575e-433f-889a-4308500846d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "073963dd-73e1-45a9-a43d-f0a0a2dab7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12955fcb-3b10-42d1-aa90-22d7c01899a4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a72d1e-4b4b-43e7-b5df-53039d83d4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e994219-7f5c-4fcf-b62a-fbe71ef2c901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e04281-8a80-4fab-9cd0-dd263d290896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73aff632-cdb5-4f4f-b242-905d34369db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f5545f-474d-4183-bd50-2532895d35c0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b888ba70-3b62-4170-9329-fcff95c2716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32abd995-9d25-4c4b-a5ac-1cfdcae55e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57042287-0fad-4a8d-ac88-666bf34d648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c6c746f-cbb2-4a25-973d-f1882c613cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943d04c1-b212-416f-8135-184fd227899f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff1dded-dc63-4866-8b7f-772061538247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2952a2e-1408-45d9-b3b6-c1adb288144c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6b5088-aaa6-44d5-bfd0-78e2487d8bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1707329a-1263-4f03-ad53-4ff11444d184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8168caf5-8c87-4189-96dc-cc056c7e30b9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5dd433-3876-4e19-925a-45ca7e520862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99472028-9292-4501-9ac2-dbd9dcfcc45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3e182e-41e1-408a-8b70-295dc16ef4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a01ec942-59ff-4a2e-ad6e-e5af2022d9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389c560e-4b09-4e0f-aaa2-dea124940302",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6526cd2-299e-4888-97a0-787d4740f74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775c6619-2126-48a0-a9de-9f284a26c761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c8209-3bdc-4d3f-a6e0-a293c8ae0981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3befc979-d1c9-4bbb-8d50-96b7291796a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401ca5f8-d078-43a9-a4fb-feac45902798",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb0fa3-cdf6-4fb8-8446-3027607ce06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77eaf487-615c-41e0-9b68-6d14f05fd2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf22d3aa-dcd0-4890-bd5d-08bb0f3f6836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4bc7153-2f49-4f51-96ed-098ada5c3ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc66fb8-9073-4b67-8dc8-00f9d5f98a38",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02d4ebc-3843-47fa-9787-b9fabff98f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41673c3-88d7-438f-879f-da0bf191a31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84925d6-d639-4a08-931f-3b0a2fd44c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd41e83-b4a1-4f1a-94a5-36cb64197bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5f23f2-11e6-4071-9743-f4ed3f63dd2d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42662e7-e580-419c-9fbf-8ceea0886a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c18877-d4b4-4600-b4de-fc72aeb392c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2162ea-0a98-4ebc-85f4-4e3434701f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad96d296-7a75-4c60-96a6-09bb64f43449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8968ab60-e739-4d30-8fac-4715b46c9ee2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f046254b-23d5-4c2e-9992-bacee6f73e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99953ed1-06b6-4a2f-86ed-09de92d9344a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3148b8f3-6d45-4c8c-a1ef-2ccb1ea41149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f918a48-2671-4179-8bba-51f82ab7d0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3646e664-fe85-44b8-b789-64380f30c863",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d2c63a-a3bd-4b83-a5c8-40dee46685d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28be0d14-8eda-4fb3-9282-106cc9839ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef0420e-61c3-4b5f-84e6-451f9d09c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99225267-50c7-4851-8282-39c130e83228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a63d41-f593-455d-9cf9-df53881d64f6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca4e952-f91a-47d6-9208-735d4eff81de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1b1acb-49e2-404d-ac1a-c48c94367cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4def3ef7-c0ad-4d09-9e8d-d319e006e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e36efca5-019c-43e2-8fe7-0e00cb0af1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b827a6a6-aefa-4a5c-9ddb-76bfbfe6ef5a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f32cfe-08bb-47b5-b162-5eff50b8bebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab82374e-9c46-4a24-88a2-c628df675c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9056a4d7-e3bc-4b33-ae38-1c36af0daccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9649b4c9-7dc8-42df-8e69-5c4ef654abb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a531c36f-8614-4d76-a1a1-9b03c96ffbd7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8832c942-e9f1-4bde-953b-909f304f241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61bebf5-67de-4934-ab9d-3d179c95ad22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42cc850-1d93-4305-9f9b-ce3380198615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a3b0a3-eac3-4810-bf9f-19dbd069beaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe4927d-1946-448c-a817-9fc777efc4e9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6bea11-6578-4984-b2a2-c89d5c9e5da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf08380c-b51a-47d8-8dad-f02cd928ba25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6917b8a1-aa37-4dd0-a54d-2b58864843d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8cf76a4-7352-4d83-bde2-45aeae06380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc83d68-7e77-4eb1-8453-fcc32281021b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cad3ffe-ad3b-4858-9fde-cac5fa398056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d532643-e073-4f21-8602-c218a9215b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222bd946-a39d-49c6-bb3d-07a32f8a9edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0922991f-abda-4529-bbfb-be1a779a7ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68066c93-f3b3-4929-81e4-f3015973f20c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afd3c90-9a8d-4682-9853-e70bf6128f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3ff293-7c8e-41b1-99b0-dca70b92e292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca7cf15-601a-4983-b77e-ff9a7c51e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db4c9b3-401f-4aa8-a552-27a800958e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b804fa2f-1d78-4f67-8d69-760982bddfd8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933f7720-f3ae-4fa2-b9bf-9593ff4c1ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff297d6-ffdf-4fc9-a2f3-ab93eb4ed5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a19821e-7b01-4b48-a2d3-53ce40d1e26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57fad538-2334-4b28-8569-f5d450db2695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946941d0-93f3-4b40-b07a-404356ee85b5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6831664-e563-4311-8c40-3f1b4b1bfe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca353ac-473f-465e-acab-bd07931da84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a4b569-621a-4491-9512-465e7552d593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31821a92-667b-4f17-aa35-60131cd974fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d84505-007b-4aef-8e68-922144478d5d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aea98e-3e82-4b6b-9667-8f3a44fbd804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6506a6-cddc-40a9-ab56-dce1138ba4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec218a8-044d-4f3f-8434-5ac2a0f04cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2a5eef-cba0-4d49-8f8e-51b00976366f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24b74f7-1543-4563-bc20-b6904a2bf10c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e917ff3-6504-482b-ab56-ff5f0e2bd5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4c0b32-9e76-4883-a7f7-911629227eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafef121-4c71-439c-ad70-23a067d1bd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65dfaeb8-3a67-42af-8173-3422bc644f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdf907c-3f30-47d7-938d-162c43490952",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e0e49-3940-440d-9b08-aab472007726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35fe885-97f4-44fb-a2dd-f833c2a81450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2330e8af-b955-4c5f-8cb1-e6f931065e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1dbe81-22f5-4e0d-b881-640d6dedb169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049e06fc-9472-4be4-adf7-5391ca94ea34",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886a9faf-f62a-4ca1-99d1-51c30257e817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e6ebce-7bb0-4a0a-abd2-18cdf2fa4705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de585096-91af-479e-ad78-a9010429442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6def1573-4153-4ad4-8314-4155a966503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d370e644-95ea-498b-b0c6-c9eaa4178ede",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45582205-b40e-4063-b6e3-6cbd5b65607d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e47114-9dc2-4790-b434-307ce58c7a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebc1f8b-a55d-4d61-a15b-ba5556720849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a78030-e5fe-4242-ac47-1bb929638b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1033c2ed-5e83-4953-a4c1-5b50297ba02c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec4ca0d-ba5e-4061-8a20-ee79658ed794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89dae38-a30f-47fa-b497-e9fd7db52224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d45b741-71b1-484a-8b82-7ad2a7b75e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c19e13-daa4-4925-8be1-63e4b49887a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685f9dce-e85f-4da7-86f4-d650afc73b33",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc27516-5cd5-401d-bcab-a001c1fce42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45afbc3d-dfb4-422e-af33-189e0b1c9613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7968f20b-f781-48ba-bec8-9ece0097370f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e700c5-1a67-4e3d-b1f1-b1b74419f257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b5ee28-8318-4a7a-bc01-18c8d109b3cc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf16e369-dc65-431c-9930-3ab94e13a00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72d1019-cbe5-4ff6-81a9-c0e8eb8ab2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da72c9f-4494-4e03-9c5f-240f6db9749d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f33957-e4b5-40dc-96ef-b27ea73ee816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4db82d-acf7-46e5-917e-57799c5dbf04",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0700be-6ecf-4d05-89fa-83da4cda2f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815209bb-a84c-47f8-b313-d80aab113f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9320405-490a-4076-9879-c9744901d8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf0fa34-8c6c-42b0-a973-f9ab63cfa447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049d22e3-613e-4f01-9d70-51ff8794cd09",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c94613-e4fd-4cc5-b4ae-20bf4e3f7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a60c464-afe1-44a2-a359-280d7e59a342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64f619c-12e7-4d26-b1ee-d8e2291c66ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29f802e-07be-4773-9dad-2a03e094bd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b6d0dc-e08f-47ac-a072-a2b540a6d11e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c160d1-8098-4bb2-af16-d0050220f4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef38558c-8606-49ac-b0e3-777179613f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f027cde-32c0-4494-ba52-8ddac7f7754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9803d8c-19ad-4f01-b928-bfb09cd874ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5273586-07d7-4810-b8ee-1f187b0fc588",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40911de-1884-4867-bcb4-90715aaceab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa492b83-fdd4-49cf-8d00-4afbe4506136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb30e2dc-5751-43b0-baca-ae6c7f229e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdb7ad3-bbd4-4687-b444-724ddf8339fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac205b6a-13e0-4fe8-9c02-f6fa4b857875",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2b64e-af00-48bf-94d2-5f50f2baf10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3e6306-55cc-40f5-85fe-d8a3f2e0b418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ecd74-e027-4db3-8224-40645df0d959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d7adc9-8541-46bc-8a11-3e68d1880020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a983394-e02d-4429-9919-92724e772ce0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222f70ae-d43f-4dcb-bf64-6b459d841197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2dafba-5b6b-447f-b5e8-1f68b0f33c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82efb1ed-7b59-4253-8a58-6ab8ce2811f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e41f4e6f-9849-4f39-830a-b2897e87e99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b5d3d5-9bed-4105-b9fa-b99cdaf4c4c2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e452434-0601-41f2-8d87-7bf0634ac942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fc4eb6-8848-450c-8d49-f870efc6ee1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfde50a0-6fe7-4837-85ea-2d284d7c9d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f78c5e-b0f5-40e5-8ee1-591b4884b667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d80383-113e-47fb-bf13-50650cf00d7e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457130f0-29fa-4ede-9c80-2d87a50a1cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23fb1e23-7752-48a6-80eb-2ab856165362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75afecd5-972e-42e9-b1df-b76e63e9fd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3171ce8e-836b-4800-8216-5dd787b8bd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9392945-d404-4193-b0cf-4441ef863a61",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b89f5ce-1590-4336-b66d-90b8489ea800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4593caf-cebd-459a-8733-d2456074482b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da68d343-3228-4662-b496-7023ac9ce88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d602c7c2-8af5-40c9-8f52-13f9d0dfa08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a810de-21b0-4eb6-a459-2766bb2a9f18",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a27f008-c965-4123-ac6a-ec9fd1527c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2e3cd7-3a9b-4f6f-894f-75986e5b3a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1673b0a3-8236-4127-90c3-556451088345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc32a09e-5204-4807-ba50-ee2d9b2dba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec71c39-7451-4f31-9e2f-5df099e0152d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517003bb-1feb-49ab-bc75-9d92ee2e29fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba21215-834a-4ec3-bd6b-ab0ab4372b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e5926b-bde0-4237-9e26-d916e3e8956a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01f2197d-3321-43aa-ac8e-4b4bc616825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcaafbf-7190-48e1-9f8b-23857c32f013",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71451652-3713-4911-a6e5-ea9ebf9a5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06f0b27-dbfb-484a-850e-bb5e263d85e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd541a54-3cdf-44f5-8939-7a8e25b03b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8dbe9d-d521-4d8a-b698-98d6dd569775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10390c63-f073-4ce9-b064-e085cf4cddfc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0749f6-db80-4042-aec9-4d302d221aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc2059c-e1a1-4874-b0cd-783abc022000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4562f37b-c694-4439-b5d4-2c426bcacb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f479402a-3847-43e3-9e89-2b9cbbcf9198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50f5bcc-64fd-4ccb-92a0-c3fdc5a7e204",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bf771c-66ff-4183-a4eb-36802d907d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5731bd45-592d-491b-9a88-53b5880c3cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bda93b-433d-462e-871c-72dedc613723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f8efc4f9-a39f-431e-92d0-434fbcc89182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458cee1e-575e-4efd-a3f2-4b856cc5d10a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af7e2f9-09a4-48ce-aa3d-8acabff5d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdd2ba8-f475-4654-86cb-e1238e50ec6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67778291-36bc-4865-a64b-d3ee36a43bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9475d4ae-88f7-4616-afa0-7deccfedfa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b19865-5a13-4543-895e-ea288c78bd08",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd2f8d6-9a14-4535-81b3-3b45986a5651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f48224-2983-4235-9061-58df16753c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0c8fee-f115-4d22-87b9-a6cef1aa2381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "114be416-27af-4b63-a073-5b95b5ca0d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa147b54-fde4-4341-9735-2bb307807838",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c661622-670b-4b4e-b5bd-66c65eb5a49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19030be1-3fc2-4fae-a34e-5f05b88439da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f38bcf-d9cd-4c2a-84ca-63e0886411bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "093bedfc-59c6-45a4-9cda-ce62f6b4aa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ab9a49-e49e-421c-b106-e48747dfef2d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bab9900-4fa3-433c-a9eb-aff1f4ec47db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2d8729-a75e-4839-b54e-2459078eb678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c6297f-b2d4-4696-8a7a-f335ed09a429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b2e058-a367-4c42-a36b-a705c5b6617c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed3e728-b3a9-4307-a621-f3f16859f7d2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9224743-48de-4f70-aa4b-c493684f2ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fdf5c4-8c05-4ddb-9352-96f66037acb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7794e22-9652-4807-9a22-d4a869945ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab62e5a-93ab-486e-a4dd-10648f033f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985bfb36-6c7f-4d53-8f2d-93bd4be427c5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e231f80-207b-4fcc-8ce6-1c056fa26007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d383f67d-14c7-4f42-b0aa-e0459d5b3ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f74133-a28d-4f79-8ff9-d725a6d12edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9550d85-6c9c-4c16-943a-2771fe474046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f927f5-ddfd-4bb1-95c2-ddcd0847d575",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1afff-3856-4aee-9f65-e316e0a9b5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8776670-4028-4f2c-9882-fb59eceab43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77012c3-2af0-4265-b50a-6d1f24c2188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f697399-deb8-40b6-93fb-5ed376f7e4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e29b320-0b2a-4b3f-b2cc-4fcd18d5d450",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca20fab0-b81f-4e69-85b4-42d7fe525bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a43d6a-27d2-483e-8af4-b248a7695444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fce1729-299c-4912-9fdd-ab7f9f0b16b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "330a8993-23be-42b3-bb98-908a4c5dfc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a73cc5-4a51-4705-9edd-46dcd6495d5c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac48e683-b2cc-4eec-aa42-6c0b59f5cec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ed0ed5-4680-43c1-b63b-f43094976bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a44029-c208-4220-99fd-431e41e73359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f4a5cc-cc3a-4757-a5b5-b42158ebdd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ca4803-1c93-4f5c-aaf2-8b5d78ec5caf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48afce45-f968-4271-926a-1c461325eb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b59939-4969-4a31-8ebe-4731b4ac123b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d502d04e-f61a-44a7-b3ba-ec7471dcc113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55e739d-1315-4984-a94e-57c09a34df6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453dd16c-771b-4f53-b2af-4fd90357ccbf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac900b-d00d-4f31-9735-19e60248517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3c27d1-65cb-4ca2-b763-62306d3186e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39566599-8c73-460b-afa3-c07bde10e0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfbd096-37f3-4e8f-a765-173befa4c34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3107cc32-3ce5-4777-af4a-e13b243b8acb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f211ef5a-90b2-48e7-b55c-5cf506e7fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c59f94c-94df-423f-b637-3064eca96679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a14e05d-56d6-4c77-8e13-30a913655c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "797710b4-b997-4c46-9fb1-48ed17c7aefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15009db6-4778-492b-a787-9b821e8dc39f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053b2cbb-5474-4d23-9cd8-a6d58170aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e238f464-3502-4223-b20b-794709198282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f82ca4c-643a-4741-8b5a-f17e4b97e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a19242b-c3a1-4215-bff8-0abed32cadc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c31009-7c91-4439-bf09-4e1e35885745",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc176e36-7ace-4335-a423-f432a1080799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dee4d3-eb90-4306-b908-a59ea496b431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22831ae6-f1bc-45d2-b729-35053a24908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dc54e8ce-5b79-4820-b97e-0ee18a9b838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b630cc7-d1b6-4928-b9fd-1d9b786c6f7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d669bb-992d-4182-9b29-72cef83617ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b0c5fc-1d81-4b7e-8571-56af9dc3e197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba728bd-dd8b-47a7-a1ad-4e07f880001d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04b186a-42f2-4894-a3c9-0bbcd059ebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e723a2-dcd7-4866-bfa3-5cbe8feb344d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c5ac3c-e8b1-42ba-9740-04c5d8440025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917e4a18-0da3-4d37-90c6-76a75a166662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b669869c-2a1d-4089-beea-b76655edd26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be3b06cb-6582-458d-848e-078933f80b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edd7961-92b8-47a3-a1f2-4c0266f091b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c3de2-8c01-4d6f-9304-d3b3dce613aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58a97cc-8104-492d-8a2d-6787611470f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92878588-6515-4682-bad3-440e01957420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cee013a-186a-4067-b612-ecdf7182ed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661685fb-a3ff-41e3-b03d-5248c2b6162c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f671bc3-89bc-415e-a036-d352cc7b8d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdd3d5c-2681-4e2e-bb05-d253776062aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd51cb79-e932-4b08-a884-8189b05f5279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f589cfbf-a061-4d1f-95da-7530938877f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a47b99-c7be-422a-8d3d-315e6928c9f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afef4e5-db05-4771-b1a8-6f614e2030a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f3f365-8677-4a89-b828-e756d6c1a449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7efde8-be9e-4fdc-9bce-dab06e3f986e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbb5c6c-de03-49d1-aa17-d406e0c618c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d015d6-fd1a-4bed-8a9d-622db617924b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aaf479-cb4c-4f93-867c-f4c410a361ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db70ccf-16cc-4511-a8b9-5df9c91b7299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326b7583-dfc5-475d-be73-c3b6603e4bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c808c71-c000-4ff8-82b6-d9028a9a2f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292e8155-b5f9-431f-a098-1fc2d504c66d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1ea0c5-6dab-48f6-9b9f-9b68d007ebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ee4b36-fd0c-4038-8201-b30f32025961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec58ef1-e32f-4c7a-8348-db4ee1e52966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d340f19e-3dfc-47ab-b72c-563ff1c76d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b54cd-a444-402f-bc87-b70be15997ce",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3412dd36-bd9d-4bff-9129-d4386bb48a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee787a9-c4ec-43ff-8045-97415e87a502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8dc2db-d7ec-4a48-ba60-6e78539018fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5216d6d-215e-4806-bf0a-1df10b53ed11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5ffe24-4a7c-4785-ab08-be393e885005",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecf9b66-2dd9-4cd2-9bf4-c66848b15f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe8b51d-5ff7-49b7-835b-9f58603c194b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb3efee-97fa-4fe9-9299-29906ce213ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8dd6db-7bed-4242-b90d-e6391fe0f564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a3cef4-6813-43fa-a8b2-e895da8b4a1d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615c27fb-a7a3-41ff-8b2e-fa19c0e4f954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618defce-67e9-4c73-97f4-95fcbef6f458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bfb488-1b4d-4718-8a13-1bf3b539b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "865a4682-cd4c-4fa2-a480-b2fc2d7351e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda8cf5d-cc69-4d5c-83e8-8639dfed3157",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a61f87-538f-4f05-9f55-22e8d415058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3864d6-cfa4-4b01-84b9-8783835bbcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f22f624-7908-44fe-a193-a32b36b0900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12b56904-9690-472b-9819-fb4b2b2c23d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df21fb5-a9a3-4658-be2f-eba859dbe38e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06807c1-d3f3-46ec-89a5-b4696e680a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be25622a-d590-4d91-b67b-8e09066b69ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3618c161-2bc7-465d-99f1-ae4640eb74ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8f4502-b3fd-41ca-8e14-f2f7746fe81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15683672-a178-42de-8620-4ac3c40e6f49",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31413b51-c49c-4edb-871a-1dbe7006805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a7dfbc-58b4-4136-91d1-696c2c6fdc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdfd327-c4fe-4a23-b148-bc574e4438aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d1b6f0-0344-4b07-9844-89fe29fcba7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106a3263-b1f9-4c2b-a14f-a37215fd6dc8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77812afe-e487-4313-afce-ad03e44a847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ccce1a-91f3-4098-ad60-424fc706e5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06d372f-b8f9-4aa5-a03e-8b55164ff497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5441b18-210e-418b-83e8-0e7cc5faa718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7de344-3267-49eb-b321-d32de849a502",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b20f83-98d4-472f-a82f-2987bf09f9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826e5b96-b053-452a-b9b6-92c09192c877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aded1254-1c65-440b-8026-abb5e0676af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc5b96d-df59-4f35-9374-cef1ca5630c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534593f1-e848-4b1b-9456-b938d690863f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1add97-9cf8-4651-8e65-bf25d63bfa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256277dd-25bb-473a-89b5-0478f4ddaaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63130fe2-c7d3-45db-8bbf-be893a95f034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f88e20-6e43-4583-ba23-958a04bfdea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786d6bbc-54f0-40f3-8666-8ee1aa7f0f6c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae4313-6eb1-4a4b-8769-dac236cf12e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50001296-e9e6-45cd-b50c-7f4e2d3af8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e9f5a5-4077-4c34-bc3f-f34f9bacd92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75c05077-8d2e-4e2c-a189-dcd1b84da2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af441761-7351-4dca-9554-dcec3b1ef65b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ba18a3-a89d-4c72-8a78-99166ee9d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa6c572-e5da-4dbd-9626-bc2192830945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c66a354-c5f5-4865-b571-ec697bbdfc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c452bb8-cb09-4c49-93c9-f5951e15205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bb5eef-a0b0-4acb-a42d-aa3da29da785",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6ce6a-1d83-43b6-bd47-566eba45c85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fedaaff-7c96-4b1f-9ee3-bff852c2b001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22254fa5-2813-4c79-9eda-a19869380942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4265d8-211b-4d1e-99ca-8a9d83379c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d685c063-cb25-4dd3-ac23-a16462bd6f92",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a097cf-b923-4d94-bd01-c6e379d008a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7389f0-c027-4397-ae45-31b7589250c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac97d2c-6433-4790-a376-a725ba7c180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22720fd9-7eda-4b13-8534-013a7f5e2c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb77c638-eed8-457c-9612-7c661e07567d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174b5a78-091d-447c-85e0-6522981f25ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1428a3-cf63-41d3-970f-5f9076512fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b6311b-b588-40b3-8961-d608c2ad7f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f6114e-c9c3-4b18-a235-ee184a839084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11ad1fa-ea73-44e4-93c8-a770cc1dcb64",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5379f7d3-ec43-4e7c-a88f-8ef1daa6e152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a19f70-4895-497b-b10a-0197e0a38e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f5ac50-2325-4585-94ee-ff8abfa4b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0e8fd2-c3c3-404f-8326-a43f1f46d3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b043cc3-6ecb-44ea-ba99-2400fb6e2679",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fd704a-ac43-44b1-be3c-8ab87fd3774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f76fc69-b9fc-4528-b877-cb61b66326ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb0293-d56c-408c-b4d6-7fe20a071e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6021bd-6c97-4ad4-a4f2-bc074ca1c826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10b7d60-98b7-49fa-9e22-3218caa213ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ed818-5e7d-4ce1-8f67-9e2f10f29c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54bc217-3fd3-47c9-b3ce-42bcbf171001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7039b63c-673d-4726-ae69-afb32b753924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4763503-807d-46d0-8a04-f63735210ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa5b6ee-cb07-4a5b-9512-9538edd48117",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f2d310-d6ff-4e30-b0f6-d797e5aa8e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c4a77d-2fe3-4fee-81de-72b75f50586a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e456dc77-7542-4e92-b931-11a8ee4f1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b26f0e3-b91e-434d-8974-3f760aa40cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac43d9c-2c0c-4728-bbc0-34211cbdeee5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4694a7ba-015d-46d8-8ec0-766bf4927c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dca4de0-3346-4d96-b654-cf9e57c7a50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ef9118-97a5-4d65-af5b-e4a68455de30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cf7b2e-597f-41bf-8779-74392c5d6eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5d12ce-f010-455a-88c4-6d009939f486",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cc736a-cb01-4961-8baf-5aad3fc73f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f91956-b7a9-4e71-b401-29521609e42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72df828-b3bb-4915-9d23-77092b28eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aaeae8-3e26-4805-960c-7fe6a9b63a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e410f3f7-d1cd-4fd7-9231-e0f4513b3503",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aae123-7b4f-42d8-893a-bdb3917f24a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f89ca3-817a-4742-abd8-a9d558a5984b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af3f99b-708e-494d-af3a-85b02a2de5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "384e8271-36b4-421f-9db6-fc387493013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf751f7-13c9-4246-ad29-ebf25998f41b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb12a095-df79-4da4-8193-fff1cca44434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f968f09e-a612-4b21-8317-75d1953160d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81867ea6-903d-4756-874b-95a3e29b6816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53495630-f8bb-4da7-9789-ff4938175ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ff27c5-5436-41e3-b203-1e9fdff170bf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25197527-7787-4595-b538-0e8afcc6a89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bd8b08-6a14-4fbe-89bc-1c7054cfab42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c62938-1d13-47a6-a12e-519650f97dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d3129d-ebc5-4de1-96bd-d7c3ead2fd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c1be87-edc1-46a5-8ca9-0904a8d3e409",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72677c4-7bbe-4b3e-a80c-e70662836755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47067655-13e0-4764-a476-e339fb6cf046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dbc2b8-4ce9-4e38-a340-dac85cc77a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6e2487-1864-4080-ae81-f05909f056c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fe47b7-b714-4481-a40d-bc3668d36dc5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ef6ce2-bd2c-473a-96fa-8419bc2cec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d6d9aa-1c60-4eba-b36c-b46509ecdcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed36116-ad72-49d4-b253-98bd8ede94a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da1a2b56-3bcf-4479-8c5a-737340f9602e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd7ef61-04f3-45a8-a2f8-4c5180c8a7a5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e3e011-077f-4168-a28d-8a3d23a0e016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21c0395-ee78-4932-be1c-911abbac67f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b060398-c6e2-4d11-b941-227171dac6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b951490-8013-4da2-905b-ffe3bbb9bf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f9dc56-83ee-453a-b696-23c9449aac58",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5cd2a2-9c65-4de0-ad4f-f015e91ddabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6c5d6f-1ac5-4be4-ba6d-280ed1903332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42514a-bd14-4a88-bfce-eb84593a22ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1b345c-6af8-4f7a-a1b8-1dad161c54db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fd62a8-c9ae-4ad1-afe7-a896bada7194",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49c6986-e305-45a6-b70d-d9b382e5188a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03816e2f-3b0d-443e-8b39-18cdb56650b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f916ec0b-11d2-477c-9abb-30394bb3a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf504afe-f73d-4adc-b4b2-893e26e1c28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3f14de-c505-4dac-a529-6d652640d033",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581b640f-c9b6-45e9-93b5-ed8bdc034521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bf52f04d-79a2-495c-96a4-5684145141ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b82b01-ae87-4ceb-b49d-f6545e52efee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74c944b-56bf-4649-be2a-74a4aae43665"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f145b1d-4660-4fb2-9b17-16c86661705f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf1c817-5af0-418d-b1bb-6fbb39a3c34a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540c01de-4fe7-4b13-87da-ef75b1a24a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "592d990d-0631-4a3e-b232-a72740792c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c14f09-d85e-430e-a84b-aea67c0ffde5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebadce3c-2760-4ddb-9b7b-ed7613477114"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ac9b633-3a3d-42bb-8038-0e20fc0763b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b6048d7-fda9-457b-be58-2bb72a172b75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bf48509-129c-496c-bc78-07b23fcf786f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9f6fbd8-c40c-4183-91c7-2a69cd5c4089"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86574570-9c01-4860-bd18-467e7be170ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be28e5d0-be7a-47f8-a3a0-03d1d795ff47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd475d01-d9fc-46aa-9b14-be679a160c41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85b0d129-caf1-4d44-a413-baa53262e067"
                }
              }
            ]
          },
          {
            "id": "a00793ea-773a-47a7-86e5-326f1acec39c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfbdff3a-b706-4a65-b5d9-85c012b6bde7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "52721a87-85ea-40bb-96f6-63c6daaa5c1e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ab5abe-cf5c-4c17-ad66-7a0ff75da700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b4032693-dd2a-4194-995b-6af2bbc2a50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe85a19-d8d7-4b07-95f7-dbf1bb64c8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40b8d98-5c85-49c4-a608-d0a0e9e82909"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbd96170-fc67-4f57-b9d8-53f053271845",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "634b56ad-da9d-40ac-8d64-20cf0a70ac88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84afe2d7-7897-436d-8e53-81de12191c05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cbcaadb-1a9e-4439-8f05-b47d67b0c3a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b499bbc4-4cea-4cb3-9e15-fe1ce1ec685b"
                    }
                  }
                ]
              },
              {
                "id": "74c2836c-48a6-4842-87ac-f959b5575733",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a31e88f-04c0-49b0-ab99-c44a3f88c73a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f3ef975-f991-42f6-baa1-c03daf479ff1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb9c6c4a-31d3-44b1-b38d-08dfb7951e20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be5a1bc5-7617-419f-9616-096cde585161"
                    }
                  }
                ]
              },
              {
                "id": "a19348b2-2359-47e2-b4fd-18c76b8c15ad",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f884b755-c28d-408d-9a7b-81f4c9df3e3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0ad25c1-65db-499f-a308-beb9d2e8709a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d24871d1-6206-4809-b49a-ac9c182cde60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5e735ee-62ef-4c76-bbab-e39d3965e16e"
                    }
                  }
                ]
              },
              {
                "id": "51fb8208-9a92-454e-a80e-383934aec2d0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6e380e4-475f-42d3-ae77-78d3916ef96c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72eccaf4-1147-415e-884a-bfcfd50ac763"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27b7710d-db6d-4450-bbe3-150c69724646",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d34e1db-4453-44ae-90de-a1425bfb8aaa"
                    }
                  }
                ]
              },
              {
                "id": "743b53b7-4e57-4085-a621-4d31fc929ecd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b56c139-5f96-497b-9fdb-177e6b840406",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f71fa758-52a8-45fd-b5b4-71b987c93903"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9750dd8-577c-4ebc-aee0-14780bb1ba7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d0560f78-43b0-4bcb-9392-0239a48cc2ea"
                    }
                  }
                ]
              },
              {
                "id": "e50ae12f-a66b-4e23-bc63-a73b407910df",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbb72f61-a317-4307-a564-3d4395495a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad5b2dec-e364-40f1-9d24-a2b496e67c55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec2f123c-7cfb-4d70-9bc0-c8e0a45cc3ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5abddbc9-6499-4400-b1ae-7832d78e7cbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f67222cd-37fb-44f6-9014-28cd0e50d9df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b5e6a6-1d72-470d-b138-6c4730ac05e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9bf65d7b-c5e8-4c02-a894-67146f64332d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b72ec58-bd8c-4390-9f0b-35578f4d6509"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94c5ab52-9787-493b-832c-80ceba455f77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a8f56efa-8849-4a7f-8c7e-42ea02d04dbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37766a3b-7e14-4581-b229-ce5d366a5b32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eec29ef4-fd2f-442d-9e6e-ac21fa29d331"
            }
          }
        ]
      },
      {
        "id": "bcc69c78-817c-477f-8522-b83bf8bda63c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ba093a42-8dfa-4d20-953e-4a710602e40e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e37a6df-340b-4059-a6b5-e0e4ca4157eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b418b96-3af9-416e-86a8-f81d5895c68f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c6a0c9-19fb-4c71-ae94-69c9ebe96345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4185d54b-e659-4c9b-bd43-6b4ddca581ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30ed533-33d6-40ce-9c62-3740817abf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe0b2c0-340f-49a3-be57-96bb624823e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31949ddf-bee9-44d7-aadc-44e4ec87dff9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3803ef3-d6db-47c0-b614-de456cec4073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb5b22d-611b-458a-8947-e580ad9fe984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec5947f-6f14-4e6d-b068-5cc1ad02b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03731d46-ac5b-4c8a-b4db-512057c04924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69102b7b-5bf4-4a08-946e-53a79c4122cc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934e017b-fe89-4379-a486-119ede16a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18a677f-004c-42e9-b0ab-b777031f91b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22317f9f-f4bf-4799-ad94-bf8fa86b037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0acd5ea-97af-42a7-8c70-523355554970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b03ff4-7c75-4c60-ba26-8ee1b7a79d9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc667e9-9857-471c-a9a6-cb79f4c66d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b77edb-67c2-4016-8ac5-b7a7529e2ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2416482-fca7-46bd-a0d5-ff2e0b5db281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56e7cd2-d733-43c8-ae14-cb47152ecd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aecdeac-b6f8-44e4-bc25-6c53f0d4cc21",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3308d723-996c-4640-937e-b2ed44a2cce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5716feb0-9b95-4361-acf3-7da6d64714c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1a6a00-e172-44d5-a914-4631ae600cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "109e3d31-63a7-4197-9436-0714045b8438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f55abb8-bea7-468f-b9ac-db6911682db3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28904050-6315-4077-a768-2a7bcf5e4b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402e684b-0cc5-46c6-b08d-8cc4542b9b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fa3b72-6fb4-406d-8297-953b110bce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94f82314-d9de-4789-943f-1ae5d0c9c387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e70597-6f60-4304-b7ac-4dcb18e5d2fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68a26d6-d244-4d72-86fe-c59ad5b4e9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d17364-b1a6-41ec-bfe7-d7c554ed4617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62952ed3-3f84-4979-b97b-ba79ec80448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7181956-c9a2-43f3-8134-922119d71106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566b9e09-fc49-4833-bc67-3c22959b637e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0dc55a-ca4c-41e6-9d70-dcd46bd3068f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e3942c-4106-4077-92cd-7d96c56964ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14018fc7-0ddc-43ea-bff4-f399ff486822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba30412f-cd81-424a-8f84-0cc1515cc483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4aad49-3f95-44f3-8825-268165666331",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b64d3f-e3de-49da-a23d-42a0a656292e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd616bad-3249-49ce-a63a-4245d3eab80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0ec2b6-62a7-4c6f-9a12-7749baf67f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c992444-c633-414f-8341-24ddfb99386b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10453c60-9171-47cf-89b9-6fe2ac861c99",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ddca67-bbd2-410b-900a-78b70801e94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b56bce-6fb3-4d9f-8d7d-f0917dc89913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef823850-d7b9-4446-9bd4-3b112df855bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7ec068-3489-44f1-be64-b879a0cef5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a0302c-7144-4acb-accd-bccfcf0379c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77be5659-98be-4c21-bd50-74c8948aa37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328d26f6-9638-4347-9d7f-ac33522cdd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7471c3-d700-4b44-80ea-43ca17f6a49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "af61205c-f8fb-4c1c-840b-3eea24e6abd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c772c-6652-4419-9502-7dba59a52513",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63acc2f4-7312-4d4b-8954-64e8294ccd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f265dc-e348-4b73-85e7-710e77903561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ca117e-7409-4fd9-97e3-74b5857aae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f447ffbf-3a7b-4bb0-a6aa-4a6f07bd9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6c80c3-c1bc-46f1-a5da-da450ae82891",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bcd904-b392-4fbc-a84c-6899d602facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd04044-fdd2-4141-99e0-06f3a623bfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d09709-27fd-47ca-a659-477961fbc200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e391f0a4-14cd-4ad3-a65e-8348bf8d41bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4174b56e-7f53-4704-9be9-c142ccb2f5b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74081ecf-b894-49fe-83c3-20d9b0e421d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c007dc72-77fa-413c-97ac-600fe2a447e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417f2703-9c8c-49f2-adf8-cb5717a23f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a736849c-9297-470f-8fad-f0792d587ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe2cd5-80c5-4fc6-8bf5-4951ec44f6b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaaad1e-a349-4354-a7f4-d15f60f1b762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121d124f-5f76-4dfe-b22b-3c4a48e5f3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c045cef0-72a6-44b2-b2cf-4eb5e73badbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09fb099e-7ba9-4c6b-9ffc-4408a1f14595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2eeb971-55ea-4047-b740-9deb88de42ca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce10c20-9fc2-446e-830f-09efbe3afffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366390a5-3c5c-463e-b6a9-ced7e1b96ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e99d88-7d15-4600-b6c5-0242cebb7a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26a31aa-1909-4a1c-a821-96dc7ef1863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48569e7-b03a-4b00-91ad-31eed762d967",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c806b463-7fcc-4d85-a815-8b7d7ed04b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66be2905-8910-46e9-a21c-0245fd7b2b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97be127a-deee-41e1-a25a-a00ff0c53a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c975682d-fe78-471b-955d-5cc8b3afd325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a862063-bed2-45e0-b279-bde61ed05c46",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dfe918-0388-4e43-8702-eb80e2e1a34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f838b591-1095-40c5-b47a-a6c488ac57ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5425e24a-6f6d-4e09-a1ce-44884671fc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7c19b6-bfe3-4b44-ae76-44b5bc63e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f31f96-f2eb-46d4-a2b2-ae5399fbf833",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4df5236-1966-4420-89a2-4e247bd7a694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f0957a-c500-42a8-9585-db047190f7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294b6f65-ae04-4ac4-b42b-2ee9efae6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f6c691-1a9a-4ff3-8fee-31ec97d66f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3869f07-69a4-4f2e-84ee-891485ad912b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034b1da7-0efa-47f9-94df-875a21f04b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9280054-e7d7-48d3-9ae6-1da210994545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067a6fa8-763b-4743-bcfb-230c37e16ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a70d01-16a2-49a3-b032-9fc2b2db683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b688c31-bf47-4f5c-b73f-4998dfe55c49",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8310b6da-1f1f-487d-992f-87cd5a3f227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348dbb01-14ec-451d-98fc-a7aaad9cd0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76f1bd1-c451-40e3-a9b0-732291796854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b873a0a-a2c7-4e1a-89cc-41d9a7573bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06641242-2413-4221-90b0-aa554f9d8e06",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b82d11c-ac33-45c2-a9aa-5778f39e48d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20c26a3-3a46-4d81-ae9f-59f84d395fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce405de-8fd9-4acb-9019-a8dc11eb2d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce259c47-8752-4328-b9ed-884649c1f2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea53c7c1-8c2a-4773-a320-de2afe5513f3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273de940-2366-4335-a84a-97b1b54d1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd37888-9a47-4c8f-b5d7-a560d3f9e78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9401b9a2-e6ba-4a97-a004-081d5ead25f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7e27c1-a25d-4f05-ab66-018c14bedca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6637ad40-c03b-41b1-858e-eab2c3152dc9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90bd3ad-1269-4db6-b554-3314dc61e999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ba0d4a-1a3a-4be6-ad2f-78ffb97dc67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1982f15c-7548-4685-b3bc-094ab0c3b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af940dc-b04f-402d-bd99-0e6f30fc4052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92953079-09da-4f04-8b92-7711cddd230a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b00f06-20de-4a5f-86c7-7eaad2d9026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27eccefb-c644-48c7-98ff-ec9be393fdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b8bea2-ca01-4451-9d00-e8fd5a0264c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d05620-57dc-45e5-be3a-447fd30aee17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732153b3-204a-443b-899b-686a3d323fa8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4361160-dca8-41a7-a1c8-4de8f8325507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d69357-77cb-4cb0-93fa-4860c7ebc468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266045d1-cd91-4c2c-be96-58c78b5b8c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c79901-9aab-44d0-a7b0-04dcba6e9132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2cc96-580e-4808-8383-cea991b69905",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7233834-24bd-4d4e-b5ab-3ec3b02562d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc008f28-9796-444f-8980-6cc353f9b6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d58f058-c5d4-4e6f-9e72-35f7dca3c1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c65c34a-0c52-4fcf-849d-75e9f5363b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77150e6-9041-4251-af05-433c31748bb0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68321814-0b65-4cf8-ac4e-f60d7f3ead17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8f6389-7cca-49f1-aa2a-d113ca47b165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b18adc-5b24-45aa-8b5d-5e82dd9b14e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60590b37-dd2b-4d0b-8389-84dc43b9250a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8c7065-4afc-4eea-bd9a-52c020bdcb7e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7518011-15cf-4d93-9d02-7a5deb883dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022b0012-e554-4d96-ae4f-b7f664408dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49451ce-8d98-4f9c-bac3-e8f414e19de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d27785-69f9-4f63-8b01-d65503959ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ded136-8013-407f-9f1f-d3afec08e183",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185f1d4f-e1e5-4787-9aef-e34c4c735493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3242c8b7-2a26-4e7d-89ad-dfbb6befb06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f057a626-142d-4206-8573-a64ce3885b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85ce467-bb0c-4e49-9787-9766f91175d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e436e4-da88-4950-95fc-28f4686ee594",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece6c9c9-8baa-47ae-81ac-688d644d5ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fd0484-8559-4cfb-b6dc-5ceee779cb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52967563-fa79-4ef6-a55a-04425cef9480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd700f31-0a01-4747-bb51-212d508bb3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc12f9cf-64e0-4ddc-b4a6-26afdf60864a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91aa2b8-a219-48b3-83a0-0bb00aae979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbab4cc9-defe-4f42-a98d-359f6905b78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75a27f5-998e-4a5e-98fe-6a91ffb5903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41cdcfb-a8c9-4309-9b6d-7951fd6c6c1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d14d008c-4665-4f10-9965-60ff8d7a12dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90bf3d65-65f6-481b-a976-926fcb81c79d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bc7436-731e-46f5-8ef2-1b7b08a766e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29aefcac-0449-4330-b3bb-a30459c11f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8fd2a5-5ae4-4ea1-aa3a-74865ed9903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "348a5ce1-a8d2-4b1c-b33b-bdc233944ab3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "302055ab-ab2a-4bfd-96de-a00d3261d618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23ffc87b-0379-46b4-9fe4-ebb7b51e76b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e010afbc-5dd9-4050-8415-fc3dcc87b1ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28833d7d-0bf6-4b19-96c5-f075497812aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8e33ac0-7a87-4e1f-b1e8-6861192abf5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7dd2f36d-f32f-45e8-a7d4-a341158726ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "811939f9-ace5-4cd7-b2ec-1e2ead9f43f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4722a947-7bc9-42fe-8e76-ff0a168ee2c9"
            }
          }
        ]
      },
      {
        "id": "3a792238-5c2b-421f-b2e1-a8716fd58c7a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f8394e20-5418-4472-96e9-984e93a94b0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adb39796-c18f-46e1-afcd-7f84311507a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6269e9e4-ea58-4091-9209-2f34cd059cf9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab3749c-2c3e-4e07-a8dd-04d3c3f1278d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9106210-2838-4b49-99a3-8cd1c9e95cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0256cb43-a72e-4fa1-87aa-02853bb63801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b469c0-a61a-4f5b-8ce0-ca0b282bb9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c39597b-4d88-4078-b686-071b37a07deb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95781f44-c0fa-4e05-a969-10220ee29b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c1f42a-82ec-4709-9bab-08207564ee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d395e12-24c4-41a1-918f-c2a6ea0f2712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9f6227-c11e-446b-84d0-138e17565e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b00c831-8612-4684-81f3-836db162bf4f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cda09d-e640-40eb-a12c-d443d94edcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0989ff81-8808-4202-b1d6-189e8a2b6bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0719c3-c5f3-4f5c-abd1-0482054cc29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed22e8ae-a310-43d7-9503-49987da800d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3314c728-eccc-4bd8-b178-3baae3b8cb20",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933c7890-507c-40b1-bfd2-c39b9d3c176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f2067-671b-465a-9030-5961bff2f65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c541e0b-39b1-4326-b55d-cc0f58b70641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78b71ff-b987-4d45-920e-0e42e7e40151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad921d8-720f-4d21-8c79-4af674c0da9c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103f4edf-3ae9-4849-a59a-549131d62ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3bad30-f487-46ee-acb9-39b1a2529569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95968c78-5f8c-43f2-b3cb-e93cde3511e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08b7160-cbe3-4e83-bbcd-10d8c280e5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6102cf2c-5f6a-4071-a777-f2c4358c687d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523f0c8e-a00e-4c5d-931c-2fc9cc774631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba1542a-2ccd-46bf-88ee-b266a519d8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc254488-a584-4632-81ed-ae40a261ced6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2d24bb-8240-40a3-9818-b66d0d4e84ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f86fcee-92a6-4e49-985f-133a983178f7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a54946-67eb-4ebe-b7b8-c76b3afe4377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7814c2a-de75-4677-bfe5-4a2d46aa15c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6481b20d-1ca6-4922-9353-78b6b057e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b1c382-8078-46cc-8050-29e6e2dc4387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8623e0c-fd77-4116-9c19-18815312e6b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175ae442-0f98-466a-940f-7dd0f72ad7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882eea83-1535-4b1a-a12c-f64489f9d068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5c5261-e7e7-4b16-a0ee-bff385dd72e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12143ce-28cb-4f5d-93e6-de61637bb2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cfc2f4-f482-4bcd-bd25-0e7424bfcf30",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfda0f9-ff3c-4f73-9277-834cfcea2e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44c0bdd-a14f-4334-9284-7f1ac2b45c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79473c05-c973-4896-a363-6880e7b1452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ede04041-43b6-4245-9745-1b81eba86853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2a5a47-22a1-4438-b547-ecd970a80817",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1d51d9-5911-4b1d-87e7-46394a19ad3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627a0754-7ccd-4c5d-aaec-2e8b9cbbcdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27734359-ea37-4120-965b-fd93e7862815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e11dd499-fd8b-40cd-b657-891ac56a550c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5496bf8-6733-48d1-8a42-0e717b38db8b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cde7c9-ec1a-4dfc-a467-e18ea65e16c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4093df-d076-4f03-b969-46f7921c095e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be522493-e837-4a2f-b8f6-7ad9b3a76f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5d084f-d039-40fa-aa70-da56749c4e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6ee815-1338-4d0d-a5a9-882a45656e99",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee9a83-2c47-48f4-acfb-26aba8419f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b289a0-f4d1-421f-b066-ed7c1f8c2b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1387dfa9-43c9-4d26-b231-dc1b172e5684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1730fe84-2463-4531-8075-3b31ca455ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95544741-3328-4d57-b65c-7624647372be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889b7eb3-1cf9-4203-b65b-fdaa25add0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1df9f2c-0f82-42f2-80c5-bd95ca75ce2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09a49e-0524-4ad7-a1ad-80a8610b7377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8728fd67-7de3-4349-96ee-a5db92bdae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762d0af4-cc6b-4de6-97db-47bc09f8a4f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c886d7-87f4-4a4b-bf05-88b62088f5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923fa8b0-dd38-475c-958d-068941b04225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a17616-0a0a-43fb-b333-14e406ba875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7cece0-72ba-44ae-983b-74bae0244b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f6a742-a4f9-4454-b293-bfac40911c97",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401d99c8-34f3-48e5-9122-6f921dd46580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283037cc-4758-4502-b53f-4deced4d67b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a9024-712a-4e5b-a6e3-5d3a7a5df54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2322c053-d19f-4ace-bd21-4572158152fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f5e25f-3436-4cbf-91e1-8367691ec335",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25d7dd3-7790-4c9d-801d-2832d2423354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fa05f4-2825-4acb-86e3-d430e98eb04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0830e1-62c2-491d-997d-2fd58b767d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d1e48b-2768-4690-8977-8701cbd73e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a63ca7-bf64-4221-9b07-01bb53e5b6e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d3644f-27c2-4284-9d3f-292f1c40dfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749770ff-b6d9-4222-89c5-f3cddf034eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da97181b-c035-417e-87ec-3acd68c5f961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd4ba26-0f26-4e37-aca4-97dc1f18ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84462ef5-c1b3-465e-a6b0-08ec86fa086a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c903bcba-e635-4ada-99f3-2f958e6a9d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d43feb0-39ad-48f3-93e2-7953a75a455f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043753e2-f332-4af8-bfbb-1ca11c82c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f9c7cf-9391-4a74-b001-7f852fd06d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb99b7d-986e-48e7-856a-e349366f05e4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f88356-ca52-434f-a956-1e3eb8a642b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5879a4e8-ead3-49db-b83f-3c3157af7409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c0d2b1-fa4e-46f6-82d2-3c6ee8f370b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "249a1906-0769-423e-b736-a85ecc5454f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10c6957-8358-49b6-a724-d6e1238f3efe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fdb09d-c8e8-4e47-ac13-ceb19e206cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2377a57-77f5-4962-8cc7-ddb090f5945c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71669a8d-abc8-4146-92cc-21ffc723fbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69458bd5-b8ca-4b2c-8b14-c6308efb10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897d44a3-a059-49cb-81ba-3e4033c37bd8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0a3537-12e1-4758-92e8-95fdbb3d0140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd48e3a0-d496-4b1b-979e-953b91096d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d0f091-05da-4953-a95c-7fbfe7b562cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb403e6-4695-4c2e-9f17-de3d6eefcd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0a2c23-b2c2-4467-b709-538f30d96351",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0cbff0-13e6-4bfa-93b2-531bed99adf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b60eb3-de69-46e4-a863-2fc5386d21d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9bfc07-af5b-47f3-b890-e887623431e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41ffe1f-d604-4fa0-9581-e09418c52b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5c3474-1643-444e-ab9c-b6660bfc3bbf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c022612-2d9f-4325-b314-66cc801d6ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3e1664-119c-4571-9fe6-d6ce43a29999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe463bc-f4a6-4c68-b1e7-1cb3483aae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f700b0a-07ce-4149-b843-81fdfc06b8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad058c-09cc-434c-8759-ca63a47f47bc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2bd498-851f-4182-9da6-ffac8471872b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88033e3d-babc-40be-8c6b-0b4ce8a2c582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc38f3d-48f2-4e5c-b4e3-ee7bb6ded2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12e4c99-128d-4fdc-8988-587f70f61f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e8d336-4be7-4ad1-9b74-c7078e6b5383",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c3e4ef-befc-40eb-9262-01e7eeb35d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a2ca0f-f7d8-458e-855b-63e91cf2e85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd837320-d5af-4f37-b0d9-38b3476689a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0461dad-e54c-402b-880c-2d27e4b21d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fb39ff-6002-4078-a62f-2e09de0f5365",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022c54fb-b62e-445e-a1cb-50f26ef4b8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569220e4-1229-4fc2-9e2f-4ac083c1c723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd45b54-01c1-4f2b-a7f1-d783d9c473e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2caa7151-a816-4346-8549-203cd1f43ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b9a222-b350-4025-912b-686839324b87",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec61cdd-180b-491b-96ab-ae0f20fdbb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7f39f0-c939-4a88-92c1-a3086bb66148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c81b4c-9fdf-4c2a-a433-dd975143004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89fd632-f2c0-43d2-b2fe-368524dccd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8125d330-64b3-4b14-9755-f560ca987f4e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16ab86c-0683-4b9b-8b42-0587250603e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6566cf-50e5-4065-9058-c0f2ca97e476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a787350-acd4-4528-a04b-c4a1bc19d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2092ac0-152c-4c14-9bab-172eef670ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7cb843-8526-40ca-89ae-d3f5cf439d52",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a08d82a-8e21-4e43-a55b-e1fe447bbd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83efe7fc-6c80-4761-84ab-b3f46e11ff34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c044f-9ce8-4048-beff-232c969e5f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4fc798-6f34-4681-a1e3-66339595991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee5a6ed-26d4-426a-a1ad-b5a16b62cdd3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e96f36-ce3b-4b50-9a3a-7c938eec0fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ef348a-d18b-4150-91a7-b9de2a81306c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97a6681-9543-497e-90bc-07955483bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb0f7f5-7728-49b9-ba9f-cec4a1f8de1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d31eaa0-3bc6-4f85-af21-ca9ee3c6aae5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259d8230-3bdb-40da-982e-1dd84e59966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac4b552-21d1-4ded-ae3e-8938d2ebe829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f9f11d-5c53-41a8-9edb-a2a096ddd576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "549e30cb-6ab5-4929-aa6f-8e55b0b4d542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6143ed11-a950-49a2-81aa-f8ecb7fae6a1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd7eeb4-52c9-4df7-a6f4-4b703f95bb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d783d44d-d86a-4c10-9730-1826047c2b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ca3518-8e87-4a3b-a114-a523a4fb097c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2bce83-5757-4572-9968-3d1d69c9cbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a628ff-965d-4771-a98b-805f336da9ff",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eda7069-9034-4049-9218-fc91d2f05d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee12d2b-7605-478f-b553-28bea2f07db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185c83f9-5523-4bec-bd0c-87e50cc5f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4376a0-0b99-4c8b-95f3-7795f0494e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5cbce2-1879-4fc1-a7c0-637d1abd6b1d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a13e391-db92-4781-b4c1-d2f6b670d120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef7de8e-1829-4750-a43c-ac3c14e00d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b058e85-56b3-47a0-8147-e8cf7d85fd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc441533-eb06-44f7-a361-61be36020489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760a63c6-db26-450d-aad0-16c89eb20ebf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7889908a-093b-4798-b453-66007fe9e769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b3352b-44ad-4652-969f-6994a12caf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6161fda-7152-4f52-96b3-593a0202f596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "498fa29f-3d86-492b-a846-d396890e9296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463bf0c6-6bd6-42f0-a48f-10aa6a2d92a1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223351c2-e33b-4f1b-b7f4-f7c478d75f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a23b28-1ac5-4881-bbae-7e054e938d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1fc6aa-fa15-4a05-aa98-281f78615a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "befab40c-9c64-479b-b456-f3fc2b30a9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb0ac22-c8b4-46f6-8126-a21d10b8ad7e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5643ced-fb5b-4ec0-982b-e6802cf0231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b7c75f-3d11-4d81-afbc-99d35844bb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e93a155-a672-431e-9057-3a761c469422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab607860-8f05-4772-845e-8e5913640355"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92f70aa3-a6a2-4a2a-8a69-d46b1a0f5921",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46a7db3a-7d01-4e70-b108-c3f1e4ac76a1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17d59c2-59e1-4683-b6e2-9abcac111e6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd04003-ffe1-4719-b07f-9b94ea6cf149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11ea782-ddc5-496e-b34d-f36449333ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b46727ab-dc50-4911-8ff4-827f1d1ea290"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de2f18c4-5453-4b65-8054-bccbdd03315a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "975e5c65-e3e1-4f3f-8ab4-952d7a55fd3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22298c04-f306-47e0-be68-5d2fcf47d853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5995a75d-4fbf-4cee-896e-7a43a80140be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b863dd1a-4be8-495f-8597-4ed858b565cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f8c2ba9-4fa2-45a6-b0b2-52be34c931f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b62c9a8c-63b7-4404-b9da-515928e6efc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b6dec44-9059-4b7d-9239-fe1f58015209"
            }
          }
        ]
      },
      {
        "id": "dbae0657-59d8-4017-95b3-ff5dbc8a3a99",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "00de5758-f28e-4c3e-8616-ac0e156022fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84454926-b25d-4f84-9782-6b64effd9f7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb2461b7-7b61-4098-bc96-270106265f2e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1366da67-dc7b-47d4-8fb3-c8d445edc25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374acdc0-d83c-435b-b3f9-27857f43fed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0691316-5453-4739-9b29-8f702e704cfb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d025ce5-89d5-4b5f-8dd7-737bb9b3db72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bb5932-1c77-4510-a213-7f01693dda0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27d6098-4507-4343-a388-73e7c29e22fc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b4b35-1214-4eaf-a44c-88e1713c2b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6d0d21-9962-4afe-91af-5b98237403cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85eff98e-e52c-4a89-bf25-c6cfae936914",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f44ddb4-6350-4034-9aa6-7fd44c393ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd69a118-d1b0-49d0-ae27-883508293bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6521f089-753e-47c4-a692-ee3d9b976cf7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e92ea7-b885-41b1-8963-e86e5ebb8275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acd8587-e2d2-42cd-9a2d-f069e6efb3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c39aad6-2dd3-49f5-828a-eb47bb19bc14",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62b2f5e-bfd3-4cd7-8381-02e1ff2fb57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0f87f8-9bcf-42ec-83da-63db4ef793c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19965c40-da5c-4b23-97e4-cc9ec0472cb4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a56a04b-66c6-4ed3-a3fc-f82ebcd2ef61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae6f307-7b8f-4627-82fa-d843b4b42949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb5d3de-f33d-4095-96f0-c1e271ff3812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bd4fbe-d10a-46e2-af55-5b4767642683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142ce3cf-b678-4725-a3c9-364c456ffcc7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388b13b3-5d2d-44f7-b4d5-efc36542a29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d92a4c7-3694-4efa-aac2-72d43b89dd46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e447fee-da21-4965-8b93-da4e9a82d90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bce08e-7023-46d4-96f9-be8c7067c43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd233350-4f68-4744-9c19-c628e049aeb5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8219f9-540c-4b02-b000-76ddbf8b9be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10737e92-63b8-4304-aec7-aa223e6e5471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7dcfcf-2427-45ae-8e57-293aa976478f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a03e69-9630-4c46-80f9-b20d8e3697ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c851786-7236-4356-9d2c-15672088d59b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413601c4-be85-4d10-85e9-23f0bf8de925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fa4dd7-1f49-4767-8dfa-27916c9aca80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c3bc96-3102-4420-8bb5-a4c010bff5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0d0ba0-44b8-47e8-b738-0591a27dc893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6218fe-4e8b-4c58-9dd2-22481074067b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626af824-dcd4-4b81-927d-229104bd805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba37d4b-5966-46b6-a75b-4207b75a223f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69ce62d-5ccc-4b77-96ba-bd003d3f2e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0dc4d2-8254-494d-ab98-2303228ea92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71240a6d-0188-4c72-b47a-37f2948161fc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768e0eda-1082-4aba-9f08-5c12fa2f440b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d7176f-cfca-4dc4-acd1-07cfe55ccece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f465dc-8612-4d00-bba7-3cc61a1f5087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5a0f6f-dc99-4360-8c35-17582261b828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51873070-6784-4776-ad1e-38949179b3e2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d66528-a3f9-4f35-b14d-14e499a0d211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002171fc-68eb-46aa-8222-6156d0cca78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cb5a4e-99c8-40b2-bb2e-ded2dbc3ed0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fd6f35-9396-4bb7-8926-c5e49a25f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0c1d16-6f98-4b94-97bc-55ac6832fac8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4988e4-4399-46d2-9b83-c8d59a96a564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27dbe78b-8022-48a9-8b84-f279b9b581fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb5230a-f801-4bdc-ad4e-4a45915fb9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc13bc5f-fa34-4e58-ad64-2656f7a8bb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93030a3-d99c-44b1-b3e4-8959613e9d97",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ef2640-779a-4f6c-902c-fdf75714c421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf44385-442f-4f58-a10b-6161e786519f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e903e28d-8bf5-4a0e-84d9-e08353a3204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7456ba-dcbe-4e01-b881-c88a954a4f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b715ec-da9c-4ffe-a3b9-03161f50273b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8e68a6-ba6c-4124-bbf5-1facd23ca2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb494d4-a5b9-42ae-a467-785ca1ecad55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e175d-60a2-4525-91a1-16574a13d14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a524c1ce-01d3-4a8f-bc46-0bbf395825bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaef506-4fb3-4785-80a2-8438285d118a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8ce0f3-1737-4371-b676-76b828e4f38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc0133d-b19b-46d1-8831-3974cd33c03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6d77ee-2100-4c82-9729-77ca74cbdbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d443316-a9d1-42ad-b4d2-3b29e2b616e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87493b0-4868-4f30-b01b-8241c6e590e8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4e0bf0-2ffa-4234-9682-ba53f9a7a1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb225cc5-ae39-458d-a51a-3b9ba9febb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8158b07-d4f2-49ed-9d26-e14d821a33ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03152a7f-82f7-4c81-8558-b4a8c80c9121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f670bb-8b2e-4ce4-8d09-a109020eaeee",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471db3c1-d1fe-4c02-82d8-33f48307a77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e8f71f-1ce4-4032-8607-60a53ad10226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb486fd-7a8c-4957-adb7-ffa7057e1a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cb80e8-19f4-4776-ad28-48d07123d7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babda27a-d7d0-4849-be1a-0c7365e7cce3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0353850c-6cb9-4a9c-8c7d-d9bebbbb6d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae05be8-8249-49f9-b9dc-a6824e813816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f2b963-dce7-4f13-a31e-65d15652f85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ed729e-e582-40c8-a94c-ef38b953c908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c69404-4bcd-4e72-a53d-fea965c830f7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4eed49-9d48-40c2-b4e7-799c49adcfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b47cdf6-1313-45f1-8c0d-20fe9a1f3435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3489a86b-62b6-499c-97b6-955140334cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd2a57b-1ce3-4844-ad13-ea051f20ae0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b5b09c-6c6a-4c0d-81e0-18387fbd89e9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776b166e-5288-4e2b-aa95-857ac68ae66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b89e7a1-d602-42e5-ba67-eb904b77c099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730bae22-2816-4ae3-9d6d-96dd05ef4af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427581dd-69cd-43c3-a982-abd964e84470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3986c6d8-1575-4a26-817b-8e11235fb85b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f475f2d-cfb8-472c-af21-b4255030e02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c0ec3f-4d23-4849-9feb-a933fda4032e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fbafb2-c0dd-495a-b74b-37de90b72ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a59984-3690-4cd7-92ca-d282eda48af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cb24f0-7c75-4c64-99ff-478605ad4d48",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66beb403-ea37-4155-858c-d081b996cef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a879d450-8eef-48d7-b380-9338f2d58c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96559d81-b260-49ba-ab01-627bd3688872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d888806-17e9-4f53-8f8b-5ca3df830616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1edae3-0867-474a-be2b-94a4be305316",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43be3345-51ab-4b0b-99b3-8cb3544b4cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9aecdb-705d-49bb-8836-f800ef3e2489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cf8d11-86f3-49b6-aa76-d56cdb33c2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f98223-dd41-4089-84c3-5978fc0dede5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4622c5-a12a-41e8-abd6-c3ff042f1c40",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61eaa34-84c8-483c-a2d9-281da6213f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c031e6-b46e-4a5b-9641-ee2ace66d3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daded3d6-a255-4992-9f65-9fd4f69ef7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b88737-776c-40c9-b51b-d08709d6d1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b93386-a565-49f8-bc05-2c932210ffc1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6309efa-d7bb-461e-8604-fa122c42e2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb47cef8-23a6-421c-acbd-edcbad1e834a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db72eae-b219-4331-9b19-b5e07c14d2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bd1a71-1856-4c37-8541-e7dfe51257ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bb86fd-0ff9-4dd1-8afc-8da0e6a52ca0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e193d8-6ce4-446f-98fc-598406eec3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c4f075-f39e-4137-9757-2a5168ffebd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99caa8bc-b7d7-4014-ad86-7049bf73c43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3771fd0b-e22f-49e0-b3c8-033da7711b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1693e3b-3c6c-4ed5-8194-c98ac654838a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c2edae-509c-43d8-80e9-973d27500835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d402efc-7fe4-4a81-a01f-518aead0640c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f984f-c30c-4269-8ffe-faa560c4021e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71b4ac6-4751-4bae-8a3e-d411d5244c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea29f99-3da8-4639-82f3-687c3904cf54",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621ff63c-b0ae-4cd2-9a20-3f4ff5795383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551f505c-174c-46b4-961e-53370c7cd3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d744dd3-6aaa-4d8e-8c92-cc3bc6ba4a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d852240d-7bd1-48a7-86e3-840a23d5eb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd7e7ab-00fd-4e71-a55b-28bd8e9d0ca8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868473f6-d660-407a-8fe4-082f71f82cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04cc2829-6630-408c-a91f-61b89cb7a41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5248df-53f9-45db-9a54-7275e9f80ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1390e0fa-658f-4d5b-855b-41287007e583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095ff480-443d-418a-8732-c2d7b9869194",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a61262-ab40-4377-b504-0f07bd5c0abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99cda7b3-0e7b-462f-b297-c5d9188e6879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee80088-5688-4644-aa66-b40c1b1b41f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ace626b-d41a-450c-9b4e-7bcf1eacd7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3e6d6c-20d8-4ae6-bcf4-ccb185dea8b6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9255ab3-21b0-4dfe-a027-32849d24f19a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8320151-d524-43b0-9343-ed63a059786d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62233415-7daa-435d-9826-746951ebd738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529f046c-ba49-42fd-b42c-367453d76bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbad25f-4a31-45ca-b7d7-2d3b15b1eac8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e9ad8f-91b3-4282-92e7-40baaede0e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f7998e-334c-4b6f-bfb5-dc1c0e0bde00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447b9ca6-ea4f-470f-a404-76ffbf3dc488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b5b3ec-1b12-4b59-9530-89bc354ab3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3d5fde-29aa-4eb6-9e8c-c7eb4517f286",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d32fca-2daa-4b67-b63b-a552acb12f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d979d50-b4f0-462d-a86a-3fbc0cd636bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3609e5c9-5a63-4102-bdba-29a98ae5506f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7c4984-9e18-48d1-b559-08b30476e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1781175-f28a-4b8f-bdd9-914ed6e27800",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e811b022-cda0-440c-a2ca-6b3ee7ed020a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feadb949-08be-4662-9047-d8949b8ba037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d361d5b-6548-4e29-8702-7839fa7898a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5875ba9e-be78-4279-a868-fd0635f96f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa3c5dd-5615-4968-96bb-596c02563cf1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b88b8cb-45f9-4e1b-b531-e9bce32b6a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0a87b6-81f4-4941-be7b-ef156864b751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9e7b14-a09c-4125-842a-1fee74c45cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93217761-2882-4f34-b4f6-044acaac4074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca646ac0-d997-4e2d-838b-518c7a8e7ec5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6e4e43-aae9-443a-9c7f-45b4785a67c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378f044b-acc4-4dde-bc51-7543a6d08f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60461257-42c6-46d7-a040-ed0038e8e6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41baacd2-f0dd-405a-b5e2-211567da3976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6704a13c-328a-4ffa-a30d-8a7f0ddd55e5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02d6de3-733d-4cdc-9160-c2754cc50f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b0460d-e32c-4ef0-8047-644f781aae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bc128b-0862-4e97-9d28-a3fea5bdad76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878793ae-ffe6-49f1-a1c9-ecb691a8f358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839b9011-20af-4256-8d80-cbf5a4d7bf68",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffd3cd0-7260-4d48-910f-28e85821f2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900f8242-7d84-44fe-ac86-75719f5bdbcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086ad3c6-6e9d-47e9-a250-ef0a365ad823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fb4254-9cd1-4a5f-a00d-2032c0f63ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeae4916-ae47-43d0-99c4-bffd9ab08747",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb68c8bb-8b3c-4890-8f54-e765c89b4255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf3e504-8f83-4dda-9e1e-0c16d8b88dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7724d554-4e90-4818-a3ec-2a02112518c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bca723c-3d77-45b5-b591-288cb629daf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370937a4-478e-44ae-933d-a838f413f768",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8d428b-c84c-4f24-ac87-f5ae82253c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223c308e-42ac-459e-b74d-00d8d961008c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942118e9-4fb3-41bd-8c1e-4c4c0c306970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74920aee-8b01-47c7-85e2-ae2a07b2f2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaa56b6-b981-44c2-bd48-01b307cf28d0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e117879-a775-482e-b6f6-b816a380c76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead4a943-ea48-433a-a35d-4d38326ac1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0775d672-fa87-4bc0-8179-fecc494b8008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a617345-f4f1-489c-b005-8cd5472fb0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e446a6f-2714-418c-b42d-89e4454dec21",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb6305f-a289-4aa4-8970-c982b75dbd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41c6f92-7a3d-4033-af9a-00c152c9c817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1807710a-75cb-4b03-85a1-33d3154ec472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fbf548-3c7e-4679-98b3-f2029a40117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9152bb-503e-4918-ad4f-8fb8fb4a0622",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f989d3e4-57b9-478e-b79e-53b3cfb4b444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2f7b2a-ff1b-452f-8c97-96e78541b156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de5a488-837a-4366-bce1-879437dcffc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a63c10-bc78-49d0-931a-45f2344a9c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501eabfa-bbac-48c5-b431-cb74acbdc638",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b36a622-b647-4e21-aa2f-41dee42992b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e286ac-9ddb-409e-90ee-3ff8ff82a1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9e51d1-9e2f-4156-a5d6-e6ec78c59784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d61f23-360a-4ed9-b73d-b7e041d8aad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a667b6bf-f9a8-487f-8b83-ea4c8c55b5bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ae307e-d032-4198-aa73-5c66b0b88ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e16176-a6f2-4636-ab2b-e0c3d871a4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c202ca-9b06-4c66-80ea-170e969d8079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc3285c-99fd-4a48-b469-9cd8b3c781b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e00741f-2ad0-4a50-88dd-9f57d9fbdbf4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db68fb4-b793-48b5-b5bd-56330b35842b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b833b1a3-ca07-4f69-a0fe-51bf2ad786d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7201ddd6-b37b-4bd9-88ab-ea76cc90e5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca1ff7f-9d78-4edf-bdf9-3785facb9000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31450d2-b040-4c98-a5c4-f3bc19e1e9c9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754d5216-d134-483f-ae88-51b8ac4c6404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b6e926-3fdc-41c6-a4c7-65695e1ed602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5871db0-f7c6-4485-bebf-a8d1bd5b2d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abefae8-5276-4a3b-aef7-e282e5e8bd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a099c30-d01d-4d73-bab4-8883d91757ad",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5d6798-d988-4784-ba9f-08a5f8f4e51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96f424b-a45e-4321-9490-aec35ae4737b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98afcf7a-13f1-40be-8f46-758ff22cce32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d35555-f108-437c-a6d6-d866e00b6989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6541ce-5555-4211-9ee9-1083cc57cc65",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f55e869-70ef-482c-84f6-7ced3d37e9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e11539-84e3-4894-be8f-08930d92a754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22357358-c9b1-464f-8086-59b9d68f4e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e28906-3719-4d92-b181-340b099da330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eaf5a2-caee-4cfa-ac9a-0dd0b5ea630e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408114ac-dcf4-4eb3-9483-d9990533d76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc64ef4-48ae-450c-accc-5ca7692caa72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182096d3-292f-4e28-b913-4df43eb16cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3905a9c8-4482-4b73-b133-15ddfa92959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d63d7fc-ed3b-4462-aa0a-28188a0754a0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d877e6-19a5-42a6-a7e2-4e98b6d857f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b06d839-61d0-4b59-bc24-e66d74e462e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d710941-81a5-45cf-8ab0-8a2e801518e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b4a864-644c-41b3-85ef-b8322acec26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f629faa8-47a8-413f-bf94-019ccea681ed",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bc2400-ae86-43f3-80e3-cf935dd363ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec54397-1ab4-4f28-8353-5975472a8b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76353236-cd0a-42f3-a684-ffd45fbd2118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61aa0dc0-98a7-4f3b-a7e5-32ba71eb0fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0fcfd6-733c-4d7c-a6ac-23d2eaa7b2ab",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac4b870-6a33-4aea-a319-cbada3ea8dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf846b07-e596-4e3d-991b-b59b1edd4703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02d32eb-ae49-47d0-ac77-8694284034e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030e28da-5140-4011-8872-bb37e75982fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7df33fd-6c96-4169-9f1d-2a661d49598f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8820ce5-68bd-4438-899c-13c817a9a1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f179823-69ee-49c0-8898-94fcc58c8a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7738af1c-f4f7-4cee-9499-3203998deaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a8d57e-2db4-4513-b6b9-ad85112d365e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e46c68-a2c9-42c3-93da-570cc2dc8fe7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f23e58-344d-4c5d-ae70-d369cdbfd786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa86311-57e1-4e22-a4e0-5390e1401b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a879f0f-5a86-4488-bd8d-005f82bf1473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11964cc-0dca-4358-9dcb-f8ac42917196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae92bf57-4b00-41f2-8ea5-e7bc0e5ec9ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fd5232-9f79-4474-ad66-bfa168567b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56297561-9e17-4777-b741-23e427943707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d344c3f6-be5d-432b-8b94-4c3b3e81c743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5162b4d5-c78b-4cf7-ade7-e52cec4526d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b2e2ee-86f9-44dd-905c-4a6d21e1c3b7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e3ff08-17b7-477d-90ef-0144e765acb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b37c419-10a9-40fb-af81-9e2b76f62382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd806ac-6e7b-4324-b69b-e06cb9998d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36420f30-fd10-42d3-bc55-c8aaae45c7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a0169a-e27e-4ef4-a838-ddb03f1756b3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d0c97-138f-4295-a2e7-eb4b6dd65745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e602331-23c9-4847-8568-dbe0eebfcdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5915db80-88d6-40df-9711-25796016dffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd23174-fce5-4830-8546-aa78d6e6dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845397d2-6f3c-49bc-9562-bed79790c323",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5179a9-43fc-4e73-8f5b-55501b291a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528f294a-ffc4-4bb7-926e-8465ffdd023d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406a7ca6-0704-465a-be9a-a33f010c6b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339cce39-a414-439d-bfbf-bdfcc62cf4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b52d78-0b03-4256-8adf-5ef8f8d812ac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc2016a-9ca8-4f6e-89bf-7c238e98d23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a693001-a2e8-415b-8d83-9995fe3026a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660c65b7-d031-436f-b29c-1ca1b43cc50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4735eca3-d33a-413d-aa3b-e0e4007827a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90e7ba2-cc25-4949-b060-ac808b61c7f5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f535fc48-2b8f-4446-9a5d-4fe375e7e15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc804985-aaa0-45e4-a1e9-18b40545cf23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8c1b52-417b-47a9-b332-a778cd5d930b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcddcef-c421-467f-bc78-d7af0dd51d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51467928-975a-46e1-bf66-1ac3842e6a83",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffc9b95-3989-4fad-8e09-416acdde505c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc994ad5-692e-4829-b0c4-e64c52d2084b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7c6e4a-b152-4f65-a53c-d4ff85d23edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b90bb8-f479-49bb-9d8b-da68f528c6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ecd30-c6ef-4b1c-ab6e-c15686ebe8be",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19705378-9113-4e86-90e1-7a6ead9bf8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51136ccd-d160-4cc8-8aa0-9c0811d15873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80452dd-4e3a-4fc9-8286-8e59f295c413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2943ca-a1c4-4de6-ae4f-a584f97a0c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade82449-4b94-4d84-be5c-686ce9a15ba7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d2f14-7873-41d1-9549-9e1a48aee488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d11b4d8-126d-4aa5-b2e0-a6a545fab067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efa32d7-3b1e-46f4-961f-daf60db4ee6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879ba839-03f8-40d5-b5de-c01ee4c29816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038241d3-3b89-47ef-990a-e42a2f9e32ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848a0569-54c1-4c20-a222-8dcc98391b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c72aea5-0aa4-411b-8007-7e75347790d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dd8bb3-42ba-42c5-bf37-43debbb22622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d00eb44-d29c-49dd-9f70-3f930d7da15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dc1083-4c0b-49d1-b459-993fa2316b2f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61defafc-e686-4af9-a080-b45e8ff12dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67ff427-8126-43c8-bbd9-00bbd330712f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d91923d-1896-4290-909c-e5593f36e899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae00bb9c-9215-4d04-bb8e-3610994f6e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1abea2-ce24-4880-8feb-e24fbf3f0f23",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb39791-5b98-4b7e-aba0-c792c5346fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06a4283-2ad7-445c-9149-b3de4cbf2676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c264d6-bc6f-425c-b03e-7ff79c39db81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc12bfeb-6ac4-4896-89ee-4f4a74c7d32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f583d62-ed8d-43a3-a3c2-5381e1d55dcd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901f6f3d-a52c-4e1f-9a0a-4a8664c3cbfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19b3d6c-0baf-4dd5-b268-c527d7ec48f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9801fb11-033b-4320-9d22-6323c85b5784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ddb5a4-af00-4861-92af-15798c376397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebbaf63-76e6-45c0-b333-3031c4fc99cc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a009a46-a6c2-4c91-b48a-2fded3f4a0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5294aae-5878-4f4f-ba81-d25fa75c58ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abbfce7-bf55-4924-8c8c-5c3d3f0bd05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3117098a-4d69-43db-85e7-3f05b733ec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ca353e-efab-4d2c-a626-ba4c1888f497",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe525d1-54c8-4c9b-b207-b9c8f233f5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d6c7a0-085b-424c-9df1-705a79a94ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1353200e-fe76-4d6d-9188-94f16e1cc013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237248e5-2d87-4cd3-b2e1-1d84b514eea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e95c091-177c-4e14-a566-289cf5424a1d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca88bc7-c440-4a8c-b274-ce36f1611e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02158cd-a034-4e2a-9272-f85a2e7fc8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f25915-2b88-45bd-8a30-8eb0d9fe94ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a98312a-c9f0-40c1-b5ae-82fd04c4c7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e6f540-f3a9-4052-b929-470c42c2d0eb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5eb3ae-c154-4886-afcf-e5e8010c0f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a6cefd1-9686-4c05-a793-afbe8e98fc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824bcef9-33d0-4d51-9fbe-5b0cb5849915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedbaf08-bbc3-49bf-b8db-3bba33de2fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba0bb5-428b-4ee3-8028-a2b9e8d1b59a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35218ee1-58a2-4e88-82ee-c0ca4788dcd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae2e3e8-c80b-459d-92a0-c945eb9bf08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ae1793-f995-41ca-9de2-280ecc630385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4c9fe8-83b6-40bb-9979-7c6561133e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adbebfa-9a96-4af2-a550-b366ac28f61e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b69178-a527-47eb-9afa-41d18ce65891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712cc164-cdfa-45df-b46f-cae6da00a194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc42df1-9ea1-4464-8de9-a3f0baceec7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80edfaf4-a1e7-48b1-976e-1e02b8b21f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9812d8c0-5a5f-4f0b-ab10-983a0a5125c7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11839a3-9e24-43e5-ac89-a98e9a966c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903d53ed-416c-487a-9c8f-61fb21a07efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d693caec-5700-44cd-99c4-c7347b78c326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed02732-71f0-4813-b894-368ff686613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ea8a06-4f0c-470f-abe0-88198af90cc3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21dd0ba-dc43-4137-a11c-f7821cb02d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f8d73b-07d9-4a0c-ae67-7fd00a417056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e37a3d-7dbd-4696-bf22-55ab1138608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b130f53e-b715-4eba-80d5-66999e4faea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8792d0ad-d4ff-42c5-ae42-6170e4812214",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e1cc3e-06f1-4861-a6ad-a196bff4c81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d040c6-2011-4086-bcee-97c32e2d8a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb715af-2119-430a-9236-69a3fcc6df7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a599ed-5faa-4f2d-8fb5-46aa5d00474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd81ef7-ca52-4d9e-98be-d7a4c71069d1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0254fe8-dcc1-4d13-a0b1-893a516758a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ab8d2e-8c02-4ec5-b49e-9a167c08f807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f9be46-4a1d-409c-af27-c80ae2de1321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7dbfcd2-4fd4-4b2d-ae3d-d0161a9354a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3d3580-c3a1-4302-ba70-c8b0ed8a5ff8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b03d9bf-3f0d-4d2d-a7f0-ab1a95720b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4879fb2d-d7d7-4a03-b065-09e8211dc718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b99b70c-3464-40fe-92ff-0f169f305982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042229f3-e680-405f-9092-63e4faf3c9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c22e28-e442-483a-a93c-30dbf55ddb08",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db97e032-485a-4726-a103-eeec44b8f3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e19866-2673-4687-a761-0484e0401933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78175cea-763a-4f5e-95d2-689b2689e2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7362aeae-3b59-46ea-849f-5b942ce5a8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b850c6-7d79-47ea-8e69-75ff0532b00e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd6932a-9dea-4ff6-a7a3-fd8c41c0aad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc050175-05b7-4497-8690-7dbecaecaad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068d7a59-b9c5-4230-97af-782b5368a5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8237895a-56c1-4c6f-adb0-86fed43e41d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b56f684-7d8c-4514-b48d-03d2bb4afc92",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb0f5c9-9111-4f6c-945b-f1fcd65b51d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4421edee-f426-49b5-8226-5fa765659718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2d871a-3c91-44e6-997f-a33ee45430a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b9d4c8-2795-4303-b2c0-f1ea61450677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2caf63-d8d1-4e7c-89f4-b10058f0a625",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b75a3fb-f56c-4322-a2a4-9f1886cf8136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101336a6-5cd8-45ff-82ad-3de1830d1bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2320b64b-60fd-4d2f-87fa-5c16cc39255a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26130a03-500c-41cf-86fe-f6a8b1b7eb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b81dc91-cf13-43b8-a903-78f72da35ee0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c046f842-a5b3-4e83-87c9-0b4f3ce76636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199d8c16-5acb-4e65-a7c6-ac0eba8bab81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3680ea01-a951-4df6-88c2-f4e63e808f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a745aff1-8a36-4607-9b2a-7048ce7a3bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a528180-dde0-4e8c-9ca8-a079747a7666",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd737143-7f0e-474b-a122-8519ae17a098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e54318b-fd0b-4499-9078-54037f0e1465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4ca122-8086-4b9f-892e-deea733154cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2647856b-c090-46b6-b078-dc3dfc197dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fdd089-d545-4ad5-aa77-252fd51e24e6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e96f57-18b3-47c9-bcdc-5bbf26256740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7316057-2b97-4629-a315-3c1273a6baae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64f9f39-bedf-488a-90c6-4a69ace2a566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2b41ea-6fc4-4e89-b9eb-9d400cd2c57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b85f19-6d20-4673-8799-f4efea7c73cb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63f1e90-17d1-4643-b6a9-c8f119ce8875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8821d57-508e-4558-a3fb-bfdc623e2e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8384a806-7cdd-4ce0-929a-2c83c8ee5f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2505dd4-c793-42b2-97cf-a947152a521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eca3d6-0d86-4835-8507-5853baa10972",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21d764d-6c3a-4cff-9827-72369c99f236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142e7e82-6a1f-4bbb-99e6-7e8268bf85ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076228ff-2168-4b0d-b336-e9552f2d9b43",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee965680-fa48-472d-9146-bad4ec22d26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173994d2-a29b-48d9-9d2f-86a17d66722b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff697c04-3a99-486c-bfae-a8b1b94662e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db501d1e-8a9a-4866-8721-b40eb5594ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aabd4c0-b593-4196-aa71-89f8ae47283a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b1c24a-3bff-4334-9e46-9e320c452ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c6aff-62a9-4370-b65d-f872dc4c1f81",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695b200e-2747-4482-85f8-264edbbfe752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521b0792-0619-4eb8-8290-2e084b5d1e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d781ed5d-283f-4b66-b71e-aafd703debe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14e3214-6b94-4f69-ad84-69dab1f445cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd62352-0b12-4b4e-b3b7-e3c8d763a258",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c15b327-f58a-450d-b606-ceaed604fe25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9af69a5-816a-4b39-b540-9d01bac7672c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce0b6fe-09a1-470b-8e38-951a3bdd0a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a129720-96eb-40a7-83cf-27ef351b6277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a81749-cba6-42ca-998c-980a590c3c55",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebef34a-4fc1-4044-8b28-7738220c3e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c7c10e-1b1e-47d4-9338-4a403c5ecf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7228c6a7-d4da-4e02-b1d2-9c7cabbd84a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8156e06-8a8a-46a8-bd7c-b77c1fdd3e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a8f7c-81b4-4b1a-be66-4c3e79326e40",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d7df3b-222b-4675-97b8-520b5e63f37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f619a2-0ae3-46ee-ad54-b65a5b817e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71875ea5-2886-46b1-bced-6a44049097d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a0853d-4499-4982-b140-ea6e49667439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce34f805-765a-45bf-ba8a-3323b52da9a6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1148f1b3-342b-4925-b060-cec476449e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc65fa2-4344-4fef-80c7-cb94762e7b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29b7f0-25b9-4d07-bf6b-2365e4932ed8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c188de4e-2829-42d7-a750-5384cb9ce85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c779eb0-b2f5-451e-ad3d-ef61ad92ae6e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e936e422-39ea-4be2-acff-20b2bfc61ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd803ca-ea7b-4ba9-8ac3-056d1bf4de8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114ab31-8d4e-4711-980a-fc038f446040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac565475-412f-42a6-93f5-80b23c799386"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d776ff27-0ed3-4568-ac40-ef70976d3539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f674929f-29fd-4241-9ce4-e6a0e0f4a60e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "059f9279-452b-430b-b0ea-37866f964456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "381a543a-cb02-487a-bf28-fcc801e6028d"
                    }
                  }
                ]
              },
              {
                "id": "bd7ba19d-6ba9-43e0-90d4-6cd973f5cb40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bac1d3df-682e-44c8-8a75-3a2384501365",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fadce6-6d1b-4895-a494-8bdcc62dc720",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f80e4ca7-bc72-41db-9351-5c51f9886a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc5c303-7f28-46d4-a72a-6a82fe12f953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c96aac29-60f6-4152-b0a9-675666ef8c61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d92763a9-9d64-4682-a024-08f5590262a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "499d0262-480c-4c0a-be7e-241c55f77228"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4ec5af-dcf9-4c7a-bcbf-4b7538432be5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "652a4aee-7b36-43b2-990a-4f37392c17d5"
                    }
                  }
                ]
              },
              {
                "id": "85ab9914-7791-48cf-97d2-49faa1b8b9da",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4d102a24-def8-4d6a-962e-e83525254369",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f2339a-47f7-4d96-b225-81a47cbe88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "afb0631d-0610-477c-a2cb-3208fe599960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0393d9-3b03-420a-8926-beeac75c0fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e84f6c4-515e-4c0e-bc5a-616b63967f0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "70846ebc-ce34-4db3-a9cc-f7dc75217e44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2546d0a-a9d1-451f-865c-ab46042ed78e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41c82f07-6cbc-4e11-91c5-0f6f39e05d28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1b8de93-4744-4a05-bf76-bc413b816796"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "247215ba-fd6c-4cb4-8d63-365e392e5269",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ec368e6-2824-4585-9325-f07508131850"
                    }
                  }
                ]
              },
              {
                "id": "b3210ff3-52fa-4b5e-90a4-b8cb5eb3a0fa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89096628-f8f1-4246-b0b2-8e965f50840f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c31bb0c-35e6-433f-ae8c-d3b746fff847"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4185916a-1350-4f4b-a582-69810d91e6fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18451a37-6ce7-4ea5-8270-c33731902fe5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc60fc34-dca2-4c39-82aa-be35d686af72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e7cf61d3-2f37-471e-8007-0039eda1edd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64c8369c-2dec-4d82-9375-6902d4e6a35c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "448cdba6-6ff7-4afb-911b-53539f9d7d5d"
            }
          }
        ]
      },
      {
        "id": "2f6356c2-2b58-4fd3-91f2-418f91c29844",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2e62473b-9c78-4d84-8a6b-e0694728ed29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2169e508-f286-4b7b-826b-799e0e910d78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5229619-75ae-4234-b71c-e2a20714833e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcd0dd1-0dac-4794-a6f3-daa9b469d6be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d79e439f-1dcd-4322-b404-4c2531a78bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e95c9d7-a338-488e-bd77-c26a3f8dbd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0743d7c-fce3-4c47-8fd0-1108946fc6fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c8ff868-961b-4892-9ee9-7471b2d21ae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d5a97af-21b6-45ba-8909-8307642ba9c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef3d8435-6077-447b-ab30-5a4166858cd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51b23047-17bf-472c-aee7-54b37619c8c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c38bdb1-bf47-4121-a112-e8214386270d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0375362c-45d9-4c9f-bd5f-d8b261e8f1da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "750a3d9e-7e5e-459c-9318-dbd38743312f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ef9459b-16d3-4257-9840-0f5b6e918650"
            }
          }
        ]
      },
      {
        "id": "2319e7a7-f0e5-4f1a-8edc-58e5aa81f7c7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c3b198bc-628a-4d98-b4c5-80ff053f0567",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91e19238-3870-42b2-944c-bed54724a074",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0e8a3d2-3cca-4825-89ab-c5b9ddbe0f6a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baefa552-f46e-4de9-80e7-6c9809892b2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b71bba-b738-4c6c-96b4-de3036d1b023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e57600-f619-4404-b152-a5c6d5d84886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8a559e0-0083-4505-9fac-560b4cf5914d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d6a75ee-f5a8-46a9-b75f-14d4f8f94208",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bf3583d-f6c1-41ba-9f8d-e09a4e9a6c00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33a07ac0-093c-45e9-90af-cf6659ff25a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d72495bb-dec4-4de9-912e-7a77d7b397bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61d9a245-3735-4130-bdeb-1da9c6135202",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1af677cb-708d-4bb8-84e5-925a7ad978d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83725d41-3612-4cd0-a926-9271a4b4af4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18c20991-1a88-4326-b3e8-47735ebabe63"
            }
          }
        ]
      },
      {
        "id": "bbdb3594-f380-48c5-8c34-bb0acecc4bda",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2908319c-3f8a-4243-8654-1480d52e9aad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea9b0d34-0a40-41a2-b65f-137d99b2acd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f0d4e76-0b82-453e-8958-61acd1a259cd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e9359f-cd57-4ce5-a1e2-66c0b3134dd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cc07223-dc16-432f-87e3-86d8696e4eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b54acf-167f-4f00-a352-5c7c943369f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91dd05e1-5415-4ac3-9633-05334a409583"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4db5a687-840e-4899-a16c-e3e5fb8f5c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d764ca2b-b59f-47a1-a64d-087129887c22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdb0360f-7991-452b-b7a2-30c124a3e96d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a49dc96-7995-4dda-9f8c-83107e91526f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1d421c9-fb2c-4209-99c1-2f16dbbdd87e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "328873ec-8b74-4dda-9a2a-3c1730333243"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de58b0f3-05ef-4d5c-94ab-417f5a5a4059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "573d5186-aa4c-47a1-ac20-58e652bfdcd6"
            }
          }
        ]
      },
      {
        "id": "c3aebba6-c22c-4520-89f9-aee97e724f52",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0700abfe-1744-4b40-a867-6b0d07f1ef53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b4c06ea-a3dc-45d4-81df-58edd159dd00",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "319dce70-fedf-4d70-b84c-39d229e61be6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cd295ff-208e-4dac-bcea-a9b3efa920a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dbe0ea4-5991-4fd3-b308-65c9ec2dc12e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.768421052631577,
      "responseMin": 2,
      "responseMax": 471,
      "responseSd": 33.01954316522659,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704760602565,
      "completed": 1704760614451
    },
    "executions": [
      {
        "id": "0a7bf686-d1ec-46f9-8c68-d06b2905fb5e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3467949e-442a-4fb7-9a34-7dd4281c4a93",
          "httpRequestId": "afb8f571-798a-42f5-84a1-85ba849498f3"
        },
        "item": {
          "id": "0a7bf686-d1ec-46f9-8c68-d06b2905fb5e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2f6034a7-b49c-4137-a078-4b84a4b5a625",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "111ac20b-c6d5-4ece-bd7d-6f2e147166db",
        "cursor": {
          "ref": "d0fb3f97-8190-470a-8587-b27d8210536c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab4bf6c9-4ed4-4285-9c8a-d4b5e609c58b"
        },
        "item": {
          "id": "111ac20b-c6d5-4ece-bd7d-6f2e147166db",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "72f06a99-aed7-42a5-ad8f-4e31a08d901c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "bace6d81-cb73-4499-b744-cd1f7ce94834",
        "cursor": {
          "ref": "c9791c04-80d9-47ec-9567-d4bee80ed27b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "47922f85-0b85-4718-b88b-5b73a9108694"
        },
        "item": {
          "id": "bace6d81-cb73-4499-b744-cd1f7ce94834",
          "name": "did_json"
        },
        "response": {
          "id": "c3a30747-f766-481a-b0e0-148ab02797b3",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0ce87e-550a-44e4-82a5-178d4b93b882",
        "cursor": {
          "ref": "d2ca329c-a307-44bc-abd1-8892526d1830",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e966c09-73e6-43e1-b6ee-2a6c4ddb4f51"
        },
        "item": {
          "id": "9c0ce87e-550a-44e4-82a5-178d4b93b882",
          "name": "did:invalid"
        },
        "response": {
          "id": "b2bb50ae-51dd-4509-b6b1-e5e867af6e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0ce87e-550a-44e4-82a5-178d4b93b882",
        "cursor": {
          "ref": "d2ca329c-a307-44bc-abd1-8892526d1830",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e966c09-73e6-43e1-b6ee-2a6c4ddb4f51"
        },
        "item": {
          "id": "9c0ce87e-550a-44e4-82a5-178d4b93b882",
          "name": "did:invalid"
        },
        "response": {
          "id": "b2bb50ae-51dd-4509-b6b1-e5e867af6e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635c7d25-e480-413c-ae9d-294e3f1ff1d3",
        "cursor": {
          "ref": "07029ac7-0a57-4d94-9b7d-a3a43154cb53",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d9834ae7-19d9-42f1-ab40-60f02892dd09"
        },
        "item": {
          "id": "635c7d25-e480-413c-ae9d-294e3f1ff1d3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cc27860e-40fb-42d5-b10e-ba1d32be0029",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed114f4-6471-477b-9301-1ad2dd1c504a",
        "cursor": {
          "ref": "2fa739cf-398b-415c-ae50-48f34186d4d9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7e8aedd-6dd7-439f-b986-c030c17d2039"
        },
        "item": {
          "id": "2ed114f4-6471-477b-9301-1ad2dd1c504a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2fadc45c-6e75-4f67-826e-1d38010b202f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32085b98-c5b2-4047-93ee-c1dddcaa1556",
        "cursor": {
          "ref": "47fcf9b2-f148-411c-8ce8-6dd2e9a2339d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e64af760-1bfd-4cba-913f-803b21cbe40e"
        },
        "item": {
          "id": "32085b98-c5b2-4047-93ee-c1dddcaa1556",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3507c029-4e97-47aa-8dd6-ab158481755e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cfb0a5-1f17-48a7-97de-ec659957c186",
        "cursor": {
          "ref": "f75c980f-4a08-4137-b741-edc37e738b1d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b7e01c1-437f-46c4-aae3-0f0331bf8084"
        },
        "item": {
          "id": "a8cfb0a5-1f17-48a7-97de-ec659957c186",
          "name": "identifiers"
        },
        "response": {
          "id": "9df82b90-ad0f-45c3-81d1-a535def3a82e",
          "status": "OK",
          "code": 200,
          "responseTime": 212,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73f3fad-51c3-4b0e-9446-1cc72f94ec18",
        "cursor": {
          "ref": "df99e383-50ab-459a-a7ee-ba4b8fd897c4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "55090114-02a1-49fb-8a28-6ba233e1f74b"
        },
        "item": {
          "id": "b73f3fad-51c3-4b0e-9446-1cc72f94ec18",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "401948dc-805a-449e-a15b-8d93ed5139ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b8f06f-4fb3-460a-bf7f-33c914ed1fa3",
        "cursor": {
          "ref": "c825b70b-936a-4713-af6f-55ffdd79eb3e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c605e53f-a51f-441c-a0e0-0bb453c07496"
        },
        "item": {
          "id": "41b8f06f-4fb3-460a-bf7f-33c914ed1fa3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "148febc3-642d-4ee6-98cf-497df3b664c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12955fcb-3b10-42d1-aa90-22d7c01899a4",
        "cursor": {
          "ref": "61e96763-fbf8-49cc-889b-ee4ab0ba56ca",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "76a090d6-ce5d-48d8-a141-3453902fc441"
        },
        "item": {
          "id": "12955fcb-3b10-42d1-aa90-22d7c01899a4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6b4078be-2886-4f27-a564-aee49e1d8eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f5545f-474d-4183-bd50-2532895d35c0",
        "cursor": {
          "ref": "850c4c05-67ee-423c-b536-fb3ba0b20fba",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2a3bc128-e1ac-48c0-b4ef-8f5684d64a6f"
        },
        "item": {
          "id": "37f5545f-474d-4183-bd50-2532895d35c0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5e261423-cd14-4d28-aa7a-40ebadcb8639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943d04c1-b212-416f-8135-184fd227899f",
        "cursor": {
          "ref": "9b622e73-6236-4cbb-ac9a-8843328dcf95",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6f23d15a-58dd-47f1-a351-2b055ca0ecd7"
        },
        "item": {
          "id": "943d04c1-b212-416f-8135-184fd227899f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "651cb2d6-41f6-4a58-9675-acc2d3ef31da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8168caf5-8c87-4189-96dc-cc056c7e30b9",
        "cursor": {
          "ref": "5fdd24ea-00e1-4dec-a491-237608acae68",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a75781a7-2169-4be1-bf2c-22d53711433d"
        },
        "item": {
          "id": "8168caf5-8c87-4189-96dc-cc056c7e30b9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "362dddd0-8e30-4e53-a20d-e00b3f68acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389c560e-4b09-4e0f-aaa2-dea124940302",
        "cursor": {
          "ref": "fab42173-8f05-4eef-8bea-f22d7c698ab3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8fd7d265-5eb8-457a-bfd2-0ac612578aec"
        },
        "item": {
          "id": "389c560e-4b09-4e0f-aaa2-dea124940302",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1634c82c-df5c-4b7a-8d1e-16330e421a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401ca5f8-d078-43a9-a4fb-feac45902798",
        "cursor": {
          "ref": "f7fdb0e5-b018-4c4e-a4fa-46c739bb8a80",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7ff13577-6b72-41a1-8cd1-6f16010cc0a3"
        },
        "item": {
          "id": "401ca5f8-d078-43a9-a4fb-feac45902798",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dacb54dd-1e70-4cb6-9aa8-c91c42098e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc66fb8-9073-4b67-8dc8-00f9d5f98a38",
        "cursor": {
          "ref": "152af501-13e4-4e60-a5c6-619a02e46dd3",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ad984045-2a06-4f01-aa85-e153d5f81cd9"
        },
        "item": {
          "id": "5fc66fb8-9073-4b67-8dc8-00f9d5f98a38",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f253aacf-bb74-4b1a-9de0-379ce19df3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5f23f2-11e6-4071-9743-f4ed3f63dd2d",
        "cursor": {
          "ref": "d3f278a2-bbe7-4515-bfb3-4be6f4c469e0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ace0c4af-dea9-440b-9472-6c4fb8fb3d41"
        },
        "item": {
          "id": "ab5f23f2-11e6-4071-9743-f4ed3f63dd2d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "18ff80ab-246b-4e6f-b439-7fa6ef780131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8968ab60-e739-4d30-8fac-4715b46c9ee2",
        "cursor": {
          "ref": "558e276c-ce8a-4a9a-b16c-7bb231065a5e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "67166019-02f4-4bd2-88cb-12bc86ce216d"
        },
        "item": {
          "id": "8968ab60-e739-4d30-8fac-4715b46c9ee2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e4a36ef5-6aee-4a45-8a36-3a5f6b5f2786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3646e664-fe85-44b8-b789-64380f30c863",
        "cursor": {
          "ref": "9a4ab3a6-d9c0-4977-91af-229a4ed60d0a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b3a6aecd-1231-46fd-9cb0-9b491d47875e"
        },
        "item": {
          "id": "3646e664-fe85-44b8-b789-64380f30c863",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cb864076-19f4-4aac-bd64-28395d2032e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a63d41-f593-455d-9cf9-df53881d64f6",
        "cursor": {
          "ref": "1ee72eef-8df6-4180-9931-bc19004ceccc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0f27e5f4-7ed3-4c0e-b758-111182060cf8"
        },
        "item": {
          "id": "93a63d41-f593-455d-9cf9-df53881d64f6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b9f6f0f0-342b-46ce-b57d-a1d13057afe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b827a6a6-aefa-4a5c-9ddb-76bfbfe6ef5a",
        "cursor": {
          "ref": "d959af87-b78b-4c96-a966-8406ff6d1fc4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "071e60b3-25b0-4256-978d-18e7b7b5366c"
        },
        "item": {
          "id": "b827a6a6-aefa-4a5c-9ddb-76bfbfe6ef5a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9c06bfdf-501c-4416-b5f0-ebe8e4d98c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a531c36f-8614-4d76-a1a1-9b03c96ffbd7",
        "cursor": {
          "ref": "924945a1-c0b1-476e-bd1b-0e3c61360e59",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "36160e73-e01c-4209-a28a-b3222b465e19"
        },
        "item": {
          "id": "a531c36f-8614-4d76-a1a1-9b03c96ffbd7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5008a118-ab1f-4160-8d39-cd94fa686ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe4927d-1946-448c-a817-9fc777efc4e9",
        "cursor": {
          "ref": "52b90cf9-3a70-4d15-953e-4e8e1d84a11c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2ae2a50c-8543-4efb-82f9-6d01f8b79408"
        },
        "item": {
          "id": "dbe4927d-1946-448c-a817-9fc777efc4e9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5d5a5abb-1cc1-4d35-8bad-f86e60334f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc83d68-7e77-4eb1-8453-fcc32281021b",
        "cursor": {
          "ref": "79efe78b-f51c-4a46-8914-64a9250d6e7d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ffdb725d-be2c-4b13-9161-a8320df82c94"
        },
        "item": {
          "id": "0bc83d68-7e77-4eb1-8453-fcc32281021b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "45ea970f-c15e-4e17-a1d6-82518024262d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68066c93-f3b3-4929-81e4-f3015973f20c",
        "cursor": {
          "ref": "d808134b-496f-4745-8755-ade247c1dca4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f85108e5-e8e7-49cf-a9e4-3131c85d9d6e"
        },
        "item": {
          "id": "68066c93-f3b3-4929-81e4-f3015973f20c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f12cae46-4933-43a5-b92b-8f0a544af00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b804fa2f-1d78-4f67-8d69-760982bddfd8",
        "cursor": {
          "ref": "513e87f9-805e-4428-9bf3-1ca0630d1d1e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "956ac0bd-1722-4032-8de4-4dcfaf26d60a"
        },
        "item": {
          "id": "b804fa2f-1d78-4f67-8d69-760982bddfd8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "37911505-d762-4a5c-abb9-8970f236db9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946941d0-93f3-4b40-b07a-404356ee85b5",
        "cursor": {
          "ref": "95e56574-d705-4acc-810d-c3fcd714da4e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "62a76a2d-415d-46e8-9b41-d2dfd4173535"
        },
        "item": {
          "id": "946941d0-93f3-4b40-b07a-404356ee85b5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0b85dd3e-ca08-4e4a-a452-6f00aa2ddf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d84505-007b-4aef-8e68-922144478d5d",
        "cursor": {
          "ref": "6c4a6156-7b77-4382-bf4c-768e49c2e260",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b9985985-5f16-4f4d-8033-511b7468d7ce"
        },
        "item": {
          "id": "75d84505-007b-4aef-8e68-922144478d5d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f6aca345-9785-4c33-972a-f93ae362128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24b74f7-1543-4563-bc20-b6904a2bf10c",
        "cursor": {
          "ref": "6ed87f33-d242-41cf-a288-a5693207ec0d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1595992d-68c1-46b3-99ac-163f2d52b3a6"
        },
        "item": {
          "id": "c24b74f7-1543-4563-bc20-b6904a2bf10c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "00c326e6-cd03-4af5-9c18-070f5507f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdf907c-3f30-47d7-938d-162c43490952",
        "cursor": {
          "ref": "b848a86a-5bea-493f-a65b-d8e26e84e479",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "164e8e76-0ab3-4fa9-b70b-76dc51703a23"
        },
        "item": {
          "id": "bbdf907c-3f30-47d7-938d-162c43490952",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c657b9f8-3e4c-4fba-879b-d295aa9de352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049e06fc-9472-4be4-adf7-5391ca94ea34",
        "cursor": {
          "ref": "63bddf7f-9f23-4cb1-8259-78d07f4d4ad0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5a75ae2c-5af1-4c70-8a67-dd19489057eb"
        },
        "item": {
          "id": "049e06fc-9472-4be4-adf7-5391ca94ea34",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dd181854-0c0f-43fe-a900-ff7471858fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d370e644-95ea-498b-b0c6-c9eaa4178ede",
        "cursor": {
          "ref": "8e2492e5-35b9-48a1-82af-40359cb1c709",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "26442eae-2ecd-4944-a3c5-c9de1cbe73cb"
        },
        "item": {
          "id": "d370e644-95ea-498b-b0c6-c9eaa4178ede",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "66cf4c7e-01b5-46b0-9d91-4da44c7371b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1033c2ed-5e83-4953-a4c1-5b50297ba02c",
        "cursor": {
          "ref": "b491fcf7-c1a1-4f64-8145-3d26b8ff55c7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6faefc09-e7c9-4e45-a90f-c4474d6cbaea"
        },
        "item": {
          "id": "1033c2ed-5e83-4953-a4c1-5b50297ba02c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8ff4cf62-bb71-4d60-8e12-8cd3a3dab5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f9dce-e85f-4da7-86f4-d650afc73b33",
        "cursor": {
          "ref": "091bc8bc-73a9-4667-adad-3972430d5cc9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8bca8297-83e0-4319-9f3d-082b14920eb4"
        },
        "item": {
          "id": "685f9dce-e85f-4da7-86f4-d650afc73b33",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f1f4941-a65d-4583-b31c-741dabc7c804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b5ee28-8318-4a7a-bc01-18c8d109b3cc",
        "cursor": {
          "ref": "6ea6e280-72b9-4941-b907-ae8ba716bfe3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b8e1e6fa-da11-4157-8373-1566a9d55cb9"
        },
        "item": {
          "id": "f1b5ee28-8318-4a7a-bc01-18c8d109b3cc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ccd2bf61-7e8f-444c-aec3-d346d6a1880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4db82d-acf7-46e5-917e-57799c5dbf04",
        "cursor": {
          "ref": "d6bc988b-0fbd-462b-8e00-6a14d4c92959",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a6515f95-517e-4e97-9de4-0c763a514810"
        },
        "item": {
          "id": "8e4db82d-acf7-46e5-917e-57799c5dbf04",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ef2509fd-fcf3-4ad5-9748-74350dd832cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049d22e3-613e-4f01-9d70-51ff8794cd09",
        "cursor": {
          "ref": "3e869d1a-0041-4138-8d70-c70f8fee3ab0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "187ab3b0-3229-41a1-8d1c-886ead1386f9"
        },
        "item": {
          "id": "049d22e3-613e-4f01-9d70-51ff8794cd09",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb8b3fd8-5d76-4265-8d95-cb1a6b7cb132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b6d0dc-e08f-47ac-a072-a2b540a6d11e",
        "cursor": {
          "ref": "8be59768-9ab4-4406-8cba-9b86dc396662",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "41599de5-f6c9-4db3-be08-5fa6c73a0fe6"
        },
        "item": {
          "id": "81b6d0dc-e08f-47ac-a072-a2b540a6d11e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "555d2189-16de-4462-bce5-0177a56c1eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5273586-07d7-4810-b8ee-1f187b0fc588",
        "cursor": {
          "ref": "e181c933-d04a-4968-897f-55038e72578b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "35fcd804-7044-4815-a218-0eca52445698"
        },
        "item": {
          "id": "b5273586-07d7-4810-b8ee-1f187b0fc588",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fff3e238-05b0-40c5-a3be-39581cebb5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac205b6a-13e0-4fe8-9c02-f6fa4b857875",
        "cursor": {
          "ref": "a52e09a0-134e-445f-8967-efd6d23f7c8f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "157177b7-5335-4344-a065-d9ca6e3e5351"
        },
        "item": {
          "id": "ac205b6a-13e0-4fe8-9c02-f6fa4b857875",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6f4eda23-826a-4b8b-831e-bb2c9cc5de18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a983394-e02d-4429-9919-92724e772ce0",
        "cursor": {
          "ref": "9a57b73f-f6f9-47b3-ba42-2ec777844a70",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cb97b5dd-2ce3-4a4f-a52a-0d095ddb5020"
        },
        "item": {
          "id": "9a983394-e02d-4429-9919-92724e772ce0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "163e430e-d307-4dff-92ac-d934a93dfd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b5d3d5-9bed-4105-b9fa-b99cdaf4c4c2",
        "cursor": {
          "ref": "1fc273e4-fac3-4054-bfe5-7b89ddb182e3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3c7786e1-0e87-4381-be6e-0cc8b84da62d"
        },
        "item": {
          "id": "37b5d3d5-9bed-4105-b9fa-b99cdaf4c4c2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eb1b54ba-fc0c-4a4f-b25e-d371e3298ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d80383-113e-47fb-bf13-50650cf00d7e",
        "cursor": {
          "ref": "1d8ea331-a206-41f3-97f4-b13055c4426f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d52b4892-0426-454a-8a73-6c4f30e8cf75"
        },
        "item": {
          "id": "e7d80383-113e-47fb-bf13-50650cf00d7e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf572f1d-c612-4965-91a4-9c0bce03f304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9392945-d404-4193-b0cf-4441ef863a61",
        "cursor": {
          "ref": "40919e15-e9b8-44b6-a512-21ef4c470ca1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "82830bc7-684d-4bc2-9a5b-534f746cf407"
        },
        "item": {
          "id": "b9392945-d404-4193-b0cf-4441ef863a61",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5ac95d7c-8c21-4df0-a40a-97cdf151b151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a810de-21b0-4eb6-a459-2766bb2a9f18",
        "cursor": {
          "ref": "152c3742-6aff-4ad7-8c29-5ad2b69adeb1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2934bbfa-ac74-4b83-b738-3342503b0d87"
        },
        "item": {
          "id": "12a810de-21b0-4eb6-a459-2766bb2a9f18",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f836280d-e84e-4c46-811f-0d756c6f9411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec71c39-7451-4f31-9e2f-5df099e0152d",
        "cursor": {
          "ref": "0cc1bc70-4f9d-4686-942c-c27ac853fe0a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c02190ba-0e79-40f1-84a8-2aceefa28e0d"
        },
        "item": {
          "id": "1ec71c39-7451-4f31-9e2f-5df099e0152d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "778b6a59-4454-45ca-af1d-bb6818c6e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcaafbf-7190-48e1-9f8b-23857c32f013",
        "cursor": {
          "ref": "8f60e3da-a69c-480d-a2c1-b54e7d9c369a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4dcdb67e-0a74-4540-af71-66d813776626"
        },
        "item": {
          "id": "0dcaafbf-7190-48e1-9f8b-23857c32f013",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "27d8000a-040f-4013-b6d4-b4b22b816de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10390c63-f073-4ce9-b064-e085cf4cddfc",
        "cursor": {
          "ref": "bd85d5da-e118-4625-979f-9c4844183160",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a45fcf45-4f20-4d06-9298-0bafb2292c96"
        },
        "item": {
          "id": "10390c63-f073-4ce9-b064-e085cf4cddfc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "27ed078b-11a3-4f0c-ad52-f45a16205a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50f5bcc-64fd-4ccb-92a0-c3fdc5a7e204",
        "cursor": {
          "ref": "bda954b6-4414-4cbd-b7d2-1443cf0812bf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2faf0029-2db1-408b-bfd9-30ca5a089279"
        },
        "item": {
          "id": "c50f5bcc-64fd-4ccb-92a0-c3fdc5a7e204",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "39b19b87-1c66-45ee-9386-2b684594d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458cee1e-575e-4efd-a3f2-4b856cc5d10a",
        "cursor": {
          "ref": "11d269cd-aea0-4b42-9809-5def59004e03",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2681e77c-784b-4496-8f88-ea51d8316709"
        },
        "item": {
          "id": "458cee1e-575e-4efd-a3f2-4b856cc5d10a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "99d79eb8-54eb-4cba-b6ed-c91084d40c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b19865-5a13-4543-895e-ea288c78bd08",
        "cursor": {
          "ref": "15ef3487-76b0-4936-a02e-0c0ee46b9ec9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d407b22d-552b-48af-93c2-9fc3f92f1cee"
        },
        "item": {
          "id": "37b19865-5a13-4543-895e-ea288c78bd08",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4f8cc3fd-80a4-4191-9fa3-045e96e4933e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa147b54-fde4-4341-9735-2bb307807838",
        "cursor": {
          "ref": "6ff0b945-d0a0-4759-8959-85c1b4483b44",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "38621db9-d77a-4d03-806b-39d2779d913f"
        },
        "item": {
          "id": "fa147b54-fde4-4341-9735-2bb307807838",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c803aac4-0fd3-4a13-bad0-6aeea4583db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ab9a49-e49e-421c-b106-e48747dfef2d",
        "cursor": {
          "ref": "09acd898-73b8-4dd4-8a63-c68eb04e4dc6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6e43591e-5920-4e57-bef4-79d8583b0a03"
        },
        "item": {
          "id": "21ab9a49-e49e-421c-b106-e48747dfef2d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ba40cbc0-291b-42be-b148-0e2e817a7e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed3e728-b3a9-4307-a621-f3f16859f7d2",
        "cursor": {
          "ref": "7c111c8a-4a0f-47cd-a45d-174682ac2ec8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "099f6674-65d2-44d8-8261-aa889be66ec4"
        },
        "item": {
          "id": "6ed3e728-b3a9-4307-a621-f3f16859f7d2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dba91451-3bca-42ba-a750-f955ae84cb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985bfb36-6c7f-4d53-8f2d-93bd4be427c5",
        "cursor": {
          "ref": "2ef65ec4-419a-40ba-9f82-5771fc75929b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2e62e980-b81c-48ac-b647-d78b00cd4d3a"
        },
        "item": {
          "id": "985bfb36-6c7f-4d53-8f2d-93bd4be427c5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "774914d5-11d7-4d40-aa57-5be1e2ca9bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f927f5-ddfd-4bb1-95c2-ddcd0847d575",
        "cursor": {
          "ref": "3f86a41d-6bff-48f1-8950-aa1965dfda8d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5bffa92c-90ac-4d72-b19d-f09549a639a6"
        },
        "item": {
          "id": "98f927f5-ddfd-4bb1-95c2-ddcd0847d575",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9cbaab6e-29a4-447b-aecd-fe11f95742d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e29b320-0b2a-4b3f-b2cc-4fcd18d5d450",
        "cursor": {
          "ref": "2b1dfac1-3329-4ca2-bf90-ff3dbd55dc81",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "99d69e10-0f67-498f-b5de-20163f88acb7"
        },
        "item": {
          "id": "0e29b320-0b2a-4b3f-b2cc-4fcd18d5d450",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d25ae758-a40f-4db7-88ee-18a540c6728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a73cc5-4a51-4705-9edd-46dcd6495d5c",
        "cursor": {
          "ref": "ff548b24-c7e4-4892-9626-d84180685ebc",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "07fcae3c-dc4a-4c00-8a29-4a7bae96a2d6"
        },
        "item": {
          "id": "d9a73cc5-4a51-4705-9edd-46dcd6495d5c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "47f943f3-5edf-4f27-be14-2ee30fe1dcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ca4803-1c93-4f5c-aaf2-8b5d78ec5caf",
        "cursor": {
          "ref": "9abcbd79-3615-46f8-91fa-e7afb359d50d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6eb1ff7e-aba8-42d4-94bf-54dc769308cf"
        },
        "item": {
          "id": "a6ca4803-1c93-4f5c-aaf2-8b5d78ec5caf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce2f0da1-1eaa-4ad3-9988-a954a2a76c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453dd16c-771b-4f53-b2af-4fd90357ccbf",
        "cursor": {
          "ref": "6cc7f31f-fe9e-4ed1-9a45-74630256ce07",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ee4ae8a-e547-4ed4-8606-3c91c40e5fdc"
        },
        "item": {
          "id": "453dd16c-771b-4f53-b2af-4fd90357ccbf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "85e1f774-bd38-41df-9082-1654cb58dac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3107cc32-3ce5-4777-af4a-e13b243b8acb",
        "cursor": {
          "ref": "976a5e0b-eacc-4e8e-bffd-76bf10dc8ea4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c4f6696c-5edd-4604-b6ae-dbc9fa803946"
        },
        "item": {
          "id": "3107cc32-3ce5-4777-af4a-e13b243b8acb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ca0c1c0-b216-43b5-ae5c-24d9a83d0867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15009db6-4778-492b-a787-9b821e8dc39f",
        "cursor": {
          "ref": "fa0177ad-6768-4cda-bc6b-b7c904228482",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "03f95264-97d3-4bbf-9195-e85c4c0124fa"
        },
        "item": {
          "id": "15009db6-4778-492b-a787-9b821e8dc39f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5af43736-8e73-44b7-97d6-878a337ef008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c31009-7c91-4439-bf09-4e1e35885745",
        "cursor": {
          "ref": "4c5eafad-0711-47e3-b9c4-d914335bf9c5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3e3dbe95-8335-4701-87f7-5b2e6bb870ce"
        },
        "item": {
          "id": "b5c31009-7c91-4439-bf09-4e1e35885745",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bfe4f6cb-49c8-4f54-8157-b7f9e30610cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b630cc7-d1b6-4928-b9fd-1d9b786c6f7d",
        "cursor": {
          "ref": "dacd6774-cd34-45cf-81d3-5060437529d5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9d056b11-f098-4d0f-9750-b34cfc21cefb"
        },
        "item": {
          "id": "9b630cc7-d1b6-4928-b9fd-1d9b786c6f7d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e6ab9398-bbd6-4ec6-bd6a-3d7f96fd95fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e723a2-dcd7-4866-bfa3-5cbe8feb344d",
        "cursor": {
          "ref": "f8efc76f-b846-40da-bfe9-3cc4bef1882f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f0b77bf1-ad42-4379-a466-8f5d240c24af"
        },
        "item": {
          "id": "08e723a2-dcd7-4866-bfa3-5cbe8feb344d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "792b7ddd-13e3-453a-92ba-fc5f6b0f79e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edd7961-92b8-47a3-a1f2-4c0266f091b3",
        "cursor": {
          "ref": "5afa01b5-1a0e-4986-8ddf-c2cc1bf290ed",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8dbfaf85-4873-45eb-bece-bf640c4c6a71"
        },
        "item": {
          "id": "0edd7961-92b8-47a3-a1f2-4c0266f091b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aeb388a4-c234-479c-9646-c254cea290e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661685fb-a3ff-41e3-b03d-5248c2b6162c",
        "cursor": {
          "ref": "030c828a-80a0-4bef-8ac4-51d0b1238418",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d8e5ae0f-4d52-4acc-9e27-f15557de2a61"
        },
        "item": {
          "id": "661685fb-a3ff-41e3-b03d-5248c2b6162c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c23145a3-bb42-4323-98b4-edc6dbbfea22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a47b99-c7be-422a-8d3d-315e6928c9f6",
        "cursor": {
          "ref": "21652d4b-8442-40eb-a0f9-ad15e24b6b25",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ead6bee8-bce2-4c07-8588-30111cb1c2b3"
        },
        "item": {
          "id": "24a47b99-c7be-422a-8d3d-315e6928c9f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dd5e621c-da5e-47df-97d9-e8279ff40d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d015d6-fd1a-4bed-8a9d-622db617924b",
        "cursor": {
          "ref": "7a20c90c-73b0-4fbd-85e7-520f60dd067c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b53c0f89-db1c-4a4a-9f9d-20eca6255973"
        },
        "item": {
          "id": "60d015d6-fd1a-4bed-8a9d-622db617924b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "42165e4b-c34c-4812-b12e-89fb487f7789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292e8155-b5f9-431f-a098-1fc2d504c66d",
        "cursor": {
          "ref": "2d4dc1f0-e441-46cb-87cf-f375c3e7e549",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d5922979-96c8-4e30-85ab-d54b2aab9798"
        },
        "item": {
          "id": "292e8155-b5f9-431f-a098-1fc2d504c66d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c4a24b95-3a67-40b5-ad4f-2f4b905647ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b54cd-a444-402f-bc87-b70be15997ce",
        "cursor": {
          "ref": "2e751aa6-cea9-465f-9b8d-deab1e659481",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a33b8380-d04b-4f77-8fe3-e192efcb2cb6"
        },
        "item": {
          "id": "c17b54cd-a444-402f-bc87-b70be15997ce",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "db08caac-9de3-4f9e-9343-f40bf88d1aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5ffe24-4a7c-4785-ab08-be393e885005",
        "cursor": {
          "ref": "4f5b902c-1caa-46ba-bb1b-e28002c76c35",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4421972e-bea2-4c79-9450-f72b4b8b798e"
        },
        "item": {
          "id": "fc5ffe24-4a7c-4785-ab08-be393e885005",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c3b2404a-6d78-46eb-bbee-8ccc3c8a9338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a3cef4-6813-43fa-a8b2-e895da8b4a1d",
        "cursor": {
          "ref": "168a625b-7114-403c-8090-b807adc22221",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c3cbff1d-dc3a-4663-aad3-181a84cee493"
        },
        "item": {
          "id": "39a3cef4-6813-43fa-a8b2-e895da8b4a1d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "32d2b58e-e414-43a3-acc8-e782bdd33008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda8cf5d-cc69-4d5c-83e8-8639dfed3157",
        "cursor": {
          "ref": "e77c7e79-c878-49e1-b54d-ac8d45cb0a6c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dc8372e7-df21-4d97-b385-0d5433270f6c"
        },
        "item": {
          "id": "eda8cf5d-cc69-4d5c-83e8-8639dfed3157",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1bed7ccd-d334-4016-af53-ee953784fcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df21fb5-a9a3-4658-be2f-eba859dbe38e",
        "cursor": {
          "ref": "fae01a26-1c88-470d-b652-a752408c3995",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "de390c42-2b9f-4d63-a6e5-ccffb3679f0c"
        },
        "item": {
          "id": "6df21fb5-a9a3-4658-be2f-eba859dbe38e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eead4097-6ae1-4a53-a515-e019ec844f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15683672-a178-42de-8620-4ac3c40e6f49",
        "cursor": {
          "ref": "60c46809-070e-4afe-b872-75d6689bd7a2",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b63b534e-bf7b-4da1-bcac-773522856509"
        },
        "item": {
          "id": "15683672-a178-42de-8620-4ac3c40e6f49",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4c13bcf0-8f3a-4af8-bb8a-4218d3cb8925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106a3263-b1f9-4c2b-a14f-a37215fd6dc8",
        "cursor": {
          "ref": "6408085e-bcc4-4ba0-9aba-18e3052e38a9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf3c7cea-9d00-4f12-a19e-3f6afe5fb3ed"
        },
        "item": {
          "id": "106a3263-b1f9-4c2b-a14f-a37215fd6dc8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5976e78a-02cd-4923-98c0-80d7e5ef97a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7de344-3267-49eb-b321-d32de849a502",
        "cursor": {
          "ref": "14888f4c-7bf6-4bdb-88f7-9bd993c3292b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1af6da49-2268-4c05-8b72-3d873202dba7"
        },
        "item": {
          "id": "8c7de344-3267-49eb-b321-d32de849a502",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "869afdde-75a3-4e20-a87e-e846f0c04e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534593f1-e848-4b1b-9456-b938d690863f",
        "cursor": {
          "ref": "85cf35a9-7d57-4e02-99a6-8f3d7c287768",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "98eedb5b-52e9-46e1-ae2a-d47bb0bde50a"
        },
        "item": {
          "id": "534593f1-e848-4b1b-9456-b938d690863f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0093246a-39d3-4a8e-8812-572a2f127f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786d6bbc-54f0-40f3-8666-8ee1aa7f0f6c",
        "cursor": {
          "ref": "633e37d0-0f1c-48ab-8f35-6f5a826c1291",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5248ab47-aadb-45fe-88dc-c3176aae8afa"
        },
        "item": {
          "id": "786d6bbc-54f0-40f3-8666-8ee1aa7f0f6c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "97cf154b-737a-4384-b65a-6767dea52c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af441761-7351-4dca-9554-dcec3b1ef65b",
        "cursor": {
          "ref": "f84c0bf3-8dd3-473d-a814-9304ae0709c2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9ec047a9-7925-4dbe-be11-ff00f996acf2"
        },
        "item": {
          "id": "af441761-7351-4dca-9554-dcec3b1ef65b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b57e1a1e-5833-42c4-9741-fb4c36589db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bb5eef-a0b0-4acb-a42d-aa3da29da785",
        "cursor": {
          "ref": "6c87ca49-5eba-4327-be5d-1f95685f8d7f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e553164e-b7a2-4340-a348-4e95c8da5c99"
        },
        "item": {
          "id": "12bb5eef-a0b0-4acb-a42d-aa3da29da785",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "35bfd66a-347c-4507-9f14-bb7f41528b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d685c063-cb25-4dd3-ac23-a16462bd6f92",
        "cursor": {
          "ref": "d63901eb-7e4d-4555-9219-b4fbc41a4c90",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff7e0865-7fa1-4471-8696-59795ad9bc98"
        },
        "item": {
          "id": "d685c063-cb25-4dd3-ac23-a16462bd6f92",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b6b61119-217e-42d6-ad22-a8fe240b918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb77c638-eed8-457c-9612-7c661e07567d",
        "cursor": {
          "ref": "166e7087-7b28-4f40-9373-9aaeb46b0430",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b4b42a84-d45b-4d3f-ba2a-a6b27241da07"
        },
        "item": {
          "id": "fb77c638-eed8-457c-9612-7c661e07567d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c6ed724a-4fd0-4597-a379-4bb04345020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11ad1fa-ea73-44e4-93c8-a770cc1dcb64",
        "cursor": {
          "ref": "2b2aa8c9-00bf-491e-82cc-1d238febadc5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5384d114-0083-43f8-b8bc-6f7ba24bea12"
        },
        "item": {
          "id": "a11ad1fa-ea73-44e4-93c8-a770cc1dcb64",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e258c76c-a78b-48d1-905e-b4d849868397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b043cc3-6ecb-44ea-ba99-2400fb6e2679",
        "cursor": {
          "ref": "f8c2cdf3-3dc7-4c54-bb1a-2338f98fa02d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "02581b26-6a22-4cf7-91f8-c967eba03b36"
        },
        "item": {
          "id": "3b043cc3-6ecb-44ea-ba99-2400fb6e2679",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a026bbfc-d214-4318-a9e1-3294b9dd71d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b7d60-98b7-49fa-9e22-3218caa213ad",
        "cursor": {
          "ref": "ae55b135-7498-42bd-8d8c-48ac6841e9d0",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c88f5227-466c-4826-aacb-c72fb5bda4f4"
        },
        "item": {
          "id": "e10b7d60-98b7-49fa-9e22-3218caa213ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5475866c-d59a-49f7-9e07-508706248b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa5b6ee-cb07-4a5b-9512-9538edd48117",
        "cursor": {
          "ref": "0fb261ec-fc13-47ca-86b8-af91a80fbc31",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6133dc69-f8c3-4486-bfb0-c8b61c82dfdf"
        },
        "item": {
          "id": "7aa5b6ee-cb07-4a5b-9512-9538edd48117",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "12388f36-4010-40ed-a9c7-153650a5ea8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac43d9c-2c0c-4728-bbc0-34211cbdeee5",
        "cursor": {
          "ref": "8aea01cd-dbd7-49e0-a2e2-410c5894dfd5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "00b09f61-0f94-47de-8986-228d2b91646a"
        },
        "item": {
          "id": "bac43d9c-2c0c-4728-bbc0-34211cbdeee5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4f0cbe5d-3d50-4906-bde4-f9941c67facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d12ce-f010-455a-88c4-6d009939f486",
        "cursor": {
          "ref": "daa81890-dd7c-41a2-b1bb-bb18b36637db",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f377dc19-5983-4418-bb59-9e9cf0ef9881"
        },
        "item": {
          "id": "8d5d12ce-f010-455a-88c4-6d009939f486",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4ba107ae-d944-4da1-94f0-42f1518bb366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e410f3f7-d1cd-4fd7-9231-e0f4513b3503",
        "cursor": {
          "ref": "354e5e72-70f3-426d-9628-37f39ef79a09",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fbc0e020-8e12-4362-82be-2f5363163294"
        },
        "item": {
          "id": "e410f3f7-d1cd-4fd7-9231-e0f4513b3503",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "13670880-7aa3-4b03-a858-717bdbc74c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf751f7-13c9-4246-ad29-ebf25998f41b",
        "cursor": {
          "ref": "6b49f616-bfe0-4336-a0ac-88d6b6d8a9aa",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bcb9044c-4e21-48ac-8899-390d5c346b34"
        },
        "item": {
          "id": "faf751f7-13c9-4246-ad29-ebf25998f41b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "18ee99b1-ea47-4d1f-8d5e-1821057ecc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ff27c5-5436-41e3-b203-1e9fdff170bf",
        "cursor": {
          "ref": "00d6b54e-f877-49ee-bf67-9d0628fb57f9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9dd9d6e7-ec72-4836-a64e-d11682710a66"
        },
        "item": {
          "id": "c3ff27c5-5436-41e3-b203-1e9fdff170bf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c8abbbb-a7e6-400a-af1c-faba229b132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c1be87-edc1-46a5-8ca9-0904a8d3e409",
        "cursor": {
          "ref": "15b13ec7-c6f3-4ffa-852b-2a785958c183",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4b894c29-0004-4017-8acc-9ccfbb8b0a85"
        },
        "item": {
          "id": "17c1be87-edc1-46a5-8ca9-0904a8d3e409",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9ae3d9f2-14df-4891-ab46-48c69a64766a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fe47b7-b714-4481-a40d-bc3668d36dc5",
        "cursor": {
          "ref": "446fa3ef-f166-467d-b248-fdff1e622170",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e5f24923-8626-44f4-b613-d82ce7c8edd2"
        },
        "item": {
          "id": "d2fe47b7-b714-4481-a40d-bc3668d36dc5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fbaa5d7a-fd59-4d1f-a224-09d7fb14b67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd7ef61-04f3-45a8-a2f8-4c5180c8a7a5",
        "cursor": {
          "ref": "6d0242a6-acde-4305-b797-1c65a28533e8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "333e5434-40fe-45a8-9604-3ccf5ad792be"
        },
        "item": {
          "id": "5bd7ef61-04f3-45a8-a2f8-4c5180c8a7a5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "85ffba77-0cc8-4139-8fbf-19cbb463ae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f9dc56-83ee-453a-b696-23c9449aac58",
        "cursor": {
          "ref": "dc797af7-7cbb-42ed-9486-887a5061efb6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7b8b47ea-e4bc-45e7-a3c2-3753a53ef731"
        },
        "item": {
          "id": "e0f9dc56-83ee-453a-b696-23c9449aac58",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3358aa8f-68eb-40c0-8fc2-aebc13edc54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd62a8-c9ae-4ad1-afe7-a896bada7194",
        "cursor": {
          "ref": "c4759981-63f6-47d5-9c18-27271a49743a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cdea0aea-c192-46da-b320-f427af6b7a61"
        },
        "item": {
          "id": "11fd62a8-c9ae-4ad1-afe7-a896bada7194",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "656a25a7-aa3a-45d7-9e61-a4fa8c7de30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3f14de-c505-4dac-a529-6d652640d033",
        "cursor": {
          "ref": "6a0248ab-c6e2-4b33-924b-8ccb93f110a1",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d559a57e-3043-43c6-94a2-4899e7393bdd"
        },
        "item": {
          "id": "8c3f14de-c505-4dac-a529-6d652640d033",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aae80a1c-c2c5-4a5c-8bb4-1ba23f13d538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf1c817-5af0-418d-b1bb-6fbb39a3c34a",
        "cursor": {
          "ref": "cc6acd91-9298-4bce-b588-d395c71807db",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c419bee0-ff68-44e8-9e98-e2ec93f66712"
        },
        "item": {
          "id": "5bf1c817-5af0-418d-b1bb-6fbb39a3c34a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e2498e7e-ed9d-499b-8540-727f6d6978c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52721a87-85ea-40bb-96f6-63c6daaa5c1e",
        "cursor": {
          "ref": "13d97b1e-5b49-47dd-9756-f2623f061401",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "40e41d76-a0b9-4ec1-a601-c7c50eb96341"
        },
        "item": {
          "id": "52721a87-85ea-40bb-96f6-63c6daaa5c1e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f2aa264e-05a0-43c9-89a6-136cf705533b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cbd96170-fc67-4f57-b9d8-53f053271845",
        "cursor": {
          "ref": "c265b1ad-6224-4c56-af61-953f3426e61c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2c61abc4-2a9d-4880-b84f-8d939a7f9a5e"
        },
        "item": {
          "id": "cbd96170-fc67-4f57-b9d8-53f053271845",
          "name": "credentials_issue"
        },
        "response": {
          "id": "20cd4dbf-67df-4156-8294-0a1478bf60bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "74c2836c-48a6-4842-87ac-f959b5575733",
        "cursor": {
          "ref": "2c7b851b-1f46-4d33-b927-e6a9fadb5305",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "93f94eb6-d9ac-4f0b-8cfe-403ff9b62159"
        },
        "item": {
          "id": "74c2836c-48a6-4842-87ac-f959b5575733",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1c25e1c2-1461-462c-96e3-626953935850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a19348b2-2359-47e2-b4fd-18c76b8c15ad",
        "cursor": {
          "ref": "6b31b749-3f8e-400d-841b-a7eb544c97d2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "921ebc49-a32b-411a-81d4-bfd06e310097"
        },
        "item": {
          "id": "a19348b2-2359-47e2-b4fd-18c76b8c15ad",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ebdff413-3e59-4814-bf49-636a56dfcf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "51fb8208-9a92-454e-a80e-383934aec2d0",
        "cursor": {
          "ref": "33d8cd7f-596a-4839-b21f-b88d45c1f2af",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b540c536-65ef-4511-b8db-8ad65981a5cc"
        },
        "item": {
          "id": "51fb8208-9a92-454e-a80e-383934aec2d0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e855458b-a2ec-45be-974a-e68eab178e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "743b53b7-4e57-4085-a621-4d31fc929ecd",
        "cursor": {
          "ref": "dff62704-415d-474a-a4b0-aaf51e8b75f3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e7ee0aa1-4625-4a7c-8974-872221e5b594"
        },
        "item": {
          "id": "743b53b7-4e57-4085-a621-4d31fc929ecd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6023d5da-bd55-4942-8137-9bfb446f170e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e50ae12f-a66b-4e23-bc63-a73b407910df",
        "cursor": {
          "ref": "ce5ababe-5c2b-4fee-8ee0-df62c46fced9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "45d122fe-af40-4057-a188-6799610bcce5"
        },
        "item": {
          "id": "e50ae12f-a66b-4e23-bc63-a73b407910df",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "55f8cc15-473d-42ff-9da8-80a918e37ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0b418b96-3af9-416e-86a8-f81d5895c68f",
        "cursor": {
          "ref": "7b430c6c-ae92-4814-a9c8-558da7f172e6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a4672d30-a65a-47b9-a110-2e7bcd171c4f"
        },
        "item": {
          "id": "0b418b96-3af9-416e-86a8-f81d5895c68f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e0845f6-3d9e-48e9-8cc6-0954b0adc4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31949ddf-bee9-44d7-aadc-44e4ec87dff9",
        "cursor": {
          "ref": "d59c7d5f-8860-417a-a71f-ed13f7b3af5a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9377321-c066-4ac7-8a8c-7bebba6b1146"
        },
        "item": {
          "id": "31949ddf-bee9-44d7-aadc-44e4ec87dff9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "49bd2b20-cc16-4608-8af1-9b9d3880658b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69102b7b-5bf4-4a08-946e-53a79c4122cc",
        "cursor": {
          "ref": "71ca9b13-16cd-4799-82b1-6d272b8ef69d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a25e657-e87e-4f1c-8996-3ebfb50ecce7"
        },
        "item": {
          "id": "69102b7b-5bf4-4a08-946e-53a79c4122cc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "20e9abf2-0226-49be-a60d-ee0cd6131790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b03ff4-7c75-4c60-ba26-8ee1b7a79d9c",
        "cursor": {
          "ref": "591eded3-1358-480a-8fb3-e7145777e53d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9246e177-2ffd-44e7-aadf-5e4f2125f0e3"
        },
        "item": {
          "id": "48b03ff4-7c75-4c60-ba26-8ee1b7a79d9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0f3f8209-4115-4ae3-b186-b547b5b66471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aecdeac-b6f8-44e4-bc25-6c53f0d4cc21",
        "cursor": {
          "ref": "bf0ba6e2-78aa-413d-ab22-2a4d420cf955",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c28ee641-5bd1-4b5e-a1ca-89566cdfca50"
        },
        "item": {
          "id": "5aecdeac-b6f8-44e4-bc25-6c53f0d4cc21",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d727dc08-626e-46e7-8daf-3b8aacc07cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f55abb8-bea7-468f-b9ac-db6911682db3",
        "cursor": {
          "ref": "ebcea2f0-ad4e-4f03-9573-edd1bae84d6b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f5008b89-2c31-44d3-98ef-2019763ba6c2"
        },
        "item": {
          "id": "2f55abb8-bea7-468f-b9ac-db6911682db3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "300921c0-d627-4621-af70-8aee5e30dc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e70597-6f60-4304-b7ac-4dcb18e5d2fe",
        "cursor": {
          "ref": "52bc62d5-5d02-4c67-b505-f5d1753d402c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b129fdba-cae7-43dc-bdda-6ff7a5863a6c"
        },
        "item": {
          "id": "57e70597-6f60-4304-b7ac-4dcb18e5d2fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d89f2e30-7930-49b5-9fae-caf726ff4ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566b9e09-fc49-4833-bc67-3c22959b637e",
        "cursor": {
          "ref": "f74c6629-0703-4221-acb1-0056ed8571d2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3672dffa-eb99-453a-9c86-acfe78625c2e"
        },
        "item": {
          "id": "566b9e09-fc49-4833-bc67-3c22959b637e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4264b674-6d53-4055-9241-10fb90776968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4aad49-3f95-44f3-8825-268165666331",
        "cursor": {
          "ref": "c47530a7-c221-425f-a575-769c777b2b9c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "edb16f02-02f1-47f8-9cd1-4f6617553f08"
        },
        "item": {
          "id": "3d4aad49-3f95-44f3-8825-268165666331",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85ea9aaf-c299-4376-b17d-0d278df3109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10453c60-9171-47cf-89b9-6fe2ac861c99",
        "cursor": {
          "ref": "111abe91-4176-4d89-88e1-eeeb9a1795a2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e90ed19e-63da-4ac8-b5bf-627ceef6426c"
        },
        "item": {
          "id": "10453c60-9171-47cf-89b9-6fe2ac861c99",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8989a5af-367a-4b88-918d-fc734c8cf143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a0302c-7144-4acb-accd-bccfcf0379c8",
        "cursor": {
          "ref": "4f50fcb2-26dd-4299-83e1-29106c867b66",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c373878d-d51b-46fd-880a-c9297d7402b3"
        },
        "item": {
          "id": "23a0302c-7144-4acb-accd-bccfcf0379c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d862703c-8fe9-4a63-b7ab-fe06ffac5c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c772c-6652-4419-9502-7dba59a52513",
        "cursor": {
          "ref": "0238d8ba-8b1e-42e1-bdac-807965a57bd5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "02464146-b829-4773-9e2e-577764b5859e"
        },
        "item": {
          "id": "090c772c-6652-4419-9502-7dba59a52513",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33167336-169f-4a87-b6ac-242490f0657b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6c80c3-c1bc-46f1-a5da-da450ae82891",
        "cursor": {
          "ref": "213a0c98-f36f-4b09-9499-7a04191cc37f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e1c4bc18-0317-46ec-97ff-0f79626bf650"
        },
        "item": {
          "id": "3f6c80c3-c1bc-46f1-a5da-da450ae82891",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "744aa99a-061f-4994-b205-58083f2b8c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4174b56e-7f53-4704-9be9-c142ccb2f5b4",
        "cursor": {
          "ref": "81ab20ff-0209-4f1a-9fd4-c9d472a20824",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b3b77bb6-65fb-4ef1-9804-bd844a16e3d2"
        },
        "item": {
          "id": "4174b56e-7f53-4704-9be9-c142ccb2f5b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d8a7724-7cbb-4211-a434-d9f78565d48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe2cd5-80c5-4fc6-8bf5-4951ec44f6b7",
        "cursor": {
          "ref": "cb3f6451-88ba-4e97-9707-90c2e2dafa30",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e9c266df-180a-44bb-9ca3-bb14847f2e34"
        },
        "item": {
          "id": "68fe2cd5-80c5-4fc6-8bf5-4951ec44f6b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "17317620-f9d1-4a59-b449-8f4927672c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2eeb971-55ea-4047-b740-9deb88de42ca",
        "cursor": {
          "ref": "1922491a-65ff-4ea4-a102-1d636d795383",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "890fbb49-ed82-4aaf-8d95-b60934c58d5c"
        },
        "item": {
          "id": "e2eeb971-55ea-4047-b740-9deb88de42ca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec5771c4-1c27-4883-b93d-2d551aabfc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48569e7-b03a-4b00-91ad-31eed762d967",
        "cursor": {
          "ref": "f723d97a-bcf6-463e-9739-0c9977789068",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "87e8c942-1e4c-482a-b7f5-6e8832d02e09"
        },
        "item": {
          "id": "a48569e7-b03a-4b00-91ad-31eed762d967",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5932782f-5511-4330-b2a2-339c51a7cdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a862063-bed2-45e0-b279-bde61ed05c46",
        "cursor": {
          "ref": "5cff1842-4f81-461e-8277-279ea2e48aa3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "179a561e-1548-4b6d-b493-90ad04cc56bb"
        },
        "item": {
          "id": "9a862063-bed2-45e0-b279-bde61ed05c46",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "28b413f0-e626-433c-8995-f279b3dc2890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f31f96-f2eb-46d4-a2b2-ae5399fbf833",
        "cursor": {
          "ref": "0d7924c2-c8a0-426e-94fb-6b961336bc9a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d166ee02-81dd-4491-82f2-de97578361d7"
        },
        "item": {
          "id": "96f31f96-f2eb-46d4-a2b2-ae5399fbf833",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce38fa60-7fbc-4851-b22a-09c70fad587c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3869f07-69a4-4f2e-84ee-891485ad912b",
        "cursor": {
          "ref": "99921c56-4116-4ca6-8285-96d3681606ef",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "73a7ab9e-bb1b-407a-a8a2-267fef807f04"
        },
        "item": {
          "id": "c3869f07-69a4-4f2e-84ee-891485ad912b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1eb64faf-aa7d-4a55-8dbc-a4be43e05636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b688c31-bf47-4f5c-b73f-4998dfe55c49",
        "cursor": {
          "ref": "4e49f095-4d5f-415f-85f5-0e7e14a37c97",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ff4d9f54-a205-464e-98b7-e7e1b0bfc402"
        },
        "item": {
          "id": "0b688c31-bf47-4f5c-b73f-4998dfe55c49",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18512842-a3fa-407a-8984-393626e750bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06641242-2413-4221-90b0-aa554f9d8e06",
        "cursor": {
          "ref": "9e4208f1-1d79-405d-a5ec-08a555e6ef59",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "809d0eac-d787-4ada-b743-2de99b43d612"
        },
        "item": {
          "id": "06641242-2413-4221-90b0-aa554f9d8e06",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3aea79c-0ac2-4a0d-ab39-5fc593b0d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea53c7c1-8c2a-4773-a320-de2afe5513f3",
        "cursor": {
          "ref": "fdc8dcd5-cdd9-4e51-a11b-e2bba46a0741",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "82919d9b-e165-4be3-b602-7bb9014a3fa0"
        },
        "item": {
          "id": "ea53c7c1-8c2a-4773-a320-de2afe5513f3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "53694b1e-2717-455c-89ba-a675146b75da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6637ad40-c03b-41b1-858e-eab2c3152dc9",
        "cursor": {
          "ref": "da72b151-e6d0-4f97-a814-b8a7ab45c23c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eb608e64-ede2-4626-9c90-30ae7d4dcc33"
        },
        "item": {
          "id": "6637ad40-c03b-41b1-858e-eab2c3152dc9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8d4a8358-384c-4318-b1ae-c829747de73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92953079-09da-4f04-8b92-7711cddd230a",
        "cursor": {
          "ref": "fcd85d00-0ce8-4f94-81e3-ccea0944bb27",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "430d4693-8411-40bd-9ed5-730571d0a123"
        },
        "item": {
          "id": "92953079-09da-4f04-8b92-7711cddd230a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "648aeded-7309-4944-960a-8f2b9bedf008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732153b3-204a-443b-899b-686a3d323fa8",
        "cursor": {
          "ref": "241b2957-d164-4f9e-9605-ec5466b47f64",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "30d03120-e0f2-4eab-abce-8e8aa4fea2db"
        },
        "item": {
          "id": "732153b3-204a-443b-899b-686a3d323fa8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3750e55-6054-4d33-b946-9a5aa445a150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2cc96-580e-4808-8383-cea991b69905",
        "cursor": {
          "ref": "ecb830ed-a463-4465-bd16-eeb757cd3a45",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4b71ec07-01e3-4868-b557-abbca6b047e7"
        },
        "item": {
          "id": "bea2cc96-580e-4808-8383-cea991b69905",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "336530bf-662d-4f8c-bd9b-4bef84390894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77150e6-9041-4251-af05-433c31748bb0",
        "cursor": {
          "ref": "ff85a7e3-852c-4621-a4b7-e44b02b64508",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "55166014-e1cf-469b-8ed9-21f63deb344f"
        },
        "item": {
          "id": "c77150e6-9041-4251-af05-433c31748bb0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "47083d05-cb81-46a8-a88d-988829e071c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8c7065-4afc-4eea-bd9a-52c020bdcb7e",
        "cursor": {
          "ref": "24f5f852-f606-42e8-882a-74394b10c488",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a6d88b18-5cd3-4547-a2e1-b721870f98f0"
        },
        "item": {
          "id": "6a8c7065-4afc-4eea-bd9a-52c020bdcb7e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "accabc9a-acb2-45fe-a4fd-42b406ea4702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ded136-8013-407f-9f1f-d3afec08e183",
        "cursor": {
          "ref": "cd2894f1-222e-4b01-ac7b-1e847025a3f9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9a85420a-d52a-4904-80f4-bfdb43e9f37e"
        },
        "item": {
          "id": "40ded136-8013-407f-9f1f-d3afec08e183",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9781a454-c633-44f4-ae4d-8840c1a35ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e436e4-da88-4950-95fc-28f4686ee594",
        "cursor": {
          "ref": "9c7a12d5-042f-4808-b4aa-0b7f00d02b47",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4145e5cf-28ef-4142-bd58-dc86e9e0ef3f"
        },
        "item": {
          "id": "a6e436e4-da88-4950-95fc-28f4686ee594",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac99015e-8c3e-4891-90f6-28c8546c5fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12f9cf-64e0-4ddc-b4a6-26afdf60864a",
        "cursor": {
          "ref": "6c5b8993-2338-4237-9b18-4895ce6f8f26",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1e94d28f-c7d3-4dc1-b19c-df34a227ed09"
        },
        "item": {
          "id": "bc12f9cf-64e0-4ddc-b4a6-26afdf60864a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dc7f5a5a-82be-41dd-916d-1317569c1aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bf3d65-65f6-481b-a976-926fcb81c79d",
        "cursor": {
          "ref": "cabd19f7-32c1-4f33-9475-b4a7084c6ea1",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5f5d2676-300d-404a-ae79-b63ad54a3ac5"
        },
        "item": {
          "id": "90bf3d65-65f6-481b-a976-926fcb81c79d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ab63eeed-bf15-4aa8-969c-4b2c67c31dfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6269e9e4-ea58-4091-9209-2f34cd059cf9",
        "cursor": {
          "ref": "4cee9b6f-cb66-4918-86c7-c2925f30a731",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "075acd5f-c37e-4ac8-a780-851d445454f6"
        },
        "item": {
          "id": "6269e9e4-ea58-4091-9209-2f34cd059cf9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1d70d706-58e6-4989-a2cb-57d3b47fd183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c39597b-4d88-4078-b686-071b37a07deb",
        "cursor": {
          "ref": "34b403fc-af81-4c4e-89a2-df9b5ca74fc6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e44a1b26-ff19-4b5f-83a2-0fee90ecdf0a"
        },
        "item": {
          "id": "4c39597b-4d88-4078-b686-071b37a07deb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "792765b4-d42c-4cf6-b277-108a2cb3fbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b00c831-8612-4684-81f3-836db162bf4f",
        "cursor": {
          "ref": "9e74ec99-7602-4050-8b18-6930314fb63a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eb491ee9-66a9-40e1-bba5-916506718105"
        },
        "item": {
          "id": "8b00c831-8612-4684-81f3-836db162bf4f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ab3b2c47-cf5f-412e-a2e9-76961bec7187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3314c728-eccc-4bd8-b178-3baae3b8cb20",
        "cursor": {
          "ref": "e2821bdf-7c30-47ff-9c79-bc236c41120a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a91d6c06-f85c-4be1-96b7-78ddcf95512b"
        },
        "item": {
          "id": "3314c728-eccc-4bd8-b178-3baae3b8cb20",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "096473cf-4790-47b4-8d7d-99b3f3497c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad921d8-720f-4d21-8c79-4af674c0da9c",
        "cursor": {
          "ref": "0bd8fdf0-a3ff-4a32-97e3-fbad224e089d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1fa24978-3410-40e0-9fe7-c6a0ee3b2adb"
        },
        "item": {
          "id": "cad921d8-720f-4d21-8c79-4af674c0da9c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "71ec9ff3-3b59-44f1-a9f5-5f89b7f9a52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6102cf2c-5f6a-4071-a777-f2c4358c687d",
        "cursor": {
          "ref": "1e7ce3f8-8838-4e70-aa89-dfe8e3f0f7cb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "95f5c299-07ab-46e2-81ff-2c55b18f960e"
        },
        "item": {
          "id": "6102cf2c-5f6a-4071-a777-f2c4358c687d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f8a085ff-27a0-4779-8af6-4685884c0474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f86fcee-92a6-4e49-985f-133a983178f7",
        "cursor": {
          "ref": "19f04549-f7e8-45f6-976c-fe77296cdb05",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "455bcdb7-9497-4417-b18b-84e7b195ac75"
        },
        "item": {
          "id": "1f86fcee-92a6-4e49-985f-133a983178f7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6221fdc5-3726-4631-8996-3a67e2338171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8623e0c-fd77-4116-9c19-18815312e6b3",
        "cursor": {
          "ref": "d5e24c22-3d17-4413-8b63-828eff00a96f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fe5cbc12-f9b8-4523-b333-4adbac80c5b7"
        },
        "item": {
          "id": "c8623e0c-fd77-4116-9c19-18815312e6b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9692d9ee-a822-49d7-acf0-9f14defb64d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cfc2f4-f482-4bcd-bd25-0e7424bfcf30",
        "cursor": {
          "ref": "1af2cd9c-4ccd-4b2a-867d-5d32899fbea2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "db3c09db-6c83-43e3-b3b5-cc56fb6b1bd4"
        },
        "item": {
          "id": "b6cfc2f4-f482-4bcd-bd25-0e7424bfcf30",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f4a0d1e8-073e-4880-83fa-221b0339b27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2a5a47-22a1-4438-b547-ecd970a80817",
        "cursor": {
          "ref": "a411ed3f-74fb-4c54-bb89-df1abe87aa3a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "00bd9d4a-34e0-4a32-98aa-56d6d3c5bca8"
        },
        "item": {
          "id": "bb2a5a47-22a1-4438-b547-ecd970a80817",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "526354ae-f847-45cd-8baf-23d63eed5ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5496bf8-6733-48d1-8a42-0e717b38db8b",
        "cursor": {
          "ref": "4448b86d-5534-4273-80b3-a3c0286b8c85",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db761fb4-2f99-4c99-88cb-1126adea4fb9"
        },
        "item": {
          "id": "e5496bf8-6733-48d1-8a42-0e717b38db8b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c256d0d-9e2d-4675-a1b0-71473fda6e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6ee815-1338-4d0d-a5a9-882a45656e99",
        "cursor": {
          "ref": "84e2c40c-7750-4865-9b14-402ea2f442bb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a341d2a-490f-4513-a9f6-44a28006e3ec"
        },
        "item": {
          "id": "2e6ee815-1338-4d0d-a5a9-882a45656e99",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af21b676-8daa-4c69-b79b-7d294577c521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95544741-3328-4d57-b65c-7624647372be",
        "cursor": {
          "ref": "6cc1e568-1b52-4765-956b-d486cd008d40",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "01fa46d6-4c2d-40ea-81a3-cce369864861"
        },
        "item": {
          "id": "95544741-3328-4d57-b65c-7624647372be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "506190e2-927e-41a4-846f-647443c19838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762d0af4-cc6b-4de6-97db-47bc09f8a4f1",
        "cursor": {
          "ref": "574e2017-5bfb-48d1-99b5-158a8c16eb37",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc8289cc-35ae-4d11-a23d-6f178291aec6"
        },
        "item": {
          "id": "762d0af4-cc6b-4de6-97db-47bc09f8a4f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6b59a93-260d-4078-ba23-a28c0e4f542f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f6a742-a4f9-4454-b293-bfac40911c97",
        "cursor": {
          "ref": "489b8762-16ce-46db-b4fd-68039960322a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "83dbf50e-26fa-41b8-a4c0-7394974c3be9"
        },
        "item": {
          "id": "61f6a742-a4f9-4454-b293-bfac40911c97",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "410fd4c7-03be-49eb-8baf-3a8c3422905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f5e25f-3436-4cbf-91e1-8367691ec335",
        "cursor": {
          "ref": "b9b7dad8-a62c-49bd-b2e6-cbbba7d16733",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9b05df4a-849f-4677-909b-3e68e9aa104a"
        },
        "item": {
          "id": "67f5e25f-3436-4cbf-91e1-8367691ec335",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3dc8aee1-37e5-4210-b545-434edf24b7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a63ca7-bf64-4221-9b07-01bb53e5b6e5",
        "cursor": {
          "ref": "4f23544e-a266-4aac-b8f2-bb86d059a6e1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "48ed4a6d-a9d7-4209-a2ec-ae0b657629b3"
        },
        "item": {
          "id": "a1a63ca7-bf64-4221-9b07-01bb53e5b6e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae958258-05e1-417c-a4c6-91e6ceaf5ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84462ef5-c1b3-465e-a6b0-08ec86fa086a",
        "cursor": {
          "ref": "7ea084e8-f9e8-4ce8-8628-b2b64aaa9ac0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "49d5e92a-a341-4ea5-b453-ee46d4ecd333"
        },
        "item": {
          "id": "84462ef5-c1b3-465e-a6b0-08ec86fa086a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "acf95fc1-5191-4631-a116-639c7f8bb60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb99b7d-986e-48e7-856a-e349366f05e4",
        "cursor": {
          "ref": "f2d26ef6-6ba6-46f8-a212-3bba0897f3db",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b1b2f423-bf7e-45a2-aae2-09f10a5a8acd"
        },
        "item": {
          "id": "4fb99b7d-986e-48e7-856a-e349366f05e4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "900383a9-b338-4d77-926a-376602d42859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10c6957-8358-49b6-a724-d6e1238f3efe",
        "cursor": {
          "ref": "c22bbd6e-90db-4c7a-9680-6e914e19d0bb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1a54dd48-76e5-4f15-81f5-fd004944de3e"
        },
        "item": {
          "id": "e10c6957-8358-49b6-a724-d6e1238f3efe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cf487c9d-7af7-4b85-ab5d-c01cccb0b1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897d44a3-a059-49cb-81ba-3e4033c37bd8",
        "cursor": {
          "ref": "f51b46ec-165a-4a2b-bf02-a16a7c2531fd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da54acb9-a0d4-4f6d-9f58-46ceff35d5ae"
        },
        "item": {
          "id": "897d44a3-a059-49cb-81ba-3e4033c37bd8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d496c8c9-ffd3-48da-b0b5-632d579eca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0a2c23-b2c2-4467-b709-538f30d96351",
        "cursor": {
          "ref": "c2ccf176-e0eb-42b9-b938-7beb3dc090b0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f722a756-8449-4c38-bb03-7727fb171472"
        },
        "item": {
          "id": "6b0a2c23-b2c2-4467-b709-538f30d96351",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ca146a2-7da8-4100-8e8c-c5a2a92c0e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5c3474-1643-444e-ab9c-b6660bfc3bbf",
        "cursor": {
          "ref": "ef067b79-78e3-479a-9f8d-3e1033e47105",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "66230004-55ad-49c1-9968-0de0e4395110"
        },
        "item": {
          "id": "6e5c3474-1643-444e-ab9c-b6660bfc3bbf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85c82dc6-52fa-4689-840e-b79eea323b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad058c-09cc-434c-8759-ca63a47f47bc",
        "cursor": {
          "ref": "d4136dfc-1161-47f0-a8b1-85b6ad71ef33",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "291298d7-6e49-4453-a121-e7cf9b701289"
        },
        "item": {
          "id": "bfad058c-09cc-434c-8759-ca63a47f47bc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "41a1bc81-36de-4d14-a896-2d69934e8b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e8d336-4be7-4ad1-9b74-c7078e6b5383",
        "cursor": {
          "ref": "fca5883d-3819-48f2-9c5d-cd5e40b94d76",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "179e9fad-1f2f-4732-8e5d-b5a81f8a7eb1"
        },
        "item": {
          "id": "76e8d336-4be7-4ad1-9b74-c7078e6b5383",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7c17dc4d-6c50-40ae-ac5e-6b854056d17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fb39ff-6002-4078-a62f-2e09de0f5365",
        "cursor": {
          "ref": "7619e7fa-4b27-452e-9d14-74e6acc05552",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "21214bd0-8032-4923-991a-4b1ce9c0f4df"
        },
        "item": {
          "id": "04fb39ff-6002-4078-a62f-2e09de0f5365",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "926aa118-f907-4126-996a-9fa5c65d2059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b9a222-b350-4025-912b-686839324b87",
        "cursor": {
          "ref": "47d7a941-2505-4ba2-8343-0ed0ebfe4202",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c3a11a5b-5f65-4836-a55d-5e4d08ebeb13"
        },
        "item": {
          "id": "13b9a222-b350-4025-912b-686839324b87",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c6492df-ac21-47ee-afa8-2603a7db3ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8125d330-64b3-4b14-9755-f560ca987f4e",
        "cursor": {
          "ref": "e7dc15b6-e150-48eb-af1e-4d141b975fba",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9da921ca-e0f2-452b-b626-95220812184f"
        },
        "item": {
          "id": "8125d330-64b3-4b14-9755-f560ca987f4e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d4b6bd6-8dcb-4d45-bb83-bfaf54b1411f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7cb843-8526-40ca-89ae-d3f5cf439d52",
        "cursor": {
          "ref": "99e89e77-4323-41b6-ae09-5eb609a5e60b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "45a4681a-ed20-45c5-9042-1bb590d2bb0d"
        },
        "item": {
          "id": "9f7cb843-8526-40ca-89ae-d3f5cf439d52",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "780566b6-4ec0-430c-94bc-bdbfc5089a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee5a6ed-26d4-426a-a1ad-b5a16b62cdd3",
        "cursor": {
          "ref": "9f17ea8d-15ac-4376-95fa-50d79259282b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9ad9578b-7d5f-48e6-a0b5-73e3f5dea661"
        },
        "item": {
          "id": "6ee5a6ed-26d4-426a-a1ad-b5a16b62cdd3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ca4bbcd4-b94e-43b6-92c7-68d185e9c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d31eaa0-3bc6-4f85-af21-ca9ee3c6aae5",
        "cursor": {
          "ref": "547d03aa-a692-4698-a9b2-6bc932792dda",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a856c677-f42d-4331-b335-b01c18232825"
        },
        "item": {
          "id": "6d31eaa0-3bc6-4f85-af21-ca9ee3c6aae5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b8c2f648-9824-43a1-bb92-1a19e38e2a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6143ed11-a950-49a2-81aa-f8ecb7fae6a1",
        "cursor": {
          "ref": "a4674a28-b502-45cd-969a-4b917d697e3b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a4a3f727-d954-45a1-bb5c-c6ba66b7d939"
        },
        "item": {
          "id": "6143ed11-a950-49a2-81aa-f8ecb7fae6a1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4f8b82db-cf86-4632-9838-d7e366e0090e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a628ff-965d-4771-a98b-805f336da9ff",
        "cursor": {
          "ref": "29a40b69-6440-49a8-89f2-8f3dac041702",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4b47ee0b-4264-4db2-8d79-fa1bf0621c14"
        },
        "item": {
          "id": "02a628ff-965d-4771-a98b-805f336da9ff",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f796ead0-5499-48ae-b6e6-8597f9e1357f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5cbce2-1879-4fc1-a7c0-637d1abd6b1d",
        "cursor": {
          "ref": "2b0bc0b2-3858-4b3f-ab78-e2ee82ac6afb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e04912b4-23e4-4958-8149-532d2f25042c"
        },
        "item": {
          "id": "cb5cbce2-1879-4fc1-a7c0-637d1abd6b1d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c72adad1-d8d5-4fc1-b25c-5dcb70418be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760a63c6-db26-450d-aad0-16c89eb20ebf",
        "cursor": {
          "ref": "97ccd86f-fb28-4818-9173-1ded000722fc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cad5cb58-531b-4fc7-ac03-8f06fc7f2b5a"
        },
        "item": {
          "id": "760a63c6-db26-450d-aad0-16c89eb20ebf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c7360e67-f318-499a-b765-4b663f57a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463bf0c6-6bd6-42f0-a48f-10aa6a2d92a1",
        "cursor": {
          "ref": "2b03dc60-b69f-4401-99be-dbfb1184310a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "38b2732c-0e40-481b-8e4c-a67c7698d644"
        },
        "item": {
          "id": "463bf0c6-6bd6-42f0-a48f-10aa6a2d92a1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d9be633c-3b6c-440c-9082-660d4094566d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb0ac22-c8b4-46f6-8126-a21d10b8ad7e",
        "cursor": {
          "ref": "8b43160d-17fb-40a6-bc95-2f03a26e3957",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "53c97c9e-a7e2-4fc3-aaa9-3b89171f7812"
        },
        "item": {
          "id": "cdb0ac22-c8b4-46f6-8126-a21d10b8ad7e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "14950bca-ba65-4a02-a332-28efa0644d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a7db3a-7d01-4e70-b108-c3f1e4ac76a1",
        "cursor": {
          "ref": "b73099a6-de7e-4f70-ba48-ed46f2ccb9b7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a3a315b2-ac6a-4f62-8af1-6e4d2e05386f"
        },
        "item": {
          "id": "46a7db3a-7d01-4e70-b108-c3f1e4ac76a1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aaf3e42e-3b71-44dc-8f48-a9b8f01be10f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2461b7-7b61-4098-bc96-270106265f2e",
        "cursor": {
          "ref": "cfafe1b2-8a81-4197-a383-cf31e304c61a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "79946007-ef29-4129-ab17-f7b5831afb98"
        },
        "item": {
          "id": "eb2461b7-7b61-4098-bc96-270106265f2e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "262f310a-5e1f-49b6-a9c1-c575c6a3cb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0691316-5453-4739-9b29-8f702e704cfb",
        "cursor": {
          "ref": "3955159c-8352-4382-9d2f-a372a613a1ef",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4bd86c8f-e313-4b9d-922d-00f69fcb06b5"
        },
        "item": {
          "id": "a0691316-5453-4739-9b29-8f702e704cfb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0082248f-bafb-42e8-8629-17dfcc8a20a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27d6098-4507-4343-a388-73e7c29e22fc",
        "cursor": {
          "ref": "237020d2-312a-4e48-be81-9c74c68aec01",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a7f216d5-8168-48cf-9610-ac4baab1bb03"
        },
        "item": {
          "id": "d27d6098-4507-4343-a388-73e7c29e22fc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ebbbf7ca-aefa-4ae4-912c-a7abd2c6576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85eff98e-e52c-4a89-bf25-c6cfae936914",
        "cursor": {
          "ref": "5d71f3d4-fbbb-4bd2-b3e8-96770efad886",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a4928a7f-6231-47da-b802-97224c3693e8"
        },
        "item": {
          "id": "85eff98e-e52c-4a89-bf25-c6cfae936914",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2b20cd20-87b5-45e1-a76e-6affee594098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6521f089-753e-47c4-a692-ee3d9b976cf7",
        "cursor": {
          "ref": "4f9089dc-c8af-4c08-9d83-4335997275ea",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "72b80eaa-ff05-48e0-b0db-7efe8606fffc"
        },
        "item": {
          "id": "6521f089-753e-47c4-a692-ee3d9b976cf7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fd6f233b-be1b-4d71-828c-8ac4c7a9c114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c39aad6-2dd3-49f5-828a-eb47bb19bc14",
        "cursor": {
          "ref": "cfc509d3-cf33-4f11-a458-927f66be7396",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4b721bcf-553c-4651-b510-a8b9833a3e60"
        },
        "item": {
          "id": "7c39aad6-2dd3-49f5-828a-eb47bb19bc14",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9476767f-70f1-43fb-9e19-35aaa5a66097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19965c40-da5c-4b23-97e4-cc9ec0472cb4",
        "cursor": {
          "ref": "bd8231b9-eca0-4d50-88c9-78a9e2bda17a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c13e1d34-ae89-4df7-97f4-d526b28a5682"
        },
        "item": {
          "id": "19965c40-da5c-4b23-97e4-cc9ec0472cb4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "38f163c0-7b6b-4fa4-b77c-28f81c47c14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142ce3cf-b678-4725-a3c9-364c456ffcc7",
        "cursor": {
          "ref": "f66b66fd-0fa7-4126-af1e-2d77ecc0daf0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0edcd021-e8a1-440c-a0b2-8881bacb7373"
        },
        "item": {
          "id": "142ce3cf-b678-4725-a3c9-364c456ffcc7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "115e6c08-78fc-4b3e-996a-61b351073aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd233350-4f68-4744-9c19-c628e049aeb5",
        "cursor": {
          "ref": "f801526b-fc77-476b-8533-9f76fbcccaf5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a4704faf-af53-48e5-ad51-9cca7a39f168"
        },
        "item": {
          "id": "bd233350-4f68-4744-9c19-c628e049aeb5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e2b4597a-73f7-4bab-a969-522a75460589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c851786-7236-4356-9d2c-15672088d59b",
        "cursor": {
          "ref": "5e5d22d9-7c16-408b-8f6c-73c3f5548af5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d9f15b15-391e-4cc0-a417-23f64fa74d3d"
        },
        "item": {
          "id": "0c851786-7236-4356-9d2c-15672088d59b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e60d6d1d-e469-4c6e-82c0-9c61bd7756bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6218fe-4e8b-4c58-9dd2-22481074067b",
        "cursor": {
          "ref": "54046288-a79d-4414-9c3d-72c78c627d08",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "37408427-e35a-441f-b1ac-a61c39050afa"
        },
        "item": {
          "id": "2b6218fe-4e8b-4c58-9dd2-22481074067b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2b4a12fe-ad82-4562-a14a-b04358a780bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71240a6d-0188-4c72-b47a-37f2948161fc",
        "cursor": {
          "ref": "f6207c0c-0b46-4091-9bbc-ea2e8999ea01",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3e2a30a0-3d6c-4c2b-9d46-dcb021f8f566"
        },
        "item": {
          "id": "71240a6d-0188-4c72-b47a-37f2948161fc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "905ffd55-6cc9-4626-92b9-5135b6fc49c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51873070-6784-4776-ad1e-38949179b3e2",
        "cursor": {
          "ref": "815ce95e-6897-4210-a318-89b45b11fc23",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2c246529-dce2-4218-90c8-c405e062cdc0"
        },
        "item": {
          "id": "51873070-6784-4776-ad1e-38949179b3e2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "788cd64f-2bd6-448e-8457-c98bf891083c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0c1d16-6f98-4b94-97bc-55ac6832fac8",
        "cursor": {
          "ref": "466bc489-af02-4f3d-9fe7-b44b475c17d5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a0c04d10-b6eb-426d-add2-755ae1b9b81f"
        },
        "item": {
          "id": "eb0c1d16-6f98-4b94-97bc-55ac6832fac8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1a403678-ca0d-4cad-94ec-bebf31a64673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93030a3-d99c-44b1-b3e4-8959613e9d97",
        "cursor": {
          "ref": "f610ce83-e4a6-4712-b90c-301670b6132b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "58c3dbfb-4061-41cc-826c-e0da208829ed"
        },
        "item": {
          "id": "c93030a3-d99c-44b1-b3e4-8959613e9d97",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d755a0e2-daa4-4b58-9d8f-f64e46ac32a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b715ec-da9c-4ffe-a3b9-03161f50273b",
        "cursor": {
          "ref": "4388d526-6f0b-4dbd-9af6-82ada1371f9e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "07832562-e211-443f-9a43-c4e5e1acd834"
        },
        "item": {
          "id": "00b715ec-da9c-4ffe-a3b9-03161f50273b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d250eae0-f0da-47ba-a975-e9515c60ea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaef506-4fb3-4785-80a2-8438285d118a",
        "cursor": {
          "ref": "0d80e2f1-c4a5-404a-85ac-274c685c70e6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "062008db-80f8-468f-8b43-1b012d26ca06"
        },
        "item": {
          "id": "1eaef506-4fb3-4785-80a2-8438285d118a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d87c5056-f456-4f8a-8106-1ba498ae9999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87493b0-4868-4f30-b01b-8241c6e590e8",
        "cursor": {
          "ref": "9a5a2058-c8c6-4e95-88de-1d9bfebb805e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "93d7401c-8a81-41fd-8309-90def8c181c4"
        },
        "item": {
          "id": "e87493b0-4868-4f30-b01b-8241c6e590e8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cee4c7f-8c6b-47cb-991d-a0ad96699bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f670bb-8b2e-4ce4-8d09-a109020eaeee",
        "cursor": {
          "ref": "40e6385d-e388-4ff8-beaa-10ce80917ff2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c9752e19-4e2b-42ca-a102-29866b314352"
        },
        "item": {
          "id": "75f670bb-8b2e-4ce4-8d09-a109020eaeee",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d5fba595-7bae-417a-b2c8-827f0acad29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babda27a-d7d0-4849-be1a-0c7365e7cce3",
        "cursor": {
          "ref": "7cfde9ee-ced9-40ac-9c48-978c66e9c58b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "640ed5f3-00a8-45af-8b58-eb0342aab7e3"
        },
        "item": {
          "id": "babda27a-d7d0-4849-be1a-0c7365e7cce3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c3634c63-c8b8-4041-bbcd-69a78506b738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c69404-4bcd-4e72-a53d-fea965c830f7",
        "cursor": {
          "ref": "f7d69a10-2eab-47cf-82b3-3031586aefd1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9f3ab588-ee6c-46bf-9142-1ed4ba132678"
        },
        "item": {
          "id": "f5c69404-4bcd-4e72-a53d-fea965c830f7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "db38227a-7ee5-4e4a-932a-059878f851a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b5b09c-6c6a-4c0d-81e0-18387fbd89e9",
        "cursor": {
          "ref": "6a202fd2-1875-4edb-a8e9-6a4ddffc28bf",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ffa15214-085c-482f-903f-2ef893f6da65"
        },
        "item": {
          "id": "e0b5b09c-6c6a-4c0d-81e0-18387fbd89e9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bfb4d986-722e-46cd-b3de-cd0ba97461cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3986c6d8-1575-4a26-817b-8e11235fb85b",
        "cursor": {
          "ref": "396bc8d4-4a1b-431e-87e2-c4e882df253d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3322340e-8a02-4d40-9491-56497ba947ee"
        },
        "item": {
          "id": "3986c6d8-1575-4a26-817b-8e11235fb85b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ec5b7e11-37d8-4c19-b7e3-fb3fb0641691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cb24f0-7c75-4c64-99ff-478605ad4d48",
        "cursor": {
          "ref": "eaabb631-6b06-493c-a228-de17d8b89119",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8b6f4869-0db4-47ce-a9e1-79bc3cccc76e"
        },
        "item": {
          "id": "00cb24f0-7c75-4c64-99ff-478605ad4d48",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fd79f600-1714-466d-b0aa-a50c7b63e6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1edae3-0867-474a-be2b-94a4be305316",
        "cursor": {
          "ref": "5fae6edf-0dbe-4af3-be77-ec127872c825",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3a9e885-aefb-44c0-8902-7420b90e0e41"
        },
        "item": {
          "id": "6a1edae3-0867-474a-be2b-94a4be305316",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ec7097a9-e096-4281-810d-3acb48ac8261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4622c5-a12a-41e8-abd6-c3ff042f1c40",
        "cursor": {
          "ref": "e60d7910-418f-431b-a16c-5b14d5c9c005",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d009a1f2-faaa-4df2-976d-ebed78d7f11f"
        },
        "item": {
          "id": "cb4622c5-a12a-41e8-abd6-c3ff042f1c40",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ec7a0a18-5577-46e9-a9c3-7ca5a3518e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b93386-a565-49f8-bc05-2c932210ffc1",
        "cursor": {
          "ref": "ca97163f-4315-4e96-b6c7-cb4a1cd05cae",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9bf2923c-b212-4478-be08-0362a867c598"
        },
        "item": {
          "id": "42b93386-a565-49f8-bc05-2c932210ffc1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "08c2c7af-3d9e-42d6-a033-e88dc4aea6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bb86fd-0ff9-4dd1-8afc-8da0e6a52ca0",
        "cursor": {
          "ref": "b1c2af81-489e-4e47-9d7e-332e1daac612",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "809bcd0e-fadb-486a-92ec-a22a41c11110"
        },
        "item": {
          "id": "f3bb86fd-0ff9-4dd1-8afc-8da0e6a52ca0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "08b583e9-b54f-4ab7-a723-47e6fafd54e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1693e3b-3c6c-4ed5-8194-c98ac654838a",
        "cursor": {
          "ref": "d5f3ab49-e945-4668-a7f9-5dd5f5c863a1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ece469f-d2e8-4ea3-869d-f3eba0c4584e"
        },
        "item": {
          "id": "f1693e3b-3c6c-4ed5-8194-c98ac654838a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "064134e4-5cfe-46e1-b491-220693fb3685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea29f99-3da8-4639-82f3-687c3904cf54",
        "cursor": {
          "ref": "2bf9ed23-ae49-4b2d-a35f-298799ab8cf0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4b6243b6-6f01-4690-aaa3-13260af8d227"
        },
        "item": {
          "id": "dea29f99-3da8-4639-82f3-687c3904cf54",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3cefad29-8048-4e02-8014-603c4321f557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd7e7ab-00fd-4e71-a55b-28bd8e9d0ca8",
        "cursor": {
          "ref": "ce788e3e-230c-4413-8938-8af346523cf4",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "52023a5e-0222-4c68-a52a-dadce4640cb0"
        },
        "item": {
          "id": "0fd7e7ab-00fd-4e71-a55b-28bd8e9d0ca8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "edbf0c09-0c16-4e5e-97f9-a9b9e0afb208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095ff480-443d-418a-8732-c2d7b9869194",
        "cursor": {
          "ref": "c33fa88c-5276-4d39-ab67-fb134952980b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3288d880-65dc-44ad-b965-df99ce7a055b"
        },
        "item": {
          "id": "095ff480-443d-418a-8732-c2d7b9869194",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "73936318-008a-4d83-87e2-f0aa63d8ebfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3e6d6c-20d8-4ae6-bcf4-ccb185dea8b6",
        "cursor": {
          "ref": "6b2e266b-1534-4193-a3f6-ab2f7a17cb92",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d828a0c3-4c32-4c90-a47a-dd431d7156db"
        },
        "item": {
          "id": "ca3e6d6c-20d8-4ae6-bcf4-ccb185dea8b6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6afb856f-b32b-421d-9a90-374954bd4e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbad25f-4a31-45ca-b7d7-2d3b15b1eac8",
        "cursor": {
          "ref": "2ff427ab-8ffe-4fdf-b9b2-dc0c1b395527",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f1b77e76-a701-4ee4-b63c-1872b43759aa"
        },
        "item": {
          "id": "9cbad25f-4a31-45ca-b7d7-2d3b15b1eac8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0369438c-29a5-4a5d-94d0-d5c0583691e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3d5fde-29aa-4eb6-9e8c-c7eb4517f286",
        "cursor": {
          "ref": "281b174e-d4cf-4667-8396-c464e8bec79f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e4c234b5-b190-4787-8fb5-807b569b6da7"
        },
        "item": {
          "id": "7d3d5fde-29aa-4eb6-9e8c-c7eb4517f286",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "32805f48-527b-4ff8-bf6a-359880096a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1781175-f28a-4b8f-bdd9-914ed6e27800",
        "cursor": {
          "ref": "a4443c5d-9178-4a3c-bd2a-a76f162df620",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "183832d8-ede2-491b-b699-dce4f9fcb1af"
        },
        "item": {
          "id": "a1781175-f28a-4b8f-bdd9-914ed6e27800",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eb611990-6842-4d62-80a7-fa818673ab60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa3c5dd-5615-4968-96bb-596c02563cf1",
        "cursor": {
          "ref": "2507160a-134f-47cb-80d5-8a595984c311",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d98aa48e-c86e-42a4-8367-f01cae6bc1f6"
        },
        "item": {
          "id": "cfa3c5dd-5615-4968-96bb-596c02563cf1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5dbf83ff-abf8-4e5a-9dd6-610d11dd970f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca646ac0-d997-4e2d-838b-518c7a8e7ec5",
        "cursor": {
          "ref": "b33c7e84-d184-4031-866e-98bed129f3f9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "103c9fe6-a9f3-4530-a087-9af655693455"
        },
        "item": {
          "id": "ca646ac0-d997-4e2d-838b-518c7a8e7ec5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "27db4185-e4d6-4dc1-b98a-f15335f4a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6704a13c-328a-4ffa-a30d-8a7f0ddd55e5",
        "cursor": {
          "ref": "25943504-cc3f-4a2a-9ae5-e61449a603b9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "55cf2f5c-6944-443f-97f3-5c3628991deb"
        },
        "item": {
          "id": "6704a13c-328a-4ffa-a30d-8a7f0ddd55e5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6f94012a-c6ef-45ed-8562-016a19539d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839b9011-20af-4256-8d80-cbf5a4d7bf68",
        "cursor": {
          "ref": "698325fc-5a84-4e98-af3e-f2512095e6da",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "09fe4282-f0f1-48d8-a2bb-4b087c8bd15e"
        },
        "item": {
          "id": "839b9011-20af-4256-8d80-cbf5a4d7bf68",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2b38e826-d55e-4031-92e2-dbb395297b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeae4916-ae47-43d0-99c4-bffd9ab08747",
        "cursor": {
          "ref": "4ff0d113-93ec-4f4c-9a90-7080b09a977b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2f7cf2a2-5994-4ee2-baba-b706b8ae83a7"
        },
        "item": {
          "id": "aeae4916-ae47-43d0-99c4-bffd9ab08747",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc6656c0-22ff-49bb-9e13-6a7dabaf3b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370937a4-478e-44ae-933d-a838f413f768",
        "cursor": {
          "ref": "464e2583-99c8-4672-b791-b7776778721b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2449543c-7950-43a6-a65c-6302ef56a2d5"
        },
        "item": {
          "id": "370937a4-478e-44ae-933d-a838f413f768",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e37cb9d-030e-4732-8c82-97865411b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaa56b6-b981-44c2-bd48-01b307cf28d0",
        "cursor": {
          "ref": "f799774d-953e-40a3-a95f-2619370112f0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "46f30724-0e26-41ca-a6a5-1e934ddfcdac"
        },
        "item": {
          "id": "faaa56b6-b981-44c2-bd48-01b307cf28d0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "309d9616-8604-4089-b098-179e70086177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e446a6f-2714-418c-b42d-89e4454dec21",
        "cursor": {
          "ref": "ac8998e6-b76d-4aa0-905f-cd85db164578",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "73cd9ed9-6cbb-4edb-9762-8be2e1babc37"
        },
        "item": {
          "id": "6e446a6f-2714-418c-b42d-89e4454dec21",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9aaacb8d-f400-4e2a-9612-844804438909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9152bb-503e-4918-ad4f-8fb8fb4a0622",
        "cursor": {
          "ref": "c24a3e8c-793d-4b2b-bfa1-23e1f2794456",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "141a2459-6e24-4984-94a8-b5e81cfdb567"
        },
        "item": {
          "id": "ed9152bb-503e-4918-ad4f-8fb8fb4a0622",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "40e3fb55-10e8-4811-b9da-cbd2c2f091c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501eabfa-bbac-48c5-b431-cb74acbdc638",
        "cursor": {
          "ref": "e9911d74-3df9-425a-93ec-79abcd7ae63d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a95bde29-3816-455d-97b7-2c2c292033d8"
        },
        "item": {
          "id": "501eabfa-bbac-48c5-b431-cb74acbdc638",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9a297004-3582-4480-8f46-a5206b408612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a667b6bf-f9a8-487f-8b83-ea4c8c55b5bd",
        "cursor": {
          "ref": "f7479171-4d73-426d-8c82-5db40f37df67",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5ebbbc67-d0ef-4925-8410-ec8013700b5d"
        },
        "item": {
          "id": "a667b6bf-f9a8-487f-8b83-ea4c8c55b5bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45378bbe-c298-41bf-86e6-290fb6528a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e00741f-2ad0-4a50-88dd-9f57d9fbdbf4",
        "cursor": {
          "ref": "5bffaa39-3f5e-4c62-b649-23138b3916fc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5db0e411-15dd-4271-866a-25678fc3802d"
        },
        "item": {
          "id": "8e00741f-2ad0-4a50-88dd-9f57d9fbdbf4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "15eb2c42-b58d-46a4-8c38-bab0d5226337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31450d2-b040-4c98-a5c4-f3bc19e1e9c9",
        "cursor": {
          "ref": "7c459f84-56dc-4f70-8e9c-509a8e3d2905",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "36c1f8af-990d-4f00-84d8-0c931ae8ef17"
        },
        "item": {
          "id": "c31450d2-b040-4c98-a5c4-f3bc19e1e9c9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1c03109b-2c08-4f6b-8380-a191e9991f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a099c30-d01d-4d73-bab4-8883d91757ad",
        "cursor": {
          "ref": "66ea699a-4679-4146-8272-2b7955b76415",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d1d3f6a6-473b-446f-9287-c6ef1458a9ba"
        },
        "item": {
          "id": "8a099c30-d01d-4d73-bab4-8883d91757ad",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "74c1be37-b4be-43cb-aeb2-9130d190946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6541ce-5555-4211-9ee9-1083cc57cc65",
        "cursor": {
          "ref": "3bcc3578-0732-42d5-a927-d7f241ea3ea1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "380a5f4d-2040-4099-a734-ebd6792d714e"
        },
        "item": {
          "id": "be6541ce-5555-4211-9ee9-1083cc57cc65",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1c99d1a1-62fe-42e3-aac9-f9ac4449e394",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "71eaf5a2-caee-4cfa-ac9a-0dd0b5ea630e",
        "cursor": {
          "ref": "67793718-b59f-4043-8e49-11f7e9d4576a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "60465866-72b6-479c-9a7f-10e9581af2e9"
        },
        "item": {
          "id": "71eaf5a2-caee-4cfa-ac9a-0dd0b5ea630e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3ce96e56-1e30-4d02-953d-4eaffe95f609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d63d7fc-ed3b-4462-aa0a-28188a0754a0",
        "cursor": {
          "ref": "87217ed4-3df7-486f-af4e-8f07a11158d4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "452ef6be-6da9-4080-be1d-a7448a2c6da0"
        },
        "item": {
          "id": "5d63d7fc-ed3b-4462-aa0a-28188a0754a0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ccc84580-5022-43f1-b8af-b17f73bf4441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f629faa8-47a8-413f-bf94-019ccea681ed",
        "cursor": {
          "ref": "07e71ca9-f508-436f-9d61-d4bb21411752",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9bcf216a-6372-4f63-95e9-1f744310884a"
        },
        "item": {
          "id": "f629faa8-47a8-413f-bf94-019ccea681ed",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f3946b9e-d6f2-4ac4-87ec-84057c2842fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0fcfd6-733c-4d7c-a6ac-23d2eaa7b2ab",
        "cursor": {
          "ref": "b81bbc07-cd5c-46e0-884b-ddf70fbd1793",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "feec764a-0951-4ea9-a638-3cc568ef0336"
        },
        "item": {
          "id": "7c0fcfd6-733c-4d7c-a6ac-23d2eaa7b2ab",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4a9c9103-b626-4c1c-9a8c-7bbc25402d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7df33fd-6c96-4169-9f1d-2a661d49598f",
        "cursor": {
          "ref": "b216dea2-5780-40b5-a972-c527fa4cc110",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "14bbb564-21a4-4f23-b709-dae69b08c25a"
        },
        "item": {
          "id": "a7df33fd-6c96-4169-9f1d-2a661d49598f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "08b44127-7729-45d2-8134-cf506d1188dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e46c68-a2c9-42c3-93da-570cc2dc8fe7",
        "cursor": {
          "ref": "a3f78155-cca4-4885-9687-2b56950a057c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2e345411-1411-401f-9d6a-c984506d536f"
        },
        "item": {
          "id": "15e46c68-a2c9-42c3-93da-570cc2dc8fe7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3367ba10-f3d7-4234-b815-abf84c66e2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae92bf57-4b00-41f2-8ea5-e7bc0e5ec9ec",
        "cursor": {
          "ref": "78b6a357-86fb-4a0e-851d-8f828bc51676",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71bdcddf-bc06-4a9c-bf2b-375e3623e873"
        },
        "item": {
          "id": "ae92bf57-4b00-41f2-8ea5-e7bc0e5ec9ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "46e7d428-299b-4fc6-a81c-e1f449f856bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b2e2ee-86f9-44dd-905c-4a6d21e1c3b7",
        "cursor": {
          "ref": "12bf3003-b265-4248-85e9-bc283794c463",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "486fb4cf-2922-47dd-94df-d4dd762391ec"
        },
        "item": {
          "id": "f2b2e2ee-86f9-44dd-905c-4a6d21e1c3b7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "99b56be7-94ef-48d4-8885-59f8f745a8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a0169a-e27e-4ef4-a838-ddb03f1756b3",
        "cursor": {
          "ref": "cd00222d-917f-464e-b404-120ebd52b20e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bb3e8124-1307-4b87-ab2e-0da6ff100ab9"
        },
        "item": {
          "id": "18a0169a-e27e-4ef4-a838-ddb03f1756b3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "873c3462-6d10-43e3-8166-fad8fc19db65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845397d2-6f3c-49bc-9562-bed79790c323",
        "cursor": {
          "ref": "48b68345-b814-40be-8720-c1c040304eae",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "15c85e2d-6b66-4ef9-a16d-024b65097aaa"
        },
        "item": {
          "id": "845397d2-6f3c-49bc-9562-bed79790c323",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b1825b55-caec-4187-9223-af609b48bca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b52d78-0b03-4256-8adf-5ef8f8d812ac",
        "cursor": {
          "ref": "494df983-ce62-488b-98f1-8981e645f15a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "baadf399-41a8-4418-a3a1-ae3f3eac2e51"
        },
        "item": {
          "id": "a1b52d78-0b03-4256-8adf-5ef8f8d812ac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4b7781ca-0e9d-4d43-97f0-12c75191c36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e7ba2-cc25-4949-b060-ac808b61c7f5",
        "cursor": {
          "ref": "f53ddb37-74dd-4caf-865d-2909d6310132",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "440c8183-161e-47a9-ae24-d4100d69e26b"
        },
        "item": {
          "id": "c90e7ba2-cc25-4949-b060-ac808b61c7f5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c624a981-5001-43fb-b3e5-09d79ea1d6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51467928-975a-46e1-bf66-1ac3842e6a83",
        "cursor": {
          "ref": "2f353ee5-fb48-4d36-8189-1d826bf257e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b004195-f4e9-4813-9945-5f83b6bb566d"
        },
        "item": {
          "id": "51467928-975a-46e1-bf66-1ac3842e6a83",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c72d449c-8f12-4241-b2c9-68306d487cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ecd30-c6ef-4b1c-ab6e-c15686ebe8be",
        "cursor": {
          "ref": "547d750d-eb01-4ddf-821d-13df73f63463",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d0fd4207-0942-437b-9a3f-f8d634d65600"
        },
        "item": {
          "id": "8d7ecd30-c6ef-4b1c-ab6e-c15686ebe8be",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3c015ff1-1e59-4104-973b-c68c89ade727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade82449-4b94-4d84-be5c-686ce9a15ba7",
        "cursor": {
          "ref": "1777e00c-09cf-4c74-87d9-dea3c5263802",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b320e262-05aa-4d8b-85e1-bd9fd3f3f126"
        },
        "item": {
          "id": "ade82449-4b94-4d84-be5c-686ce9a15ba7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "653e7f0b-b6f5-4528-bca5-34d896600ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038241d3-3b89-47ef-990a-e42a2f9e32ca",
        "cursor": {
          "ref": "904c965f-6752-48c1-9710-38bf8c9d5124",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "74a14912-0dd6-43d7-9804-b937cde3ff21"
        },
        "item": {
          "id": "038241d3-3b89-47ef-990a-e42a2f9e32ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "70091af6-8930-44b1-893b-fc99109d7920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dc1083-4c0b-49d1-b459-993fa2316b2f",
        "cursor": {
          "ref": "7d49a3f7-5391-4aaa-acdb-74447bbf5ff4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7a40b7ca-d2be-44b3-bffd-ff782ebb36ce"
        },
        "item": {
          "id": "14dc1083-4c0b-49d1-b459-993fa2316b2f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e55e029a-ec02-4285-8fc1-902e9db596d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1abea2-ce24-4880-8feb-e24fbf3f0f23",
        "cursor": {
          "ref": "80d9a0f1-dab1-422c-89f1-6c007bafffd9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "00ad5234-56b9-4d92-b53e-dbc8d2091626"
        },
        "item": {
          "id": "bb1abea2-ce24-4880-8feb-e24fbf3f0f23",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1d651832-9ab1-4f3a-8bfd-59ec6fb5c784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f583d62-ed8d-43a3-a3c2-5381e1d55dcd",
        "cursor": {
          "ref": "e8c3fdcc-65a1-4613-aa6b-854c8ceac66f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26e831fa-6e77-4b36-86e4-4d8c262ca209"
        },
        "item": {
          "id": "0f583d62-ed8d-43a3-a3c2-5381e1d55dcd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9f29b6ab-fd38-425c-8e60-95e2708d6953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebbaf63-76e6-45c0-b333-3031c4fc99cc",
        "cursor": {
          "ref": "9ac6c72c-7ee4-4d0c-bde8-edfe225f65a6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "40883610-45dd-4faf-b0b7-f3ad4a9f3e7f"
        },
        "item": {
          "id": "6ebbaf63-76e6-45c0-b333-3031c4fc99cc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c68f219f-e3da-4d99-8b1b-967ec9c9ff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ca353e-efab-4d2c-a626-ba4c1888f497",
        "cursor": {
          "ref": "98fec32d-8256-48aa-855d-5b08ac18d4f0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3526a65e-2a10-4b43-a1b9-5bc1b1161d9b"
        },
        "item": {
          "id": "f2ca353e-efab-4d2c-a626-ba4c1888f497",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b4e49fc1-1032-45b1-b926-a11dd4b268d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e95c091-177c-4e14-a566-289cf5424a1d",
        "cursor": {
          "ref": "abcb3d7f-8e12-4a40-a245-a8086586607b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ada072da-a02b-4779-98c6-cc4c897b056d"
        },
        "item": {
          "id": "0e95c091-177c-4e14-a566-289cf5424a1d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1fd78e77-6e89-4b30-8502-77137de77875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e6f540-f3a9-4052-b929-470c42c2d0eb",
        "cursor": {
          "ref": "7dedb55e-636d-4de1-9caa-9fb44f22a60a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c312500b-3c31-4c4c-8b68-58d48692b5aa"
        },
        "item": {
          "id": "81e6f540-f3a9-4052-b929-470c42c2d0eb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb10cdb5-aca2-446b-bca3-e63dae28be96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba0bb5-428b-4ee3-8028-a2b9e8d1b59a",
        "cursor": {
          "ref": "09045f73-a7a1-41c3-a691-cd4223539bcb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cacdf583-a3da-426c-b6ad-102b549be067"
        },
        "item": {
          "id": "4aba0bb5-428b-4ee3-8028-a2b9e8d1b59a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "baa9e4f8-01ab-41ae-90bb-ac8b56ccf4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adbebfa-9a96-4af2-a550-b366ac28f61e",
        "cursor": {
          "ref": "ac78b817-c47c-459e-88ee-ee85a3a99808",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "65816c8e-9d10-4d5a-bea0-e93d6013ce5d"
        },
        "item": {
          "id": "4adbebfa-9a96-4af2-a550-b366ac28f61e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "57b7004f-ed39-4cf2-9663-faab8a715ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9812d8c0-5a5f-4f0b-ab10-983a0a5125c7",
        "cursor": {
          "ref": "b439d26e-8a34-47d4-b09a-fb621d63e413",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2226143c-2a6c-41d8-9e5c-14121d47fbb9"
        },
        "item": {
          "id": "9812d8c0-5a5f-4f0b-ab10-983a0a5125c7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0a44e988-3419-4253-a613-31e9fb0541eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ea8a06-4f0c-470f-abe0-88198af90cc3",
        "cursor": {
          "ref": "2b9050c4-1afb-481e-b2e4-4c0c3adf0d84",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e037cd3c-32b3-4a78-bc06-e457684a20c8"
        },
        "item": {
          "id": "69ea8a06-4f0c-470f-abe0-88198af90cc3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15ce9993-12b1-4b95-9521-7025bc162d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8792d0ad-d4ff-42c5-ae42-6170e4812214",
        "cursor": {
          "ref": "a9dc69e8-7c6a-4aae-90da-61f6872d9411",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d7bccf62-6a70-4a52-a420-c3290ccf3605"
        },
        "item": {
          "id": "8792d0ad-d4ff-42c5-ae42-6170e4812214",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f22591dc-726c-45d8-aac6-aa1ccc7b5568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd81ef7-ca52-4d9e-98be-d7a4c71069d1",
        "cursor": {
          "ref": "6a2f34f5-0c9f-4b0b-a070-98de31280e18",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c04ad787-6fd7-45f2-a23f-2b3dd5b4cbb0"
        },
        "item": {
          "id": "7bd81ef7-ca52-4d9e-98be-d7a4c71069d1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6aea0fc3-556d-49c9-978a-1e6982808940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3d3580-c3a1-4302-ba70-c8b0ed8a5ff8",
        "cursor": {
          "ref": "990d09b8-01c0-41da-8de2-2960a6226355",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c31fd88b-a501-4ebd-bbf9-6de3ddf63ba8"
        },
        "item": {
          "id": "cc3d3580-c3a1-4302-ba70-c8b0ed8a5ff8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "157ab80b-afc9-4927-83d7-bba00240be58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c22e28-e442-483a-a93c-30dbf55ddb08",
        "cursor": {
          "ref": "42d0d3c0-31de-4cf4-b45f-40bad3f18493",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "638b868d-05fd-4dcf-9427-b40f2a95269c"
        },
        "item": {
          "id": "b1c22e28-e442-483a-a93c-30dbf55ddb08",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "02cabf27-c331-4c57-93e2-9c9afc5d9ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b850c6-7d79-47ea-8e69-75ff0532b00e",
        "cursor": {
          "ref": "fb89eefa-042a-49eb-a2ae-8e413ba72dbe",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "dd5d3f09-58b7-4a01-9fcc-12da07b1c7cf"
        },
        "item": {
          "id": "10b850c6-7d79-47ea-8e69-75ff0532b00e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ed598c02-d1aa-4f3f-b2c3-215e1cf17b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b56f684-7d8c-4514-b48d-03d2bb4afc92",
        "cursor": {
          "ref": "e12d8bb0-62ca-433c-9ee7-ebeabe3d5553",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7b2631d5-4cee-4d5e-86b0-b8a14f26f591"
        },
        "item": {
          "id": "3b56f684-7d8c-4514-b48d-03d2bb4afc92",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cd01ef8d-0a1e-401e-9df7-058d411c16c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2caf63-d8d1-4e7c-89f4-b10058f0a625",
        "cursor": {
          "ref": "145e0efd-a880-432f-88bc-867f275e7c6e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "50a4a2b1-d2ff-47df-9d1f-31b0d712ddd5"
        },
        "item": {
          "id": "aa2caf63-d8d1-4e7c-89f4-b10058f0a625",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4ef38e16-80e2-40e4-8594-2aca98de0cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b81dc91-cf13-43b8-a903-78f72da35ee0",
        "cursor": {
          "ref": "65a0bf4f-4346-42aa-bc5d-68ef2557e7dd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "361fe44a-b472-4baf-8c6b-3a716c20eb36"
        },
        "item": {
          "id": "7b81dc91-cf13-43b8-a903-78f72da35ee0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f024c91d-5eb5-48e8-85cb-6725b2987a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a528180-dde0-4e8c-9ca8-a079747a7666",
        "cursor": {
          "ref": "1ac9618e-8ffa-407c-98f8-d1662edb4363",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6f64a2cb-7cdd-4d5c-ab52-39a6524e1032"
        },
        "item": {
          "id": "8a528180-dde0-4e8c-9ca8-a079747a7666",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "afc34dd7-cb66-4b1d-aec5-db7fe5323de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fdd089-d545-4ad5-aa77-252fd51e24e6",
        "cursor": {
          "ref": "7a145d0c-3599-42e1-bbdd-2ad00390572a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b877a13d-855d-4fa0-aee4-b1018ed2706b"
        },
        "item": {
          "id": "a6fdd089-d545-4ad5-aa77-252fd51e24e6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "136bbe27-1055-4289-98fc-327668a63e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b85f19-6d20-4673-8799-f4efea7c73cb",
        "cursor": {
          "ref": "21ca5de5-59f9-4459-8e2f-f4d28a45bf85",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "05dee649-fe98-4580-a010-44cc7fa91541"
        },
        "item": {
          "id": "d7b85f19-6d20-4673-8799-f4efea7c73cb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4b14f598-7637-42c3-928f-6fa129bc5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eca3d6-0d86-4835-8507-5853baa10972",
        "cursor": {
          "ref": "751c0bfc-4b7c-4d91-b726-e185071e03fa",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "16119183-4f20-4ebf-a466-b72f770ddc6a"
        },
        "item": {
          "id": "e8eca3d6-0d86-4835-8507-5853baa10972",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "70e9265b-0bf3-4086-b083-03517f6b1a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173994d2-a29b-48d9-9d2f-86a17d66722b",
        "cursor": {
          "ref": "53f4349a-e672-4115-9231-ec38e59101f6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d1b6fe6c-d0ce-4e8e-933d-5f958e3fbfe4"
        },
        "item": {
          "id": "173994d2-a29b-48d9-9d2f-86a17d66722b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80333bfd-ca67-4c7d-811f-82bbbf6dea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c6aff-62a9-4370-b65d-f872dc4c1f81",
        "cursor": {
          "ref": "3e4e6884-34c7-453b-96e2-06036e4bf82c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a2bffb5f-2fcd-42c4-8f2d-107b83d5047b"
        },
        "item": {
          "id": "ec4c6aff-62a9-4370-b65d-f872dc4c1f81",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "09de6d3c-48e1-464a-a35a-40f3cc276d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd62352-0b12-4b4e-b3b7-e3c8d763a258",
        "cursor": {
          "ref": "60e6a5f3-f7ae-4183-a674-3e66dfe7d392",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d5ecae04-08a0-4015-8d2a-6c5fb0014180"
        },
        "item": {
          "id": "dcd62352-0b12-4b4e-b3b7-e3c8d763a258",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ad26d551-c2b8-4e4f-a523-c2c2af4be578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a81749-cba6-42ca-998c-980a590c3c55",
        "cursor": {
          "ref": "db3d6129-d945-4001-a56e-e25f7135de06",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ff122289-c9bc-4ce4-b4bc-4b9df5a3c2ac"
        },
        "item": {
          "id": "52a81749-cba6-42ca-998c-980a590c3c55",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a2703c25-8d4f-4818-bf3d-bdce23cfa013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a8f7c-81b4-4b1a-be66-4c3e79326e40",
        "cursor": {
          "ref": "24d3c39b-8a84-414d-aa13-7a31ae80405b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e77e9ed8-cf54-4c4d-b733-6e1a443c609d"
        },
        "item": {
          "id": "254a8f7c-81b4-4b1a-be66-4c3e79326e40",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8b51ce38-bce9-4633-9849-1e59bf2fdd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce34f805-765a-45bf-ba8a-3323b52da9a6",
        "cursor": {
          "ref": "9f105763-817b-4d6d-8d49-322e7c2d44c9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cb0ccea9-0d78-41f8-bc6c-a04e6a0bda6c"
        },
        "item": {
          "id": "ce34f805-765a-45bf-ba8a-3323b52da9a6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "eaa4ca67-253c-404f-8350-61e05d960135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c779eb0-b2f5-451e-ad3d-ef61ad92ae6e",
        "cursor": {
          "ref": "2dc07c24-0a48-45fd-aaea-3cfc4c9c6abd",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1e062dc1-906f-47a1-a589-b097b2d74a3e"
        },
        "item": {
          "id": "7c779eb0-b2f5-451e-ad3d-ef61ad92ae6e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e199975e-9dd4-4102-9011-65ba1994c35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac1d3df-682e-44c8-8a75-3a2384501365",
        "cursor": {
          "ref": "4a092a77-9b00-4a3b-8ea1-efc8ead1eeb2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5d6fc63a-1d0b-4260-af32-da0c5deba29c"
        },
        "item": {
          "id": "bac1d3df-682e-44c8-8a75-3a2384501365",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2fc79253-7f7a-48a0-a015-15875267b0ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d102a24-def8-4d6a-962e-e83525254369",
        "cursor": {
          "ref": "a5b012ad-7e64-4618-b502-21f54fb8499e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "caed304b-0571-427c-b4ea-ce53ca2673e8"
        },
        "item": {
          "id": "4d102a24-def8-4d6a-962e-e83525254369",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "67ad0714-8971-42a0-a92b-21ef18fc29a8",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2546d0a-a9d1-451f-865c-ab46042ed78e",
        "cursor": {
          "ref": "b81bbea6-6acb-4cfe-be9d-cd84947d0203",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d312d36d-b284-4842-b91f-799138a0830a"
        },
        "item": {
          "id": "b2546d0a-a9d1-451f-865c-ab46042ed78e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8d3e8fec-ba0f-4821-bf4b-e35e9e269499",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3210ff3-52fa-4b5e-90a4-b8cb5eb3a0fa",
        "cursor": {
          "ref": "494efc11-a09e-4e10-aa53-b734986cda90",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f3db4211-58ba-4b72-ab4c-cf507bfd3359"
        },
        "item": {
          "id": "b3210ff3-52fa-4b5e-90a4-b8cb5eb3a0fa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a09ee1e1-6553-4f02-8494-ab04dcd36353",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5229619-75ae-4234-b71c-e2a20714833e",
        "cursor": {
          "ref": "d995263f-6838-40f0-93f6-68e94703d1da",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e06ed6c6-6ffb-40cb-b9c7-737191bfa465"
        },
        "item": {
          "id": "b5229619-75ae-4234-b71c-e2a20714833e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1cf50f8b-e360-46b0-a494-4e6150f2dff3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5229619-75ae-4234-b71c-e2a20714833e",
        "cursor": {
          "ref": "d995263f-6838-40f0-93f6-68e94703d1da",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e06ed6c6-6ffb-40cb-b9c7-737191bfa465"
        },
        "item": {
          "id": "b5229619-75ae-4234-b71c-e2a20714833e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1cf50f8b-e360-46b0-a494-4e6150f2dff3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e8a3d2-3cca-4825-89ab-c5b9ddbe0f6a",
        "cursor": {
          "ref": "48274ded-7b3d-47c5-abf9-0b264bd24ddc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "89ec9197-7438-4fdf-adf3-3b9993e37213"
        },
        "item": {
          "id": "c0e8a3d2-3cca-4825-89ab-c5b9ddbe0f6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "172e713e-73b7-48a8-9884-45405cfdee72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0d4e76-0b82-453e-8958-61acd1a259cd",
        "cursor": {
          "ref": "e7137b98-c21f-4fb0-b004-27f331ccf25a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d18ca4bc-39c0-47a4-b64f-5c7456c5add6"
        },
        "item": {
          "id": "7f0d4e76-0b82-453e-8958-61acd1a259cd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "35454be8-9fc6-49d2-9974-0388122abd7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}