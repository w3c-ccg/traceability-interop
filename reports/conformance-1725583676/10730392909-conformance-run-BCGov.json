{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6cf22c00-718d-4852-bbb2-486c7f5646a3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cee2c143-1db2-4945-aa06-736c0f1f0bd4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bf1c689-858b-441e-8d2b-2758f2c4197d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b2b9c68b-78af-4926-9b7d-71651043c6bd"
                }
              }
            ]
          },
          {
            "id": "11ba2a76-c767-447c-bcd8-da07742c278e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6eb08c7e-1737-4ed0-90a0-95ee70624904",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb031063-279b-4475-934d-1beb29556790"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d4fd956-4671-4ab0-b0e0-a13d9da8e84d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9f9f64be-f45d-4c82-aab0-edf99f89cb5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02fa43cc-cea7-481e-bbc8-328c6d17b43b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "728bb06b-3437-4439-bde4-524d9037f547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b16d6ecd-0a7a-4677-b715-0d8490553427"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27003d4c-b025-4bbd-a14b-950d4025fff6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "080f5df7-7989-4ecc-b370-a7fd9e35f23f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef196846-84a6-4582-bdc1-1be75fb8f56d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9fa6c37-3233-4cb4-8d8e-70bc1717c60e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14a527ae-2dbb-471b-9bfd-9dd6cc374594",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8edde5e2-bd9b-4049-8202-4d8c75525d9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9fe1616-a189-42cb-8ebf-4b6928e7e48f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6087c2c-22bc-4685-a321-89448baa7d91"
            }
          }
        ]
      },
      {
        "id": "ce7f035b-8ce8-4808-80ad-52ab5ec86c01",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1a7d6de5-9aff-468f-913c-c7517ba6f93f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb5e3895-d8e0-4b0f-8879-114dbc320aa4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a01cbc2-3c75-41bf-9b54-5cf8df9d09c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38ce595-7237-4146-8409-0d6229cea6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91648a32-ad7c-4cdc-a691-cf44cd17b232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c2680a-990a-418a-a294-f0ebafaa2587",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6265bb3f-3298-4806-bd15-42c1f8a58a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7644649e-c50d-4e0a-ac35-1d991e3f7269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc1590-72dc-4479-9cf3-f61f5666ec50",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e05763a-b64a-42e4-b1c2-05124f7ef5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bbade3f-6b11-4e80-9d49-7afd4886d0d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88b12050-cdf6-4fbf-8976-028e3e814acd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "133ad871-2bce-4393-b2a5-ca43f5adf7be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511a7ba8-50a3-4caf-81a7-9eb71f527bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaf90a2f-9802-4e80-91c2-2a164ba2cde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157a7d9-3798-4e61-aa69-c580d3b96267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86cbdca-7d4d-4c76-b0ea-0ec3f2075bc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21a0c3b0-720c-4c3a-9f5e-4addf572b01b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb50a55e-c64f-4b5e-ae0d-457f2917da8e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19468ec4-22c4-4cfd-8e15-9add03be7deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e26b44f1-d4e7-4026-b177-3c1b9098193b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5642378a-cab8-408d-b34e-f3c2d2d58ecc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "04dec284-1694-4f0f-a914-54f842644415"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ef2d49e-b7c7-49f4-a5ea-a2dbf7461863",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ae4507d-f578-41c6-8bea-f18ea05e20cc"
            }
          }
        ]
      },
      {
        "id": "7c4a32ca-daf7-440e-a728-2bd632c7ce2d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b8dcd3d5-01d6-428a-8eb9-7ba34dc40476",
            "name": "Negative Testing",
            "item": [
              {
                "id": "520f3a19-db94-477f-8593-38eb10d4b13d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "857f8750-387e-4870-80b0-22c7a7744de0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9afc31-0f34-4411-80de-25c51a4eaf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbae448-1ef1-42ec-95a4-511f119ac36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decf0fbc-7172-406e-9f4b-3ec1a2178266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fffe0892-c03f-4711-b3ea-6ff0751e4007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbd6301-2f1a-4d38-bdd9-71513240a882",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea05d98-cf9c-4119-9f9f-496d7aa5c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c8ca61-b1a1-44e0-9004-9e7a479b8d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488d7a73-b259-4025-b812-01ac59616ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e8d1f1-71e4-45d6-9726-0df310934220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaea4c0-5674-4fc0-a191-26d3488735fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3717bd31-d646-4d7a-811f-6da32392d401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812091f9-6da0-476d-acf4-65bf93252ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c83819-0174-44ab-a5df-c9234aaf0ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2d129dd-fce2-4ced-bcbe-7f5333ffbc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3e1d3e-ef92-42c6-9dd4-635d5de9255e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4153149c-49a9-450b-9774-69b2e3d42316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509cb38c-5d47-44b8-b0a9-06512614ed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8968f62-3edd-4de7-8a4a-a5c7903560ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "351e1e37-cfec-4202-86ab-b6352db543a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a482b6-ab85-4227-baf8-7f757206f66f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a51cdb4-b9ac-4071-b69a-9e47cfdfdbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b67182-195b-4e10-9257-42a00602239f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c053f9-5e3f-40d5-9577-804a8c0ccb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5e34188-708c-498c-9e45-b6a2969371e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9207cd28-e83b-4e70-81ab-327e8853681d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366946d-84b5-491d-becf-15fd5c91512f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fac6e95-c572-4af4-96e2-5ad5378e6ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82574b28-6282-41f0-882a-e13f7c8f721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c57c6be-49d3-4796-a5cd-47f4c9a2e99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8121d3f5-7e61-42c4-936b-c1ed5df124b7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97487dfa-b4bb-40c7-9123-fb8ea5be74c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a1c206-042f-44f8-bb35-3d16e8a9780d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f395f47b-30ef-49dd-96ca-21dfa92bd647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4289894f-4fea-4a1b-9fe5-85bbc4df029e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c6134-cfda-4e46-a6c9-46f9f8ad0fda",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006c4f27-9aec-4eb1-8baa-0df2c278f0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d89d131-30d1-49a4-92cf-6cb535710fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a80dd6-74d1-47f5-8abb-65b249f8d14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "760ebd63-b43a-4483-81f6-756d2b24fa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b52c99c-4968-4f25-a38e-358c1f4a21b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0636350c-3a0b-469b-ab81-f81d05c44bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d3b1a9-eb13-493f-82b1-53f02d222238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97c523d-33d3-4ce6-8a73-0bcc2d127d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228d4e3f-65e3-4474-bf71-82e250927701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef48c7c3-e765-4ad1-b9fc-17ca3a22e5ed",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb70053-91bd-4f15-abd8-593981872eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed07ba7-983f-4789-850c-8fa580dd922a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab67b82-482e-49cc-893d-c7efb8c5b2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "341436c3-bb2f-4cc5-8769-47465e3b0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118653d9-0590-4a77-a1a6-6ad9aff26c99",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655736e9-0fec-4ecf-a9b5-011ce0ba5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6fe3a6-1d78-4587-91e2-8330696bafc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac1ca2a-c2ce-45fe-a54f-607868f5dc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "524e87ab-03d1-49b4-a922-34d6acce8da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e77f5e-dc74-4b08-818b-e78de9bb3e5d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73e0c4e-2c4e-450e-9afd-a42e926f7d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638808db-2ca7-4e78-becb-078271a30e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eccfaf-f023-45c1-98e4-f078e1f9a7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07a009ba-c6b4-4ac1-8404-b38effcb61e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4656c2eb-175c-474b-85ca-6566bf7f3bba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e23a250-57ac-40da-9ebd-f253084e3381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7946361-6f43-410a-8633-a208e686092f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47217397-2440-4449-a960-46bb1c16f7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "712292c6-617a-454c-a1cc-7e400bb05a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0354f8-d609-4078-b316-09ca729c3699",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9451e13b-2f75-40f4-8e16-3204fbcf7c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c510c0-263e-4fca-8bd8-996550ec8a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58b1011-7781-46fe-bc51-5a482cbd0347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9f72688-9e5a-47c1-b545-dc96f32d89f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7284a34d-10af-4ae2-83a0-4e184aefba97",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ee3b39-7a15-4366-a9ee-7a2b99041d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7199abee-3051-4869-985c-2c414a5891bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c70664-d269-4562-969d-89a3f3b76925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9316a6a-1f0c-4b57-ba8c-ae42e68245b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba06ec45-7ea1-4eb7-b494-a7206d91c58e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2040bedb-6296-4acb-aa8f-63d893604379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba420ba5-a35f-4119-8117-79c76a83274c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e44186-b580-40c4-84d3-0e982d5c4887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0106e2b3-42a3-4b55-ae32-b4fd5e491949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1863bb0-e157-46c0-8074-d5c52a399530",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6df65d0-f25d-4e6d-aa83-8e1d2fe5aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5786583a-e00f-4731-b184-7b94a98296ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e76acc-6f6a-4115-ae2a-de23b3929b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "885eacbb-686c-4a83-9700-cbce1eeb4c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ca8712-e4a6-4ad7-afb1-2bb7241be213",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a0f392-0937-41ce-ba86-e128866f7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65aa8a9-a6c8-4c40-af8e-d11f479c2048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b510e6a0-4d09-4959-9427-0936700d9174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90517f0-9c96-4c4b-b799-7b55bbc8d962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a8b55-dd90-4bd7-98d0-af618d93fa30",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e15272-61d9-43ad-b307-ed01dc4f6b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342dac67-2d09-41cb-b7f1-141404761793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f426d6a0-10b5-40a6-ae29-dceaeb5f9324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "630a53b7-5481-408c-b7ea-e339888dd57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef19335-5234-4932-bab4-cef200dbf940",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d079c4a6-94e5-4846-bef5-4724f3cbc09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2407c42-a230-4019-aa4b-0fdfae4459b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da999de-db57-44cb-beb9-949187125ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3626366-38a5-4dd3-b3ae-499ce864d935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2146a8a9-7633-4cbf-bb0f-84b33a93e204",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e7b2e6-0757-4045-89c4-6889bcfa720f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94308946-6322-4a97-b045-c3854d226def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb50126-1646-4b9c-8665-ceb82560fe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9175c37-ab69-4296-8792-f6d31332ef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d65283-42f9-4c65-b5e7-88f6f9262297",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308a306a-3cf0-461b-9be0-be4e0b71e118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18591d04-ec14-4eac-ae13-5a6322ee709e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63f847-b567-4062-a780-85f1e7be175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "738aeacd-7953-479b-bdbb-91d0c916e613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326655f8-59b8-47d4-9ac5-795e958c85b9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b174d9c-041b-4cde-acaf-0e6d09655598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ba161a-3666-46d3-af08-cb07f79d147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6554709d-347e-4e02-9f5b-385a2114fca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5616c39c-ef2f-4c7f-929c-97e390d34b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089f9211-76dd-4e76-8a78-6e3971e70a3d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9ecf2d-f0bb-47c1-9e55-05b9729b98f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad239acd-8152-4c29-9c18-ce84cc0ba6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c48b30e-1ba4-4690-aa24-174bfa757b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85fa84a-e961-41e0-bc6e-876275f5bfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72db05d7-878c-4f42-91a8-d7e0f4686431",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d60a36-1217-49c5-88b2-2154e7ee1441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7fba45-9e57-4d4c-a8a8-49fbcd9d271e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818bdfe1-893d-46a4-9d7b-b821965085f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1de62fa-4b54-4b1c-9025-cb860735ef92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee31ba6-bcba-4a87-8881-22964c19166e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4fbcc5-df3e-4e3f-931c-59f73f7b7dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddfd7a1-1612-4b12-8e51-53c3679d11e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8cd164-b49d-4bf5-a856-fb5cef5fbb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f093a7a3-1d7c-4228-8e73-94df58a10584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477ff5ba-2852-4b97-8da5-5f4bd101d9cd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d6b4da-14f8-4cf9-9017-1b0772c226f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f577160-4763-4955-bfb9-f45163f33554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47841ba9-0521-4a0d-9d81-47dc8d4e7f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62c63e9-2a78-4ab3-9361-a84fefe310bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ab95cc-5b91-4338-91e6-d3dc85346fce",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2047c68f-e7ec-4e2c-bfe3-72180f3a77b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d59eaa7-53d7-4bb2-8d31-ae57c496bf74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1b36c5-76af-4f61-bebe-977dbecd25bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f784c5-84e3-4e04-b883-ae87adf737b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26f2f0-a03e-4cac-9cf8-a4ff0333a95d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5928dafe-96de-4210-8c8f-a4a6de584160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fe71f1-7f0c-488b-a933-ad566849bd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e416fa-19e5-473d-9cf8-439c3c7fad09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e96eba-3658-4f23-93d9-09ab208244e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16112e11-61f3-4527-adf0-c1db491ba4d7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd557d4-600c-4a5b-8a44-c176e5df8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1a5bef-db53-4982-94f3-b94f2429bdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f3d33-5420-4352-ab01-9ab75b064a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2c9881-fc50-438b-b77e-5d8330f13d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365d04e1-1507-43f0-8d90-b66fb71dacbf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f2882-89dc-4bd5-b5c3-897e9e0b37a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331d6530-3742-4cd4-9d8b-2e4866f49a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4682ea5f-2585-4bcc-8786-8e3a0a7294fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8092127-e69c-42c1-94b3-96daadacbbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd29293-709f-4d91-a681-760032a6bb8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f97e36-d179-42f9-8b4b-5a57a8dd7134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d7dc87-8793-49fc-b208-a8863c42617e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f555da14-6bcc-4d6a-9700-3d74e1caaa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d30c29-f474-4726-bcf9-e01fc004faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb608c5-3972-4cae-84df-f6a1a9aba5b1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9864fa-a95f-4d41-906e-0700e721c7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76acefb4-73df-4226-9c0e-3340c20aead3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa05b14f-0ca0-4369-bc80-38bd3a8c81f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07898d4b-006d-4609-b699-bea6bcaa1239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b119a699-9192-46a7-a96d-940a84476727",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaedeb6b-fdd9-4979-956d-2d150d7c0ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee74b4be-1766-4157-ab15-180ef6ae9376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeca472-5b9e-45f8-bd51-e766fc5d8fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "744d53f7-4759-4907-9118-23520076f34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d816f0eb-e33c-4453-a50e-0127b1ecde44",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926c6d24-0f4e-42af-be95-867d3dca8efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb194402-6dfc-49bf-a2c0-e64af512ccf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822d07ef-7546-413d-8f24-cb052053f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dd0bcd-6fe4-49d3-bbf6-c7af454f8c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb69c3a-df88-4161-8fff-320fb97d5ba6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df81a16-34f2-42f9-8ed1-c05b60148045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbdd832c-84b7-41e6-b2c8-cd5ce83741e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03efdad-f762-401a-adff-b686cbfb647f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f741bcea-ddfd-4e8d-a952-a25a57071625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d842d3b-58fd-4463-95ec-0b4b38e75a37",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00210262-82e8-4ac4-be2e-85249388fb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f590ed52-6948-43f8-9d7d-89fae484a7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5318548-b78c-4910-ad8f-fc9ce84e714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ac10ef-dbd0-4e37-8f48-17ca00fdd37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff3c25e-f6c1-4036-b246-58d7287fb803",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168487c-4710-4692-bcd2-9a4710cae7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915c57e7-b78a-411a-b7ed-57cce7f941c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee11353-2c08-48d6-a0ba-4bf008154d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f72e48a-cafc-4475-b5b3-d57c65025009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35c91cd-835a-4305-befb-06497445b187",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab88a26-482f-4633-98b2-2971554eb83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a87640e-9e85-4e47-9b4a-e310eecda446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854059ba-85de-4032-8d59-ccd3a87272e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "944ccb91-9139-4514-af21-89560ea0c888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6440519-6513-4053-b42c-8c82c8bee236",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361c25e5-7dc5-4e61-8748-e54814caa4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59111cae-6d65-49af-bfc3-3d1e50a5bbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a08dc34-8084-428d-857e-2c62c29f5b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36318cb7-9575-4c07-ac04-7ca1b2fe316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d5150e-a637-4a30-9a9c-82de450436bc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c956f93-26af-4ea4-8f7e-ebcd2aedc5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab868ca1-b812-491f-a41e-cfb4541b72b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73505513-99d2-4bd0-aa85-0e4d7d280951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82dd475c-7102-4926-848e-e9cfa35adf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28163e4-c3c1-4eaf-966c-ac92e079a6e0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a001988-e852-471c-addf-1eb4b877e855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae46bed-6395-4181-9f32-3a0270ac7375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9508a1ff-b43d-4e52-9af7-06a3bbb96cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0512748b-e52f-4759-b849-9cc003b45405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e546b8d-fbe6-49d9-81ba-2859f584b6d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fb343c-2627-46ac-ab24-587de54401f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec65f67-7983-4b59-884f-64452865f07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c847cad-2e56-41e4-9de1-a8b5bf2ddba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb0e3fb-1cd6-4791-8075-66632fcd930e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce5c60-f5a6-4928-ad1e-5ed8c4d4aff7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7087e58-cfdd-45c5-b4a9-0dd46e1decd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42318645-d57c-4e30-8d45-e8d481fd7e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fede3d09-c85d-4737-b93e-a21fcc5aa05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bc0f4a-cf9d-4621-831e-9403adc7ec1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c2fe01-15de-4924-90ec-8f2bd06beb13",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f0df48-f7e3-40b9-add8-b7ee5a1789d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5808f65c-cf9a-4882-ad5a-506bb600ad9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cbdb5d-a706-4d7e-a247-9eb3664da07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d82c82-b8e8-4456-b01e-139d5c69b7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c14c41-0597-4bf7-9aab-3af2ce6af385",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8304947-e401-4ebe-9e3b-dd8e66303a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c94e36c-38df-4268-85c8-130de53abaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266bfa3e-b721-43de-8b10-782c7798c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a85af9d-48ed-43c3-a87a-bbdf642fcb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e689f1cd-87c4-419e-87ce-7deb8ff325d9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4796941-7066-4811-92d7-e7f84dbe8822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd69e80-364a-4e34-84de-79a34eef496a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea997c5-6ba4-4eae-94ce-6db418cb9209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b08fa849-5262-4ca0-b850-4738700cb5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3413375-344f-4361-83b1-1782451e03fe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad54d73-0277-4037-bbc7-54d45733f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7313e899-b090-48d5-b36d-cffb083f92ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f672b14-f649-451d-8b59-55da6e7324b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6acd24d7-31ea-49e5-a9cc-4f5a99e6fe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019e079b-74b2-46a7-a127-539eb91f042c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0dbf18-617a-4567-8f06-2e25c94ec8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02f60b3-c2a7-46bf-8d08-a2b278d1f323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedf5d25-109f-4a76-bf8e-88b28eac7e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ba8cb0-efc0-4ebe-8ae9-223069dc71db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a4b6fa-0fad-4137-9b0c-a5e812dbc413",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48edcb67-12a5-4062-aa15-a3dfc762c1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c136e917-ef6b-4649-8c45-6718fcea44a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a37275-4f9c-4d38-ba63-9fd370cd5c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49f2d243-86c1-49a8-a950-076ab646246e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3bb870-8a50-454f-945c-21b9d6b91cb6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c2ada6-90d5-4f56-95fe-7bbae9eba1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef4d68a-8a12-4714-b1ad-c28d4a8f3b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc791ff-6943-4f83-982c-51e65ff29fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d07d13f-edbd-4763-8688-49bf828e8151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80caac3-63ba-45fc-af7b-a6d497b483fe",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb84ac16-3ee2-4c06-ab3f-6ff4981f0ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3e9caa-086b-4c28-8e85-b509511449ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6ef877-3996-4267-87e0-d561934ba665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f81860-9f96-4546-9736-f02c9fa27f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24493898-3cc7-4db7-8b7d-2d745e5af6b1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14138cb-f7ab-42be-a370-a3febf023be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0326e4-a9a7-4234-a268-698cbed96912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ead3568-0aab-4e8f-aab9-5f66018ed7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9877104-2e87-4f5d-8242-f0c17f992481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4c3bac-0f18-4dea-abbc-00908fb92874",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7fc381-a980-4034-8dbd-4b75b5471014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb2ccf1-5b54-4d87-938a-f2966bc86cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba9cecf-1def-46e6-afb0-0182c4eb1ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd28236-3746-461c-b39e-d31a6cbf9ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7cc247-be6b-44da-aff5-4789eebe71fc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06ebbb0-4805-46d0-9b8d-8694f33b1618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a83c27f-21f3-4276-9d4d-bd66594e728b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f0d11-d4a9-40fa-8025-c9c10d1bbf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eadeb9b9-0917-42ab-b6b1-ff5fe3fdd58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14154383-2213-418c-9645-f0242e2905ab",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d6b244-08d5-427b-a50d-388b56ca69be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53a0798-3118-4bcf-8130-ae8b592f9bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad26b58f-03f6-41a0-bb4c-53dbc2070b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2c15ef-66b6-48c8-b76c-eef16e90bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319cdaeb-d881-42f0-969b-73c6fe04cec1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e82f5-ea3e-4afe-94f5-2ce683150f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e62d86-0061-4f36-a526-fc8387bea602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c364e3-7a8f-48ca-9c06-8bb6e10c3c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75f14ac0-aabc-4e2b-ab3a-87f20c8a94de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9be62f-1ba0-4931-9952-edc25f3c0205",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2762da-cc0a-4bb3-8ec5-06977e018b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09abe5c-6ca6-4079-83ec-d84ec9130867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12d6285-bcb2-42de-9b2f-39bf42d77d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c9319c-3f59-4749-83e5-d5f443f46432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e768a73f-9b5e-484a-baea-11c9fb9b5e9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2507e175-166f-464d-8322-7152306fa3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa8b59e-bf95-4f48-b22c-e029fc761401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfde0a7-cf1f-4ade-bfd2-082dc5a8d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e16921e6-898d-4702-8cb9-9eaeda85ff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb655b7-ad88-4602-ad94-da5bab3ee683",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947241b7-137c-4cde-954c-6c47088565ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a342001-87af-40a2-8fcb-75b0298fb2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efec25e-5861-40da-b802-d5a1926ef485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79b3a432-3aed-4d8b-8d5b-795148919833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b099a6-a209-44e6-aa1c-99ba59a9349a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca776c67-79fd-4aec-8c94-2b45f0f7bc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb5a5e1-10ca-48d0-8aa0-5e58e7647228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e24fce-9702-430e-80d2-cb8502a67525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6191840f-ff5b-4aa5-a286-6c8099d75923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10470b3-cc91-4373-8597-7034b361cdd0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf7207c-03a0-45a8-b9f0-d7a72c993830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead686d6-ed3d-4990-81a7-028c1c432bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8579ae3c-d6a5-4fa9-ad4d-b9c4eb8baf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "639a4b32-6a9a-4f6b-9789-5a8f5aa67019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d13a79-0b43-4fb0-bce9-188765196c22",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2178c8fa-c7bb-448b-bf43-edc37a8bcd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7286efa1-d278-4b76-a731-b5faccb6524b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d11d4bf-1729-478a-a20d-893b28a6316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa3df95-562b-43a4-8f5e-1bc0006d4d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf938877-61d3-4396-8356-59d6129f88ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768eb365-fe06-4fc5-b3ec-cd9f04090d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc250e1c-af35-4e15-896b-6cb829af8677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa2cd10-1513-42df-a14d-bd2cf0aeb57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb7f8d8-f19f-4d32-9dc7-a8c32f625d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aaf7bc-8d26-40f7-bde0-7b7bb1324a49",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37235173-7723-4a5e-8b03-573a1eb6b436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba15c11-a934-4362-b4ff-69804d3401f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc0d53-1651-4b07-b40a-21fc9f8ca810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace46053-e86c-43f7-a539-461a3d819822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244532d2-d6bd-4b40-bfca-3b6a04354ecf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ed2c76-289a-4ad3-8fc3-c86e8a2b718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e49317-2f2f-4c30-92d5-f7c9dc76d5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d9e2e9-dbe5-428e-b954-3cba5c2031f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daea6ec4-05e7-456a-af9c-8c9681bd7cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1f930a-94e5-4f87-ae89-bdcef4b4e9e0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b168425-4456-48ca-b33d-55b738f574b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6020bc06-6422-4f9f-ac31-d04bbdab17c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42611c48-304e-4819-a044-0520c94b249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3527a3f-1f08-4e98-93b5-579984e6d3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8280dfd5-3a19-4f57-9f0e-2a45c17bf0ee",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac4217-596b-4de1-800b-5d27681c703c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2741f42d-58db-4cbc-b84d-8db5d80d47a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334f3d50-0d75-4a73-88d1-50a9f0e25256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1680867f-57a6-43df-ba7d-2a19c5a77602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab186fc-e3a0-4463-84d2-f9397a1dd142",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef1aff8-3501-41dd-8964-aedf461f2b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba57d08-605f-4a6c-bc69-a83f71fd5ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d507c89-dc91-48de-a77b-7bb405b03e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f29f2d7-5a70-4602-b589-2f2769e45e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4ca13b-b5ba-4a1a-bffa-ee42d0dcb024",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61106df2-1062-42d9-ac50-391723b2891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598f0858-97e4-47d1-9bf1-e4c2416c849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fee4dab-f12b-4aed-89d4-40cf13d4b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f9b547-31d5-4833-b2b0-00b3cfc4b37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f336ab37-6ab0-403b-950d-f9c789c1503d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d5fa6a-7e75-4595-826c-1540430f3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a7d868-9657-4a4d-81d3-ede8a09f549e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3930c226-536d-4429-9fbc-553a9f35eef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "690bcf98-7285-4d4c-b244-e3f84b45070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91462e82-eeda-46cb-b47c-660c77b07611",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1175c4b8-bdd3-4f1f-8ca8-4d912341f45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d3b0bc-9a1a-458f-ae25-361fa7cf6880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01a506-9a1b-4328-9918-c5293d204fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00a90e9-3fef-44a6-8779-220616feec92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6411ad2c-42b3-420c-be82-a0aa96248c25",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e752a570-e39c-4b8e-9e7d-88240fec588c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0610a9-e2da-4b53-887a-f3caa5c06170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88547e3e-7289-49c5-a78e-cac0140f78aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abfba90c-3775-4200-b2d3-ffcfc109a43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a4a45e-d19a-4f1e-a58e-7c73c7f97416",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3be0a2b-f64d-4eea-bed0-a43367bf769c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fc930a-8f83-4536-8d57-06206a770bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e382259-dd4a-41eb-98f8-11d57c9a8dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "851f3ad8-a0c8-4044-96ed-2d18c7401eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7631abf5-542e-4d35-9a8d-dfe3daa03f82",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1966d2b8-da29-40db-bacc-535f99e2b413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053e5587-702b-4183-87ed-7c8b556f0826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41debef6-dfad-4914-8b2a-82c6083931bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d817d1-145d-4df4-ac78-b38bdc2d5f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1ba01f-97fa-4668-81cc-6ddae186ad51",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57b0fe7-79d6-4c91-bb62-ff632f7f3f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21f2b02-c173-418e-92c4-4ddc0bc51a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca75cd4-e9d8-4628-a259-5a47406fef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "789c6d61-ee98-4dda-aaae-ff3c5797a056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8efd5b3-5f89-4fab-ac2f-9aef854f6ef7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2780a1b3-525d-49b7-93d7-eb1a37013de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b586bdd-c6e0-432c-8e1f-e4feb47b8734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6392aec-9945-44a1-ac46-46320bdbee74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96aa8861-6d2b-4dd2-a702-7c673f9d7968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e3ec0f-42f2-4333-975c-6225ec127234",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832fdb7d-2a85-44c1-beb4-0706437aef52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5419daf6-c10d-45e0-9266-1cd5e0a1ddb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409caf3a-89cd-4002-a8ee-42caf0679557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdf2ccf-dc11-49fd-ba61-cfe7fbe871c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b6c303-c9e4-4667-9cc6-c9bfb8d0a235",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09f68cc-15a7-4555-9eff-997e4c9a21d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c1749f-186b-4a9c-9af4-5d13500ccf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3ab46e-a3c3-4fb2-a55f-cedec7ac9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab34f263-6e6b-4fac-b2b3-f06ecdbe7fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e887bdd-7f9a-4e73-8ec4-137b0bd04140",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc8e6c-8e9f-4e47-a64d-f49d446658e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624bf05e-b7ab-480b-8e3f-aeb65637c3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d2eda-9437-4408-bea1-be8d218a8763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "597679fd-39a8-4913-a77e-835cc09b6c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab44c63-9c74-4270-9005-1d4615a23651",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d2f9bf-2afb-4c0f-a9a2-023613fb2994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4586b2-0ae6-4d14-a6ce-3c349a031a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a026b6ec-b964-4705-bd28-bbbf53630023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3005db2-ad3a-48df-aa6d-d4b5eb97d6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba26fe2-bf08-4a97-a0da-3170d3ef2e27",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d76fb3-56c1-43a2-95a9-230baa693721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7b89b1-b039-4d5c-b2a1-712abb89d0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35e64d-126e-4cd1-b7b9-05dad4d8d493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0855eb5-1534-4c2c-b80b-7f700e2e9cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0ec935-cf91-4c1d-b2ce-7e3b89408a1b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fca013-e073-4283-87da-4f627a075ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6389af3-6a16-4c04-a365-bd118d38ff46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a37d4-8913-4021-8d4c-0d6a162e7f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33fac49e-7ccc-44ef-a7f1-88ff4e09bcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a07ffc-d689-4e8f-bdfb-ab708a3fa15f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7623d24b-ed83-4de2-832d-9abcf6277d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f60c1e-264d-442e-bceb-75e213c7cab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bb90f2-cac7-457d-87eb-f9e23e96dfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9e3a2a-6a74-4c92-a7b4-85b0cc3df410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c1840-5c3e-45c6-92f7-4d665593ddac",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c89fc8d-2b53-4811-940f-d28860557b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3f67de-a700-4cfa-9347-d56391584ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86858f26-0298-4688-aa27-ca54bb1ecf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1330c4d-23d1-45af-9a5f-4ceb4ffcf084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a60341-3404-44db-9fa5-4f3744e95076",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb0e529-3152-4c5b-b620-dc38bb52a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94209739-cca3-442f-a7b1-0a5fb8269de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b49d6c2-61a3-433f-9c67-0f3ba5e975cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a67fa43-6994-402e-93a9-5a6ac11032be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f223831b-6088-4a0c-899c-173631e6a848",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3903299c-179c-4d4f-8e2f-840d05bc6b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f469bf2a-3890-4696-8459-c2c14391f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4575ff3-406b-4897-93ba-0087272331a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d12656ed-4e68-4e2d-a38b-bbcc76eb26da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c017ce-6fa5-4718-930e-a4da42e67e0e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5797d9f7-2240-4ca5-9d92-08ec3b26ddc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2d6599-5b73-4f9b-9d6d-5199532ce611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aeaa1c7-eefa-4386-b029-bb5af63304ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29484bb4-b017-46ae-8313-fbb4eaab8413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5820346-642e-433a-8b74-7baf9eb6cc20",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee5fcbc-474a-4954-9fd6-8a846b7b7391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd7977d-e9bc-43bf-98f3-97cf7c742fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c18757-9e47-42ea-b07a-f767764d63ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c870b800-229f-4634-9ee9-6fc2144e6d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f787a-d374-4689-b4a1-5ac40190278e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad661a5a-e73d-47a0-b506-7568cd2fe084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd59866-3165-4f50-9d25-ed382ec0db4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c406ce-9d2a-4a78-af4e-1c14299eede0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc393506-e6be-4b91-9eb8-3a4f5d28b0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b257a2f3-278c-4d7b-831e-8a0273210a83",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb6f15f-24ef-4549-a2aa-7f8b7921fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320a3611-fd5f-40cf-bad8-da5780f5ef63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9675456d-5759-4c14-a21a-952e2c94383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bde7fbb0-9387-4bcc-874c-23fe695006ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a166439-4612-4ebd-8d0e-e01c67239627",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc3d202-bd16-4220-a2b9-459fb25c1695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a8c974bb-7768-4ff7-ae74-4ccf32d5cd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419568c6-622b-44b9-93ea-833343532485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "631aa8c7-8ca0-4daa-b0a7-6ca77a4a41bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e82efe92-f4fe-465f-b2c4-a564b20b0ed4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0de2ece6-3879-4b97-8d2c-409df05da568",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a089cc-712a-4361-859c-7c52a5c865b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba0a1807-eafd-4d2f-945b-0a810b67d137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d8eaf6-54bc-4690-9d0a-5624240daae5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "221d5b26-d45a-42b7-8f62-cc4497b2868b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "842cc2e0-cd46-4151-8498-e3f0b53c8488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ef815b0-067c-4681-9756-461a3f36e264"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaed281c-1c81-4ad3-bce4-b893b0eada98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2f86338-8112-41b3-a462-d15bdab572a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06b9b96e-cac6-4797-8dd3-6cb3f54b4a80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8abf026-60d9-4e41-85b5-c35778bed095"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f458314-a5d3-4676-a80d-1ee08b6d73cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f493dedf-70d1-4275-8404-77fba36916e8"
                }
              }
            ]
          },
          {
            "id": "35ef5ea1-4864-4446-a623-165dcb591582",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a26d4d3-d991-4917-a8ea-8f967012a5b7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "351492f3-99ba-4f91-b270-e45ad013078e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d058fc5a-9de1-40e8-98b2-1c89e432f38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "306041e9-ccd2-4427-a78b-4432e146f5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f3608e-01d8-44d0-912c-ed49faa1c5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d831d99-59c1-4081-b5d4-56a080026605"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a7b5ae5-a950-4691-8ae8-30270e023fb6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44023a1f-2cce-443b-b066-ec0165d72bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f748d321-15c2-41d0-87c8-acf283f4a71b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3df7eb45-20de-45b1-b29f-00d1f3db3dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f31306f-0656-420b-9ca3-fa72a56140d0"
                    }
                  }
                ]
              },
              {
                "id": "9a4e8e05-832c-4bb8-b4bb-138b751ab82f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8753eadb-5aa3-4165-9b8f-73fedbd01677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f3776d0-3a5b-45a7-97df-1a7417585801"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f138a621-ed66-4d54-b6e6-a7c6b7953e0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "307901fc-ea89-4dcc-904e-f0ef11c64bff"
                    }
                  }
                ]
              },
              {
                "id": "4eeff015-2d1b-4465-a5b2-ac81658d5c6e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3611c0a6-ef73-4cdc-afb8-5c3fcdc802bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c1fe051-6b90-4c2b-9c50-1c7b76675f74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e81176f8-70d2-40bb-a8c2-4d413f8f763d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7b32198-6e14-4560-ab2b-7a71dfab257c"
                    }
                  }
                ]
              },
              {
                "id": "9b32dc11-c336-4226-ab85-cb37966d726e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "004c3343-fa38-475f-a844-1d4cc0cbe904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e87cccb7-3501-4c9e-9b79-e8b3dbd435df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df0fd0d6-6451-4d0a-a274-8aba063ee5a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9e03ad26-edb4-4533-bbb6-b048e9d9ce01"
                    }
                  }
                ]
              },
              {
                "id": "1b4708e3-0d60-4937-8cdd-74d5c7fffb16",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a297e68-aad1-4b76-9365-0548e6ceb75f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17660eed-0393-4d0f-afe2-16094ce1cac5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84419539-cdd5-4d72-98aa-e79e2f0584f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62156f49-dc69-4fb9-ab9c-b9e60d637b59"
                    }
                  }
                ]
              },
              {
                "id": "a4978995-15ae-4f76-bac6-c0520d58b975",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f068236a-77b3-4e56-843b-abcbe7dfadda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40086be4-2c30-4400-b54b-411aff3f92e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "851da509-8249-4f00-bd5f-647153df32ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "388c32c9-6884-4c56-9a24-54a002c94f86"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68356876-2a49-4d64-bc7d-618a91e329d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93d4aff3-eee9-438c-83c6-ba96e96ffef9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ae4e200-0111-4830-a0c4-a30e02dfb9e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eb8b16b-5b2c-4e5b-800b-4d8bbf742de3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93bd92bc-73bb-4a5b-991b-6084ad13d8b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "96fcb0cb-8192-4d39-89d4-b8fe15e7d646"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "094bc1c0-a8a2-402f-92ba-8dcdbd085581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4beb654a-ce99-4f06-b671-6b477f97a22f"
            }
          }
        ]
      },
      {
        "id": "0bd5f40a-11fd-44f1-82b0-df23e4740495",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "669eb6d6-015c-40e2-bc1d-a10c0c465927",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af262215-8d86-49fa-9061-66cf7e42f17f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1c90357-00c1-4fdc-a69a-bba5672de6f5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a92a6e-0346-40fb-9112-afb5ff95ef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57f609e-3c45-4ff5-bd1b-ba9ae870930c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f877524e-4305-4404-a8b3-9b8a6af5d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "20bc2b42-261c-40c2-bdca-440667119ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e122a0-cefc-4e49-88cf-078e2e2a80d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb59a29f-73ec-44f6-a5da-8d182d162b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bda692-c083-4672-9e86-169b6e4c0b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd78311-d219-4e16-bf82-b866ab04790d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38d7b314-9ad4-408f-b26d-1c995bb88359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05e66ba-493c-4c87-a282-3afecbd8f30e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b78a9-217d-4b52-8d32-f732d24cd57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b761a336-1c9f-42d4-87a5-17d64fbf73eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e85dd0-ccb4-481d-9332-59f4869fb087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8bd0cb-669f-442f-8fa6-c7a19dab0236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84be0468-549f-4dd1-a05c-6377b987d67d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6cd17e-1643-42b5-b80e-0ad79797c2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2977d602-3c57-464d-ba89-3b36dc07625a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b34c9-2d4e-4cac-8916-3835508ff254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8f475a-ce6f-4247-9fc3-5f2bf585b0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1cf655-b8dd-4ba2-9baa-0bbb3aef1df1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1596ede-7546-47ae-9130-2feb8e7a4a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f055ef-8b26-4005-9852-e580a9ab0b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651c3252-af9a-41fa-9fa0-a42a19cbff87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba687875-e488-4fae-9beb-a892474956bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e53b0b-e484-4479-ac5a-9f878df0b56f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aa7507-454e-4daa-ac29-06bd88b94a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0400f7d6-4f9d-437f-bbca-dd7887e62309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063fd9c-de5a-4cdb-b6dc-5479554af3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa3a0f0-aeb8-4e6f-a9a6-c661363bf006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4cb74-f0c4-41c2-a4b6-1aae223ca95a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139f5ae3-1644-4206-992d-a0b7f197ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a20d06e-ff33-448c-a5a3-024be5c653f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740e745a-cf44-46a3-b92f-7b89f58d5d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4752781a-2975-4bbf-9c0b-d049cfeec569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51e37c2-d0f2-4093-925a-a5d66be41ece",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ac5070-c1de-4efe-bb57-23b48cfbec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fb8013-eb90-4f1e-a163-4d8e000f8bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775399f9-1cbe-4839-a589-bdd07e65a9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72efb1de-58b5-43c5-99ea-f6860655ec24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b68e1-5478-4d52-b248-0dbbb2d1a526",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d08db78-d2a0-4f76-ba46-06079519bb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da67f4c-7e63-4979-a996-0e95933bcb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f32e8dc-dd87-4813-8461-f716246c0628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdbb2d2-4f3a-4b3d-a859-bbd848a42829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb80e9d0-bb34-4f1f-91e9-e6ef376bfe2a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db047a3e-353d-4c70-b42c-711d6c744c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32076558-dc5b-4c85-b439-9d9d09e2078a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46743dee-2990-42c1-bef7-c596fbb092da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a768b452-0ec9-4999-910d-9c8ec0e31690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71acd1e6-1f0a-4475-83e0-97b56f70a164",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bfac6d-ac66-40f7-b490-b315f28fb463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e517482d-905d-4743-af4e-4a54a7580edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d79c0c-fc4f-4b20-9440-d9fe929bc6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bff7c5-df83-4fea-8cad-817f4e2181c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ad50e9-caa9-48ac-a332-6e7e15ae0a4e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2f7289-136a-4d78-8c88-9c26e0249592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f92e8cd-385b-4ac0-9680-f3c6663b6000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf26016-ed6c-4744-977c-81b859743f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbd95a6-9030-4cc9-9a90-01951934f3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2cd3b4-93c5-4046-9124-6f179093327b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547f77e9-5bbf-4f7e-889d-bcfe83663604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfa9183-8dc3-48dc-805e-d8e55d12405d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0c19e8-5308-4649-a88b-c1a599d557a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b96bf7e-bff3-46f5-819d-f63261d57f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add1873a-24a2-4df2-b5a4-96ff13eaf0eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8bc290-6f18-4173-89e8-11f3ec96a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f50d5d0-6b21-4edb-8b54-e5b19d5f9228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61434972-db35-4523-ab2f-c8eded2c19a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "72468188-f73d-406a-857c-0354720399a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c920d75e-a14e-486f-bc04-569e4c966ccc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a4a9be-c2b1-4f6b-8f80-94ec4bb8182c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0ba65c-06e5-446b-a692-2939f0ddf2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b0bc0b-7c2f-4c00-b45b-09d209c6d238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a20b6f-9e2a-4aee-97cb-8defc6d66d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46356b4c-0fd8-4918-bc76-85841afcfac3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a100ee8-b942-4003-8d85-e16204d6942a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2646bc4a-47be-4c19-bfc3-29156e788e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b471c59-8e04-4e64-933d-65bfe360174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f944f3-8da8-42b5-8f0f-fc244d6206c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac2eafc-240d-4a9a-8efb-d71c895a14b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfbc43b-93a6-4320-b050-f3b0b11cdb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80879999-d243-43bf-b450-82426850797e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453cf50e-9703-4eef-a97d-e8940ce60b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7fd745-eb2d-4f6c-bdd3-f0bda5aae955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072df64b-d61e-43ab-952e-48aca33037d9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca50132-778b-4d73-9628-bf6d98fac3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1847a61-0951-44d1-a744-bf405eeeb30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c623fd0f-c005-4eb8-a0b3-d548e429c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54fabf6-4507-4aa9-9748-cc0ba0663bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21632b58-edcd-4557-8749-db0afb5fc97d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f395a92f-e8a6-4dba-9f47-abf67f7b9009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4daffe0-33c6-4228-952b-b88741366980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8681f85-11e4-476f-adc8-5e1482c0c703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b3815d-4729-4d26-92cd-192003655c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a9230-8dad-40c4-b573-c695059b2482",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602afb79-a136-45c0-b343-cd4a08d1afca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e4479f-df16-4853-8f3c-0de51cba69d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645844aa-345e-4add-a94a-76d8a1187eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50987443-ed16-44e2-9bd7-f500047ad72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1bc2ef-09a9-4e8d-8106-08f1016dde5c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c09b0a6-fb86-4f6f-809f-e07c2da83cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abbce40-163d-47bc-b469-56f6d5eacce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3b9625-3e9d-475e-8930-49c1ab5dbc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "237ed312-6861-45d4-9c51-08e1120660ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146b3b05-3a4a-4ee0-9508-c71bf40772e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2753a008-7e66-44aa-bc25-260be59cc6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7756de-4186-45e5-a7e1-a366bb00a8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f04ffee-743f-456b-9ba5-f9b6826c37a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc26ebd-4dd2-4a88-a09c-dbf731dc596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4acb78e-bafd-462c-a616-e581799879c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b966d06-e56e-42ba-9956-6c90740af9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35219eb7-e3c0-4e3e-8f4b-6150d68b6664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e42157-d233-4377-8c0a-4a33cc45918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80be346-5a4f-430d-b9bc-48c82c46d410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d353a6-295b-49d7-8f77-0b5b8c0b471f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a129ebb6-b2b8-46ac-a71a-33f09e2912ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2c30ad-d20e-45b9-9b1e-7e397a73896b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63386f7b-69dc-48a1-adeb-f2a1f16d4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d65e3bc-7d90-4f0b-9c45-2cbbf577bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e222f772-6d59-4e7f-9aaf-169c7e520a8c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073759f9-b630-4ec6-b847-bc8730de02da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec18f907-4b44-4381-83ab-8b4da4cfd2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591c6239-cf4f-41a8-ae10-6f9a90144191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58561f45-6bd1-4f67-8e0a-0c2884d2d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52280e32-d9f6-4b7a-b90e-acb4426051af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f63574-2097-465f-bb72-d734af6864aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2001905-9160-4ea0-8852-bfe33b1636d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd265662-5e73-4524-a24c-a89616ac7382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed664b8-1d06-4083-a350-4d230324c056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f050873-0ac7-4f8b-abae-0720b756ce5c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87867cc-def1-457e-bfaa-bcdc2ee4992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7246415e-2b06-490c-a44f-e0ec09cde96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19050ad1-aac9-443e-81bf-3ffdf28ae96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f3504b-4f95-4580-a7b2-a5f976dbb697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fff5d97-5088-40f6-a697-37442bcc213e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a219da82-1e5f-4732-b57e-38adf1650d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb373dc-0c8d-42cc-977c-f2fec8e6a2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9846a4-6a24-4cdc-9a35-697eee3d5b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b235a7ff-587e-4d44-8d5e-a6a38a640cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51530b4e-16b2-4a7f-81a8-8815dd5ad46a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e7b885-92ab-4f9f-ba6d-e949672c8dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611b4755-3d86-4ad4-9811-650bbad6012f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c23760e-30c0-440b-a683-ac3b0821cee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5b57f4-7feb-4931-b8f7-5098322a6278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523d87a9-246b-4938-8a60-9152e03df5ed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fcdf47-6576-4639-a57f-1ba993fb2bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddb3d09-2204-4a37-bf8f-96846f8459d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c5ccd5-5bc0-4c41-a75b-0d9b48573ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60721fa3-7015-4edf-b633-53fdffebe69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a873363d-2c91-44a4-938e-7f512a328f68",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97c7830-5eb4-4f3b-871e-a45b47b9f015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f321de33-f195-4105-a965-a2849f24bff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6cf559-4fde-4c05-9f63-958db273cd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee40ed3-8a4c-4bca-8253-93d716c748fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10656ea7-cc83-4442-9446-11aba5a86c11",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d4473a-6229-4227-8cc2-0c344e1eb66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230f3d37-86d1-40fd-80b1-a1641ffc187c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0548f7f8-3674-4785-83a6-5658c19af391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7655156-5307-42c2-bee1-f7a94b1d569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd824405-8f6d-4571-80da-30ad3829ef81",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f625ba6d-6e75-4384-9235-db29f2f8a9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97725800-d912-4390-9b9f-0504d51dfba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57c203b-a7e0-4599-bfc4-0deb2d10b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268dd54c-0df7-4ce1-9bf3-e3a84ceca1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a94c87-4036-4f40-afed-9ec20ae35a6e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b416ae-c91a-48c9-924c-688bfe14b2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f24d0f-4f73-4652-b021-294a54a176e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e7c92e-b603-4b82-9868-daa580fc944b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ad9435-b184-4ea3-b931-269a8a16e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f8dceb-2b29-4c09-b39c-475bb3676614",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f033ce-6a09-4eb9-9b9c-8f7ca5053044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f27c68-c6a3-4ab0-85f7-3e00acfb758f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b47dc7-70ba-43cf-a338-8b78885a1e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b83cd0-4806-417a-b443-a6c494431de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479935af-a143-43f4-9643-9dc5a8e82f83",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02946ea3-0668-471b-a2e4-e26296dc5054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7316059f-37c9-4644-b69c-e7f402b63329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb80d63b-ee75-46d8-9c04-708c034a0c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a2ab06-d80b-4919-aac4-f4c11e021238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c154b0-a8f1-4cbe-a6fc-14027f978228",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235c9270-5dc2-4a6e-bbcf-b4b3a14e4322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e3b9e1-5b71-4c10-bd95-786ab6b95500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e1610a-7269-48e8-8885-1b5f9ce8ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ae835f-7855-466f-878e-4bc8a2ba92b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67f2e1aa-144f-497c-bbe8-df7bd590c63b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3b6bfb5-aaf9-45a1-b722-343bbe8ff70d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69a9a48-e770-49a0-8a95-2d3b2e34e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "582d4705-7d6e-40b3-a828-173668a0e95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ea0c8f-13f4-4b80-870d-e3fb51f2bf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf40c4e-ecc6-43bf-a546-5f0b3c8163c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28c47acc-7608-494f-be2a-6e5831c8ce8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a690a6f2-2b24-4e6c-8b97-e76277b27330"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "861837e4-241f-4b2f-b901-6cbe8a3551ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20be924b-dd7c-4bec-906e-317b76bc2d22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2885b997-f66e-44de-a725-18b2c2ac9e1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "945846dc-26d2-41b7-9f6e-4e2dd2aa7a4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2c555db-092d-427c-815e-36cde13f0159",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fdf13ab-66e7-4f0d-b57a-8d8813edbf18"
            }
          }
        ]
      },
      {
        "id": "f707284d-1ed9-491e-a954-feb733379699",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "47655e1e-fb9b-46e0-819c-eb62f0c25e2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b351d9fb-7132-4870-9915-c0f14dee03b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "faf6c0fb-3472-43c0-998e-05679ee92991",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f539e50-32b0-41b2-9fdf-5b7fecf1e707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d2c425-41a7-4a37-8951-f0aa05e07f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a501e-940b-41db-9284-beb423c86ad1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93f453b-50d9-49ae-8268-89a9fb1c89e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6463b0d9-65e0-4c8f-93a4-e0934c6c81b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee2ed9f-fc98-48e5-a7a3-e4f3d16127e7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf965eb0-6c4a-4c38-85b7-611d01060ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3d4484-3f91-459e-9a87-7844c477749c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de46076e-309f-4797-9cb2-7d687483b6df",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea298c-c10d-4541-8a6a-1b6b876d8728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14452cf-91bc-407a-87bd-9dc83cf3ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f563a54-d541-48ac-a27b-7a96279f8c41",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a58647-c202-49cb-bb9d-1d06865f1355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dcc95c-7af0-45e7-9cfb-edc0e2ef29bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692f5452-3cec-4c1d-9f12-6d4acf8f93ff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f2ab3c-3f85-4c7e-badd-230e3fb3d8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17cc6c3-611c-42c1-a11c-6023db2d135b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52cf912-ea1f-4983-bf35-a706b8bbc10f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6e4c40-32d7-43a4-9dfc-78b4b2c3dec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abf9212-90b7-4580-a5b6-ec2aea070e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520d3489-32b6-45a7-9d77-dce4ad08ac85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a0b2cf-753b-435c-a4eb-b3ff35248d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3298b167-64be-4ab4-a5a6-a48b7222629d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76360353-bd11-41d3-ba74-e7869f8107c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f672c8-018e-4e3f-9fa7-dd1f2022e2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a38dfbd-8781-46ba-b73d-c22a9954a0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bef82cc-2330-4c54-967d-b0268385d679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b3b9cc-9a66-4284-91e7-ceff7daec368",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8901146-0c7f-4759-b4cc-82092f5d6369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db82c446-f9f6-457a-b4b7-3bb711ab178f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d7273c-1bf5-4bdf-a105-ab7e92c83a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea49141-6a1a-4b29-8dbc-d70c2fcdbb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a81d37c-4002-49fe-9977-feedf503fa60",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f760f7b4-b1d2-4d51-9351-7de5d58f977f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6f156d-baae-42ea-87af-affa521b5f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5be8a3a-1503-41d0-9812-77910379f967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf5863f-a2cb-4e8e-9a5f-78cdeb9f40b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086844c9-d531-4bf4-9468-d3f4a76e01fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc03a4-ffc5-4ad3-aabb-36f1e8abc90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca08a51e-7c0c-422a-8d52-4860108302d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9ee28e-eb76-4077-8e89-90e460820386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e2cdde-4c23-4edb-b6e5-92e47fecc44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08853f72-d35b-46df-b6a4-f76b04b4e9fc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5c97af-c10d-4f24-a1db-893cffb18ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57390b4d-a701-4bd4-9b91-fe098212b61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08d1cf9-7c8e-4591-84b8-d1cbba89a4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d92036-5608-45fb-9ef5-bd2b146ec229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9346fe0e-318f-4125-819e-f4cb14434b47",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab044c48-ce82-4c02-9138-84839dace44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b337aaf-2ef8-4380-ad82-73df1a3d1480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59c59d4-aba1-43cc-b7a6-52a5add9c08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905ca909-6832-47a9-a524-532d9d30817a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1058ef-3f68-4dec-817e-34196de58c1e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc833da-663a-41da-9ca3-a6579ec436a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0e12ef-230d-4a57-b4c6-e82acd03fc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ca195-31e6-4d52-a906-60401554e76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309d2244-04f7-4054-a1cb-0e3a4bcb92f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf56d4b-741e-41fe-972a-9059138a23cb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6eb9c9-b8b3-4392-92dd-7a87c057cfe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3ed38e-afef-4c44-936f-512a980e39f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919e832f-0ad8-4a98-9132-c1d5f300716c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2d47a9-0f79-4215-93ba-dabe4696bb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c675a72-f948-4d6e-a041-0831cf79113a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03636277-f28d-452b-afc7-494068842b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69f0965-ed2e-46b4-9bf6-1b1695fff5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6eacbe-5f89-4a3d-8be1-89e2ee7b0b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90ae728-2138-44cc-a9ef-b74cac436a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8707c0-95aa-4488-badf-e81eaaf29cb0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09496133-fe5f-41b2-bbb7-de8b3c9f2e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872587d3-6d14-4bda-b172-fb21fca30376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c20bb04-9bbc-476f-a21f-399eb9d244d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbf5d98-af42-4ba1-b636-96cfe0df9b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b919847-b960-4b9f-ac8a-67b21da14627",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5151418-f5f1-4061-85b5-1b5d4496f3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ea220f-52c6-4285-9855-62890faccce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f554621c-7ce8-4df9-8c78-c2e8c31a7325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8874631-cc64-4675-9359-bb01ad32841c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652c301f-6c9d-4aca-b0e1-f25777aaadf5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af5dc8-c0fb-423b-95a3-104d1d5cf5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc32474b-ad5a-4731-ad82-826e8c7fefa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946c73e9-683b-490a-9f5c-20049959153a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a464f7e5-2ab4-4b87-b392-3db8a79e44bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed09f286-ef17-4880-a23b-eabcaa3446c9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949d6cc0-9a55-4ae3-a951-ac8baa2bf470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c7c656-caef-40d1-be58-07705faf30f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc050b4-e938-4fa8-acd4-092425a488a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cd6dad-7818-4af5-b5fd-a05d638e7974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fddca8-10ee-4ec9-a5ec-dc31e20c7851",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a502679-1232-4a24-be31-e18c82d435cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb638ad6-3056-4edf-bc7b-cd47a3698a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a329a-8818-4840-a7cd-be5d0f7200cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f994db-a04a-4728-a39a-b9fd33878f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a05a3e6-242c-4d46-81d6-1b4775fb6601",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cee3cb5-364e-4c0c-920e-fbfd3a90984b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96883e82-3f19-46d8-8506-9dd1b50d0cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651ddca0-9929-4f56-8a0c-e88fdd7ef131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f2d3af-25d9-4357-8b60-766e0bfa39f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d64fb-366c-4f7c-aff7-92a9acd8c8a1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809202f1-4b16-4341-b17a-8e7132e1d36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccfa922-7260-4459-b4ff-c85b55d864b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368c7ee1-79a8-41a1-b748-96e6063101e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa91c62d-e523-48d7-b192-9e9a9a0b3741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e003112-7305-4c1c-963f-0c1c3a823dfa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03900dd3-f031-4cf8-88d7-acfce4694966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936646c1-ffc5-4dbc-a4c5-1546c6d05702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1a9f63-af74-4ff3-8de2-1d8ea8befd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bcbb63-d5b4-4f30-b581-2cafd424e290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1358869c-6b79-4fb2-8d53-564842504e86",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a979a73f-b760-4cc7-a730-49fd399c7365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c41d4f-7617-45a4-bfd4-8e19d0b3fc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4c6e55-f512-4aa7-a63a-cc82c38934a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde0bf09-2499-4e6b-af5a-3e19cf548694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f98b301-2986-412a-8f6c-5ad098236cd0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a82f7cd-eaf1-454b-af15-47fc42a16516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a68baf-ca8b-4d2a-bfaf-9b3d0e5d5772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d7182-42cc-458f-8fb5-ccfc0f67dc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891cd17b-46c9-4043-904b-8779f2f31b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74d5b62-a2f9-4344-8cab-c8f09612fff4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb472d4c-f091-4bca-b9c5-76bcb3fa2aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546c46d8-dad8-436b-bac8-43d5aee5cbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afa63ce-529d-4278-b8b1-fd73d4350b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a4838c-a0ba-42e0-9f34-f59a164e0f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f2c2a9-ced1-4a35-bca2-f647c38cbd23",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09c00ec-291b-45a2-a538-c9a140253175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daef05c0-b0cb-4271-ab05-3f9a01f471de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7729f733-721d-42f1-84e7-15b80b568ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b305e7-d649-41b3-88ce-3c5f4cbcc2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f11a752-c1fe-4700-9fe9-b3f4baf3e5a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947b38ba-e87f-411c-a0cb-fea5e6f6fc38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3264ca3b-3744-4a22-becd-a9b437f283ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd097fde-eef7-456c-bb9e-9962b3a0d1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2868c977-25a5-48e5-93ee-8d91bd2d6b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eb6f91-c6c6-4b40-8918-ccaa5fa2dd84",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f346dcc-71fa-4a16-8660-cf912c090360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf472653-f041-404f-863c-5d6451003555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aee852-8217-4aec-afc5-10ae80779938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f5f16f-1e7d-4536-adb2-72c032019e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84cb398-17ad-4c9c-99ad-0e21ed663353",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff11ee6-75e0-4315-8b9f-a04359f4f8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b016adc-a712-4ffa-ad74-dba98014115d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297c5683-e349-463b-beca-4d3c7d2c5b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793bc81a-3490-49ee-98df-624fbba3bf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9363b8c4-3c5a-4d50-936b-47e19120c746",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c7622f-99c1-44fd-9cbe-1fc15d7b7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef6af95-8595-457c-9cc9-b947aa0ac4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5636d555-b331-4a27-b1e4-4d5a8b5dcd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c79db1-c26d-4f0e-aca8-adae18a3a74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318b7aa0-173f-4ba5-91bd-0d05ae138de6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbae78e-35ad-43fe-9833-d02ae01fa840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9575814f-7a80-49da-b7c1-328888458be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129edf48-d999-4893-8ca0-8a6724ae6629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15857da0-7768-4038-b36f-66dfe106b23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bd7899-a169-4eb6-a2aa-d2476a9ce3e8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e655143-548b-48ec-9fa3-b3996b8bce99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770b57aa-c23d-489c-913b-8a9f7890c7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678f17f7-9217-411c-a3bd-983f1b4cfb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7b0524-15af-4088-8788-935a9a837a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a23173-527a-44f9-ab6e-0a74c9e23870",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0238ffbf-d7c2-4f5c-9e31-45d02815411a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ebe746-640b-4ef8-9db7-a78716839838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d45203-f9a3-4d3f-9c2b-5cb4e7622d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7661d7-b385-48d8-b8d6-b427d0083f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7cadd6-df1f-49cd-9f74-560fe682579c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e9917f-cd42-46fc-9e51-54476ccc91cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0ea707-dbd9-42bc-9742-99b6160249a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ce3dc4-064a-46ba-8d2b-9ec7d67bc31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5724f847-6c5f-419e-b35a-865abea47f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f091bb7-dba3-4849-9777-64de6b24e426",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb35b05-723a-45e1-9835-7a3d607aa6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3967c2-391a-4e22-b89d-82189f0e7b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c45e17f-3b09-45b7-96aa-45f6a7b58411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf57d5a-9917-4af7-a3fd-e8f78e1726da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc423854-ba90-4201-946b-cb18b814cf34",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbf8160-fb0a-41aa-b379-eedad7c51c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b632995-169b-49a3-a7b7-85c66fabefd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a373b1-a995-4d69-a648-fe32e10e4ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc34b65-49a0-4b14-bf1d-29b2a04a44a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6038c51-bcfc-499e-8f85-c40211c14eed",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e22c3d-2ac5-4a26-abd9-a8a80c3a5f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a2ac23-630a-4606-8353-20f844dde6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d106ec-8f3b-4a56-9cef-312c8ca3bb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a2abf7-196a-41dd-b130-a8605e1f32a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3632a9-5db4-4834-a594-5d899115fda1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e8e8e1-e24c-4b60-bb88-bb99e31038bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ea7264-ebce-4544-b254-1be2bd86b826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f3dabf-22ed-440b-9acb-33a1490db960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060c8b80-1846-4085-b15c-9c67e94ea4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1244319-e005-41c5-a0ae-54fd65429446",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156c9a79-2d08-4b25-9978-7a102ce282d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ee66d8-2af6-4054-9606-dc3d0c57624f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba704da-87da-4a3c-a0bc-0737e590bbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05141a5b-cffc-41d4-aad9-a3a51e38e00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62e9847-ece1-4791-90cf-9e65d6859b00",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07542e84-227c-4ccb-98c3-d0b019e13bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592fe7c6-cd04-4fee-a917-fd7bea9005ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf46b4b-30d6-43d3-ad92-b35993801d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f972ad6-01c8-4085-9056-2b22df09c264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048c745a-8fb5-4fac-b600-0e8284099242",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d299b5-2650-4bd1-a4e7-8ee64317da73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db364f4c-72c1-4b5f-ba36-c0f1f2448ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff0344b-5c57-438f-b8bc-38c463d16b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12c0b17-0a55-475e-add9-c21939882792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267c8283-b4f4-4b9f-b703-d20ccd19ffbe",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7de2f9-3fb8-4cfa-9681-82a55d1adf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac03e1f6-0be9-4070-a4c2-ff48961681da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33aa83e-1709-48cd-9b67-168678f49001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac03df1-407f-4b55-8957-4a4da415a744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339ad698-2112-466d-9969-7e048452bc85",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46353135-53ae-4ce8-924a-84ddba01047c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2606cd-0713-48d1-ac11-23de1aa3c7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1a5b48-77b3-42b0-82ea-5c8910fb4640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749b7865-3c76-469d-9b4f-c87641acde86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c7b87e-f622-4fd3-beeb-7e93ffb823a7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29519222-91df-4916-90cb-5d25388d872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d82c65b-42bb-4ed8-b147-98c232c9d995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fb74e3-72bc-4be4-a042-22a684de9a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d69f2ff-7427-4d2d-b234-d526fe237f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aecf3b-84c9-49b5-9d3c-f3d67ef2fa30",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dba63c-c993-4c4d-8945-a08a01aed816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704d3e67-9182-4668-b234-53442d0f4029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fca6661-b660-4366-b3c5-18dbf024d9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5679c7-5d81-4827-b236-ee186dffeeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba22c60-52d9-4289-8f41-12b2504f20f1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91c2a4-ce4b-409a-bff0-cca8367da54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bbf7f9-86f1-48b8-9b43-2db4f75d174d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6cc444-a87c-43a0-894e-d0aee0026921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df66d8ef-c213-46dc-a2ac-6abab83c9401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d07e076-7d2f-477f-8bbc-af75d4c45100",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aa28af-0e34-4147-b5f1-857752f295b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fe7099-4af7-486a-90d7-2ce2821a42a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e39838-8340-42d2-b763-d1bb91a936f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23463461-3cea-447d-a219-673ec04ea1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674873fd-e175-4352-abdb-d5460b1ed545",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e581a04-6b3d-45da-b424-e2576347c974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6680762-a5cc-46cc-b29a-de14c1985d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b9ee15-295c-4de9-8850-aa09f6e775da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c42bfd8-91ef-42df-9aa0-bb196e98832f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e59e62e-86dc-4240-959a-f57e5cbeb695",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeeebb3-5ce8-4614-9771-56da3ea79c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f108d953-2611-45dc-94d5-ef59fba61222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d357bb-5480-4f9e-bfe7-e9b011ce202e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c054ca42-4eb7-407c-94c5-3b66eed8ad6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c24f13d-c37d-4965-be06-8702a7deb863",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646e9adb-9034-4f31-b99f-7af4c4451b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3adaa9c-5f01-4a67-a504-bea61d16d29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5fd49-4d89-4860-ae70-a2c8d173bd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a4e22a-5968-4f83-b044-4c3deb46ee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a017a0-a117-4dbf-8882-4d1bd9efa1ad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d380ff97-dd8a-4a21-b0da-aeddd785689d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1382d0-21fa-4375-a307-1402fa9eed6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4f7a85-4ac2-4068-b2bf-b7faa5721cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c6fedd-da34-44ad-ae66-a88a3c7a9d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5e8186-9582-4ee9-ac83-30cb1dda3312",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d23935e-9863-4c0f-b58e-76a08a1481bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0734db2-e943-4add-8892-2c57622909cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61dd16a-2271-4154-95db-a7c838af6a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7506020-5409-485d-9c4c-7e5cff1bfb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bee7b5f-b46b-4d63-8fce-530f72bddb8d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79babb94-2b12-4df3-a8cc-3fc155ec6c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3f6d66-b126-4883-8107-27a917c22a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62869456-adfd-4f85-914b-15e12df38325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5649e938-c619-465c-88b9-ca7fd939aeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34c603e-06f0-4744-885d-b36272fb59dd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f77f14-3f86-41b0-9a3e-ad82dd3bf4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f87864-fae1-4fb6-9f27-8e70f4d41be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f873f8-7385-4738-80ea-3e1e30018994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7950e8c-c0a4-44a6-a684-8f225a1f8e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ebd141-7ecb-4669-9e79-fc2c37ec2967",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bcbf21-e464-4892-a25f-da2ed2eb53de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6756f6d-fd34-4889-b663-6f57dfa7ea09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83477828-ce6d-433d-a9c4-d76934347518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ba41bb-5a56-47e1-bbe7-5c1911792f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ea2f2-e998-4b48-955c-0b1874af9e50",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751026f2-61f8-44f2-a2bc-cf1335793c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023ab6b4-a557-4fda-be18-376c140bf4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e34ec07-81c1-4a48-822b-2f69c7611735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2323c6-881e-4777-86a6-465a4a26bd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a6ab67-f785-4139-b036-4bed9a214eea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50288fc-1a24-4969-bbab-dba3c2364305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35afbdf-a7a8-4c23-80ac-75cbb2171ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9faa58-758a-4741-a375-d1fe77af529b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23d12d3-826d-4b48-933b-c430ba802d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2bae3c-e5bc-4755-a1f1-550e474e099c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23180bfe-84c5-4ea1-8cce-1416645dc6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79111f1e-a3ac-47ec-8972-f01c89d06199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae86a7-505b-4745-96cd-ffd9465e34f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cf5928-fb22-45b7-959f-3ae2c9afa686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f841dad-0c90-47fc-94d2-4cc97434191a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b208c5b3-470a-4d56-942c-ae59404d723a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317a5851-4b98-4cf4-b51c-d6e7aae9f264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec54bdff-32f9-4ed4-83eb-8220e0cb3ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4ef158-9dd7-46f8-b481-65b732f1edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716e3245-1186-4678-950f-60aee5b5e5e4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaf9720-8cf0-4728-bc22-c78d4236dd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14bae8a-53f0-4cdb-8eb2-972a21b00cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86042e42-7c63-4ae7-8c53-c042bc57467e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed2243e-b5ca-4e4d-b7f8-dd198efbf745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a9cb2f-1eab-48ce-9a15-7197f5fe1756",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf3e604-34bc-4b5d-ab1b-3af9b2e3f77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b84c79f-7b58-4631-ba6d-66425fa625bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa9fe1e-f92b-4f79-8e10-b9b63dac7dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2533dd95-090c-429d-9a92-357fd623ed5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7150f8-b5b7-4176-ba60-6dcc58d065cf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68bd511-e921-4dde-bd75-aae6ac0ab4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a657d650-c416-4b24-a51a-173b50a70df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d674bf-3567-4c5e-b020-9e50b43f074f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c56dea5-1706-4a92-b4fa-e9dffea7835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7db570-3691-43c0-a638-633e003bfc5c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93408573-e0e2-4983-9c82-b40d3ce11565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42e45a4-312e-452e-83f2-b057f5cca5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ac9657-f152-47c3-a506-a910997b4cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d1c026-40ea-4987-a04b-aa1acf2b2f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295fed38-a557-4799-9f53-d74afaa5c9f0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f762da-2314-426c-b91b-360715f536f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ad11f2-4271-4834-ad54-16f14ca96db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ed8b56-3f7d-4e5e-ad19-c945f52954ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af152ab-5798-4fd4-9243-dc31e8a061db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7188a9cc-b181-4d64-a492-bcd63535a8eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeb7c15-d7d1-496f-a794-2edc4db8a701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3706bf-e91a-48b9-9f52-2de49deeb047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1839220-475c-4ce4-9a89-f563fb5d58ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35277aa3-b416-4190-93a2-25032b2b76e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2626a6-0b15-4482-8553-6c07829ccf69",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098bf12c-226b-4c80-9b99-32bd12fb7284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef12320-fd77-4bec-b004-e3789ba2da22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3970045-0df3-4081-a840-dadc343e67ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21074874-06d4-4cf5-85d0-8f395b8cd04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18d3c14-98fa-4f52-be68-6b79a64d6c0a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7965b7-c68a-4efd-8e60-122687474e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d765c86a-65a7-40fb-a861-10b60e7c7844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972c8435-2079-4a36-bba8-69218b224fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43153853-a795-49c9-ac1e-587ead19e35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5ef5e-a9b3-4181-9d20-a60fa3111cb5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c006bdc4-1674-488f-8b5b-2f66548ffea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b72bc5-5469-438e-a6c1-aeaf2db53b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320859ac-edc3-4201-bc49-e97b059e4f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02da221f-6cc2-4d6c-9b8c-47224b516aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049ba4ed-d8c0-4def-8f07-2b2381ab4461",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d8a3a4-cf26-49f2-ad5b-244ba596bb7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65b95e1-cf8c-4d24-b5db-43e573c4598f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125fe9ec-255c-4de4-b68f-1559f5eaeb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfa3ce3-2f35-4cbd-a395-d7e94130fe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26da2f9b-b281-4e11-82d3-d0064efe41fb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b8365f-df9a-4401-a8ba-78449d59d8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfa1f8a-f90b-4eb9-b1f6-f0911f8e03c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5cd005-0725-4bac-a8ec-15f1f1f8335d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fd9356-8898-466e-8f57-6686559fa7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b15bdd0-b681-4fdf-9abb-329edb760430",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b21173d-2d9d-4680-ba05-8f6a835ddde2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50072e82-9e16-462c-a8f4-1c25613493e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d3fc9-eda0-4c80-9cea-f9826620d66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5babc05f-face-4244-a960-fbb30e7ed576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cdb576-0031-4307-a6ff-8eff57e662ef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7a0138-3bf6-43e1-b6e8-0c69805135b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3c1b5a-ccb9-4d0d-8d94-f63bab620362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445a2f09-374b-4088-80e9-109676b37285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c1d65f-a10a-4817-bda6-bd9de6f24c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e8aaaa-58b1-4ea3-b9d7-da22985cacb6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb84235b-de2c-440e-86aa-433fb627bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037f03e2-5b13-4ca1-8932-0b577707dd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed72da1-4636-4ec8-93d5-09c49229fe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c101f2c6-5d22-48a9-bf9c-2cec0829af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217e4724-8c11-4835-a58f-54ccd4f8dcf4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6e1bcb-fce3-44d0-bdf4-b18aba57ba10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2f4446-c407-44a7-a9d0-56fdbee5047a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943e768a-6064-49f2-b95b-3258ff0bb1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b8140a-8f27-407d-852a-ad6a2e724411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31192d61-ca55-45da-b15b-469a1e811b2d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf310f80-2f71-4b3c-b74a-6faf2e112cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054c1501-c65f-48bb-bc0a-1de129654b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cdee6e-46ef-4eaa-917f-dd7de3344135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4e0de3-816f-4c19-95a1-e68b56c7dfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbc034e-e77c-498b-a57c-cb7cdb801f8b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d723b971-c956-4523-941f-f426c8e77550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d650ad8d-b434-4066-bcc2-c4f34d507a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc63fb53-1a0c-4db9-94a4-b6b8b52098dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3902e7-6f3c-484c-a947-ad4dc8513fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35272532-b509-4d98-a2d8-31c3f8167612",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5b3006-dfad-4486-ae41-6ac3f3602b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a9eab4-1391-477c-afb8-3a8831b6c71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6a6f47-6a2b-4617-9a1f-d259d2f98b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c3fbfd-aee7-4634-a493-d34393868c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca906cc-357f-4483-95bc-c089029b1393",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f9f0b9-a13a-4d6c-b63f-ad06546aba93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7e9300-4c5e-4178-b31b-9018eabe08d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695e6a0b-1309-4ea7-a315-698551237347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb9583b-3bc7-456b-9c33-6e4416f94391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b3057-9fb2-435f-8e1f-28fd6d0e3031",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e28c96e-63d5-4ae1-a05b-e92b2d3173d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8792d696-5d9d-459e-a468-f596d8ec5e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6098f0-ecab-4dae-82b3-e8d0b7c2360b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324b9641-bd85-47e6-9b53-dc013c8db637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc1919a-d1c6-4fe4-9735-7f1505ad614a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3845e6a7-b944-4794-ab0e-a806c7ceb607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7497c381-c770-4176-821a-3ed2c45da7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71a4b93-c5d3-40fb-8127-7fcb3b9dbae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d80e9fe-58e8-4335-bcf4-fc5c5b701a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7b6450-6c9a-4a16-a871-af7cf6df356f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d27197-492b-4521-9f29-f088a4d602d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36e68d4-e1b5-4da4-856a-155d4ed5f94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f130018-da34-4865-8e56-409249102db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa63414d-732f-4322-b547-b8592ad61157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c8bf1d-fbba-4dd6-9bb3-269b97d5108c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a64a0-7701-47a5-9bcb-ae5f375a4f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5aed4f-f5f6-4728-a871-ed1cdebd958c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea30588-2a92-4e57-8cd3-b8a8dd72aac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9921b7-7a4f-4f05-9778-a4382af5e8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71720015-68fb-47fb-9103-95a3c6271b9b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a03abf8-b542-4a65-a999-0d8be64d66c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab441bd-202a-4cf3-b267-78d4c770aee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0dcf8e-810c-4971-ac51-938772a660fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a76a810-cf22-46eb-86ad-1286ad171df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f8b9d-05b7-46bb-a27c-b9176cb6c1bb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46964a5a-44ee-4409-8ba0-f76fb36c3d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ad3953-8218-4366-9e17-2216ed7d8f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dc6b36-ced7-4e4f-a620-e824edcd2230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b74fed-fb0c-4501-83e5-0374592387bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26947ff0-da12-4ef9-ac6a-43e67f9cd24c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8606698-170e-4c60-be18-e942c5570481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376f1013-eab2-4f91-a571-91a9b2459851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f080c773-ebfd-4868-9f4e-4986ba89aecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9187ef3c-4902-475f-8aeb-e99e2e6b54b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1e9439-eb80-453a-b050-ef7796135ebf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d5963c-0ca0-4bf6-9b68-3d0ef179d270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357538b7-a707-4b4e-9c41-ef31c09a9387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccde7faa-5354-4c2a-9be7-d6289bed283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41a6d70-00e4-47a2-ae93-53345498f5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e73d2f-f273-4d1d-969c-80a7b969c8ba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46132a6-3009-4f2a-b2da-157e317eb460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caca95f4-a73d-4970-842b-cb07f7c6a7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35614948-3414-4255-b932-d53b816ba48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2155594a-c493-45fe-a74d-1ee4d9675f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee349466-77fa-4d0f-84f3-e2ed411da467",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193063f0-2a3d-4669-a795-21f4151df87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527bb761-c3c9-4452-90ed-b7eca7e1e453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb07b8c-d812-48f4-b8f1-41bf176c01e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa181d8-0d13-418d-a91a-f6d73a0f2627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef14146-015c-437d-9a6f-13feee41b886",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e111f3da-d9c5-4e56-9d4d-b145c44e5eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12abdecf-161f-42f2-b06b-959e1f073eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d3a7cf-6b5e-4689-abac-30c153df58c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832d2128-b624-4b4a-9345-2020f6eac9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df5280a-7de1-4a14-bca3-8664d30eab17",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fb3deb-a73a-46a5-b25e-a0bbce0bddb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ba46af-88aa-4d00-9bb1-d99c6a2b3293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff5e859-a3a0-40df-86fd-e74676758e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2bfdb6-766e-4d2c-bf9e-d37a1086509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc67602-e3f4-4e56-8307-22548d676b17",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eee42be-0dab-42d5-acb8-36cb8b87caab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee9ff04-700e-4065-8398-e0adde5d69cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536e653e-8be4-462f-a626-27104b1a82d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2b58f4-e2e5-4846-beae-cf5ec0446b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4646d278-eb7b-45e9-8ae1-70e2d8831637",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005f26e-21cf-4c81-8472-56fae6b75610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b8bc9f-455d-480e-9483-da5f42143f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5510103a-5f6b-4d13-a216-2fcb44c3d796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afc678f-a861-4de5-b61a-88b882272810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedfc40f-780e-44a0-bc29-9eda932ba642",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38114504-60ac-43ec-870e-6eae88a479d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c469be0-3b92-45ca-8c2e-6c70341672d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aca4fa-a55b-43c7-ae5f-75a20a21c731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643d1422-ffd1-42a0-a671-816ac749c205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1499ae41-b5ae-467e-9692-5351fc5a6c03",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fc5b7a-dd16-417f-9d8f-f8064559a2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80640f3-e370-495e-9606-d6278a951ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3955a5d-7537-4dc1-a184-75778ea419ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbaef9e-7e31-4922-91c2-2596580abebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b10cfe-15fb-4660-85f5-18d1f7974acd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1197a100-19aa-4b16-923b-c4d0ae5406d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d915c0b7-78d4-464e-8f81-fc2bcfb08e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36658ed-0304-46ea-83be-8f7db5051127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367956b6-cae2-4f75-a084-02a3ef82cefa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1972595-0890-40ca-8fdd-ca99c301e880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d8a5fed-e511-4db7-8d2d-2f3c38514826"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b1178d2-0427-4bf5-92f9-dcc89fc7d314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b332072-b9a4-45a9-a90a-537e628f2fd4"
                    }
                  }
                ]
              },
              {
                "id": "b12ed5da-ce30-4fab-aaf8-5d59b1bc9f14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8b8124e-49dd-4117-a919-95b116f8960f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4082ba6-72e1-4994-8ff1-c7a08ddf191f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dea68cef-b384-458b-b221-290f3d85a2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e2450-8c95-41ec-a5fc-db1b91cb911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "478bd18c-fc80-4ca3-84d7-bd2ede8c10ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0424ece-b89e-4d4c-9a99-528c883eb67b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59660fe5-1b1d-4ee3-b407-eecc50096ffd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "501fbbdc-ebb3-4cda-bd50-eb2a24ca5dad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf65da1d-bfb0-444b-9942-91297d5711b2"
                    }
                  }
                ]
              },
              {
                "id": "9167e3b3-f850-4c98-b01a-0dd33071c1c4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ad041b91-7538-4205-9ec5-bfca902cd61d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102ac47b-6ebb-4512-bd1e-3768c0edea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7dfad977-f8ee-4a71-ae2c-4486e717bdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7783731-bdbd-4ffa-9299-6f300e131112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36feabe-60aa-411a-9353-97e39fc000ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c737520-c9f6-4ee3-b4f9-f3e0e8a00ad2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c946f31b-d39b-4532-9423-6d824f9dd756",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f92ab859-80b5-4ebd-8035-dba04d6a2fda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fbfd36e1-1631-4e7d-bbdf-3d37d4511e45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5056b243-6f58-4089-ac6a-491b070a9149",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40e48ba7-b01f-45e4-845d-ec130fcaa1c2"
                    }
                  }
                ]
              },
              {
                "id": "9b497da6-b549-41f1-a902-df4b5cb55305",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f98dc94-30f3-46b6-a822-e2f3632086ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "691f8347-28c0-4cc3-b01c-0c842cf03f94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deebe8b7-6009-42c6-9d68-d45fd523178c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d743a03-aa42-4919-8bae-2ca1614b68f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b00549c7-aec8-4daa-b9cb-a00cb760a5ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41cfe860-e4dc-4a24-84db-3b46b0d8ea3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3629a0be-2c8e-49ea-b962-18f69f9c0222",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a320623-8f29-4444-8127-c86f84bfff18"
            }
          }
        ]
      },
      {
        "id": "e2a3da0d-6f19-402a-af1e-310855f98ec7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f60971c2-36bb-4032-9aa1-2af3621e421b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c25bfb61-69fa-4590-ae63-168119ea8c17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e8a2488-297c-4ab1-9764-7c2c32ab22ed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee784de-ced8-4f48-8c66-15f3d7a6283b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "458da1c1-0b98-4d02-9e06-11791c88eebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7029ddb6-49e7-4d89-86f2-e1242bba2c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b937e1ee-f22a-47f3-82aa-2b0198702657"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab8cb6c-c45d-42ee-b99c-69591da20d11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d97d1eeb-4da3-427f-ab57-7e07c5cfdb25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "348ec2f0-ac45-4548-8c3f-bcaeea0f8ef9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "901c64b3-f7bb-4943-8182-0b9270502904"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "624e3fcf-ffc2-49b3-8b81-3c32d9833937",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "afc1d228-3573-4ed5-9714-1dfbca56ab9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d70c7f32-63a0-4495-8741-b8d16e6d44cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ce1c6be-a3c5-43a2-bc06-044db53bb821"
            }
          }
        ]
      },
      {
        "id": "d21f3bf8-bfea-4c3f-93a4-797b753574b4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "587249fd-fba4-489c-b1ad-83070541bbb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94120cd3-882d-4fd0-8aa9-acd81a0765c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9df920cb-ca94-4533-ace9-47c5ee6b701d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2d0487-8700-4495-882d-aec1cdcdb121",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20850d9a-21f6-4ba3-8209-20b15cc07e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d1512a-c927-4d2d-88b0-d5382c43919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caeb9e98-325f-48de-908c-48d03cb0e697"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a246905a-c9f5-472d-b585-a88fb589615c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be406992-1354-458b-9aa8-d149795d789f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "166f9fe7-3d65-45e1-b178-fd5fa01b092a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f0792a8-8cf7-4ce0-9835-a9d331bca682"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffdd2165-3182-455a-a3c4-6d6198fbaec2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c0039e4-29cf-4bb3-b60c-419a7dd7ae48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30dc6521-c93c-45f9-ab1c-45279e452bdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9780e790-38eb-493b-9b11-6f585b5de593"
            }
          }
        ]
      },
      {
        "id": "b60dbd9f-9df0-4d1d-9878-c11dd934b7f0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8d1191eb-6aed-4a75-84c8-df8bb0d8efb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8255a91b-f1f8-4ede-b01b-4263e27869bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da093af4-97da-43e4-b174-8c53e870dd20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9b25cc-d502-415e-b9ea-0fdfec5991f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76ce824c-fe73-4906-8d0f-b383c1e2709f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa4662f-b6ba-4bbb-9fea-e7195f07f641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16957752-1f05-4f55-9052-a088715ab53a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81b336c3-9ffe-4c57-a680-3d99e4b37a40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d6fe424-1b00-4955-b6d9-f7e8965d3d96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c317d90-d47c-4c07-8ede-671563adf615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2900316-4757-4d73-9c88-1a28718f7dab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6df09d1-47ef-46a9-af92-2702a3c62357",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9790af00-1e16-407c-87f1-93fbe9d703e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "def4464c-b112-4847-99d9-53e8f9cf13a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da01d557-df51-4b5b-b21f-49f2284a8467"
            }
          }
        ]
      },
      {
        "id": "fdbfbcfd-d3ab-4920-b2e2-15447ceb2692",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b41b783-2508-430a-b28d-1c9c8904ef43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17c097a7-bfed-451c-b9a9-e3f855315db4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4cdcca0a-6d1e-47b5-9c15-dfa84cf546da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b44a953-477b-43bd-9767-370795e97c74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69ee2a2a-7b70-41c8-8128-462f9f0c2fbe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 471.1904761904758,
      "responseMin": 7,
      "responseMax": 14624,
      "responseSd": 2159.7485311227947,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725583350157,
      "completed": 1725583477631
    },
    "executions": [
      {
        "id": "cee2c143-1db2-4945-aa06-736c0f1f0bd4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e1277d69-8506-4ba5-81cb-7684fea184d4",
          "httpRequestId": "af01173c-3e20-4a6f-ab41-0b99e1cc92a6"
        },
        "item": {
          "id": "cee2c143-1db2-4945-aa06-736c0f1f0bd4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2c3bd7ab-b4bc-4632-9fd0-4dc7187439b8",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "11ba2a76-c767-447c-bcd8-da07742c278e",
        "cursor": {
          "ref": "6701f339-9264-4eb6-a48b-104077c632d0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "24b35c75-b841-4af8-9b78-e5cd09703bd8"
        },
        "item": {
          "id": "11ba2a76-c767-447c-bcd8-da07742c278e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "21de16d1-462c-4ad2-b982-73b3824478a0",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "02fa43cc-cea7-481e-bbc8-328c6d17b43b",
        "cursor": {
          "ref": "605fd710-60ba-43aa-a34e-8718f1fa50e7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84ea2ff7-dc15-4cdf-9f8f-a68581d9a2a7"
        },
        "item": {
          "id": "02fa43cc-cea7-481e-bbc8-328c6d17b43b",
          "name": "did_json"
        },
        "response": {
          "id": "b5f5a447-29e6-4dcb-948c-48231e0a9a1c",
          "status": "OK",
          "code": 200,
          "responseTime": 288,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a01cbc2-3c75-41bf-9b54-5cf8df9d09c9",
        "cursor": {
          "ref": "a1854423-da6d-42a2-a905-9f61a385e784",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3052ae4c-b679-4c5b-aed5-d4b01802aa28"
        },
        "item": {
          "id": "3a01cbc2-3c75-41bf-9b54-5cf8df9d09c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca983060-582d-408b-ad03-dacd955fccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2360,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a01cbc2-3c75-41bf-9b54-5cf8df9d09c9",
        "cursor": {
          "ref": "a1854423-da6d-42a2-a905-9f61a385e784",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3052ae4c-b679-4c5b-aed5-d4b01802aa28"
        },
        "item": {
          "id": "3a01cbc2-3c75-41bf-9b54-5cf8df9d09c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca983060-582d-408b-ad03-dacd955fccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2360,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c2680a-990a-418a-a294-f0ebafaa2587",
        "cursor": {
          "ref": "9d66f428-7028-476c-a627-95bdb29a4d3d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9359da20-c54a-4992-990a-fd9b43b62f97"
        },
        "item": {
          "id": "e8c2680a-990a-418a-a294-f0ebafaa2587",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6aced7bb-61eb-4983-b4ae-8dcd44b8efd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2663,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc1590-72dc-4479-9cf3-f61f5666ec50",
        "cursor": {
          "ref": "b59dbc47-cc5e-4f20-a342-a3a403c78743",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "639bbef3-351b-420c-afe3-7f20b314db1e"
        },
        "item": {
          "id": "c7bc1590-72dc-4479-9cf3-f61f5666ec50",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eb7b2aa3-629d-438e-84b3-b8f11388bc99",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1972,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133ad871-2bce-4393-b2a5-ca43f5adf7be",
        "cursor": {
          "ref": "b1768986-21a8-4af2-80ab-6160c80d6fa7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b11bc9fc-922a-4a75-ba92-90200f99254c"
        },
        "item": {
          "id": "133ad871-2bce-4393-b2a5-ca43f5adf7be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8a942e5e-852b-4e95-b42c-4411ea8a5f4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb50a55e-c64f-4b5e-ae0d-457f2917da8e",
        "cursor": {
          "ref": "89c5adb2-76a7-4e3e-8391-2daf9c871f3d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b56da1b-90e8-46f3-9c45-f09c2d566627"
        },
        "item": {
          "id": "fb50a55e-c64f-4b5e-ae0d-457f2917da8e",
          "name": "identifiers"
        },
        "response": {
          "id": "c7ffdea2-934c-41de-b007-c03e3803625d",
          "status": "OK",
          "code": 200,
          "responseTime": 2296,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857f8750-387e-4870-80b0-22c7a7744de0",
        "cursor": {
          "ref": "6baded32-cd96-4161-8f09-0a51ee418a56",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d2e00f4d-a2ed-48f0-a276-9a12cff3b9a4"
        },
        "item": {
          "id": "857f8750-387e-4870-80b0-22c7a7744de0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "af682ed1-b7e6-4f95-92ed-c5fe49e1acde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbd6301-2f1a-4d38-bdd9-71513240a882",
        "cursor": {
          "ref": "f1cf2b66-a74b-4920-945a-a2f909a8de9d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "817cc5f1-9d65-4633-901e-b7f7a7c7b4bc"
        },
        "item": {
          "id": "ebbd6301-2f1a-4d38-bdd9-71513240a882",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b5d93734-0339-4089-8f26-481dbf3dca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaea4c0-5674-4fc0-a191-26d3488735fa",
        "cursor": {
          "ref": "61689c5c-74fb-4b7f-9e60-df480b86a326",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "67c27db5-704d-4e9b-985e-eb90b96effbe"
        },
        "item": {
          "id": "ceaea4c0-5674-4fc0-a191-26d3488735fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "585d2257-7ecd-4bb0-aa81-5549bd0364b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3e1d3e-ef92-42c6-9dd4-635d5de9255e",
        "cursor": {
          "ref": "fa28f4d0-2ca6-47e0-be32-32649191131c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8c7ff05a-3add-4edb-8cab-311566b76f83"
        },
        "item": {
          "id": "5d3e1d3e-ef92-42c6-9dd4-635d5de9255e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "229168d0-6da1-48cf-9391-d4e3bde0e440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a482b6-ab85-4227-baf8-7f757206f66f",
        "cursor": {
          "ref": "afeeaa72-004f-47a8-b069-e58e844f875c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0d30d708-5892-4880-9bdd-20fbca599b34"
        },
        "item": {
          "id": "b5a482b6-ab85-4227-baf8-7f757206f66f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dd8e8cf7-396c-4123-bc57-67ccb1a8b37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9207cd28-e83b-4e70-81ab-327e8853681d",
        "cursor": {
          "ref": "92c6037f-ae52-49bd-8e9b-0b78f0979338",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a5191dd3-3faa-450e-a288-9fcc205f0f1c"
        },
        "item": {
          "id": "9207cd28-e83b-4e70-81ab-327e8853681d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "125194e3-2130-46fe-ad72-fe053bf728c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8121d3f5-7e61-42c4-936b-c1ed5df124b7",
        "cursor": {
          "ref": "51f80ea3-cc93-4997-bb81-ac7c83e4cebd",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "084aa0f9-781a-4525-8f3b-6279b2484095"
        },
        "item": {
          "id": "8121d3f5-7e61-42c4-936b-c1ed5df124b7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3afc2f16-5f5f-4677-b908-8b326a213a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c6134-cfda-4e46-a6c9-46f9f8ad0fda",
        "cursor": {
          "ref": "d14755aa-6899-4e89-b4d5-07241ac3f9dc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f39c248a-32a3-4f6b-b5d6-8d715adbb93e"
        },
        "item": {
          "id": "156c6134-cfda-4e46-a6c9-46f9f8ad0fda",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "590c341f-f24c-4a15-88bb-ed2ca7e00785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b52c99c-4968-4f25-a38e-358c1f4a21b2",
        "cursor": {
          "ref": "0fd4b4d2-ade7-4cf2-a3f8-45876faacd82",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f7f8ab26-161f-4ddd-9817-6c2bd8ee6631"
        },
        "item": {
          "id": "7b52c99c-4968-4f25-a38e-358c1f4a21b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "631f87ab-805a-454f-9f37-d7da8187bf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef48c7c3-e765-4ad1-b9fc-17ca3a22e5ed",
        "cursor": {
          "ref": "61b378b7-8b7b-4c36-bb2d-245a4bd44519",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "49893f72-6850-4b4b-a91c-19d1cbbf3779"
        },
        "item": {
          "id": "ef48c7c3-e765-4ad1-b9fc-17ca3a22e5ed",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "deabd61d-3224-48a6-8f67-27c973606f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118653d9-0590-4a77-a1a6-6ad9aff26c99",
        "cursor": {
          "ref": "abe4f49d-8d29-4273-b3e8-a0b900441e64",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "73e6f4df-32aa-46d1-89cc-ea4bd302935b"
        },
        "item": {
          "id": "118653d9-0590-4a77-a1a6-6ad9aff26c99",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7b9787fd-c7f7-4269-ba6d-cae2f814a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e77f5e-dc74-4b08-818b-e78de9bb3e5d",
        "cursor": {
          "ref": "7e52f486-2628-4490-a589-e55eea95def3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "885dd35c-1393-4173-b19b-0f5aa74f1162"
        },
        "item": {
          "id": "b5e77f5e-dc74-4b08-818b-e78de9bb3e5d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "40c9a984-f2f3-43a4-8498-9cc07b4aa1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4656c2eb-175c-474b-85ca-6566bf7f3bba",
        "cursor": {
          "ref": "06b71bfb-50c9-4d70-aeed-f2423d8e7215",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5884da19-b6d0-46e8-a17c-afb1a40f29d7"
        },
        "item": {
          "id": "4656c2eb-175c-474b-85ca-6566bf7f3bba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1c8d128e-620d-4a88-85a4-9d68e9d1d1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0354f8-d609-4078-b316-09ca729c3699",
        "cursor": {
          "ref": "63fd4e24-c61a-4374-b0c7-a05def6594f3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1bee6baa-dfc4-479a-a2f9-1ea3eded33f3"
        },
        "item": {
          "id": "ec0354f8-d609-4078-b316-09ca729c3699",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f4d6c929-c70a-4bd4-8d83-284e15e5e086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7284a34d-10af-4ae2-83a0-4e184aefba97",
        "cursor": {
          "ref": "d31fca82-6ce9-4bc4-830e-6e5c1c8e4eee",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "47a85317-122e-4f29-ae27-9ac336777f6a"
        },
        "item": {
          "id": "7284a34d-10af-4ae2-83a0-4e184aefba97",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "50fa2275-3a1b-4251-bcad-4558d22e9f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba06ec45-7ea1-4eb7-b494-a7206d91c58e",
        "cursor": {
          "ref": "783437f1-f684-4cda-807e-3c553afeee5e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35ea4d5a-bd94-41e4-aa08-7c6cecd0361a"
        },
        "item": {
          "id": "ba06ec45-7ea1-4eb7-b494-a7206d91c58e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cb153757-d014-4dc5-82b5-04c5b9805e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1863bb0-e157-46c0-8074-d5c52a399530",
        "cursor": {
          "ref": "89da47c6-3973-4988-a9ff-2015fe6d5b65",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1cd247ba-4875-4bef-9217-95cb6e839ee3"
        },
        "item": {
          "id": "d1863bb0-e157-46c0-8074-d5c52a399530",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "52b09063-0c2c-4c13-8778-988b716187c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ca8712-e4a6-4ad7-afb1-2bb7241be213",
        "cursor": {
          "ref": "662e0be7-89b2-4238-8393-189cd31178d9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "04c18392-86f3-4f03-ba60-49d310923406"
        },
        "item": {
          "id": "37ca8712-e4a6-4ad7-afb1-2bb7241be213",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e4db3e16-1f6a-49de-814d-07eb7cd4b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a8b55-dd90-4bd7-98d0-af618d93fa30",
        "cursor": {
          "ref": "851fbd0e-446b-4af7-afeb-35bd9e32b118",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6329846f-8426-43d1-bd43-67b2f5bcc1c8"
        },
        "item": {
          "id": "752a8b55-dd90-4bd7-98d0-af618d93fa30",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "40a2e7c9-dfaf-4499-897f-5eb21b227b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef19335-5234-4932-bab4-cef200dbf940",
        "cursor": {
          "ref": "394af124-9e25-4a40-95b8-d7bfb1fafc58",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "687e6f03-305a-4d27-b624-79313b14d971"
        },
        "item": {
          "id": "fef19335-5234-4932-bab4-cef200dbf940",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2bf420f9-096c-4fc5-b0b5-2a2532995114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2146a8a9-7633-4cbf-bb0f-84b33a93e204",
        "cursor": {
          "ref": "cb13dea8-cda5-4992-8b0c-67cb430c740d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "80111507-ad7a-4fb0-a131-cf915444bb91"
        },
        "item": {
          "id": "2146a8a9-7633-4cbf-bb0f-84b33a93e204",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "25288d5a-7bc1-4960-92d5-8529d7977431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d65283-42f9-4c65-b5e7-88f6f9262297",
        "cursor": {
          "ref": "4188db02-2389-47a2-96d8-0c6bc0e40597",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e8c2077e-d77e-4d33-b78d-ed545e51f97d"
        },
        "item": {
          "id": "e7d65283-42f9-4c65-b5e7-88f6f9262297",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85686f85-89e1-4192-bb3d-20a7ca67f712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326655f8-59b8-47d4-9ac5-795e958c85b9",
        "cursor": {
          "ref": "90161a66-1556-486c-bb72-c57689cfaf99",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bec01854-0a91-49b7-98f0-d124897f5d16"
        },
        "item": {
          "id": "326655f8-59b8-47d4-9ac5-795e958c85b9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6e70d9f6-5d68-4170-98bf-0a7af234324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089f9211-76dd-4e76-8a78-6e3971e70a3d",
        "cursor": {
          "ref": "3c9e0553-e8e3-4272-b59b-3454f23ef0aa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "da9c6585-6e76-44f6-8780-e8625bc4bc25"
        },
        "item": {
          "id": "089f9211-76dd-4e76-8a78-6e3971e70a3d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "87e24ded-95ec-4915-b7df-f028e80764c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72db05d7-878c-4f42-91a8-d7e0f4686431",
        "cursor": {
          "ref": "83d9bb71-fe0c-4a91-9517-f98a23642326",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "895fe5ca-e261-4b65-ac7b-e0a0f40e1a51"
        },
        "item": {
          "id": "72db05d7-878c-4f42-91a8-d7e0f4686431",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "146da7fd-8b50-4cf6-90cc-849550c2af94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee31ba6-bcba-4a87-8881-22964c19166e",
        "cursor": {
          "ref": "daec2a02-4659-4a81-b489-9e2d6bdb1458",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "70982ef5-3a81-499b-b986-899e37475b5a"
        },
        "item": {
          "id": "eee31ba6-bcba-4a87-8881-22964c19166e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3cc5c390-e4a3-4741-b9d4-c09936fa513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477ff5ba-2852-4b97-8da5-5f4bd101d9cd",
        "cursor": {
          "ref": "9e379625-2264-4fc2-884b-c2a1bd72d218",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8710c26d-e38f-4a94-8dc5-1fecb7f79567"
        },
        "item": {
          "id": "477ff5ba-2852-4b97-8da5-5f4bd101d9cd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0ac7c2d8-f0d6-4174-a1c1-b264f75cc65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ab95cc-5b91-4338-91e6-d3dc85346fce",
        "cursor": {
          "ref": "6d29833a-7b8e-40e8-8ce5-9920450f7b12",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "07e2375f-fe1f-4ed3-a44c-648911225913"
        },
        "item": {
          "id": "91ab95cc-5b91-4338-91e6-d3dc85346fce",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3401dc81-3f6a-4776-aad4-ee2835d2a7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26f2f0-a03e-4cac-9cf8-a4ff0333a95d",
        "cursor": {
          "ref": "0261e97b-b2fd-4def-a49a-54c6b318a74c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6e4a98b7-1233-4ac3-82b5-9e7b0af00cd9"
        },
        "item": {
          "id": "9c26f2f0-a03e-4cac-9cf8-a4ff0333a95d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "25be1068-6c1f-4e37-aec3-4836a7b5ce5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16112e11-61f3-4527-adf0-c1db491ba4d7",
        "cursor": {
          "ref": "fab0c203-8e4c-4d95-9170-0a2e6a8860a6",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ffeb7d49-7c69-4313-aa60-e46e21c4eb13"
        },
        "item": {
          "id": "16112e11-61f3-4527-adf0-c1db491ba4d7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "82a0b0e7-5bd4-4820-92a5-5cddc21b5664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365d04e1-1507-43f0-8d90-b66fb71dacbf",
        "cursor": {
          "ref": "1245c38a-5673-45b4-b209-82b7371a3f6e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4c99e0f3-6f7f-4bcd-b9fd-04e16b24fec0"
        },
        "item": {
          "id": "365d04e1-1507-43f0-8d90-b66fb71dacbf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0974271c-6450-41ff-9c3d-20543d15b22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd29293-709f-4d91-a681-760032a6bb8c",
        "cursor": {
          "ref": "ea6b19ee-cdf3-4eed-9fd3-3eea4560166a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7056465f-e62a-4649-b205-db268f9af83f"
        },
        "item": {
          "id": "ffd29293-709f-4d91-a681-760032a6bb8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b25fa80-66e4-420f-b959-d47a8666caab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb608c5-3972-4cae-84df-f6a1a9aba5b1",
        "cursor": {
          "ref": "f2911991-dced-46c1-8983-a94477b6fd63",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bc3bd631-0b20-4cc8-8154-966ca28fdc14"
        },
        "item": {
          "id": "6bb608c5-3972-4cae-84df-f6a1a9aba5b1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "efb574f6-dc40-442c-a072-2773ec64e747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b119a699-9192-46a7-a96d-940a84476727",
        "cursor": {
          "ref": "664c1bec-cec2-4007-83e5-f78105c5f4d6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6a64cb56-cb06-4754-88b6-3f795c3addc6"
        },
        "item": {
          "id": "b119a699-9192-46a7-a96d-940a84476727",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "99fae6d7-40a0-4f6a-a752-945d63c396a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d816f0eb-e33c-4453-a50e-0127b1ecde44",
        "cursor": {
          "ref": "a90c7ad4-6153-45f6-b8c6-ce64eae50621",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dc39e395-52e7-4e25-97e5-22794358cea2"
        },
        "item": {
          "id": "d816f0eb-e33c-4453-a50e-0127b1ecde44",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ca9463c6-7676-4afe-98fd-8b4fdc922ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb69c3a-df88-4161-8fff-320fb97d5ba6",
        "cursor": {
          "ref": "6da696a5-d0de-4930-acb4-4bdb388cff62",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c867e0eb-9304-4ff5-8ce1-1ecdb8ff84fd"
        },
        "item": {
          "id": "dbb69c3a-df88-4161-8fff-320fb97d5ba6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ebc4cbc-4214-4211-93c6-292095991f7e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d842d3b-58fd-4463-95ec-0b4b38e75a37",
        "cursor": {
          "ref": "a9d6e5ad-7d1c-4612-8697-43fcf9651e24",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c4d89d19-2edd-41ec-8725-27bd89ad3a78"
        },
        "item": {
          "id": "5d842d3b-58fd-4463-95ec-0b4b38e75a37",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "199af239-b989-40bf-a3f6-6c5e4996243e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff3c25e-f6c1-4036-b246-58d7287fb803",
        "cursor": {
          "ref": "dd409e56-8bd4-4702-8c20-355fd1f0c7b5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "958c8184-e036-4963-a266-5daad685f951"
        },
        "item": {
          "id": "dff3c25e-f6c1-4036-b246-58d7287fb803",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "25a02a7a-8264-4d86-8775-45d6d43c7103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35c91cd-835a-4305-befb-06497445b187",
        "cursor": {
          "ref": "5a0ad7ef-ead1-4411-8d3f-45abebfb1b1e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e8ca102a-7c12-4160-bf79-ef0df385c5fa"
        },
        "item": {
          "id": "f35c91cd-835a-4305-befb-06497445b187",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2e4357de-398a-46c9-8f15-4df7d456bd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6440519-6513-4053-b42c-8c82c8bee236",
        "cursor": {
          "ref": "e36c02b0-d92b-41e1-8687-e5fa3a1c48a1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "381da255-cdbb-40a1-b2cb-d57ff5af3891"
        },
        "item": {
          "id": "d6440519-6513-4053-b42c-8c82c8bee236",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ec93af28-d1ac-416d-ba90-d1eb535f5e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d5150e-a637-4a30-9a9c-82de450436bc",
        "cursor": {
          "ref": "8650726a-fa4b-4e06-a2ba-e9e608b9eccf",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7080a819-572f-4a7f-8ecb-f48eb1615306"
        },
        "item": {
          "id": "a3d5150e-a637-4a30-9a9c-82de450436bc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bfcd24f0-3ae1-4a64-b05c-a077339e39f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28163e4-c3c1-4eaf-966c-ac92e079a6e0",
        "cursor": {
          "ref": "ad16c316-8dd9-4d5b-a40b-4dd9710557f0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5bf68543-c8d6-474b-b9a4-78348cbaf4af"
        },
        "item": {
          "id": "f28163e4-c3c1-4eaf-966c-ac92e079a6e0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0f064b4f-aef5-413f-b972-9d6e3a9df315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e546b8d-fbe6-49d9-81ba-2859f584b6d3",
        "cursor": {
          "ref": "8dc94c06-5f04-4adf-b704-14fcf1cf9cce",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1bd90d8f-2193-455a-88bb-f9a2ab500e89"
        },
        "item": {
          "id": "6e546b8d-fbe6-49d9-81ba-2859f584b6d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7ad5c4e3-8b22-4ef1-9c14-be5fc75056a8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce5c60-f5a6-4928-ad1e-5ed8c4d4aff7",
        "cursor": {
          "ref": "f1dc9090-366d-4814-a93e-f2f132ce0d77",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "25e3bab9-0934-4281-b521-116a864b0305"
        },
        "item": {
          "id": "5fce5c60-f5a6-4928-ad1e-5ed8c4d4aff7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f7540a9a-265a-422f-99a3-3625439efa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c2fe01-15de-4924-90ec-8f2bd06beb13",
        "cursor": {
          "ref": "ea2fafe0-f3c4-4523-8e44-8f01ad60d57f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8e8ac03a-8037-4a77-bb00-caef382875b3"
        },
        "item": {
          "id": "38c2fe01-15de-4924-90ec-8f2bd06beb13",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00a7d8a2-3f31-4970-946b-714a1a928feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c14c41-0597-4bf7-9aab-3af2ce6af385",
        "cursor": {
          "ref": "fc84a32e-f98b-4098-8cfe-a2d26d154d99",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1cc3a903-9b42-4af5-8c9d-1ffb513786f5"
        },
        "item": {
          "id": "b2c14c41-0597-4bf7-9aab-3af2ce6af385",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0ca8dcd-1542-417a-96e0-3436b7f376f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e689f1cd-87c4-419e-87ce-7deb8ff325d9",
        "cursor": {
          "ref": "3eed35eb-7be9-4a4d-ad59-87fba72d1500",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6af5cf67-b7db-4987-9dac-62ff8eb56da1"
        },
        "item": {
          "id": "e689f1cd-87c4-419e-87ce-7deb8ff325d9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "69ec6193-8818-4313-8d50-d47f72434dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3413375-344f-4361-83b1-1782451e03fe",
        "cursor": {
          "ref": "0c7d29c7-a709-4d2a-9d77-54e7c5e9710e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2577e159-7d59-48f7-a3e8-ec7f939562c9"
        },
        "item": {
          "id": "b3413375-344f-4361-83b1-1782451e03fe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ec18eb41-03e9-4834-bcb5-49b24141fefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019e079b-74b2-46a7-a127-539eb91f042c",
        "cursor": {
          "ref": "9eb5ead5-b579-467a-9c39-235a00949e38",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b396bb27-d2a0-4ef3-9f59-a9cd8f0a8c2f"
        },
        "item": {
          "id": "019e079b-74b2-46a7-a127-539eb91f042c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "97a45ac3-8978-4d8c-920c-0003f80e9245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a4b6fa-0fad-4137-9b0c-a5e812dbc413",
        "cursor": {
          "ref": "3073ad54-7882-47c9-86e1-2f35f23cc052",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bd5505c1-95ed-4f23-aef9-e600ee839d3b"
        },
        "item": {
          "id": "b1a4b6fa-0fad-4137-9b0c-a5e812dbc413",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4237378c-7ecf-423f-a69a-d39d4fbadf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3bb870-8a50-454f-945c-21b9d6b91cb6",
        "cursor": {
          "ref": "9e1c5884-458f-4de1-b364-4fbcdc5b22f5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a2558c6-b12b-4f3c-91d7-e0db6271248e"
        },
        "item": {
          "id": "7f3bb870-8a50-454f-945c-21b9d6b91cb6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6191bd5c-19ff-4c39-89c5-d02ed4bf9a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80caac3-63ba-45fc-af7b-a6d497b483fe",
        "cursor": {
          "ref": "ce25606f-8ce9-4dc5-918d-69e06ee5f3a8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9d5b021a-3d0f-431f-91ef-183e7d947522"
        },
        "item": {
          "id": "a80caac3-63ba-45fc-af7b-a6d497b483fe",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d65564e7-c6fd-4f13-b43c-3fab427b5064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24493898-3cc7-4db7-8b7d-2d745e5af6b1",
        "cursor": {
          "ref": "bf80aa6c-f0bd-46ec-bd49-984b8cdb1a1d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "319bcae4-fa69-49b5-a6ad-917ac8ec0d2a"
        },
        "item": {
          "id": "24493898-3cc7-4db7-8b7d-2d745e5af6b1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b2e6f39b-c777-431e-904b-eeb29ded6d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4c3bac-0f18-4dea-abbc-00908fb92874",
        "cursor": {
          "ref": "5feb80ce-2308-4590-b0cf-5986f06cbb39",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c3b33c9b-dabc-4934-a48a-c0d9820846e1"
        },
        "item": {
          "id": "de4c3bac-0f18-4dea-abbc-00908fb92874",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ca9a5cc1-ed81-43d9-9cc5-655fab75f834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7cc247-be6b-44da-aff5-4789eebe71fc",
        "cursor": {
          "ref": "2e06f0bd-677d-4575-8430-6daa77103893",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6e5e840-0e0f-4417-aadd-7a831e7311da"
        },
        "item": {
          "id": "be7cc247-be6b-44da-aff5-4789eebe71fc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "18e50997-6697-4e25-a90a-413d35c70537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14154383-2213-418c-9645-f0242e2905ab",
        "cursor": {
          "ref": "875a1e6e-793b-40f5-86c9-d10f9a257a80",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2d4881bd-740e-4f69-9030-950a37c65f95"
        },
        "item": {
          "id": "14154383-2213-418c-9645-f0242e2905ab",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "90557758-a458-4595-8068-a5bd50c2f31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319cdaeb-d881-42f0-969b-73c6fe04cec1",
        "cursor": {
          "ref": "7a79ca3f-dc21-4447-ad42-a3a749ca35e8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9674253c-7051-4aff-8729-0a24b499a405"
        },
        "item": {
          "id": "319cdaeb-d881-42f0-969b-73c6fe04cec1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "661c6b5f-4cd1-4942-a0b3-d3b054d243b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9be62f-1ba0-4931-9952-edc25f3c0205",
        "cursor": {
          "ref": "cac0dd82-ac96-4316-a7b0-007441f6ea62",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d7a3bc29-ea22-454d-bbfa-ee2ee5a0766a"
        },
        "item": {
          "id": "1c9be62f-1ba0-4931-9952-edc25f3c0205",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "071d8685-a42b-4237-854e-1f94d05ddd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e768a73f-9b5e-484a-baea-11c9fb9b5e9d",
        "cursor": {
          "ref": "34e42a00-b5d6-4321-a779-b460fa58860d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a052113b-e38f-46ab-8ea4-4f8aed010f80"
        },
        "item": {
          "id": "e768a73f-9b5e-484a-baea-11c9fb9b5e9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54522dae-b880-433a-aa5c-7638669ae4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb655b7-ad88-4602-ad94-da5bab3ee683",
        "cursor": {
          "ref": "f2e07a8b-a1a6-4b35-ad13-4f72d946a940",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d3887fad-1a02-4e4c-9a8a-0f546b386ad7"
        },
        "item": {
          "id": "5cb655b7-ad88-4602-ad94-da5bab3ee683",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "77a3d4f8-018a-48f9-b8ef-b1081a60ace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b099a6-a209-44e6-aa1c-99ba59a9349a",
        "cursor": {
          "ref": "6155730b-e3cc-45dc-ad95-684681e3c186",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eee1bd4a-3c39-4871-be0d-8f019fd59b18"
        },
        "item": {
          "id": "b8b099a6-a209-44e6-aa1c-99ba59a9349a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e64dc4ca-5716-4414-a2af-40f8d143925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10470b3-cc91-4373-8597-7034b361cdd0",
        "cursor": {
          "ref": "5ea6cd65-cffa-4f09-ac43-516fa54368eb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3d587922-fcb4-40c4-a2d9-3d1ed7f609c1"
        },
        "item": {
          "id": "c10470b3-cc91-4373-8597-7034b361cdd0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8f332696-bba5-4148-997e-9ac748a567f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d13a79-0b43-4fb0-bce9-188765196c22",
        "cursor": {
          "ref": "9a02b79b-50e2-4d62-9e76-8dcf36a03ea0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d6382b06-e32d-4d0a-8713-2669fd71b52b"
        },
        "item": {
          "id": "e7d13a79-0b43-4fb0-bce9-188765196c22",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6e4ed4a9-8ad5-4760-ab29-4789f1ae787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf938877-61d3-4396-8356-59d6129f88ae",
        "cursor": {
          "ref": "f284ec49-aeb4-4936-a36d-bdd90dd06b9b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cb60df93-2c36-4056-b5f0-c95908e6949c"
        },
        "item": {
          "id": "cf938877-61d3-4396-8356-59d6129f88ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4c9fc563-c1ab-4719-bb54-9217088f4cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aaf7bc-8d26-40f7-bde0-7b7bb1324a49",
        "cursor": {
          "ref": "e40d5e79-524b-4989-b214-4349a5c6a78e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "86a12313-01bd-4355-b372-4eff6b539aee"
        },
        "item": {
          "id": "c8aaf7bc-8d26-40f7-bde0-7b7bb1324a49",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8eb1b1a4-7ca4-4344-9178-0d27379c146c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244532d2-d6bd-4b40-bfca-3b6a04354ecf",
        "cursor": {
          "ref": "19eb4e82-1629-4f2a-9320-e9aa3ff7cb80",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2fa7cd39-8f02-45f6-b52f-aedeed902df4"
        },
        "item": {
          "id": "244532d2-d6bd-4b40-bfca-3b6a04354ecf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e57ac53f-b842-4f45-bf6b-8d45444cea11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1f930a-94e5-4f87-ae89-bdcef4b4e9e0",
        "cursor": {
          "ref": "57b2c5a3-1a6f-4cfd-b738-38e8f8f056e0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "18759363-7eba-4c3b-9c80-3d71a1639f9e"
        },
        "item": {
          "id": "7f1f930a-94e5-4f87-ae89-bdcef4b4e9e0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0dfc19ff-0e83-4488-8787-43d74c5a77ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8280dfd5-3a19-4f57-9f0e-2a45c17bf0ee",
        "cursor": {
          "ref": "9f184424-6f4b-48e8-9084-8cb9b42d73eb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c52a351f-12f5-4928-96fe-98e011fe29ea"
        },
        "item": {
          "id": "8280dfd5-3a19-4f57-9f0e-2a45c17bf0ee",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4764d761-da6f-4046-82c4-c26d29be42f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab186fc-e3a0-4463-84d2-f9397a1dd142",
        "cursor": {
          "ref": "8850449f-bae7-4e54-90f1-83a6a22c95fc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3c415a3-ac81-49c9-bdcf-128fec4094f6"
        },
        "item": {
          "id": "5ab186fc-e3a0-4463-84d2-f9397a1dd142",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f2514004-4102-4ecc-a66b-a987e4be0764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4ca13b-b5ba-4a1a-bffa-ee42d0dcb024",
        "cursor": {
          "ref": "a53b2c23-2da8-42f5-b576-351c05e06081",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e132f5fc-3699-4f19-8436-f09ad230fbe0"
        },
        "item": {
          "id": "fb4ca13b-b5ba-4a1a-bffa-ee42d0dcb024",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "37162e0b-a8df-4a0b-8528-ae37ad5e62fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f336ab37-6ab0-403b-950d-f9c789c1503d",
        "cursor": {
          "ref": "45290326-dee4-41df-8141-32a967a08117",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1182437-8e37-416b-a67f-da1621a25de1"
        },
        "item": {
          "id": "f336ab37-6ab0-403b-950d-f9c789c1503d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2ee18b4a-537d-4e66-bf4d-62bb36562ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91462e82-eeda-46cb-b47c-660c77b07611",
        "cursor": {
          "ref": "2ef18e94-5952-4cba-b944-d1efd98d801b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "47a385b3-86e1-4636-a681-bffe6825b001"
        },
        "item": {
          "id": "91462e82-eeda-46cb-b47c-660c77b07611",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3360fbc7-f9bf-453d-9fbc-7d9d48043155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6411ad2c-42b3-420c-be82-a0aa96248c25",
        "cursor": {
          "ref": "d5467328-8328-43a3-9a85-2ea778fdc508",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6482df73-5d1f-439e-969c-cc2c92f44289"
        },
        "item": {
          "id": "6411ad2c-42b3-420c-be82-a0aa96248c25",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb315d8e-8467-45d2-a79c-30c3340f8b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a4a45e-d19a-4f1e-a58e-7c73c7f97416",
        "cursor": {
          "ref": "c1e6abd3-9f5f-4be4-87ab-26009616bf5b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc366621-5813-4f6d-95b4-834b4dcdbabb"
        },
        "item": {
          "id": "b2a4a45e-d19a-4f1e-a58e-7c73c7f97416",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d883389-b77f-4102-83da-e3aa1deef3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7631abf5-542e-4d35-9a8d-dfe3daa03f82",
        "cursor": {
          "ref": "24b9fe0f-7dc2-4adc-a7e3-9a45e5379908",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bf3ee528-ef34-42cb-98c2-1c2bef8a269f"
        },
        "item": {
          "id": "7631abf5-542e-4d35-9a8d-dfe3daa03f82",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "97660c10-55b6-4d29-977d-2069e16c4d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1ba01f-97fa-4668-81cc-6ddae186ad51",
        "cursor": {
          "ref": "2d9d28b3-c83c-4dfe-bd58-88c9b4be79ef",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1137560d-f599-41f0-9cb8-b0e37301a621"
        },
        "item": {
          "id": "8d1ba01f-97fa-4668-81cc-6ddae186ad51",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c68778d2-1449-43fe-9de6-cf7206ba9542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8efd5b3-5f89-4fab-ac2f-9aef854f6ef7",
        "cursor": {
          "ref": "a351f111-2bdc-47c7-8279-3f666306f546",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e1f0a49d-24f1-4857-a68b-89aea90bb158"
        },
        "item": {
          "id": "a8efd5b3-5f89-4fab-ac2f-9aef854f6ef7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "62c345fd-d49c-4c88-acb2-747b69bfae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e3ec0f-42f2-4333-975c-6225ec127234",
        "cursor": {
          "ref": "8b34e2d3-b568-449f-a969-de2be935fdcb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "07dd2de3-8d43-47f3-b396-42dc7ac3e77e"
        },
        "item": {
          "id": "44e3ec0f-42f2-4333-975c-6225ec127234",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "671fcf27-88e8-4466-9c8c-755a0acf643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b6c303-c9e4-4667-9cc6-c9bfb8d0a235",
        "cursor": {
          "ref": "26938136-f00e-4a02-9000-8a166f759e17",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8184b697-63fc-4aa1-860f-9f63d64bf7b9"
        },
        "item": {
          "id": "c2b6c303-c9e4-4667-9cc6-c9bfb8d0a235",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ef18e24a-656d-4cd9-a5c8-490e40fee6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e887bdd-7f9a-4e73-8ec4-137b0bd04140",
        "cursor": {
          "ref": "e4b874b4-8517-4dfd-abf5-1784147933e3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7f7e019a-9f4e-41cd-b490-e35c2e19fa68"
        },
        "item": {
          "id": "6e887bdd-7f9a-4e73-8ec4-137b0bd04140",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "590a712b-39ac-4898-b2df-3d0556218725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab44c63-9c74-4270-9005-1d4615a23651",
        "cursor": {
          "ref": "465563fe-1708-4fb6-be12-e0c954325cb0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7ec09f56-4e25-499f-be4c-a4e95dfa89c8"
        },
        "item": {
          "id": "eab44c63-9c74-4270-9005-1d4615a23651",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "70284d6e-f499-4135-ad16-b17041ea992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba26fe2-bf08-4a97-a0da-3170d3ef2e27",
        "cursor": {
          "ref": "83ba084a-72fb-494e-93f5-10dbd2473ce0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "58e88e55-16ac-4227-8b6e-bb1cc08c304c"
        },
        "item": {
          "id": "eba26fe2-bf08-4a97-a0da-3170d3ef2e27",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "03a8c356-325b-457b-88e3-31e26df5e632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0ec935-cf91-4c1d-b2ce-7e3b89408a1b",
        "cursor": {
          "ref": "70bef20c-3a37-4233-908e-bee3db093f60",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f33fa76f-5078-42e3-9175-150389cc4715"
        },
        "item": {
          "id": "ff0ec935-cf91-4c1d-b2ce-7e3b89408a1b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d5338ca7-53ce-46e0-8e95-a2be61390f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a07ffc-d689-4e8f-bdfb-ab708a3fa15f",
        "cursor": {
          "ref": "600ad8e6-cd01-4f7f-8e40-acfcfd47bb38",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7d821168-1ad3-4a73-a0fc-468a505823cc"
        },
        "item": {
          "id": "62a07ffc-d689-4e8f-bdfb-ab708a3fa15f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2de38dd1-dd6c-496a-b5a6-8af636b71680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c1840-5c3e-45c6-92f7-4d665593ddac",
        "cursor": {
          "ref": "74540cc6-420c-487b-a839-a38cf5e96581",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "14d22ac4-b2b7-4f61-b26f-215ba90e5a31"
        },
        "item": {
          "id": "101c1840-5c3e-45c6-92f7-4d665593ddac",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ca76325e-b8e3-4d0c-81bb-0caead30f1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a60341-3404-44db-9fa5-4f3744e95076",
        "cursor": {
          "ref": "e0c6641b-06ed-4ef9-a6d1-e13b32662ce8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2a003bd7-22b7-4a14-96a3-d44e7edaa673"
        },
        "item": {
          "id": "b5a60341-3404-44db-9fa5-4f3744e95076",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "95100546-b275-48d9-865c-4e518c020e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f223831b-6088-4a0c-899c-173631e6a848",
        "cursor": {
          "ref": "6f5901ca-6451-407c-8920-4fd4241f7109",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "358fdea0-26bd-4872-b76e-1b69a229e2d7"
        },
        "item": {
          "id": "f223831b-6088-4a0c-899c-173631e6a848",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fc230f41-5d7f-409c-a2a8-7723ef1972ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c017ce-6fa5-4718-930e-a4da42e67e0e",
        "cursor": {
          "ref": "51e44a93-f841-412a-b5ca-a6cc3a8bbf24",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "343b5e10-dd7e-41d9-bdcd-bb57cdb89de1"
        },
        "item": {
          "id": "95c017ce-6fa5-4718-930e-a4da42e67e0e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9fdd93d0-d4e9-477b-8cd6-ec1211315bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5820346-642e-433a-8b74-7baf9eb6cc20",
        "cursor": {
          "ref": "4dac1ff1-320d-40ff-ad44-fae1ee2ee828",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "77ef121a-7ade-47ca-81d0-ea2d9e65b194"
        },
        "item": {
          "id": "e5820346-642e-433a-8b74-7baf9eb6cc20",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "65154e7d-4892-451b-9c25-ef2651c0cfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f787a-d374-4689-b4a1-5ac40190278e",
        "cursor": {
          "ref": "04043a91-853e-4d8e-af2d-f26b68895b60",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e47985a8-bda0-4c9d-ab68-a5ed23b14303"
        },
        "item": {
          "id": "eb5f787a-d374-4689-b4a1-5ac40190278e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4b655f72-3c5c-4f9b-8cd4-5f2a1f69c214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b257a2f3-278c-4d7b-831e-8a0273210a83",
        "cursor": {
          "ref": "34525cb2-526e-431a-91cf-376a67530034",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "19ba14aa-5db9-4792-929b-5450d0ae8ef5"
        },
        "item": {
          "id": "b257a2f3-278c-4d7b-831e-8a0273210a83",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fbebe01b-f6fb-4881-a1c1-293d371c6eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a166439-4612-4ebd-8d0e-e01c67239627",
        "cursor": {
          "ref": "e56ad563-0e7e-4005-9863-f2367fc70504",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a955171e-3328-4bb4-a55e-626e689b7294"
        },
        "item": {
          "id": "6a166439-4612-4ebd-8d0e-e01c67239627",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c8af8b95-ec9a-4dbb-9572-f96accadbd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de2ece6-3879-4b97-8d2c-409df05da568",
        "cursor": {
          "ref": "8efb7170-9aad-41d5-a5f7-870c1d338976",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8a1da319-bd98-462c-a832-048656f7a309"
        },
        "item": {
          "id": "0de2ece6-3879-4b97-8d2c-409df05da568",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2dfe7312-4fc9-4aec-8917-32d14374e881",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351492f3-99ba-4f91-b270-e45ad013078e",
        "cursor": {
          "ref": "8fa6143c-077e-4f99-9d8f-60ffd639cff6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b1da5165-9a7f-4bc7-81ad-a968c1aebd7c"
        },
        "item": {
          "id": "351492f3-99ba-4f91-b270-e45ad013078e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "556171b9-12c9-4e71-ba5f-da3791449116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1a7b5ae5-a950-4691-8ae8-30270e023fb6",
        "cursor": {
          "ref": "e3cc483b-1279-4fce-94a6-5dbe99ea4b11",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eb5c7f99-795a-474e-9c79-7a8d0ea89e8e"
        },
        "item": {
          "id": "1a7b5ae5-a950-4691-8ae8-30270e023fb6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e692fea9-c5e2-43c9-90ad-80c4472c0138",
          "status": "Created",
          "code": 201,
          "responseTime": 14624,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4e8e05-832c-4bb8-b4bb-138b751ab82f",
        "cursor": {
          "ref": "f8c70510-68b0-4076-985d-0aa656cdc443",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "80030d91-d5f7-4b1c-8ff8-79d5b3e8797d"
        },
        "item": {
          "id": "9a4e8e05-832c-4bb8-b4bb-138b751ab82f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "53324f3a-84ea-4581-8b81-f2c5076994d4",
          "status": "Created",
          "code": 201,
          "responseTime": 13974,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeff015-2d1b-4465-a5b2-ac81658d5c6e",
        "cursor": {
          "ref": "eb2ffa19-6c96-465d-a230-55c2c92560e1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "173a51fa-7b84-42b4-9142-b95779f53c80"
        },
        "item": {
          "id": "4eeff015-2d1b-4465-a5b2-ac81658d5c6e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6b151b3d-4c51-4a61-8a21-d624cb04a363",
          "status": "Created",
          "code": 201,
          "responseTime": 13148,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b32dc11-c336-4226-ab85-cb37966d726e",
        "cursor": {
          "ref": "2d11d054-65af-4f43-963a-5da299875466",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "60a3b512-2ffe-4e33-a25e-3cad64c72bac"
        },
        "item": {
          "id": "9b32dc11-c336-4226-ab85-cb37966d726e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b59934a8-12bd-4dc3-be32-acd0f627784c",
          "status": "Created",
          "code": 201,
          "responseTime": 13948,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4708e3-0d60-4937-8cdd-74d5c7fffb16",
        "cursor": {
          "ref": "f60f09cf-e739-4039-969b-6233e1c52fc6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7733a5db-2834-45f1-a765-401c3a1f1f10"
        },
        "item": {
          "id": "1b4708e3-0d60-4937-8cdd-74d5c7fffb16",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0971644d-8ff2-4391-b95c-b5b4d5872fb7",
          "status": "Created",
          "code": 201,
          "responseTime": 14305,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-06T00:43:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-06T00:43:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a4978995-15ae-4f76-bac6-c0520d58b975",
        "cursor": {
          "ref": "4bda3d02-d097-4755-a031-c94b1535cbad",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0df8b889-2609-4b79-a9f7-90392ef0eb11"
        },
        "item": {
          "id": "a4978995-15ae-4f76-bac6-c0520d58b975",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bc37e4c5-2d7b-4f15-8808-03d60445527d",
          "status": "Created",
          "code": 201,
          "responseTime": 14208,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c90357-00c1-4fdc-a69a-bba5672de6f5",
        "cursor": {
          "ref": "657b6ec6-ddd1-4355-8e7d-978687afb8b7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "928c4b92-244e-4a67-b008-b9109b02241e"
        },
        "item": {
          "id": "e1c90357-00c1-4fdc-a69a-bba5672de6f5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f2c5f781-55f4-45e2-aae3-3a05c974a297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e122a0-cefc-4e49-88cf-078e2e2a80d1",
        "cursor": {
          "ref": "0762f8db-be99-46a4-a8c1-ed018e081990",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "be669a65-8f02-4d26-a991-4c7cc9561bd2"
        },
        "item": {
          "id": "77e122a0-cefc-4e49-88cf-078e2e2a80d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ce72b8d5-f294-4162-8a4b-37efdb269cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05e66ba-493c-4c87-a282-3afecbd8f30e",
        "cursor": {
          "ref": "1b9a35a4-2947-4552-a225-4465629a0381",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9ccc6061-4a08-49f4-abc2-5cd201ef6725"
        },
        "item": {
          "id": "b05e66ba-493c-4c87-a282-3afecbd8f30e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "366882aa-5961-4efc-b320-aa9174731a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84be0468-549f-4dd1-a05c-6377b987d67d",
        "cursor": {
          "ref": "3fa98016-fd97-443f-bbdf-0b63d3e5e025",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "81daae56-b154-4165-8e8a-8b0acf215e21"
        },
        "item": {
          "id": "84be0468-549f-4dd1-a05c-6377b987d67d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "77fd1ef9-4365-4f9f-a37c-55d68685eed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1cf655-b8dd-4ba2-9baa-0bbb3aef1df1",
        "cursor": {
          "ref": "4e6fe4bc-adc5-451e-9176-8f07a7ea264a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "84a65016-b99c-4eca-a393-e3fac564ad97"
        },
        "item": {
          "id": "7d1cf655-b8dd-4ba2-9baa-0bbb3aef1df1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ccff4cd5-7363-4f8b-b2ba-7a0c84a749db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e53b0b-e484-4479-ac5a-9f878df0b56f",
        "cursor": {
          "ref": "d74ead87-ed67-4125-9e56-0b6c186bd633",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "46b51650-ddec-4575-bc80-5f6c74b5d6b6"
        },
        "item": {
          "id": "24e53b0b-e484-4479-ac5a-9f878df0b56f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d4c0cf2b-7e9e-459a-bb7a-b51285e5a2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4cb74-f0c4-41c2-a4b6-1aae223ca95a",
        "cursor": {
          "ref": "db132d06-97ff-4cf1-9582-435ddadbcab4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "842dab9b-cfb6-4ed6-8a04-fc689222252a"
        },
        "item": {
          "id": "c7c4cb74-f0c4-41c2-a4b6-1aae223ca95a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a158f7e9-310e-42b7-8159-40b5cd509e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51e37c2-d0f2-4093-925a-a5d66be41ece",
        "cursor": {
          "ref": "4565e761-c14c-49ed-af1b-8d5246ca6f21",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bac72fda-7d88-49e6-8e45-601a4ebeaf11"
        },
        "item": {
          "id": "d51e37c2-d0f2-4093-925a-a5d66be41ece",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "86c43d4a-852b-4373-a8c6-d4664586cd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b68e1-5478-4d52-b248-0dbbb2d1a526",
        "cursor": {
          "ref": "9c95711d-719c-472b-8b56-62437c8acafc",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d56949d0-8a85-40a9-9c4a-4373350c2bdb"
        },
        "item": {
          "id": "417b68e1-5478-4d52-b248-0dbbb2d1a526",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "13a0ca75-bdb8-4efc-95ff-5981fc3c5ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb80e9d0-bb34-4f1f-91e9-e6ef376bfe2a",
        "cursor": {
          "ref": "6b26a601-277c-4848-ad15-9876e2518474",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0449ce40-9241-4129-89ca-ba6918ee80a9"
        },
        "item": {
          "id": "bb80e9d0-bb34-4f1f-91e9-e6ef376bfe2a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "105ebe11-0ab9-4f6c-8d40-7ae772aa9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71acd1e6-1f0a-4475-83e0-97b56f70a164",
        "cursor": {
          "ref": "55946af4-92dc-4be9-b973-4a1f0107a540",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2f8f667b-8f80-4cd9-8027-1d81571ceb33"
        },
        "item": {
          "id": "71acd1e6-1f0a-4475-83e0-97b56f70a164",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac5ffbf7-c68f-46a5-8c78-9b26dd394d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ad50e9-caa9-48ac-a332-6e7e15ae0a4e",
        "cursor": {
          "ref": "d3b196f2-ea49-40da-a55f-016f9ea86151",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2063919c-743e-4f40-bfe2-14378c6726a0"
        },
        "item": {
          "id": "c7ad50e9-caa9-48ac-a332-6e7e15ae0a4e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c42f2ef2-eae2-4009-812f-2e8fe0805de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2cd3b4-93c5-4046-9124-6f179093327b",
        "cursor": {
          "ref": "74b79219-1101-4b4d-82d0-52f5acfec7cb",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d44b03de-12d7-47d2-ab36-e3364e57b5e0"
        },
        "item": {
          "id": "2e2cd3b4-93c5-4046-9124-6f179093327b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9cf903c5-ebf5-4623-aafe-5365e08705bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add1873a-24a2-4df2-b5a4-96ff13eaf0eb",
        "cursor": {
          "ref": "371a7e23-def5-42bf-9ebe-b903c26ae00e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "14bceb61-8498-4185-ab40-1c7711384ca4"
        },
        "item": {
          "id": "add1873a-24a2-4df2-b5a4-96ff13eaf0eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "17972589-0d91-41f5-927f-09f87c056cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c920d75e-a14e-486f-bc04-569e4c966ccc",
        "cursor": {
          "ref": "62c24487-d6ca-4821-9616-5ea50cfb689d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d61c2d13-f737-45ad-b9c2-22c08df06f43"
        },
        "item": {
          "id": "c920d75e-a14e-486f-bc04-569e4c966ccc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f42aed11-88cb-4f31-8292-933d47e43cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46356b4c-0fd8-4918-bc76-85841afcfac3",
        "cursor": {
          "ref": "936bbd78-560c-4a1f-bae6-5604e0032574",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8914566b-6675-4956-8c56-81ce255c300f"
        },
        "item": {
          "id": "46356b4c-0fd8-4918-bc76-85841afcfac3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "540c6eee-996e-4641-bc70-f316b2e360a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac2eafc-240d-4a9a-8efb-d71c895a14b5",
        "cursor": {
          "ref": "885e96d6-dc3d-42a5-9be8-cbac1c9eea32",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5578fb4e-0971-4c0e-ab91-6ad149e2c94a"
        },
        "item": {
          "id": "6ac2eafc-240d-4a9a-8efb-d71c895a14b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "43e9a9a5-a3f3-4009-9b8b-23d178b98b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072df64b-d61e-43ab-952e-48aca33037d9",
        "cursor": {
          "ref": "5c2c26bd-6379-4ddb-b4d8-d60dd45c6356",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6ca8e220-173f-4dff-962d-cff1353329d0"
        },
        "item": {
          "id": "072df64b-d61e-43ab-952e-48aca33037d9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f62d9f9-6172-4159-9ea2-50032247bca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21632b58-edcd-4557-8749-db0afb5fc97d",
        "cursor": {
          "ref": "4b7dbdd3-8f7b-4c2f-982a-ff88046510af",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "01d61037-9ccf-4d04-a263-c7abe5e71369"
        },
        "item": {
          "id": "21632b58-edcd-4557-8749-db0afb5fc97d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d64b4b24-72dc-4be2-b964-0c16492df9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a9230-8dad-40c4-b573-c695059b2482",
        "cursor": {
          "ref": "9911372f-4d24-42d4-97bc-15181075c0c0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d9a1b83-5738-4517-8ffb-90cbcfe09857"
        },
        "item": {
          "id": "6e8a9230-8dad-40c4-b573-c695059b2482",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0b61f9dc-1ad7-41c5-aae7-440a5f885e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1bc2ef-09a9-4e8d-8106-08f1016dde5c",
        "cursor": {
          "ref": "ad632e20-dd91-4419-bfc8-3f21e2a0ba5f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e34c99aa-87d7-4a51-87cb-18712767d912"
        },
        "item": {
          "id": "bb1bc2ef-09a9-4e8d-8106-08f1016dde5c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "12b7734f-0a0b-4806-9dc2-416c42681104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146b3b05-3a4a-4ee0-9508-c71bf40772e4",
        "cursor": {
          "ref": "145b7d8b-5fcf-425d-b84c-1e41ac263300",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a270a75f-5e5b-41fc-8932-e0841759a113"
        },
        "item": {
          "id": "146b3b05-3a4a-4ee0-9508-c71bf40772e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "33f1eb69-81e2-4f87-9946-d9d686eb6b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4acb78e-bafd-462c-a616-e581799879c5",
        "cursor": {
          "ref": "6881c32b-9002-45ed-a567-359fb7b36061",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5aead38f-ba79-47b0-a513-807884f71ffd"
        },
        "item": {
          "id": "d4acb78e-bafd-462c-a616-e581799879c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d74abed7-5235-45eb-937f-9c132ba335d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d353a6-295b-49d7-8f77-0b5b8c0b471f",
        "cursor": {
          "ref": "0981570a-7d9f-4dc2-a3e3-2e088edd7806",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0f6e0e5d-eb4c-43aa-acae-c42233ec54b6"
        },
        "item": {
          "id": "58d353a6-295b-49d7-8f77-0b5b8c0b471f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8667290-6e70-4f0e-992d-d052d6c5dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e222f772-6d59-4e7f-9aaf-169c7e520a8c",
        "cursor": {
          "ref": "3162ef15-cfc2-4af7-9f83-4f8fd70eae7d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b0f39af0-eaca-4f36-96f1-48e19a36ae7e"
        },
        "item": {
          "id": "e222f772-6d59-4e7f-9aaf-169c7e520a8c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a8860b01-8ef7-4099-8450-f27918e1086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52280e32-d9f6-4b7a-b90e-acb4426051af",
        "cursor": {
          "ref": "6a96c0bc-a37d-4828-b1cc-570fe6406519",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e3cbc05a-45dd-4d9c-a9c9-7f97145a68cd"
        },
        "item": {
          "id": "52280e32-d9f6-4b7a-b90e-acb4426051af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7cb3b704-36b1-4467-ac1c-bd666fcc5323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f050873-0ac7-4f8b-abae-0720b756ce5c",
        "cursor": {
          "ref": "c28ac907-2f50-420e-9d8a-70e872dbbbb9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cf2bce65-d647-4040-8544-9a8f961994a9"
        },
        "item": {
          "id": "3f050873-0ac7-4f8b-abae-0720b756ce5c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96c7c67f-d0a7-4496-bdf0-7327fb09fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fff5d97-5088-40f6-a697-37442bcc213e",
        "cursor": {
          "ref": "51d26e4a-badd-485a-ac68-e83689f8d491",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "37405cf8-edd5-418d-925d-6ec1830fefee"
        },
        "item": {
          "id": "6fff5d97-5088-40f6-a697-37442bcc213e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4f88e3c7-c0ef-4bd8-9052-e01a3de2a9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51530b4e-16b2-4a7f-81a8-8815dd5ad46a",
        "cursor": {
          "ref": "9a14e42e-d8be-4aca-911b-39c7490e3c76",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "815bec24-6b1e-4218-aa35-4fa72e89e698"
        },
        "item": {
          "id": "51530b4e-16b2-4a7f-81a8-8815dd5ad46a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ac008b09-37a9-46b6-87a0-455eac1b7ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523d87a9-246b-4938-8a60-9152e03df5ed",
        "cursor": {
          "ref": "42338677-28af-46d5-8fb9-2e1de316ed07",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2541f952-9877-46e3-b2ce-997160094247"
        },
        "item": {
          "id": "523d87a9-246b-4938-8a60-9152e03df5ed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "22eca581-e0f8-4b4f-b089-50b41f252ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a873363d-2c91-44a4-938e-7f512a328f68",
        "cursor": {
          "ref": "bfc26e75-c3b9-4e42-ad6a-32dfb9027d5f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fd85f5b4-5c44-4057-8ed5-6873f0635901"
        },
        "item": {
          "id": "a873363d-2c91-44a4-938e-7f512a328f68",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78c9938f-bdc6-4740-bf87-2c266024db0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10656ea7-cc83-4442-9446-11aba5a86c11",
        "cursor": {
          "ref": "de854125-76ee-4645-a5e4-ffe745c04afa",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1fef9454-4f63-4f3d-b967-1e29c047218a"
        },
        "item": {
          "id": "10656ea7-cc83-4442-9446-11aba5a86c11",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bc40b8aa-4764-437a-8243-835b402cdbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd824405-8f6d-4571-80da-30ad3829ef81",
        "cursor": {
          "ref": "aaa85ae0-b4d6-4281-a87f-3aebff91dac4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bc448663-36fc-42a8-ae32-c97059fd33bf"
        },
        "item": {
          "id": "dd824405-8f6d-4571-80da-30ad3829ef81",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "64730bca-bac6-46eb-a5b8-8e3cd681d294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a94c87-4036-4f40-afed-9ec20ae35a6e",
        "cursor": {
          "ref": "d5fcedf6-71f8-4e22-b42a-17a5678ebd4b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "445f9241-73ae-4ae1-bb54-4e3c376e30ca"
        },
        "item": {
          "id": "b1a94c87-4036-4f40-afed-9ec20ae35a6e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9f66aab5-8ccc-43ab-925e-32dee24201fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f8dceb-2b29-4c09-b39c-475bb3676614",
        "cursor": {
          "ref": "58b66665-ff77-4a62-b0d9-2848a1513a57",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8b1a2d9e-3e8b-458e-85e2-1a95d8a8e2a4"
        },
        "item": {
          "id": "57f8dceb-2b29-4c09-b39c-475bb3676614",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fec88fd3-e381-4b53-a46f-839578b27aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479935af-a143-43f4-9643-9dc5a8e82f83",
        "cursor": {
          "ref": "1191375a-0fe8-4fcd-b799-1defd385eb5a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "df7d8f8b-fba2-483a-ac1f-a36e309ccba4"
        },
        "item": {
          "id": "479935af-a143-43f4-9643-9dc5a8e82f83",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3c66b348-a65d-4f70-ae60-8cb1863b7b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c154b0-a8f1-4cbe-a6fc-14027f978228",
        "cursor": {
          "ref": "51d7a75c-1f2b-4933-9db7-7d5416b0c9d0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "607bea93-87b2-43bb-bcb9-04b960b660d9"
        },
        "item": {
          "id": "65c154b0-a8f1-4cbe-a6fc-14027f978228",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "41b20686-12a9-4407-a90c-2ac048a7f426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b6bfb5-aaf9-45a1-b722-343bbe8ff70d",
        "cursor": {
          "ref": "32b76585-edfd-4ea6-ad98-55192ec14cb4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f9fc352e-aee3-4193-802e-fabe1c004b4c"
        },
        "item": {
          "id": "b3b6bfb5-aaf9-45a1-b722-343bbe8ff70d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0f4343d-6628-4d7d-bbd1-c7fa62da89a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf6c0fb-3472-43c0-998e-05679ee92991",
        "cursor": {
          "ref": "eefc6c35-d05e-4050-a24d-8f784256cd1d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e078a6ae-7f9f-422c-a672-a7bf9cfc9b5c"
        },
        "item": {
          "id": "faf6c0fb-3472-43c0-998e-05679ee92991",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2d1afd42-9140-4af2-8192-f975ffebd302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a501e-940b-41db-9284-beb423c86ad1",
        "cursor": {
          "ref": "f2390430-9195-414e-9fb8-e9a82849af2e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9bcae84a-3a68-4d9f-9fa5-19bf1de13b43"
        },
        "item": {
          "id": "2e9a501e-940b-41db-9284-beb423c86ad1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a886d062-3a33-49ac-9014-13aff4becd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee2ed9f-fc98-48e5-a7a3-e4f3d16127e7",
        "cursor": {
          "ref": "1ede2213-99f0-41fc-ae10-8545f1e46aab",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "222cdcda-fb1f-4fe1-b007-c3b9704f869c"
        },
        "item": {
          "id": "dee2ed9f-fc98-48e5-a7a3-e4f3d16127e7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "49ecaccd-1cf4-4e83-94c2-818182ce0f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de46076e-309f-4797-9cb2-7d687483b6df",
        "cursor": {
          "ref": "a2bc0637-6cf0-436d-92c6-5c6c5fa57ac6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3c06feef-8e25-4c1f-8ed9-837a49b24a92"
        },
        "item": {
          "id": "de46076e-309f-4797-9cb2-7d687483b6df",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c27bad71-ec35-442f-94cc-a1dba9d735a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f563a54-d541-48ac-a27b-7a96279f8c41",
        "cursor": {
          "ref": "b7fe7596-e297-4d2c-b5e8-ac354acf76ef",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f65feb05-f39c-493b-a6d3-727a1f63a539"
        },
        "item": {
          "id": "7f563a54-d541-48ac-a27b-7a96279f8c41",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a23b546-a594-4344-9593-21832442ffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692f5452-3cec-4c1d-9f12-6d4acf8f93ff",
        "cursor": {
          "ref": "58a6a958-c011-445f-89b2-b53173485c5a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "053a92ad-185e-4bad-97d9-4ee74481176e"
        },
        "item": {
          "id": "692f5452-3cec-4c1d-9f12-6d4acf8f93ff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7165078f-2f43-412f-b803-4f14edae7f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52cf912-ea1f-4983-bf35-a706b8bbc10f",
        "cursor": {
          "ref": "53c1f865-3fc2-4d93-ba1d-e7d38f567bad",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "45101a14-70bf-4778-bf8a-f22a6abe44db"
        },
        "item": {
          "id": "d52cf912-ea1f-4983-bf35-a706b8bbc10f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0331fee7-bcfc-4341-9d20-e01353ed84a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3298b167-64be-4ab4-a5a6-a48b7222629d",
        "cursor": {
          "ref": "a4b95ff7-8af3-4dcd-9974-c054d293edab",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "05926d33-5915-4a9e-a04b-131b8d0a4df7"
        },
        "item": {
          "id": "3298b167-64be-4ab4-a5a6-a48b7222629d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "66b3c488-fbfe-47ac-b442-d6de2ddefd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b3b9cc-9a66-4284-91e7-ceff7daec368",
        "cursor": {
          "ref": "d893fdd0-e9fd-432e-a4ad-be2f9711ffb6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c210ea9a-f6ff-4b82-ae79-c1b2c3687ade"
        },
        "item": {
          "id": "f7b3b9cc-9a66-4284-91e7-ceff7daec368",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c97a051e-6436-4142-aa0d-ea6e1b4da739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a81d37c-4002-49fe-9977-feedf503fa60",
        "cursor": {
          "ref": "b1da9bb1-aa0b-46d4-a09d-cea30c88ceb4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "26829387-6160-48d0-88e6-e72e5265b2c2"
        },
        "item": {
          "id": "8a81d37c-4002-49fe-9977-feedf503fa60",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dcd27bf7-79f0-480d-95ec-9b5ffb0273bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086844c9-d531-4bf4-9468-d3f4a76e01fb",
        "cursor": {
          "ref": "018774fc-7c2a-4754-96ca-ff8faef2036a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a85aa335-5bc4-4ea1-b1e1-60d93089b502"
        },
        "item": {
          "id": "086844c9-d531-4bf4-9468-d3f4a76e01fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8f23cd5d-6089-491b-8af8-61dc525313c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08853f72-d35b-46df-b6a4-f76b04b4e9fc",
        "cursor": {
          "ref": "dd58db7c-a9f4-456f-8d11-1276c3a8b585",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6e50657c-796e-4427-8db9-246dfdc498fa"
        },
        "item": {
          "id": "08853f72-d35b-46df-b6a4-f76b04b4e9fc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6d35dd22-bf07-4f31-a4ba-28779ec87f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9346fe0e-318f-4125-819e-f4cb14434b47",
        "cursor": {
          "ref": "0cf30341-c028-4822-992a-287ed199c1ba",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f588861e-1ee7-4884-84f3-5aaa7423a56a"
        },
        "item": {
          "id": "9346fe0e-318f-4125-819e-f4cb14434b47",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e4ae06d6-732b-436c-bcf4-3dad8a986901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1058ef-3f68-4dec-817e-34196de58c1e",
        "cursor": {
          "ref": "e925ac15-5454-4549-9073-63d1b9a6eee6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1c3d4515-62ce-4b97-804f-e2eee4415902"
        },
        "item": {
          "id": "bc1058ef-3f68-4dec-817e-34196de58c1e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1111374d-2639-4623-9f5d-aca57e2a2367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf56d4b-741e-41fe-972a-9059138a23cb",
        "cursor": {
          "ref": "0f056561-3ac0-4d7f-9d73-4f0ea7a0d42b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "15ecf199-1aa7-4e89-9b91-238841557475"
        },
        "item": {
          "id": "ebf56d4b-741e-41fe-972a-9059138a23cb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2a61b4dd-8747-4650-8f29-2a964fadcb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c675a72-f948-4d6e-a041-0831cf79113a",
        "cursor": {
          "ref": "aecac3b9-2b1c-476c-a907-d647a917ac36",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2266ed8e-922b-4b0d-afd5-8ad60cd2b6b5"
        },
        "item": {
          "id": "7c675a72-f948-4d6e-a041-0831cf79113a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2d721269-d27d-4eec-9798-053642816f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8707c0-95aa-4488-badf-e81eaaf29cb0",
        "cursor": {
          "ref": "be625c01-3b5c-4b83-8b80-633dd19cf843",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "37b7464e-8aa9-4be7-9d71-0a53c61140a0"
        },
        "item": {
          "id": "df8707c0-95aa-4488-badf-e81eaaf29cb0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0d817821-100f-42f4-b1b6-20ac0afa5888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b919847-b960-4b9f-ac8a-67b21da14627",
        "cursor": {
          "ref": "3cca23a9-6051-42a3-90a7-88dd794daf48",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bd5daa44-f248-4963-a915-921aab6331c9"
        },
        "item": {
          "id": "1b919847-b960-4b9f-ac8a-67b21da14627",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "99579ef6-86cd-46b4-860d-d86c3ffb313a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652c301f-6c9d-4aca-b0e1-f25777aaadf5",
        "cursor": {
          "ref": "e3831b5c-6ee4-40b2-9382-28bcc2ad1f74",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "01a87125-f1cb-426d-ab5c-b57125818028"
        },
        "item": {
          "id": "652c301f-6c9d-4aca-b0e1-f25777aaadf5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0f74b482-4bcd-4fe6-b50f-a5fed65ebe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed09f286-ef17-4880-a23b-eabcaa3446c9",
        "cursor": {
          "ref": "38e13acf-20e2-496d-8778-709c181b4480",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5e43088c-d9de-49fa-8122-31e806e6e17f"
        },
        "item": {
          "id": "ed09f286-ef17-4880-a23b-eabcaa3446c9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2919b645-af14-4713-9242-f1191c274199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fddca8-10ee-4ec9-a5ec-dc31e20c7851",
        "cursor": {
          "ref": "339b8e34-9fed-42c6-b529-c38a70debae2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fd6854de-7473-4a6a-8869-90160cfe3ad5"
        },
        "item": {
          "id": "94fddca8-10ee-4ec9-a5ec-dc31e20c7851",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3376e40f-b2d3-48c4-bde6-8f4809202ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a05a3e6-242c-4d46-81d6-1b4775fb6601",
        "cursor": {
          "ref": "01e379fb-7e0d-42ef-82c3-6de2de4881eb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "575da8e6-28c0-4fd9-af14-66454032b23b"
        },
        "item": {
          "id": "4a05a3e6-242c-4d46-81d6-1b4775fb6601",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "47141c98-4387-41f1-bd44-6af0c563ee86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d64fb-366c-4f7c-aff7-92a9acd8c8a1",
        "cursor": {
          "ref": "46fc9404-f984-4a68-aa1c-5558c5010444",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7e4d7023-a73d-4159-ae60-5ee56bb22ac2"
        },
        "item": {
          "id": "922d64fb-366c-4f7c-aff7-92a9acd8c8a1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "67a5ecda-883f-4bf6-bb25-270f2068ff03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e003112-7305-4c1c-963f-0c1c3a823dfa",
        "cursor": {
          "ref": "549f58a2-ecb9-402c-8fa4-5ec5c016ff41",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b2919a5-6ba2-4e9f-a622-5077bf12216a"
        },
        "item": {
          "id": "9e003112-7305-4c1c-963f-0c1c3a823dfa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "68088e79-d4ac-47b9-8cce-4241c746528d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1358869c-6b79-4fb2-8d53-564842504e86",
        "cursor": {
          "ref": "85fff1bc-1829-4fc8-8618-5e3d67c6d754",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64f5a845-9ae6-41f0-ab73-e09a5bae3390"
        },
        "item": {
          "id": "1358869c-6b79-4fb2-8d53-564842504e86",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "52c1b476-3653-4f26-8af1-86dd4ca54367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f98b301-2986-412a-8f6c-5ad098236cd0",
        "cursor": {
          "ref": "37dae835-af10-4448-b9c7-e186b4ecbc31",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e1c53d6d-5571-4c69-92d9-5d5e32b65548"
        },
        "item": {
          "id": "0f98b301-2986-412a-8f6c-5ad098236cd0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "af722ccd-c035-4fd3-99d6-b9bdead0b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74d5b62-a2f9-4344-8cab-c8f09612fff4",
        "cursor": {
          "ref": "4ee360be-47bd-4183-8f65-b6c7ae6f34e2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "02d70605-384b-46de-959e-bd11f4c4c11c"
        },
        "item": {
          "id": "a74d5b62-a2f9-4344-8cab-c8f09612fff4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0d7b05ed-365c-4881-beeb-df2b31c2f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f2c2a9-ced1-4a35-bca2-f647c38cbd23",
        "cursor": {
          "ref": "367bcb56-b5ed-4fef-9447-f50787030cf8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b1f20e1b-7212-41b0-ab57-0843da8d3592"
        },
        "item": {
          "id": "27f2c2a9-ced1-4a35-bca2-f647c38cbd23",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7c9b52d0-5bac-457b-a270-dcbba6ad4028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f11a752-c1fe-4700-9fe9-b3f4baf3e5a4",
        "cursor": {
          "ref": "b4b79809-75b1-413d-822b-fc74e09050a0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1f23e156-aa2b-4c65-907c-a5afd7101708"
        },
        "item": {
          "id": "3f11a752-c1fe-4700-9fe9-b3f4baf3e5a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dbc692e5-b27d-46b5-b766-cbe298db7e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eb6f91-c6c6-4b40-8918-ccaa5fa2dd84",
        "cursor": {
          "ref": "ed72b00d-227c-4cb1-914b-ca326f231ebb",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "99c25656-a1ad-4fbc-9013-a7fd65b90a77"
        },
        "item": {
          "id": "54eb6f91-c6c6-4b40-8918-ccaa5fa2dd84",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ba4c4bd8-193a-47fa-8f89-042319fcd607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84cb398-17ad-4c9c-99ad-0e21ed663353",
        "cursor": {
          "ref": "a8a448b2-28dd-4bab-9cd5-52ad90f341bc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0c957149-b5b8-446f-9d36-6083426c038b"
        },
        "item": {
          "id": "e84cb398-17ad-4c9c-99ad-0e21ed663353",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5e9bf17b-7154-4e99-bf17-d85bb9746631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9363b8c4-3c5a-4d50-936b-47e19120c746",
        "cursor": {
          "ref": "c4184866-8a25-4cd0-b4de-a77d9a32975d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "359de128-9b09-436b-9324-e263508f7f12"
        },
        "item": {
          "id": "9363b8c4-3c5a-4d50-936b-47e19120c746",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b645efe1-c8aa-4d67-a1e0-db2304dfbcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318b7aa0-173f-4ba5-91bd-0d05ae138de6",
        "cursor": {
          "ref": "ea3c4367-2ce4-4ded-a987-17ef7aa717fd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1ba3cc20-3d90-4f7f-bf88-5843c618e6fa"
        },
        "item": {
          "id": "318b7aa0-173f-4ba5-91bd-0d05ae138de6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d1ad1270-aa71-4655-836d-1b60e63a456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bd7899-a169-4eb6-a2aa-d2476a9ce3e8",
        "cursor": {
          "ref": "0c349e2d-1cf0-4657-94ab-bcda7b3be91b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e229c512-55d2-47d9-b420-aa10bf7d8c95"
        },
        "item": {
          "id": "81bd7899-a169-4eb6-a2aa-d2476a9ce3e8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ed8fa594-304e-4a57-b02f-b0f876db8586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a23173-527a-44f9-ab6e-0a74c9e23870",
        "cursor": {
          "ref": "ec561145-3491-4f2c-9080-49a136e3cb7c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c5c899a7-7012-42c5-b278-f8ea85836fe0"
        },
        "item": {
          "id": "56a23173-527a-44f9-ab6e-0a74c9e23870",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c2aee713-4b44-482f-80d4-b73cf848bc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7cadd6-df1f-49cd-9f74-560fe682579c",
        "cursor": {
          "ref": "654cd6f2-bffb-4d4f-aa5b-b3297a082cd0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1eed4a44-458b-454a-966f-9d78885c0be1"
        },
        "item": {
          "id": "ce7cadd6-df1f-49cd-9f74-560fe682579c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "358d8250-8447-4282-8004-1dee081f91ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f091bb7-dba3-4849-9777-64de6b24e426",
        "cursor": {
          "ref": "28574968-0905-4b90-9338-b9ebfaf7c9a4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4e384d2e-75aa-458d-8d4e-d2eac682f386"
        },
        "item": {
          "id": "2f091bb7-dba3-4849-9777-64de6b24e426",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2e542ad0-a473-47e4-bf5e-8e280f9eb2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc423854-ba90-4201-946b-cb18b814cf34",
        "cursor": {
          "ref": "88eb0f07-4901-4cc3-8062-17f87f143495",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "30a9f8d5-1d0c-4754-97a4-e9ca95b20d6d"
        },
        "item": {
          "id": "dc423854-ba90-4201-946b-cb18b814cf34",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b0781763-19f4-4663-81ec-91a06b15eb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6038c51-bcfc-499e-8f85-c40211c14eed",
        "cursor": {
          "ref": "d405fbb8-1a90-493f-98b5-c50ff7ae7734",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8860f696-4f6f-40a9-b263-19a11e8229e4"
        },
        "item": {
          "id": "d6038c51-bcfc-499e-8f85-c40211c14eed",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dbc70c20-defb-4804-9342-ffce78c79fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3632a9-5db4-4834-a594-5d899115fda1",
        "cursor": {
          "ref": "edca8d0f-df5a-4c78-ab5f-d32029b6e773",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8b14f385-499e-4b71-a37b-d62bc7cab849"
        },
        "item": {
          "id": "9f3632a9-5db4-4834-a594-5d899115fda1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3d220fac-313c-4778-acf8-e7af4864aa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1244319-e005-41c5-a0ae-54fd65429446",
        "cursor": {
          "ref": "feeff490-0dfc-4b0a-9081-5bd611f971c5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aaa9a2b7-a795-428f-95cc-ca398732c08b"
        },
        "item": {
          "id": "b1244319-e005-41c5-a0ae-54fd65429446",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "338fcdca-3ed7-4168-978d-3bade5e34e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62e9847-ece1-4791-90cf-9e65d6859b00",
        "cursor": {
          "ref": "669b0741-e3dd-419d-b6c1-b42a5ccc9ebb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "71c4cf5c-4a09-4542-8b25-4bd45b7c3f3f"
        },
        "item": {
          "id": "a62e9847-ece1-4791-90cf-9e65d6859b00",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d10ebbc1-bbb1-4c33-8a74-d9e1003ef936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048c745a-8fb5-4fac-b600-0e8284099242",
        "cursor": {
          "ref": "342bfc7f-73f8-432f-a1ce-54a43dec80c8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "57d7043c-b862-47b8-ac31-8a500f429632"
        },
        "item": {
          "id": "048c745a-8fb5-4fac-b600-0e8284099242",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3ac54a9f-aa7f-4bfc-863b-0ec65188b7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267c8283-b4f4-4b9f-b703-d20ccd19ffbe",
        "cursor": {
          "ref": "f4e999aa-f024-4e39-b394-0e170fa4ed4b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8b2b5d83-7d10-49a7-b7f7-3587d0d77a58"
        },
        "item": {
          "id": "267c8283-b4f4-4b9f-b703-d20ccd19ffbe",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a454c567-a9e8-4bc8-ae17-c50f4a848e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339ad698-2112-466d-9969-7e048452bc85",
        "cursor": {
          "ref": "ab1cd760-e11c-4b2e-99b5-d067313d0f49",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "da2007b1-7a6a-49b0-a49b-45fdafb06d6a"
        },
        "item": {
          "id": "339ad698-2112-466d-9969-7e048452bc85",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "08d60f92-a0ce-4e19-9f64-e00c48954110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c7b87e-f622-4fd3-beeb-7e93ffb823a7",
        "cursor": {
          "ref": "289639a8-7af8-4cb5-bc77-aa6964d77329",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1d333749-6646-4d96-9c6c-52bf60860f56"
        },
        "item": {
          "id": "b2c7b87e-f622-4fd3-beeb-7e93ffb823a7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e5a1fb9d-9213-4b62-a61e-e75f24427297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aecf3b-84c9-49b5-9d3c-f3d67ef2fa30",
        "cursor": {
          "ref": "24c4b882-695a-43cd-874b-b182e2a6478e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c79fb73-6531-47b8-94ed-bda3fec835a7"
        },
        "item": {
          "id": "d8aecf3b-84c9-49b5-9d3c-f3d67ef2fa30",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "df4b7690-ec22-4578-ad9c-50ad751729bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba22c60-52d9-4289-8f41-12b2504f20f1",
        "cursor": {
          "ref": "5c9eed3e-a0f5-407d-b754-15b9ecfba760",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ef1dc600-2f85-4533-a205-66810beba033"
        },
        "item": {
          "id": "dba22c60-52d9-4289-8f41-12b2504f20f1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5adeeb8b-2a90-4c15-8951-f476517eaa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d07e076-7d2f-477f-8bbc-af75d4c45100",
        "cursor": {
          "ref": "d20f6766-0bf0-45d9-9e6c-67ae3423e17e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "332df754-d661-44f0-8f04-240c4c052865"
        },
        "item": {
          "id": "7d07e076-7d2f-477f-8bbc-af75d4c45100",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1b66ccba-64fa-454e-a2b8-a129fc9f1ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674873fd-e175-4352-abdb-d5460b1ed545",
        "cursor": {
          "ref": "97f1aa3b-83e4-4f9f-8409-54864865e174",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8e79fabb-32a2-406c-a084-f1d57679f102"
        },
        "item": {
          "id": "674873fd-e175-4352-abdb-d5460b1ed545",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0fe4e215-b6ca-4edc-aaa6-a36d6982e160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e59e62e-86dc-4240-959a-f57e5cbeb695",
        "cursor": {
          "ref": "77c449a6-287c-4dec-a30c-747d2dd7663c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a7c059aa-2904-4a97-971b-006060f3f458"
        },
        "item": {
          "id": "6e59e62e-86dc-4240-959a-f57e5cbeb695",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4783ed1a-7abb-4aba-9fb7-1cfb7692b402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c24f13d-c37d-4965-be06-8702a7deb863",
        "cursor": {
          "ref": "c0edc73b-d6a0-4948-a345-a06095d55951",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c6562da4-ddba-4900-ae70-d96d5817da27"
        },
        "item": {
          "id": "3c24f13d-c37d-4965-be06-8702a7deb863",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c9450391-439f-410c-9db7-49f8592f5067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a017a0-a117-4dbf-8882-4d1bd9efa1ad",
        "cursor": {
          "ref": "940050a4-b6c7-463f-8bc3-cdda196c53c4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "53998f13-c439-460d-a10a-fb77c7fc6307"
        },
        "item": {
          "id": "d4a017a0-a117-4dbf-8882-4d1bd9efa1ad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "95d47ff1-dc91-4b23-aecf-d91301db1191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5e8186-9582-4ee9-ac83-30cb1dda3312",
        "cursor": {
          "ref": "2fb296ab-2012-4cc5-af0e-f26e60ff3d98",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bedf61fd-0061-438d-bac3-1d7da0b1b013"
        },
        "item": {
          "id": "5d5e8186-9582-4ee9-ac83-30cb1dda3312",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bd561975-1853-4fd4-8229-7b57d76885fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bee7b5f-b46b-4d63-8fce-530f72bddb8d",
        "cursor": {
          "ref": "28e67787-8b62-4b6a-9683-57f7ee121c35",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8ec6fa11-4221-4c8a-84e6-fd2096cb5bd4"
        },
        "item": {
          "id": "8bee7b5f-b46b-4d63-8fce-530f72bddb8d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "59c59047-0068-4e54-bc25-2725011bad12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34c603e-06f0-4744-885d-b36272fb59dd",
        "cursor": {
          "ref": "28ab815e-ee7a-4cac-a514-c35a8ec68c8d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5935ed4e-e9ba-4c64-bd36-9ebe7708e125"
        },
        "item": {
          "id": "b34c603e-06f0-4744-885d-b36272fb59dd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f0be60be-b377-4cc0-86cc-c2f7cc94d184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ebd141-7ecb-4669-9e79-fc2c37ec2967",
        "cursor": {
          "ref": "00ad975c-9986-4e9f-a39b-b95f696d37ed",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a4c9d61d-37fe-4d04-808b-21b92b85cdc9"
        },
        "item": {
          "id": "a5ebd141-7ecb-4669-9e79-fc2c37ec2967",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b412e769-40f5-48cd-a992-c0e5ff99f490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ea2f2-e998-4b48-955c-0b1874af9e50",
        "cursor": {
          "ref": "9de2d7ab-d1d8-420d-a7f9-ebef41ce14ba",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6eeed330-9ec3-4598-b1f1-4a67a5086dbe"
        },
        "item": {
          "id": "ab7ea2f2-e998-4b48-955c-0b1874af9e50",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab4288af-d002-4e03-a835-7805a22043da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a6ab67-f785-4139-b036-4bed9a214eea",
        "cursor": {
          "ref": "8bc8cdf7-1805-4389-8d87-428d4ee6cd63",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2e90a368-31e6-4a5e-b74b-f62fb861b167"
        },
        "item": {
          "id": "60a6ab67-f785-4139-b036-4bed9a214eea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37e4b95e-bcc5-4e83-9ccb-17ccd795eec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2bae3c-e5bc-4755-a1f1-550e474e099c",
        "cursor": {
          "ref": "0f489f4e-1f57-4856-8716-3bfac4983829",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fbbd1c46-ee9b-4d23-80fb-57c9e90e1846"
        },
        "item": {
          "id": "9e2bae3c-e5bc-4755-a1f1-550e474e099c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "be0b1537-7914-46bc-9b96-4e6392e6f35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f841dad-0c90-47fc-94d2-4cc97434191a",
        "cursor": {
          "ref": "38b648f2-a4e3-40d9-ae3a-01f7095d7d0e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dee8c229-41e0-4a22-b80a-93078cb4ac34"
        },
        "item": {
          "id": "1f841dad-0c90-47fc-94d2-4cc97434191a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d278c49a-e529-4324-a0bd-8345f08059a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e3245-1186-4678-950f-60aee5b5e5e4",
        "cursor": {
          "ref": "241da972-12f7-43e4-980e-f153f2160536",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fae44c98-1721-45b1-8b1e-476ff080554d"
        },
        "item": {
          "id": "716e3245-1186-4678-950f-60aee5b5e5e4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6c9e2313-e929-47ff-af82-aded3e25e401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a9cb2f-1eab-48ce-9a15-7197f5fe1756",
        "cursor": {
          "ref": "4e9c2802-06e2-4c12-87ce-65c4b09e6794",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c8106045-83c1-49d6-a3eb-2cd53a0b0c0d"
        },
        "item": {
          "id": "58a9cb2f-1eab-48ce-9a15-7197f5fe1756",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d1c00e10-872b-49f4-b2c7-75ab32aebcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7150f8-b5b7-4176-ba60-6dcc58d065cf",
        "cursor": {
          "ref": "b10989a9-deb6-4cf8-b1b1-252e503dd409",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c34e8a3-f6f0-454b-a755-2c4d798773a0"
        },
        "item": {
          "id": "ae7150f8-b5b7-4176-ba60-6dcc58d065cf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f9a70169-cbf8-4b32-8c56-a655803fd758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7db570-3691-43c0-a638-633e003bfc5c",
        "cursor": {
          "ref": "de5a1fcd-7f66-48b4-83e5-bbe1a093bf55",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c495fbd2-9da6-4d7c-a9b3-5199a0e62034"
        },
        "item": {
          "id": "7d7db570-3691-43c0-a638-633e003bfc5c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "771ab51c-91cf-4c9e-81d4-8205c9a63e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295fed38-a557-4799-9f53-d74afaa5c9f0",
        "cursor": {
          "ref": "3f8c04f3-9c37-486c-a044-c7c76d2f0bf6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b609b251-9f79-49a4-9c7c-f40f3cb92755"
        },
        "item": {
          "id": "295fed38-a557-4799-9f53-d74afaa5c9f0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ad625b11-9756-463c-9b5b-b7e9064b8729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7188a9cc-b181-4d64-a492-bcd63535a8eb",
        "cursor": {
          "ref": "2e9ef91e-1748-49e6-831a-69d4d07d9e5e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ec65cd48-406a-461a-a452-3b0d74bce86a"
        },
        "item": {
          "id": "7188a9cc-b181-4d64-a492-bcd63535a8eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "015f3f87-dafa-4a48-b8b4-df667adb4146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2626a6-0b15-4482-8553-6c07829ccf69",
        "cursor": {
          "ref": "91726ab9-f453-47b3-9be2-1b7f3f849f52",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cc4ffd23-8a07-4aca-bb0d-742de686af92"
        },
        "item": {
          "id": "7e2626a6-0b15-4482-8553-6c07829ccf69",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03be5b73-cc90-42f5-a04d-9223230d8f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18d3c14-98fa-4f52-be68-6b79a64d6c0a",
        "cursor": {
          "ref": "ce78e131-a075-4941-a75c-db75b71dcbfa",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "535a357a-b4f4-4531-a791-e18e313b5d39"
        },
        "item": {
          "id": "f18d3c14-98fa-4f52-be68-6b79a64d6c0a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5d02d84f-7a0c-439e-931b-8f40ec3dc925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5ef5e-a9b3-4181-9d20-a60fa3111cb5",
        "cursor": {
          "ref": "99725c19-2827-4640-850d-10704b7dbca3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6c2e344d-bf99-4759-ada6-f4292a94958d"
        },
        "item": {
          "id": "fdd5ef5e-a9b3-4181-9d20-a60fa3111cb5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b1efe641-d37b-45d5-8ed1-a33693d53fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049ba4ed-d8c0-4def-8f07-2b2381ab4461",
        "cursor": {
          "ref": "3c7213d2-0203-4ef0-a948-178188885d7e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "10b210d3-e839-4a0a-bcd2-b3347ec135e5"
        },
        "item": {
          "id": "049ba4ed-d8c0-4def-8f07-2b2381ab4461",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "24d26097-135c-4277-b5cd-9d141d8299ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da2f9b-b281-4e11-82d3-d0064efe41fb",
        "cursor": {
          "ref": "6d4447cd-e91f-4dd1-9d0c-4f78f56f670e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b355480a-b1bb-4eac-90a5-b2776eefd5ce"
        },
        "item": {
          "id": "26da2f9b-b281-4e11-82d3-d0064efe41fb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "784e2a90-a348-4fa4-8b22-f5e79d9d8d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b15bdd0-b681-4fdf-9abb-329edb760430",
        "cursor": {
          "ref": "9bca849c-0296-4bd3-92ba-a7b975db97df",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3639dd9e-c7de-4539-89bf-8f2c51689397"
        },
        "item": {
          "id": "6b15bdd0-b681-4fdf-9abb-329edb760430",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7e2b3a75-7369-4b0c-a6b3-2275b1662980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cdb576-0031-4307-a6ff-8eff57e662ef",
        "cursor": {
          "ref": "f2add2d8-f2f9-40dc-bec5-1e853d9c4501",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e7a82220-34ce-43f4-81ac-b81853f6920a"
        },
        "item": {
          "id": "21cdb576-0031-4307-a6ff-8eff57e662ef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "59f06d16-0b49-473c-b83b-5e5f3bea34f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e8aaaa-58b1-4ea3-b9d7-da22985cacb6",
        "cursor": {
          "ref": "e68d015b-40ff-4fd2-9ab7-229d6e1b7b70",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5134bea3-67b4-4dd1-8239-608c5e3d9a79"
        },
        "item": {
          "id": "e6e8aaaa-58b1-4ea3-b9d7-da22985cacb6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "03c50833-68b5-418c-80ad-fb292d22a48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217e4724-8c11-4835-a58f-54ccd4f8dcf4",
        "cursor": {
          "ref": "adff5230-328b-46f4-94f1-519be62ede63",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "174952e9-65b4-4928-814f-42d4fb44a4eb"
        },
        "item": {
          "id": "217e4724-8c11-4835-a58f-54ccd4f8dcf4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ee6a4210-1a70-4f38-99bd-0e762ba1a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31192d61-ca55-45da-b15b-469a1e811b2d",
        "cursor": {
          "ref": "29dfa4b0-794c-43c9-879c-206a2458cc58",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be1701c6-fb45-4ff9-a2e0-faf6996ff849"
        },
        "item": {
          "id": "31192d61-ca55-45da-b15b-469a1e811b2d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "337be02b-8e43-4f15-9069-2f105c76eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbc034e-e77c-498b-a57c-cb7cdb801f8b",
        "cursor": {
          "ref": "b892e799-feac-45e7-a385-3a3fcce8a39f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c77c8feb-cc99-4011-b523-94cdd9bd0c92"
        },
        "item": {
          "id": "4dbc034e-e77c-498b-a57c-cb7cdb801f8b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b9277b7e-9251-4b49-b02f-0afe0acf2667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35272532-b509-4d98-a2d8-31c3f8167612",
        "cursor": {
          "ref": "ff59117d-f125-468d-97ae-f74e3955d26f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "60208a83-4efb-44e8-8ef3-2d3de4210e9e"
        },
        "item": {
          "id": "35272532-b509-4d98-a2d8-31c3f8167612",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a8d4c30d-3875-4fcc-b365-d95a359b1e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca906cc-357f-4483-95bc-c089029b1393",
        "cursor": {
          "ref": "4c9df4a7-b4e8-415a-af98-545adfb1b2fc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1455542c-fe78-468a-bc33-3b2283e58ab4"
        },
        "item": {
          "id": "5ca906cc-357f-4483-95bc-c089029b1393",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7d9d5fc5-5bb9-4a57-8bcb-29b13b4c34f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b3057-9fb2-435f-8e1f-28fd6d0e3031",
        "cursor": {
          "ref": "228a8499-ddc3-4f84-b281-3f6abacd9918",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eaecdaa2-062d-4ee3-a5fb-a6630778855a"
        },
        "item": {
          "id": "592b3057-9fb2-435f-8e1f-28fd6d0e3031",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "205e50e5-c019-453c-a9d3-df91399da528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc1919a-d1c6-4fe4-9735-7f1505ad614a",
        "cursor": {
          "ref": "be549699-9d65-40c0-8881-5288b885c57b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "90c4ef6d-67e5-43a8-80e2-96d6965bff9e"
        },
        "item": {
          "id": "7cc1919a-d1c6-4fe4-9735-7f1505ad614a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3c9555cb-0fbb-4bd6-8423-80f6b5f72d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7b6450-6c9a-4a16-a871-af7cf6df356f",
        "cursor": {
          "ref": "703ff84b-f287-437e-93d9-345b6314cfaf",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cb4ebd8d-a472-4869-99da-c8bc804a0467"
        },
        "item": {
          "id": "7e7b6450-6c9a-4a16-a871-af7cf6df356f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "346a54ef-2cf9-491d-b381-8c7da6f8299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c8bf1d-fbba-4dd6-9bb3-269b97d5108c",
        "cursor": {
          "ref": "175613f6-217a-4485-aa65-da5274460b17",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f46759d9-ca18-453e-b558-7742525b9af9"
        },
        "item": {
          "id": "b6c8bf1d-fbba-4dd6-9bb3-269b97d5108c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c4da1d60-24f4-49d1-9414-4ca45cbbf88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71720015-68fb-47fb-9103-95a3c6271b9b",
        "cursor": {
          "ref": "aa93825c-280e-44ec-9893-c50cd0d3666e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a191ea2e-279c-4692-b085-d56e9f9f5205"
        },
        "item": {
          "id": "71720015-68fb-47fb-9103-95a3c6271b9b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32fc3fb6-46ac-4f96-a1f2-eac3581dae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f8b9d-05b7-46bb-a27c-b9176cb6c1bb",
        "cursor": {
          "ref": "48a0dfad-c0d3-4d46-857e-ed39cc908882",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9d847c01-39cc-44d8-8e57-902fd5004ea7"
        },
        "item": {
          "id": "7e5f8b9d-05b7-46bb-a27c-b9176cb6c1bb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f0945bb0-2b1b-4c9f-b7de-c5c02878a199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26947ff0-da12-4ef9-ac6a-43e67f9cd24c",
        "cursor": {
          "ref": "72038a98-49c9-4240-8346-435e586b6d3d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3ac90427-d127-44c4-a58d-b41badf09a0c"
        },
        "item": {
          "id": "26947ff0-da12-4ef9-ac6a-43e67f9cd24c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c26ba388-56ea-4d49-84f4-66aa9a260d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1e9439-eb80-453a-b050-ef7796135ebf",
        "cursor": {
          "ref": "1c29496f-787d-44c8-bb55-5f0397279291",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fb9136a0-bcf6-45b5-b8f4-c7d2529dac25"
        },
        "item": {
          "id": "9a1e9439-eb80-453a-b050-ef7796135ebf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fe3577d7-c1ad-4c95-9eb4-9c60dd7ba0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e73d2f-f273-4d1d-969c-80a7b969c8ba",
        "cursor": {
          "ref": "6838e5b8-39ca-4293-b8a9-46dcd1bd0be2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4a3a4a4c-6c2b-4937-8568-a1814accb9b1"
        },
        "item": {
          "id": "33e73d2f-f273-4d1d-969c-80a7b969c8ba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2634789f-0fab-45f3-b1be-cddfa524abee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee349466-77fa-4d0f-84f3-e2ed411da467",
        "cursor": {
          "ref": "573410fb-c76e-4625-9f59-fcc43595bd05",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e75b9b0a-896b-4527-a881-037a570c5b94"
        },
        "item": {
          "id": "ee349466-77fa-4d0f-84f3-e2ed411da467",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc7d3de3-e92d-4d31-b2a9-0ac4a969613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef14146-015c-437d-9a6f-13feee41b886",
        "cursor": {
          "ref": "8ec2b27e-12f1-4229-a920-b46a5a121e08",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "09f3c15b-5ed7-4789-9be2-a06a868f891b"
        },
        "item": {
          "id": "cef14146-015c-437d-9a6f-13feee41b886",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ee1d0e2b-8e12-416f-8eb8-46c5839922ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df5280a-7de1-4a14-bca3-8664d30eab17",
        "cursor": {
          "ref": "90ca707e-85b4-43bf-9e12-638ba1df6304",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7723fcf7-cd11-4770-a4c3-90cae6e4f3ab"
        },
        "item": {
          "id": "9df5280a-7de1-4a14-bca3-8664d30eab17",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "70cec957-fe5f-4027-a3f5-de1abf9dced4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc67602-e3f4-4e56-8307-22548d676b17",
        "cursor": {
          "ref": "17c2afd8-fa1d-40e7-9501-fd6bf5df75f3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c583fe81-65cb-4331-aa9b-fba956c99ccd"
        },
        "item": {
          "id": "8bc67602-e3f4-4e56-8307-22548d676b17",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f9f58458-9511-49c0-b68b-fb49097dbe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4646d278-eb7b-45e9-8ae1-70e2d8831637",
        "cursor": {
          "ref": "10b79e5c-b77a-4c31-90a1-c0782c42b0f6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9750d146-8d8d-475a-9fbc-a10b39959778"
        },
        "item": {
          "id": "4646d278-eb7b-45e9-8ae1-70e2d8831637",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ed7b5908-e778-4b70-bcf1-32f262c975cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedfc40f-780e-44a0-bc29-9eda932ba642",
        "cursor": {
          "ref": "554ac2b5-1f31-4b73-9777-64510fd5dfcf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a3acd640-21ac-4729-9e44-0d63ab6dd39b"
        },
        "item": {
          "id": "bedfc40f-780e-44a0-bc29-9eda932ba642",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3ea74a7d-1bf8-4aaa-871c-124c2a79a9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1499ae41-b5ae-467e-9692-5351fc5a6c03",
        "cursor": {
          "ref": "098c17c5-4d10-4a68-9a8f-fac3c85d5a9c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5ef34588-63de-46c9-9cc1-159096653e75"
        },
        "item": {
          "id": "1499ae41-b5ae-467e-9692-5351fc5a6c03",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "229847c7-10c0-4696-a24f-6635f39ca539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b10cfe-15fb-4660-85f5-18d1f7974acd",
        "cursor": {
          "ref": "0bc92769-05a6-4d9e-8816-9cf711c7adc9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2fa922ea-a544-4bef-956c-2aad3b26b953"
        },
        "item": {
          "id": "67b10cfe-15fb-4660-85f5-18d1f7974acd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7bff8f0a-9d2e-41cf-ade4-3850552653ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b8124e-49dd-4117-a919-95b116f8960f",
        "cursor": {
          "ref": "ea6f0a68-83e1-4af3-8a10-999b7a8ff02b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c784d944-7913-48d0-98fa-f9a4a4474453"
        },
        "item": {
          "id": "a8b8124e-49dd-4117-a919-95b116f8960f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f524ae68-6c15-4a3e-8d68-a6c7e79dbbfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad041b91-7538-4205-9ec5-bfca902cd61d",
        "cursor": {
          "ref": "d1491dd4-afc8-4fba-87bf-0412fe120c2a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "32774676-4cc3-45fc-8ebb-5885ee6b5ef5"
        },
        "item": {
          "id": "ad041b91-7538-4205-9ec5-bfca902cd61d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d097f1ad-86e8-4d05-a2f0-d83e72b90b79",
          "status": "OK",
          "code": 200,
          "responseTime": 1962,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c946f31b-d39b-4532-9423-6d824f9dd756",
        "cursor": {
          "ref": "bfe50a47-e2f0-4efd-aa22-d57740160224",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d890061a-bcd4-4187-a45b-b7bdb1e3e184"
        },
        "item": {
          "id": "c946f31b-d39b-4532-9423-6d824f9dd756",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6c8ea6ff-e2ef-4471-9795-8e9e7d3d0c57",
          "status": "OK",
          "code": 200,
          "responseTime": 3228,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b497da6-b549-41f1-a902-df4b5cb55305",
        "cursor": {
          "ref": "fc6ed40f-4622-4ed2-9a4a-705d4680e97c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "87fb66ec-1dc1-49aa-bd38-e0fa9b7d0994"
        },
        "item": {
          "id": "9b497da6-b549-41f1-a902-df4b5cb55305",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "053fea91-789e-4f40-9199-225d91c46439",
          "status": "OK",
          "code": 200,
          "responseTime": 3294,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8a2488-297c-4ab1-9764-7c2c32ab22ed",
        "cursor": {
          "ref": "ca82ac07-3deb-4224-a0de-f66d122de03d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0b6625f-0605-4b09-a089-f650d90115b5"
        },
        "item": {
          "id": "2e8a2488-297c-4ab1-9764-7c2c32ab22ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19e9b615-7416-4308-a012-569a7379a506",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8a2488-297c-4ab1-9764-7c2c32ab22ed",
        "cursor": {
          "ref": "ca82ac07-3deb-4224-a0de-f66d122de03d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0b6625f-0605-4b09-a089-f650d90115b5"
        },
        "item": {
          "id": "2e8a2488-297c-4ab1-9764-7c2c32ab22ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19e9b615-7416-4308-a012-569a7379a506",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df920cb-ca94-4533-ace9-47c5ee6b701d",
        "cursor": {
          "ref": "2dfab88c-d7a7-45a9-ab64-577cc023e323",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6aa774a7-a535-4e66-9920-a1c8aaa5b0e3"
        },
        "item": {
          "id": "9df920cb-ca94-4533-ace9-47c5ee6b701d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f4092f01-9cc9-4786-ab61-a3ffb905c7f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da093af4-97da-43e4-b174-8c53e870dd20",
        "cursor": {
          "ref": "e277ad14-2da8-4cb9-bcbc-c992560f86db",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "13a27e4d-c4a0-4985-9dda-f70cb231ce09"
        },
        "item": {
          "id": "da093af4-97da-43e4-b174-8c53e870dd20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b046af23-9a51-487f-bc02-82fec3495da0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}