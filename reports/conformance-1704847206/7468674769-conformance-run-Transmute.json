{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a574f7ec-b0d1-4469-b80b-68ce06635b2a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "634e9acb-fcba-488d-9c5d-2a14742089e4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f66f51d-f1d3-40a2-b757-328e95f2d0cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42a9b50c-c282-4d17-92dd-fc77bf6150d2"
                }
              }
            ]
          },
          {
            "id": "561d6703-f9d5-46d7-8941-eba642042924",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8de79409-b518-4fb3-bea2-38e07710210c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b74edf91-f8f6-4460-819d-d1a13ec2aeb8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2213d6cf-ce62-4286-9c1b-f0fb50ecce9d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "10ed946d-32e3-4396-bfdf-b60b140c8b60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6842f4e-d2e9-4479-b8e4-ecee964ddace",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac866302-f476-4d89-ae3a-ce09e9f36a40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73570f42-dc05-4022-934b-6b5797bec230"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "540ddf02-457f-48f3-9b39-db211b82b114",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b814a51c-5ca4-4402-b6ec-92cbf24d1992"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8026320-49fa-4315-91f9-8fcd08384eb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "840f5e5f-0e51-4bb8-adb8-f049a53eaf32"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87395254-484c-437c-96c2-3152dad9d423",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a72fa772-d9ab-4c90-a1a8-fde202c2f160"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0c7bf44-9b48-47d2-a82d-5dbac5dd5eff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1ad9108-cb67-4cf4-897b-fa9926e5ff21"
            }
          }
        ]
      },
      {
        "id": "08542953-a373-4ead-841b-cc1491da5ab2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cfd35c0d-0e86-4751-8efb-246f5c37f70d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09f4a618-f9c0-4c01-92f6-67ec5202f69f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "962871ae-2a2b-4c0b-845e-0d9344b40910",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e23a767-766f-48a9-bfca-ad32cb921fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc1acd81-8b94-4b4f-b761-f3dba3f41dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c2e5e4-6d0c-45f3-8f93-39d913ff675c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15796a00-6b41-45ab-8f35-f9ae51c9577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f96c0cb-47ad-497a-ab3c-a7ba3536f836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f222128c-f458-453d-8d96-4135fa3d04c2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8184512-5dd3-4b4d-98c8-29a2154d7ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "079a79c0-fe3b-4be9-b456-b026b110bbd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74d8f36f-c141-4266-9da5-2c86567bb71e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64df5706-3bdc-409f-b018-3b5726cd1a9e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7e86d0-3aa6-4627-ad57-05c77d2a478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "debff010-0113-4f39-89a5-66f8c1030ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fb5de2-5684-4c39-b75b-76aaa4589598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac9e9ab-2c04-4f50-b8ff-9bbe93893ffb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90393b53-4ec7-4747-9169-204f8a77bd0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28c94a26-55f1-497d-ad14-7bc6b8ddda01",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a39837ad-b503-4115-8b64-8e201466503a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7ee5521-73aa-4dd4-8ff3-ef0b6cb50c16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "427049e1-f3fb-4b76-9849-fd79570d2195",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d770bc6a-8211-4ae4-a423-edfebb4edcff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "748e93d9-f6ef-40b1-b949-db80e2458ed2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f03e172e-a041-468e-b90d-0d408cfc3eff"
            }
          }
        ]
      },
      {
        "id": "ee7f0377-1b5d-422a-bc32-d3b27fd029e1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fbbc0052-d767-4cb3-89b3-b5dc6af64900",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc61de91-ee2d-4ddb-b1ad-6ca3297023f6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ada35d60-9a1d-4c56-bdf3-98eddab5921b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd32c9ed-c4fb-41d6-a397-c89b0c8d51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acf7d02-2b4f-42d2-82a6-4569f445453e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa9f821-6b90-4237-840e-defba25478f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb0d0e5d-43ac-4c6b-9e30-543359d4b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fce74c-9ab5-47be-9c01-2cd827473302",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c3d5bf-6883-44f5-a476-a77abb171112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f45f1f-f683-40d2-b397-21c1e1af831c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134b3bb6-ce4f-41c0-93b6-e4dc0611e906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d869ff91-31c3-4b7f-99b6-60c3faf1ba11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146f9a6a-9c81-44ae-ac9d-f7d246cb32e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4858989-6b82-4628-b43d-308c0d928c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76670e03-d938-42ed-8b1b-48c8be74f179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bcf788-656f-47eb-87a6-62d17f71fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8e4e2d8-cfb3-42e5-9756-c33ccd3c8e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4905f3c3-f18b-4935-be61-5613d490db6f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379784be-b230-4f28-9cd6-5eac4c24639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f052517-fb53-4109-8998-934b061436c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d65f24-c918-4ea6-a294-2dbfbd6b207b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a455f6-effd-40ee-a68a-8a13edae8c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92911c9-ba82-470b-8c64-a20fcc0bf9df",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ddef27-52ae-43a8-9c61-bbafb57b59ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30ff503-4acb-4b2a-95c2-deea77aea094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5a128-986c-4e3e-a561-11853dc57459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05589b26-ffd6-4051-927d-496e143633f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccc33b6-da08-4f9a-b4d2-7dc666cefd4e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866084ef-5c20-4a5f-864c-5b19d3433c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e067e9-0737-47f0-9118-7eb8adee7bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe56d19-9f1e-4fd2-84c7-32a2ddde98fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59367b0-ab26-4f85-9611-80b6582f16a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00485f2d-a018-4280-b638-f71734fce755",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c334f7-7d62-45e0-81a7-098dedf830dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbc8140-1706-4479-9605-80f021a8753d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad13f8eb-8045-455e-9f06-e67bc987743a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b64dc69d-f1f4-4ace-a865-5f836244e28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faabb72a-c892-4317-a36f-b3ceb19f046f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0878b1be-55a4-420d-ab63-684aed6f6f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d42613-feb8-4336-819a-3ddb5b358973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da406d56-72b5-4924-8199-efdb9d4f66af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18af54ab-d01f-4a11-b46e-7d3deb636a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1283ff-b86b-4583-ac6f-4488e09eda83",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7370e12b-27c7-4fdd-941f-f689c051dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81475653-f54a-4595-bb54-bc0f0640d6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f631ba8b-d505-4518-b806-49d8977682f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af257d2-a151-4215-89a4-bb0a58a4b0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45cc267-ad7c-46b8-9a60-b5efc75344e4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fe43f0-8c99-4737-8d93-48c84cbe8df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5035e706-5da1-484a-97a8-8d1f51db5f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3c7b78-7aef-47a3-a511-5be0549b9d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36d24641-f79e-4129-ac2e-b409dd4ef8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c8106-2293-4160-bf01-dc874d39cabe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2016768-752c-491d-974f-cfa0dcadd2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c45e7d3-77dd-476e-ad8e-381781eae56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be14562-ddb9-41b0-bd5a-72b3ba6e5712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbef17fe-c7c4-415c-ba06-9dc1d3ada60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4bb421-cef2-472d-aa1a-3f3a7a06d7d1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e3347b-f44b-49e6-9ef0-cb91dcf3b0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5a59cf-0da1-4102-8431-56b76ec2beb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df3346e-ff7d-47d3-bdcb-eebea0040a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa36fc1-9add-4b97-976e-268890cc3aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8f5edc-0d74-49ba-ba8c-7f2fb2bd62c5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9445ab5-2a1f-4bb3-9938-84777861a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd40147-7b85-4f1d-bf8b-ddfef992b76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1f8a11-1c0a-4926-92fd-7a7a5371d7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5092c503-c37e-4feb-9a1a-a1b64c17520b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a18de7-7923-476d-aa11-42b0a79df662",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9537185c-0965-4c59-9e06-2b423d811460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baba2228-4758-447e-8d65-5fc5947b6bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e731129-6462-4d91-ba8c-93c927efb128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee239e95-daf8-4301-8460-14562c5ccb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2934c34-78b8-4791-8368-a4c0066378be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f187ae75-6308-4ca1-bd80-c311ce97ead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7efbe64-7573-4ba9-9481-0747da339bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde867f3-7b06-4216-98e4-4795bce36d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3ad1f80-46b3-48a4-8406-7a9dc3d9f975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0f28d7-96f0-46b4-8b7d-da7a1902a221",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db31862e-b2ac-420f-b510-72d8ae50946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9926b0f-962e-498c-b733-366c03ce5ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e4d3f1-b38e-4f9b-8a4e-d8757652150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415061af-b713-45eb-af6b-85bfe1f421de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe857722-07fa-44fe-87f9-ef37cc693604",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de3bcdb-1368-45dc-bc6b-fefc25bc9f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1684f7d-c6f0-4af8-a48c-77a902dec361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb5d5b-7fcb-4e04-88c5-f17d282f4b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56816fcb-5baa-4c4c-b9f4-84b2cba12202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e997919a-a884-42db-82a9-88a69027328f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521dac5c-1686-40d4-a90a-36cb048bc82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2a3a8e-3817-4c89-a1e7-2662bae339dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18968bb-fd74-4372-94d5-32182d52855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f67367c6-3295-4107-a680-0de1afa37d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d5e1f-37eb-4ba4-8d32-2579e8b5c2ea",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee797e9b-4c9d-4d3b-9a52-329ac74c3b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c12c59-2c3c-4951-8f6f-bb758e86cb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c244b8ef-2f34-4f67-9b43-9f573d234d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ea1390-3833-4aa3-884c-a72eaa85ec5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8cc6a7-92a7-467f-8814-ff739ebf60d9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa53a93-ea1e-4d4e-8581-fbc6e0e2f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7874dcd3-79f8-4b46-bbd4-f4070264527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e503875-e10a-471e-bcdc-4e1ed73c7f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed339b57-89a7-4ef5-9dfd-ca8a4b332b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2723b5a1-be91-426b-9d3b-471cb65ae7cb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690d37ac-e804-45b1-b10f-228367be7362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06319199-db02-40b2-918b-30a2916aa39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5353ea4-f123-4477-b5ce-f9c1bb3b7001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6eee5d-1eaa-4d6c-9696-2194063fbe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed6262f-1d7b-440f-ac41-d5e262af9b7a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0a5822-aba1-4a2d-8d9b-a1b407fa3c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca1484d-17f1-49f5-bfff-ff4819ff4061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0556ca-6217-4a05-86be-be448015b47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716b25dc-b1db-497e-893e-ffc3b95ddc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501748c1-3a44-483f-ba13-b17407f527b4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b8815c-cb5f-4251-9ca7-d2e2a9af4a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259d6f69-5af3-4dc1-aa79-50cbf7aaa598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268f4fe8-39f1-4388-9943-335736347b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2924ecc-ae69-421e-9582-0dedf00c0bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2339ba20-7815-44ed-808f-5427b4b5f5a9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f6a43b-b707-4318-bb19-17c710c4f840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955d194b-0f04-4f78-b1c6-a20b1c74bf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bac98d2-8011-4c59-8c0e-9fcc2526d67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c390e5-3970-4bb1-bcbc-5ef56631e250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed04f153-fc61-456b-b764-e38b6fc6014a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ab4e78-8a89-4368-82bc-aed2dd5766cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64acdc03-30dd-43e7-89c4-ae595c8a25e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e5faf0-b4f8-44d0-9d9f-1105b937f3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ce3284-f198-46d4-bedf-d34ffc42c385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bf9f82-112a-4910-8c0c-ecc3f998d24f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302d7df4-f701-469d-80a8-23bcc855c70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76d4f82-0061-463b-8b73-48793cbd1670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb81e75f-32cd-48d6-9134-dde9b150cd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4636ec3e-e211-403b-939b-50e978e5521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632fdc07-4631-4d2e-b97d-b898a0d7ee5c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2ed62f-9517-4432-b2c4-c0b34554dd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca6daa6-a6fd-4c2a-ad3e-0c12ba24a1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809c4a1-fed7-4d1a-bd06-518aa3594f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac84668e-f096-4c50-870f-6c6ab822322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dcd54f-a88d-4f73-a287-647bba440b37",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbf5117-a8ad-428d-8f89-3d0e8e3e34b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427fd53d-d158-4c75-95f7-7c0ee29a45ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84de3f2-90ad-4739-b2f2-b4605a15a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b41e113-cc7d-4482-a88a-f9a3dcacdb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b093afd-6672-444b-b458-e35a2adca737",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f50978-6e91-444a-9501-7972cfc8276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230c29e1-2fdd-4dcf-86e4-c0a788025f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e312e49-eb20-41fd-a67d-9fb91f572dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88e8e2d-9b94-42e1-abde-6116ac506afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97480f7-6d92-4519-9ef7-3a2942af0cc4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c28aef-dad9-4b27-b78a-5dd887eeaa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20e8f77-d656-4e99-a4ea-1fac59c0432e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f193d82-7313-4382-b0c7-476953eb87c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c44680-7dda-4595-b6e5-0c2351987dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab8b2b7-79b2-4775-9c13-32ea468432e0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06d77fa-f96a-48e6-a156-b8bc4ef47896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c36296b-bbdc-4aad-9ff0-e9cfe84105d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed9e0e3-c172-4b88-9267-e9faaa51c79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d84847cc-0a09-46d3-b8e0-fc21db8ed4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b868fa13-7a6c-400a-b798-ebb31d5cced6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33cc594-f649-43e7-ab9f-798929d74c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf96c74-ed44-4e4d-9d39-226c312ec5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46405da5-0443-4517-b32c-ac07c800f672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d9355f-d9b8-434e-8815-43b965005d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ca2ea-ff28-4b9c-8c7f-e0cb3536ae6b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a906a1b8-877a-488a-9d82-191955202532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304c0880-6ccc-4055-aab7-e505724edffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd3f8d0-404f-49a5-9a76-5e13bbb25be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb16ca6e-3709-4854-a1ff-dc6e09daedf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c04ec47-8c7e-4778-8d7d-43f66c18b0ec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4646e42-05eb-4f01-aa37-90627549547d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443b80a0-4ca2-4df6-888f-6c7e2d02f868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab5f4ba-a2ab-4406-b65a-737f7b571120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5101f2-40f8-45f1-bd1a-25eca5a63ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3085f4-496f-4413-b797-5e743c8059fc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504d45d5-97c4-4809-972e-48c349ced555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6ec8f9-7c69-4e47-a395-26ca0926d0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146e74cd-94ab-49e3-af48-2a3a9cca8f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "07dbe0d6-ba72-4f46-be1c-edb838ffce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6e5a2a-496d-4e01-a40c-a919c12f110c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d09c93-71da-4582-9581-04965945aca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de834027-a93c-4837-b749-85249c2d5846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556e11ec-d4ce-42cc-9a62-6d93214719a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b02657c0-2943-40df-91e1-ddb8a9984f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13668200-5295-4571-8bad-5e73c5a0d30a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50450a26-d4c5-4a1c-b1ab-3e659e0e8997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d3d08b-8378-4f0c-aa4b-d97362a57316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a272982-1899-430d-a272-a0b42f7fb548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "621f1047-46c9-4a28-8971-1f722b790b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c271b7-35be-4608-88d0-fea83c723881",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc286eea-d962-4bdb-b00c-f85cd6bcf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08152be-3242-43dc-b44b-487ef1e5284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871a460c-7f20-4023-978f-740698490dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "361cf071-f6f0-4557-8d3d-de958e92fa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47bfa45-98e2-4609-aea0-663416e62832",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758cb807-4edc-48e9-a687-0aa8f4d4d37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa23234-c28a-4b38-8578-3bd4a075e3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b01b38-ef88-415d-9c43-8624e8fdcc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d86fb391-88c7-4d4a-abbf-69d435807c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1ea65b-90b9-4aff-9189-33c40633f1ca",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58df7d3f-402d-4752-b316-97920773d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359856d0-2772-4d66-8654-578c7882d7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786ed94b-9033-44ec-9f99-a26904b67c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9abe42d-4cca-4597-835d-8596e8dcbfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b06ade-34a1-4721-8920-2399f4144b84",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1956c30-fc80-4ea6-84b2-c2e432eba96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246182f7-be28-41e3-b323-583430309d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaafb5a-96ba-41b0-902b-fb8800dd8e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "997e4e75-143b-4f67-9d3f-d9c2ebaceef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331fdd1d-222f-4c2a-92ee-d19b68582edf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2dd466-1c64-47e8-a07d-ef5ae5638277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f7a588-2062-46af-8e21-663fb49704b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe3bffd-cc2d-44fe-ad83-53e14be55a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7aff0997-9293-4954-837f-50edb2801a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa91d153-c4b0-4853-b2ac-5c9c2b67245f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd7aae7-5cce-43b9-98a5-40c873eb228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e5a826-0359-4644-ac05-aee8684ebb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056a8630-5a18-477f-a8f4-6fa58be7d524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8211a1e4-6372-4169-bf19-63f329924253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3610cc12-1784-4a6e-b7de-1a41cfc6aa4c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d144585-e2e0-40d5-9172-41848112f4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1abb63c-a300-445e-ab82-b8ca20defc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5027946-38a8-49b9-9c77-87d1e5e68e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6de2a34-b711-4397-bbd6-5e943d0e86b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aef26d-9d64-4c0d-984c-65134c9b0596",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f463fa33-a375-4fa8-80f6-6423a98dd586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d8bd69-fdee-40d1-9c2d-955090640c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2dd64c-d6f3-4251-bbac-547fcad5a5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "694a197e-1434-4f87-a4ba-63de7270e3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78aa1d58-bf82-426f-bfa4-19f20e656721",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3751d8d-61b7-4c13-bb8a-4b7aed990bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da96885-55f2-4567-9193-0f15af6a519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f452705-f22b-4686-a089-987c772bb6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49692d1-66a9-4474-a297-82473ac68909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec3668-dc0a-4172-b354-5e9107291d35",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fbbf43-2a72-423e-bb05-000fdaf1bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca23aaca-99f4-44ef-8583-73347b9b5687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717dd244-0200-4615-b681-2d181904b453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfda52f-9197-48ce-ac26-f369d1646c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99903567-0ac2-4a7d-ab95-241c57c975d0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfff0c8-39ba-47e5-a388-a154d129fa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37137ae-f308-4fa5-8828-c209d5521530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3959ed-20fb-44d1-b6a7-c7995217bc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2a0adf-c229-470c-a17c-c10f48562e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eab2f43-b0ce-4a5c-9fbf-b9beec139133",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe75795-edb8-4f8d-8f98-a98342f64ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f3787d-9071-45c4-adf5-ddeeb0fba5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193c167-fc3c-4090-8fea-4d45d248eac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3115a2-92cb-434c-b8a8-5c9102e5cc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0678bf-aab2-4c92-b7a7-d13e877997fa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac5daa-9bee-41b5-916e-0d050241b6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fe4061-d658-4b25-abd5-3d8d3d3a9392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899d3af1-00e2-4c86-9730-f80ff385dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "316aeffc-a8a7-49ab-b666-0b812c9032e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683b6b07-96ec-4b24-8c54-c1b344c8bc3c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07470ff3-e401-4284-841e-bd6146673d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a896486b-84a7-4835-aa5f-71adb87fc683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10eb691-6733-4c4a-a214-9029c182cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "54535534-9dbc-4861-bade-37eade8163e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac2ee0a-2453-47f6-b14f-dfff04cbb194",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdb16b1-1e76-4b5a-abbe-3eb2d6d7fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22de1c5-7b40-439e-9924-90bb6ac257cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234d5439-ea65-4fec-af67-cf60db134333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e065ce23-4d25-49d7-8dc2-d5f823bcff1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aa2cea-9219-4d16-9911-ac7bbb852b93",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599fdcd3-6efb-4348-b16b-f5b23fedefa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa454fbf-1a3d-451c-8759-2c89d3171c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266aa459-4c0b-4ea5-8963-9917f20d7d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d8aa55-21af-40ae-a1e5-e2a980064191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec46460b-25a8-4505-8185-6641d490b4ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c7c75b-dc5c-4c81-8cee-ad3aade32bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf861387-0585-4a16-8ea0-f297f175b3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b9d638-c71c-4de3-a715-bb96f364678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9471cd3-2972-4d70-8c95-c330c25112dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f762dee3-2c24-42b0-b750-37ad8fe715b3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7b904a-266a-4768-a74f-3eb00ad8cee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac60394-2c24-4d51-9a59-e767f4aaf08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000f01bc-2e56-491f-8c8a-e17c64418b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f84c55-94e9-47ae-b4e1-1ee5d532c2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5c4241-0979-4654-9a22-b790fc3b1e4d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e2077-fc2c-4e1d-b6bb-a37ec8c68f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0255fb92-10eb-41c5-af45-37920ca3fac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe004387-5782-4cef-a799-c84cad7acbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "699747ac-67d6-464a-b4bf-eca1e7a5cd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a060cd64-660f-45da-a625-476157e1ab13",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0f344-fedd-49f2-a0f1-eaba36083631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c408e54b-8b41-4142-a09e-4afe2c6f9f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56de022b-5c1b-4175-9c5e-5ea0206928ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39929c67-7aa1-4b4d-af42-7b9e63bdb865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdadea2-ebd6-4a31-b59f-1cf91542a435",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e730d315-dce6-43e4-aeee-05c5990cd19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae3a813-cc23-4b15-85eb-ddba77eb3e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b3f769-a434-4951-8a91-67a94f1277e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f9f2ea-b427-4240-a082-6b2808a21733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435eaefb-6624-4b82-aac8-30071b4c773a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e88b95b-520c-4d4f-b47f-c3f8314534c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3926ddb0-360f-45d0-8dd2-f0459032cb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acfca8e-5d84-4dac-91cb-9aa227d6dccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "795115c6-0a1e-42d9-a59f-32839dec3cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4ac0a8-f473-4570-b624-541d01c22ed3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99a32e4-99a1-4331-9a46-2821edf42346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2ff4cf-56d5-481a-8d91-a47fe595646d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb00707-b566-44c1-a197-f317e03eb253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58bef039-06eb-4c69-9938-ae3c0f27808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6bf0a6-490b-406a-9edf-cecb1a597fa4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb651e0b-4e19-48ef-a4ea-927c6afee853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6423bd0b-4e02-41cd-be7e-18668376b076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858b47e9-8d90-45c9-a405-6bc87d3b83b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae49e0e-1a15-4412-a01d-40cf6f970b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb47af5-6ce7-4c63-aa54-295ebeba6918",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2468cca1-adca-4432-8a7f-91a6fb543618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3f80cd-1750-4480-baf4-6b7cbf0ae74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce38d25-f763-4b95-a148-c0e8544cf728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe80085-1ed3-44b4-a367-c0de7f3cf5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27a5eb5-9857-4d41-bca8-1e83edaa4afe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9694f8b4-2b61-41cb-9747-414547d440f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2f363a-0de2-4399-b60f-a6fae24c1534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f9a309-e098-44a2-bb4d-f735d8e44995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21d27a9-3b34-46a2-b859-db32d6667789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26330b5f-9137-4de4-ab9b-c3589b51d715",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9e5a5-99d8-49a3-b26c-deb55e8ca439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc265342-4ba7-4f7d-9779-a74cf8622c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3974ce70-4794-46f0-bead-8412d64958c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac960224-1bce-4cb8-8444-984de9d7c6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251298d2-07c4-4490-b9f8-462c42c19af1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02b61d-e4eb-4587-9e18-e6e38e52878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9078a8e-d4c8-4ceb-aed6-307f6b9b73c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccaa25c-a496-4866-8176-d82960e7e3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0763fd-d7fd-4f17-b569-181527f21909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4353f8e1-7006-408b-b28b-abcb99abe1b3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c172cbf2-0a76-4a65-8852-6ddc07e3ef5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a03e478-ed8f-4bfa-9a67-fff0a88364e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e38a08-7357-45dc-a3ab-95bbab83e87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5693a85c-2d52-4033-8ad5-3389d86971d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09f8f31-b192-4f08-9e35-d74e566c2a57",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a441b0d2-d92e-4db6-9d8d-618fb4431b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10b8bb0-df3a-4515-aff8-dbf4181d8fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7722fac-049f-48be-beaa-886af16066cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21584f1e-f0ef-448f-9018-f80d0a595858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2079a1c8-83e7-4d2f-9197-0cca2f7ccc20",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303c298c-c6d3-4179-a5c1-2fcaca20f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9577b2db-786a-4d48-8c15-36a33e5bf152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aed0d98-93b4-4bda-a094-a70b7ceaf9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "495a2f55-facc-4d95-b9cd-c2875312d2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a609860-9edc-41b0-8ea2-fbd9a34545db",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f9bdd9-f36e-4e01-b0b8-6731c5a99fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d77a93a-2ea8-44c7-b9f1-a1b6a7193e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8c476d-c605-4bbf-8b13-09e525254992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad17f7ff-8b92-4f7c-b487-5c509f5dd1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c315b3b-4f1e-49e6-9efc-b853fc3bd566",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e5d80b-d946-41c7-9b8a-6f4cda9b1f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a7a1ac-c641-4673-8dc8-df02592948bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cbcd2c-8ea8-4ad6-b611-8b5e6a68a665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4fe444-e98d-4d89-b708-ef87312cfff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfec2bc7-be48-4572-a24b-bf9cd79dbfed",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd282919-3fb5-4bc1-9c57-dc055e920689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89687316-d43b-496d-8fdb-bbdebc7d3e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b73b716-3112-4516-a384-8d53c663346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8afcd4e-350c-432f-a961-9fcb41fec291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef67ff38-3af9-4f85-adb6-8271c78dfad4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8865fd14-c77c-4700-99eb-11f28b024da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4235d1f-5dc2-4093-ad6b-0e0b3a0e6f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aa3fc0-9eb1-458b-a845-0354af089a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2ca926-66c6-46d1-89d7-cc1a04822ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cee034d-4625-4799-a2d7-96125af8a8ea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89949129-29f4-408d-87ea-d30ea4ad3990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daa2e82-ff72-4d68-859b-8df812c82039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3081e7c-c49b-4215-97c4-a411b4e63b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2693b9b1-47cf-4672-b644-c206b25271eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2bbfd0-5b40-449e-89eb-d205ebab1758",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af390f7a-6548-4a6b-894b-c0405f974fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a9b4f4-d63c-4a9c-91ae-7bc539b9d971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ad7e75-dd32-4a0b-acdc-396dd5220e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5558abd-db9d-49bc-8aee-8fd5aa286a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b74b18-e21d-4977-8d41-e2c5917a6668",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0946a82b-def5-41df-94bc-597c7f1414dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1452813a-c8a1-461d-91e0-30f89803bd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388bb888-71ca-4d21-ab2d-b7f537ad8b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba203e6-0caf-4a26-a276-052dc4a23615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2de439-7f3b-4700-a414-285639c3ee8a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2533520a-2d5d-434f-8f0b-d0ceb9beda39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aabf12-a11f-4fc3-866b-06a4c2ddd2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a1a793-d19f-4fe1-a53d-6b762db0f944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22bfdac9-6ede-4fc0-b587-6435de373784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e209947c-d0f6-417d-b6af-bd6658683b46",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcba41e-1023-42d7-a239-57ca09ab7cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb312e72-bd2f-46eb-92d5-a7880799a0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c165e759-e574-4f9d-98f1-de66e17a5c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfd98c3-482c-4354-a8dc-5944df101e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c9e653-ba35-4679-a0c0-8cb6d31dd7ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd55fa3a-54d5-400b-b82c-f3f0e6a93ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2267fc65-7560-40ab-a3ed-0061ee3f8a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa45ae70-7905-468c-9187-ffbb01bb8ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9af340-4a4c-482d-b92a-839e6db95a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a34c04c-b542-4735-99a0-c7bee3fbd119",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706aff79-ad5f-418b-8b14-ff453a32e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1784b60-f783-4d32-b796-6cd8bc4928f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1f8e5d-4be0-479b-8d08-d61cee2e7ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b19331a-5562-4c7e-bb45-7195a57a5397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43828ce-ff2a-47fe-b5f1-ceab07554a82",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae54d3b-21ac-4e57-9175-faaf030a3889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb69846-04f7-4a6a-b470-a405f60b82a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87326586-c499-4d82-8da6-becdb451ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a338c7cb-66f7-4585-bd59-8d845b95488d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d0eea4-d2e3-4c73-ab97-d53f7a078f90",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9466a3c-af39-4f0c-b61d-0366286bb796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79be3187-e53b-4bbb-a4fe-bf1734cc3b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f4e608-0c51-4eab-a711-640cf96994a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f853fa77-7b3c-4dd4-99c6-bae06514af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8006e-7140-4781-8860-4d53a8db2938",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b050b-d71b-4b8b-b587-8bbeef237b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8c4cf4-cfbb-4df3-ab76-c2d97c540bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d1ef18-0ff7-4ab5-83dd-1d2ff87bdad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f20dfb0-6418-4ba1-a798-a96f14d0c7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258087af-4326-454f-a0a1-fde50b8be34c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa6368c-11b1-4620-a27f-20aaf8428bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c014088-323e-49f3-8075-3b6fb9b53f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8141aec1-ad72-42e3-8707-f6b9c43d6a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8c0be2-0f3d-4db3-8c08-38ef2a287907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb437e15-1b2b-47a8-9846-302fe68a619c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c97c4d-e7e4-4ee2-a290-86349eceae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d15284-98d9-42db-9bf3-3831454f237e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6817ef3-0b68-45f2-9971-ed7d9f1a677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf09ad54-4409-49ff-8046-d4d7d8d1790e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c45894-eb37-4456-bf28-4ccf1daf6b63",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20fd6d0-b202-4c50-b5ab-e57052e75885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259bcb87-e281-4626-8322-61d274120907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1b01dc-bfaf-4148-8ff7-0cf158972c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93c8e6df-a4b1-4ff1-9d45-1314be8a2b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38347263-327f-4437-a528-33e10bd5a702",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a375298-3d14-4fd4-9b74-80afc3228770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03adc57-7e56-4eb1-8f5a-8d5b07da5d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8388a0f-17fd-40dc-bb56-63a2c9b6d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d84904c-e948-491f-8010-ff54fd7c95db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0c563a-1354-4616-93ee-59e7ddece227",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9aaa3a-2253-4c1c-ab33-762d5b373193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9dafe1-a659-4b90-b6b3-9b1505d41754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207c3e6b-8ec3-4fa3-8185-e68f46d13ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec779c5-29f4-4bf4-ac12-6f2362f8b4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc23b0e-ebd8-470a-a7f4-ae739ede201d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8162e396-4dcb-4b3c-a98e-2c7f9fa75e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053a83d5-5aef-445a-8e7d-05ae431e097d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960273cb-1d0b-4557-8258-4079f36104fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc201272-7a2a-4312-ba09-bbb0519e33db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c27b4b2-7d02-4242-bc63-292c68450be1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a0ac2f-36fa-4a4e-a3e8-d33593e210d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba8d3e9-01f7-45e3-8504-428bcdf7a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2e5150-da79-4176-bef9-2be151b15347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb01841-f7af-4f44-8636-7151f699c7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337d2b96-c0ba-42bf-b9f9-fb2ec43b7a93",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153c7aaf-cee1-4752-8b17-7e6d89b1c413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46dba62-cb23-4519-84f0-d9ae86cdb57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a809a818-dc99-46e0-9aed-d2b3fe2b5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74bcd74f-49f0-4728-b6b5-e0540f4c3c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a677a300-736d-4508-81c2-68c0f8834d82",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebe91a4-7387-46f2-9822-fbcfb58c9eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2fe425-7f95-439c-93f4-6b714c11bb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865287de-4291-4b72-9966-e1108a4776ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd3290c-005e-40d3-b286-405c6dcda40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b68ae36-e500-4511-a04a-5d1c302ac993",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426e7443-95a5-404b-84da-22ff82aeda83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "250a2fde-8b59-4dae-aa55-13b3e68364e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d76e3-a835-49e5-b27e-356ca88d9ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d17c53-39b2-459a-a466-e2ff0a97f30c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9479d09e-130d-4ad0-a2b1-de2993d0691f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76c0529f-eac9-4ec2-8b97-52738c0d9512",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327a85e8-b50c-4fea-a9b1-283c6dca4bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f96e5b16-c0d6-4180-88b6-ba398cc1c506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae197e4-34f1-4d90-a9e5-f23b6866676e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2df1d5f-3677-4a6c-84fe-75f633a769f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aba0188b-ee2a-439a-b422-b7878ea88c20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e996848-d969-4ccc-bf22-eb09376f102c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c65ab3-cbef-4d3e-8546-2edbef86f09d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc5f2a4-d239-4e54-af6c-26e2ab3a473f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efd69473-d3df-476c-8541-df65d1ef0229",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4fea110-d3e5-4835-966a-4c7a3bd9bdf7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9105a5cd-39e2-4bc3-8c78-2ea29b490410",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d099463-4544-495d-a560-9f34c42b8c13"
                }
              }
            ]
          },
          {
            "id": "029affe4-e165-4d32-a1ca-0e55b05d72e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "649ce1a5-8347-4b87-bdff-9905178ac635",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "01303d6c-ebe6-420e-9de9-ee6d764d38e1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09252f20-1514-4c04-8a1c-d1b760a1aa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0aedbbc6-ca57-4239-8685-fa533b7c995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c85dcc-20da-4202-8157-3b7a8f75d5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862401fb-defb-4861-875b-6fee540eac20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f17a97a4-1bed-4028-9a3f-91bad58b969e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54695f8e-4b2a-4742-9095-37c9e25893c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4156689c-019b-4aa9-81c7-4a2d7144460f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7538963-df92-4a9d-a3c5-fed127fd7d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ee0aea4-67d0-47d7-9489-8b32d65602f8"
                    }
                  }
                ]
              },
              {
                "id": "b5a20a26-066a-4c1b-b56a-2fa86bde7763",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2ccf68c-fbfe-4a1a-aafa-89febbdaf347",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8479caf-3035-4411-b6fb-31d47aff94e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26c6b119-9361-4e53-9735-2981ff752b8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd527262-783d-4237-add9-d27eeede99cf"
                    }
                  }
                ]
              },
              {
                "id": "e9e6d7db-62e2-4ed5-b22d-ecc664df7e35",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a86cec60-036f-41b8-a45d-82be7b15aa23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "685800b4-4bc8-420d-9b8c-a5c393913ae6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9ee00d0-b8e1-4f73-80ff-dd0c4a2aefe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6772908-fce5-419b-a585-23e2fed5d2fd"
                    }
                  }
                ]
              },
              {
                "id": "77f3d73f-1270-499f-b2fd-ae7068555659",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28427c0d-bbc8-40fc-8bf8-33e8d228ad8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bdd1d3c-8c08-4a49-8f74-f63e45f69654"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e019dd-eff1-4d0e-8dcd-0f23eb509788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2e84d0cc-d12e-429c-a2e6-f7f72a53b7c0"
                    }
                  }
                ]
              },
              {
                "id": "8cefb606-7e7d-4390-ba9a-c80bbfdb739b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "628c4abd-46ec-48f3-99a4-e7335cb7d931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e42f4217-1763-46ef-9e2f-1def9e565d1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a9238d6-7182-4be3-a494-e0316359ec20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "739fb815-72f2-4093-bdbf-5bdfa0d71b04"
                    }
                  }
                ]
              },
              {
                "id": "826f22b2-71eb-4133-8ee5-46503b41cc46",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5192f8cc-3996-408a-a2ad-8aa5ff2a3e40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b15240e-1c06-49e3-9a3a-c9006f264ab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0971346f-bce6-4f6a-83f0-8502494a6e3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "621416cf-7058-4d44-9ec0-45902766163e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55f041d6-bd74-48c4-8dc7-e0bb71aab99e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2810d215-32ad-4ceb-897b-c9d85381f1ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9f03c32-362e-418c-963a-429da70ce98f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f09b070-fac4-46e9-bf56-0b68ec476327"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f2ce16a-65db-49ce-9e97-89d9a0dd4ca9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c456fc08-7553-432f-a2ff-15e0b4648da8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3593db7d-f309-4ca2-adfa-8a1d6f264c4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa7c43d6-0ed3-4570-915a-69ff6f4590ba"
            }
          }
        ]
      },
      {
        "id": "d0ad67b1-520a-4268-85f4-807e8ddb135e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b07a913f-e090-44cb-8ca8-2349205927f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5629597-b9b5-4899-87d1-cccab94b8a00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a00e2655-968a-4cda-9587-97d9dd2543cb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc1baed-5df4-4637-a897-df6c99d9a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d16ae2-e9ec-45b2-8dd9-b78a1d29e145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20abf33-202f-44f2-908c-6baf13406efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ef3110-1ae0-432b-b0a8-735560f36e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f6139-509b-4901-8290-5ccb62e2ada4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf6a292-5a94-4be3-b49c-43f9f889719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a7bfd4-35e1-46f4-aaaa-b5acc4dcb8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3a2221-93b4-4414-a374-e07fcca8655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1134e9e6-d30e-488a-86e9-6cd90235b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4677915-2012-45af-94b8-8157074ab0e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3481c5b0-8d11-42a1-a55a-d5d96a10ad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04626fbd-3019-4998-972d-19aa0f59dfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1153a85-ec75-4b04-8856-89d4807b8d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a2f881-a08d-4162-87ed-7800c0f90efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dffcb5b-9dba-441b-aa04-d671d87acfb8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eaf0d2-6b69-4c53-b62e-d27314384e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39142ede-a874-4287-b752-6fb362c043b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b229a9e-eadf-4306-ba75-176dd4a200a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "606e2ef7-4c8c-4b5f-bf11-a50481b50748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d524ea-f40b-45c8-8121-1d80bb8a3c88",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1d7c8d-52b6-4afa-af37-7ef58a905d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaf56a3-c913-43de-a0aa-8662d225aead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06471b0a-ceb4-4b5e-b814-195b4acb37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c156d2cd-7a64-483d-9b18-9a5fe84225ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57f4a77-e8da-437e-a73e-27ebe09ec924",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9284883d-649c-43dc-9aec-23c763ce3d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eb28b9-6f34-4f98-a5aa-d6acaecfcebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174b6354-b4b4-4285-a0cd-3bd889bace13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3427ed-1d5e-4b91-9155-17ea0d0a6692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c76c73f-71b2-4cb7-adb3-18699306f908",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d725cff6-6a84-4321-b161-80b30fa5fa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e2b3e6-e6fa-4bb1-badc-373c5508f111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57398c0-feae-44f6-a6bf-357f9978a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31922a81-f4d4-4717-ab36-688a5c69a47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0607f6e3-d8c2-4957-8eae-ce46d9cdc1b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61392511-0790-4b7c-92ba-92bd99a2679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f200b8da-4a1a-44b2-baa4-ec2d81cbef24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620bea5e-7d28-4bc2-ad4a-4279ad7157a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "374350e3-2e68-4a1d-bf6c-10c06c8794e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3223171-1dec-46f0-98e0-63c8a37b2d48",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d7d7c5-6034-4992-888a-7c025a3f2127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197958f8-b7d4-470b-8869-57bcad39a7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4729d62d-2b99-4cb5-ba30-3b6b12533ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fba3dedc-a03c-49e1-8ed1-808282f0c6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f99d3d-ed9f-42a9-8e05-19980ff60722",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df94452d-7f2f-4fe3-8c70-2546e15230c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76263ee-0233-4380-b88e-01d6fb1a64a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7891dc-751c-45a3-868a-666fb4998608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71cf7ede-7250-4c61-afef-4cdeea9aae29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444f224c-892c-4e8a-823f-64896c14eff7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dacd7a4-9748-4942-ac8c-2aeb70c18601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea346596-f5bb-42a8-8552-cdb9d1deba09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8aa2c3-028c-4709-8008-ee473279d2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "941c3a3a-917a-49e2-8a82-49f48c8d9d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a9dbfa-88c9-430a-99c3-504292508ee7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d265c6a5-d19b-44e5-93be-5d53487aa6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fa4c4e-d329-4360-9cc5-3eabcd58922d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5842b48e-9556-476e-a156-f6beafaf99a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10fb947c-24cb-420e-b2e2-ac52ab6f3268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59abaec0-e25a-421f-8f01-85ffffb27d16",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5f2789-1078-4b58-8e7d-6b27a63b6ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b566e3e-e431-4e27-b5b4-85e739c79cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c2a4fb-05c5-4782-8349-68a7c501345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f135d3a-d3c5-4bfd-8167-5e645c65ccdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ae87cc-bcfb-49db-b4f4-ab7090cb196a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c55c20-8a92-4e32-aeba-0bf40f19cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9eb88fa-edfd-434a-8e84-dea859098ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d0b772-efe1-4bb8-8043-65936837ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8555705-64cf-4214-8435-e009f9b85bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1984da-f619-4399-b04e-9cce3998f202",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e0c52-7c1f-485c-ae5d-0bda8bfc5193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c2f9d9-4794-47cd-a310-38040ad53086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eaf047-2aa4-4def-9f6b-5d266b5f9d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a52a47-d63a-4050-96f9-d48092eda4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3c96fd-0dde-42b0-b53b-cedfff398253",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13897141-5003-4b53-a5b8-7fa0c1dce766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3530d59f-94d6-4ff7-b4c8-985ea81b0a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e942250-c479-4a20-b8db-375e550092e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe65658e-9cea-4c29-9096-e3d1349956e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80865018-45a0-400c-ab46-9b167b8eabf7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1ccd66-828b-4606-bd04-b89a4d93822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f01690-a76f-4aa1-806e-e4b6af93651f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b232c4-c6d5-4672-9fca-cad1cd981745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c20ce76-a368-4915-8aab-d83102338173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6074bb34-0506-46f5-b6f3-2b10d1958673",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f61044e-578b-4f47-ac17-d9a43565bd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1a66ed-760d-49ba-946c-bc27535d5582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d217c258-1d5e-4c0a-a483-681754a8e7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc30d6d7-2eba-4fee-b476-464a7b12e064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f2e0bf-f924-443b-bc4a-630d8c8d6ba5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639e6227-4b39-4e42-a91b-01d2235735ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f64f853-b7fa-43b8-a742-6ad15bddd55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad7e453-f6fb-4367-9629-7c97e44015eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "681d3857-2eb1-46bc-a037-aed65f8826cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bb7d93-fd65-401d-82a4-fbc4ad69e522",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9e4462-096e-4edd-a7b2-9760771bc734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526d7a10-b417-41aa-9c3e-37b09d6e5fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6ff3d8-c5b9-49a6-8ed6-e9c0fe6964ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dbfd7e-eb89-4004-bc26-06bf5b5a9929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26cd30d-d761-4cea-b6a2-4aad3d36781b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffb02f7-d9e8-4e4d-b650-e6f674e59152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed657f18-2e41-44c2-aa8d-07f9166c8816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d4498d-f6ff-41cb-aba0-44fd4228038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2684361e-5520-4382-a136-a576ff1c050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf36a4d-b568-4099-9456-47885775b12a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0197a73-a61e-4794-8b50-d72a772a47a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa707ef1-0cc6-49c1-88ae-5e1d0630ac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db3561e-8a51-4159-a2b8-70f1e3fa7e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b594e0f1-b4b0-4430-a00c-3816ee668877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a5e89e-b377-4862-a404-5666875549bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4200da-7170-4b99-a83b-072c691a6d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1993a511-8af4-4de0-a769-749addd243c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e0fec3-581d-4be8-a465-77b5198c713f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "badece1e-a812-44c8-9b7a-48aa4a7e7246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a8ee24-225c-41aa-940b-742a1101d696",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db06918b-688b-4957-81eb-9a1db591c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c6fd95-f508-404d-8caf-44ff29223677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa5617-e43c-4833-bfe6-01466060811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab19b61d-e2b4-4df0-bf4f-6eb10cbe9a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f220e6-5fc9-48e4-9140-913bc644b287",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f6046c-14b5-4057-a554-0ab70ccc7992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8da37b-49b8-4ffa-9f7d-48c46ccb1155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e31164-a259-44bc-a4bc-1a3104eae8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "684f3706-34e0-4b17-831c-10c53a8bd2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b8357f-c066-4a86-b654-f8c8ebb5d42d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e74795-618f-47ad-866c-e1a933d4b428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f50765-38b7-4072-ade5-64bddff49d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f64d957-7d6e-4dc7-af16-d26215b5d0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec17a81-ccc5-4747-b1df-786cecc988d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32021c61-d467-40fe-93a0-80efbef0961f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc4369-6201-4b6e-af53-3e94806a6923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af544165-0d69-47ef-9969-c88651237499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dffeb7-0217-4d12-a73c-7f415a096017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d9a22d-e0e8-4650-9389-569dbfcb9f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cd6229-a97f-4132-82d1-7b08e47dac9b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1183aef-ea8c-4155-a3ea-bee49babfbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcf2751-e827-4768-b3ab-24be9b086785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e29597-f150-4f4f-924b-7924e6d902d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d54611f-33a0-4af9-819d-7c1d1e51bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed7bffd-8135-4f42-b9b7-bfcb0ecdfb37",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6652b3-27bc-41ef-bb3b-dc95de34ce5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace4fa29-41bf-4ffa-8da2-d92336015481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fbb10b-0ec7-4f86-92fb-48ca2c3d7465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c18aeb2-085c-4e8d-9e0c-505467a4a048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cdbcc3-32a9-482f-99d1-f10f6771316b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6533ad8f-b136-48e1-ad12-b3198dbaf345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980d13ca-51fb-4194-b3a0-912934b0f926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2131ca1-2f02-4cfe-8c85-ebddf0fd95f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da6dc94-10eb-4ca2-b043-a70342ced9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e866d77-c122-44e3-a574-bab85abd66b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc88a52-d8df-4b10-a583-c88fc8ab2f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc175265-404e-4bde-b349-19adc24ab682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56cf87d-d93e-4a14-b398-190b2d2b2774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf0fb0e-51af-47ed-8922-99a634390566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dc039b-9b20-49f4-bf1b-03e4ff10d37c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2bf0c9-3b7a-44dc-8634-416c004858bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7255d89f-8135-46ce-8fbd-91e7e91827c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babba046-9d64-430a-a3bf-519ffdfc4261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40227cba-2717-4d30-a922-68721b610b3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c97b4ad-9d86-4da2-9c70-fac6cc653080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4633768-cc06-4c9e-bad3-d7f5434f14fa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4805fb-49f7-4848-b58b-91c4954e819b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9955757c-58ba-4ee0-9dec-34f43d6eadbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895f8a3c-fe87-4e08-b9e3-ac9619c7fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8302f86a-5c3a-4db8-a67f-8ad5c480fc34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "363c3b2a-f8e9-4845-8892-8ec02f39fe33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "748135d9-80c1-4c40-8c69-1c106f57fc05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db43692b-9d40-4b73-b90e-a22b2d01c99d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3102e51-1f5b-490a-9e1d-131e7ba9fd3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "785d4702-30fa-44ec-a67d-c56787949ebc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93b43f09-d1c3-4aca-b58e-35b7a3ea63a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63ab9827-5408-41f6-aa4f-f0a232f021a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89f0dd6f-b7d2-4fbb-8834-d326a48fed78"
            }
          }
        ]
      },
      {
        "id": "b31dcfe1-2ca4-41a4-bcb0-6a3f915b5017",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "dfc0282c-6aa8-4461-9875-f0f78cfcc74c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e11fbeff-29d4-4949-88cd-1edef2b6ae23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d972665-25f5-4f6c-8e5d-cf467728a331",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2efad95-5dd1-4c4c-a7fd-dbf0a0079298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0603f-3844-4cc7-bfac-c24569e28766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9ee34d-8fd9-4831-9b54-4c4365f0fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e28e90-8193-40d7-b75b-6eb73f423e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af49b77-4f03-4a9e-842f-63497cfa3b58",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e9fbc-ae13-44e7-8a02-773e6bd7f078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaba502-76ac-492b-b1be-57d1240bcd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9f94a6-98b7-4fff-afa0-2a88a0a0fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b57403-8558-4e50-9bad-17d3f4abc384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7522cb9d-4fb1-4a08-b729-4a5738813e5f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1182549-a1d7-4c0a-b44e-725cddec1a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135bc697-2ab0-4741-a329-71c3acead9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983bfc8-87c5-43a3-83f6-1ef56be1e8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22acd41b-a292-47c8-800b-db1c991d9bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f700ca55-a5bc-4b67-b14c-8af5487d361c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2fce8e-5c16-4783-8c49-ef23f2303fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e3ba38-16de-4d24-8ea4-290df528d98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f69378-2c58-48b5-952a-d495009d5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dae649c1-5156-44a3-b992-0d0a536449c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf8e46e-5dbc-48c8-a80e-2b7901c15d77",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9577dd-df09-4027-b5a8-ac2f75ceaae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6878801-3af0-4d28-a2b7-224d28776f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c499bc-d602-41ac-b13e-351aaaf7bd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c94f22-dd01-4cb9-8e7c-00c0dca32740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0de6d7d-4b2a-4844-bfec-cf79cec013da",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4d2c7b-19e7-4a69-8198-62d4856458e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c78369-5107-44a9-8f3e-d3c37438b818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e4dd2e-aac2-4b2d-ba25-43ea78e8923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b243ece8-a21a-4552-9331-6bf2d08fce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffdaa8b-f630-49ec-a31c-df7d75c58dc6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0750c1f2-f2c4-43f9-9acc-80adce112497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec1d2d3-9127-4668-afb4-ed036413d425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a883998-149d-419f-b4c0-e705aa0bc0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f033641-6eed-41d6-997c-0949926165e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280892e8-4a88-41aa-b64e-2ef848ff180c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fe62ea-6b72-4ba2-b298-95065e2ca259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92777576-1430-4bcd-bfe4-2aa489ecbf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f79f7-4e95-4b26-aa35-626a4da8d9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5979d4-5d72-4f62-9680-17ab47650825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d54cef8-e9ac-444c-9b2b-d92e039aca4d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97751356-d145-4355-b78a-68cc8bbdb66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b774873-ab66-404b-9091-e5eb450f5ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfab04-815c-44b7-b694-1dbee688b142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4187ff2-d1ee-45fe-a711-8a63ddbf6415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0d38ce-3687-489d-a6c2-cd46514bf1b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fe079e-e937-4ece-abfb-64b51c8b00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86acba6-b832-4714-be4a-46bd4df34890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c05113-602c-4d42-8b18-038e1ef078e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4d4f97-c022-4d49-98bf-53ba5f549205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a776f1d-201e-434c-a6da-ab0465504605",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0099a6-dafc-4098-a604-e8551056e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08352433-f0c5-469c-a16b-c5d0e45abe89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5809223a-80b8-49b8-947d-abb31de0ecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cfac129b-96d5-4b04-adb8-72b212f61b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb761c-1e8a-4f3a-a89e-a1a3ece2fee7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a48dca7-8916-47a9-b6b6-56d3ffde8e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510d39cc-d1f4-482f-b237-6d630e283e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33cbe62-1b96-4596-8f1c-f37de0ecd166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a24dd33-679c-4ae9-a0fa-716b3cb4a5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0dcd76-007f-4500-b73c-7c16401f8d82",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7617535-69d7-43d3-8a3f-80c5f302782a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313244e8-8f94-4c1a-b50c-fc7b2c780152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e05206-6ff0-4e13-ada9-ee75498e91d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ea0e83-e2fe-49ae-a849-2465d3ccfe8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cc7feb-85a3-4f13-af53-37dd4497f02a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dd0dc8-a46d-4255-9999-3b4c021749da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f063f98d-edea-4297-9792-ede10f17e025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44f15a8-e19f-472e-ae33-3f4a6a993a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "217a9f6f-bde0-4682-93a3-9c11fade65e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c967dc25-0663-4e4f-9929-f990b75703c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23a6e33-a361-4866-a873-125c71b32f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d885a6a3-b986-4800-aeb8-535a8f1bf760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4e6d99-3e64-4f8b-8c5d-07836c96605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f350dfbe-b74a-487c-9b0a-aca7e5ebc30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154175d1-91bc-4a2b-8802-a910f79a961e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecc4d0d-9e0c-4585-96cc-625c121670d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dac5a66-7677-4508-ab81-d35c06214c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d404bed-44f9-4b60-9800-7e13cac2a8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "befac493-ea02-4fec-9387-bbdf443ed403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b45e9c6-a9c4-44e5-b9f2-085ec9693ce9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a112dc-c9b7-4f9b-b058-8de9ddbe514b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7992d4cc-8e98-4946-a808-296bdde8f0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe421b35-e4e8-41d2-8f6a-6f67c91fe2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "514364ac-4278-4b19-8d2b-bc5101c121f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ea198c-2c20-42b3-be9e-5f46ac589c7e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2818e58-45d3-43ed-8bac-692c463478e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af211fc-35f5-47f1-bd40-e1fbeb38379c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632dc1c8-2797-4d64-b77a-57a2c399a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a4c0e4-3dd6-4351-9641-1ae948186bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0d340b-fb0c-4fb1-88a3-0b3b2af730e3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372914e-4011-45d7-a981-dddc66e24112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cdbf97-59ae-4c9d-ab6d-5a615d3fb364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8722171c-d5e2-44d5-899f-168306bd85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30601b5c-0a51-4ba4-86c5-6fd155c7b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a576da-3591-495e-b9ed-16c42a573b40",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de68687c-4115-4265-aa2e-76bb56317e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe66ee69-94cf-4969-aa94-1bfbe06f1c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5223cb-16dd-42e1-b666-e86e126168a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a65b845-06de-4022-9b1f-890b9cae9fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2acf39f-cf9e-4cca-ad1c-acc3486ba64b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f722940-6027-4761-ad84-4184d6633dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a8a262-a775-42a3-9b1f-1e325cccd2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c638ad-bb5c-4fd3-8277-82bb314c3f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bac5e54-1282-4d11-af17-adc1f9fbfaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aef0239-5a5b-41fb-85d2-88613cea7fbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07fc035-7219-455d-81ec-5cebb5127634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3591880-8fe4-49ee-a7a7-6d807a2dfc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eba11bd-6e02-450f-8a2f-bb5e312f49cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4b2c71-6e80-44f6-b587-81dd8c22f56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce945f2-a48b-4eb0-9411-37062a05bf48",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362fcd58-2017-4f31-9be8-94e40331d09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad921308-1239-49f4-a8b2-b785f64695f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61520cb4-2863-4162-8858-683761e76434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80baff69-7aac-4bad-a30e-1902f9c8f4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dcd93a-eded-4dc6-a3b3-e0592966b3b9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0efddd1-bde2-42e1-9aad-7d132ffd2b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbfd049-02d1-4936-8ef8-c013a68b4834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddb252e-8d07-4d43-93c0-1f43180ec1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4f90e9-0bd2-4e85-b1fa-836a7e3463ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847bba98-5db3-4818-a47d-5af9b05ad23d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec51646-ad70-47bc-b51e-25cbc6fd052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccebf09-4a05-45cb-b39d-e3dd8e2e2107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e7321-90a1-4ba1-bc84-35b573c9d311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20abddd4-2b3e-4111-8db2-3aefde923c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab26900-a749-4b8a-9431-6c68074248fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6a87ff-93fb-4980-95cd-105ed2a5662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd169cb-23b0-4a39-9d1f-eae83d8593fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf67477-3df6-4d7c-a0e8-afba51bc63ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec73f63-eb19-43eb-8ab8-ed543071d0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0e39b4-35f1-4a3f-9286-88a3b8bcbb17",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eb17a1-97bf-45db-b0e6-6742e6375e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc1859d-0bce-49bd-9669-2bae539cadcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4875967a-0250-4a6d-8e3e-9b920a8a8bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d13b0f-9393-43eb-b902-38e861faf6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429e98f2-1e38-4858-b812-0c58fa930208",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8028dd4-1830-4522-b32d-49a749f019c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc25329-3c84-4022-a43c-19eed0dd8fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fa0fa8-2231-49c9-a15c-e1025169f6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00303d8d-825f-4a04-a448-136eb3231c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b99aa-1c6f-4a51-bcf0-8d381d542783",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df93a0c3-216a-4195-9f2d-1bab4e6fefe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b2aece-332c-4d08-bd05-ca3973d87dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf7c6f8-9e5b-4b42-9f97-bd2ad68403f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0be90a-044e-4b53-9b48-a3a639dd67d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678b1ee6-9972-4f99-94f6-0217a00b03a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abfa665-083e-49b0-b215-b030e7fff137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcf05c4-4f49-44d4-9e85-7dbe6effa370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712fcecf-d86c-4d0d-9614-4a8dc3459d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bfb002-6655-49f0-bd79-528db50f994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccd17bc-2b63-4ade-a23d-7a6d619ee088",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968feec7-f182-43aa-ae7e-ad481eef104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6785360e-9efd-447f-b610-ad2d8b1bdfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1e5989-3e18-4681-b91f-c42cae37b105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59df5a71-6557-40d7-a025-7b4d035c2ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1a9101-b071-4805-993f-e6c17f629f19",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aecc85-f9de-4658-ba35-289a3ab2ea5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae28feab-bcec-4c44-bb16-cd80c64b34fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2064aa61-fd3b-4d12-a8a5-7f253e3b3ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcba4b85-490a-4a41-9b85-96a99d3f1feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e84482f-4a0b-416b-9734-03a591bbe811",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ccabfd-4973-4c8e-8bdf-47174ecf43d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89d577b-81a9-4abf-b447-557e4f9868bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775223f1-6391-4d1d-80e0-5fa8230c1a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b798bf-e8c0-43bf-b446-042e7d01ba35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26867751-8518-4e3f-a0a5-7aeff6b5af1f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c59489-489b-43cd-bc78-3f7ea31821a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f30b80-b168-4092-a0d0-c6e0468863cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2256a5-45cd-42c1-b12d-cfc5a9094674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420a257d-a139-4c78-9442-0a06849f55e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d7875-bf03-4458-909a-e1c8bc0b83aa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84a0afb-58da-4d26-a081-ea172be3952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb9f187-1e3b-439d-aaab-9838df1cb5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a5744-db88-47af-a24a-cf9d6cd73953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7af0f84-d909-48d5-bbf4-8ef5e75b318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb19010-2cc4-41e3-a159-f3eecf235679",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a88584-32d9-482e-8d22-fe8ad401e8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b4122e-427d-41f5-816e-8fbd9103ebee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb507c0d-b365-4471-989d-112065043a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f22986a-b712-4b56-8999-922e1be48cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c01b03-9dae-47c1-aab5-7615907d0a83",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ca8ff9-569e-4daa-9a33-02ccb3167807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03158831-e4e3-4b4d-801e-602cbf86448f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6128a657-f02e-4696-9a10-a69513962f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e036c23-111c-4012-a0cd-eed8c70238d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdbce54f-b2e9-4811-8b12-8ae84ef1a426",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2879eab0-ad4c-4090-8ce8-32fe5614ee2d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d998889-f217-46f4-b170-edfbf429e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "67971b6e-0ae7-43c2-a86d-263099c3e7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2217427d-1ee5-4acc-ad62-abbcb95b1240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1e90792-a922-4760-9c15-7d32128a1c6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57081cea-ac35-4411-a9b3-944172b9f53b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e86e9efb-f46d-46ac-a333-003f3592e26c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "903198e1-4e33-4135-a94d-9eb7a7bd42c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "395c1b9d-a887-46ae-9767-6e29934adcd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3636529-d000-4a71-8d9c-de52ec9de3fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc4e0433-1833-4125-8598-c431e123981f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13be1f00-ac9a-4b56-a97a-c34aa1b15f18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "682d6694-47fd-4d95-949b-d43b9e7b1f25"
            }
          }
        ]
      },
      {
        "id": "d3f26931-c4e4-4f99-bddb-dae4c77811d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a66cfc41-1fa9-4358-8ee0-c25b208b756f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "359aa602-f694-4e48-99f5-08a886cc1d32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f80cb432-a584-46c6-b5c5-43b8431716a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c18e60-4afc-44f7-ba6d-08cb644e989e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b3d204-5b26-4e2c-817f-399fafb1384f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee41574-aa90-4482-bfc4-67d109e2127f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e2a861-9d5f-4249-8573-813dc6928345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b41873-a085-4ec8-b0b8-f4a15c8493bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949c9e6f-09b3-4932-b789-1f76ba8d3bdb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94678a0-dea1-4791-a76c-21942643e6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b717b7-61d8-4530-b8a2-c70876202f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9846f5-b199-4622-b631-774403050e9f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b925d-036d-40c8-921e-22a0f3647cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f28840-8b6c-49f9-8050-2980f6c164f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973bb89f-dc90-4256-9903-def55a20e16d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e266015-b043-43be-ab82-3e379ecdb43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e6f44f-7ebb-46e4-8565-3d7da495060a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073cf02c-01fc-43c7-a8cc-b5a5ff2f9d8d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2488f1f-475e-4efa-b1e8-e3be4be5a0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d407253-3c88-4303-abda-15674ed6a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ea36dc-b4a3-4694-bf63-00bba4ffe410",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310788c7-17c3-4d0b-a756-e03b4b5df1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75362da3-994b-4a01-9939-bec0bc75d539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb4aec1-d10a-431e-844e-a7efc0fc434c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430d723b-2c7e-43c9-9f64-71e64244e7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c47eab-b8e3-4e37-b733-4efb1bb6e967",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd02e9-775c-44ff-b74f-51613ca7777e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69710df-db6e-4cf4-9db7-2a2496b82f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3448d48-f2ec-4008-ae76-0adb25adf511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7585da31-01f1-421c-bfa5-209315f2e928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3feb9e-50ad-4bf7-adec-d447b0a67bbe",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb08388-78ed-4ee9-b248-e34f5c107273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9fc0c2-0a92-4b2d-9b23-275bd1836449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fb461d-62a9-4b11-8a59-5095cbf372c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35843608-6ded-440f-92e3-b937a77167c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c7589a-7780-434b-b61b-ab66e56b65cb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55740d7-6dbb-47b5-812a-635d33cebce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5027ec-d899-4fee-a912-df8ea06bff34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dba0f5-b095-47bd-b2e0-1fe2c0121f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a51c4a-b83d-466f-97ab-56991d3d9f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56917c8e-170b-4e11-ac95-cacab03ee867",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d379e6e-c151-4d26-9021-edf6113cfa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14672bd2-bce0-4384-ab10-9aa91680b10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91e6807-e86d-4358-8a27-454a5fef0760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c214385d-43d3-47ed-91fb-f20ec3d39fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929cebcc-c4fe-4f19-af6e-3925a4726a91",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa1ff5a-21b7-4dd8-aaa0-152da5b97041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5959c7c-78a0-4e28-91b9-c381779447cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b06660-a6be-47ce-95ef-ca226994bbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a909fff5-635b-438f-9067-0156926e6568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ccc716-d2f8-4e94-88f4-9700a8e2ef06",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b922c042-024f-4d8a-999e-b529ddddabc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363d6d29-0a08-4a45-9132-3892f264ffcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4fcb59-27e5-402f-bf5e-1dd1df83adae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67ec54e-4592-4e86-92f8-d2ee563017bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77352c1a-e154-48fe-b722-a32b88590266",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f382e8-9568-493a-ae53-cb315c5bb732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5dbbb8-6729-46c6-80da-014882cf2c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4145e68d-b40e-406d-9501-e6897488e3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7678689b-bbd5-4698-852c-18ec14d73c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbf5ce5-5d17-4941-a627-4dbe462c522d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f0d8af-13e4-4568-9e29-3f24fc7711cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd46037-6577-4c31-bd5f-4174f6f753a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23095dc6-49fa-4c7a-a2ff-e7c4fbee3f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e7e690-5d46-43ff-a611-543eb0070c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5eecf5-07f0-48c9-91b6-d622d3a16903",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4785e-9797-4115-a602-17b7f6fa8d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238b2949-1a46-427b-9db1-e37c6b17bfd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181c6a4d-e9e9-499a-8141-f9874efb54bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dea5471-a7e3-4602-97e6-14e7efcc9c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0441bcbd-557d-420b-9614-57dc4da4ba2b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317c3615-1882-4948-9bc7-aae4b3af9827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9585c4ac-9c9e-4e27-9a0a-8c9c5eda631d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2024df-580b-4f8d-8aaa-4bcb2c57b8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b9a81b-baeb-4b72-ae72-0d3e0f6809bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6ad63-48b0-433e-9db2-dab79a083e4e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a9417d-d927-4c3e-abbf-92291d68e3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90818f4-ae5e-4fde-9767-d1dff3ed85b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ac2bee-3af8-40f1-ba7f-eb91bad0c8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f0fea4-3f85-45c5-99d5-0a1187a3ec75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7d445e-3023-41d9-9e47-1137f8c89714",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f7f8e4-46a2-44b3-b317-6c21cca1cb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797776b4-3098-46b9-b05e-2be8803775e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f638874-6c05-4a02-92d6-d92951568433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8512d6-dbe7-4f05-8c3c-918149babd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea53d2-6d16-4377-9c0f-11cee54111cb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c408a-63a2-4870-8da7-1db0ffdc8de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643be6e6-8b16-48ef-8ea5-c64839594990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d081e89-b507-4e3d-b8b3-344168b9dc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5043d527-1e63-436a-b3a5-dd7a6b04d546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a46e82c-ff99-46fc-a8d9-2a52cd871713",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e2750-cb92-4814-b220-56d88b44755f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dea49cd-aab8-4dd2-83c4-960feeab48b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fa5988-b47e-439a-ad83-ec2088edcb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1269130-4586-4a40-8fd7-9122d94e9b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa983a30-c42d-4e0a-8103-bd44d12f6f6f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d198f714-7ad9-4c86-ae8d-1b579d052f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ebb707-0c58-414a-8e14-636056ec6296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd0ea27-bce2-4473-8c9d-0ddf2d2d3ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061c9dbf-1b07-4255-8017-dad1ddd700b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab32a82-b0b2-45d5-9467-4cdb39879803",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e7a0ff-b984-42ea-81e5-1ed1b78c8bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6628d4b-136d-428d-86b8-4c33a666f33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3f9df1-f689-48e5-b186-545070987b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7bd76e-bd92-42fa-9c26-340d57274c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f4cab-6297-4708-8267-5f06928f0fd8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74874f8-1a5d-45a1-bb66-2fddd752e813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8fd3c9-8407-4854-b8ba-1b7ba802dc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bd8c0b-ef8d-403e-a286-324b37173952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5a780b-db56-4b6e-bb71-995805793c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aed9362-cefb-402b-8654-cabc9b2b1c81",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fea485-29d6-4848-a862-6c15a12038b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2bda7f-090b-49ba-a01b-bdf5ee1e201c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee573d77-a3d4-4e17-99f5-b02fdb29fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15d0df8-82aa-45c8-8d9a-408e78c1dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db30a6d1-3972-4c60-a25e-3fceaa82c022",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43682b7-b3bf-41e5-bd74-99624c84f8b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8390e197-0290-4650-9e11-04d4e1b24afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa05f4be-2f0e-403d-968d-ed14dc1cd428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcdef70-4917-4ba9-b854-4da5dc4f4d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61202337-63a4-4d38-9c36-b92b3c3b4d5a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4c02a3-a42e-4d57-bca4-9983774c73f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403fd6f6-b91b-4835-8f13-a9761da53d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5df9d7f-3ab2-4edb-9a7e-cb0652c322f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033a7ebc-2c05-40e1-be56-da2d9163fc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a313ab62-be28-4ab0-82cc-605cb52a4909",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c0a5aa-689a-4dce-a79e-117e6d322555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e47495-5d92-4da3-ad08-8ceccf76e6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e466acfa-e4ad-49d2-bae7-bf7e61fedcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3082f0c-3825-4896-be97-276318a5c8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c0c80-73c5-45dd-8135-bef2245bfb62",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a3654-f17f-4f96-9640-163f6dfd1cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55455291-20fa-44ef-a399-c43ed4f4ef48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91762941-0de2-4339-897d-7497a4ab28cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbdf47b-69f3-4652-ad06-a7f2612cd49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c3327f-3021-468f-89cc-c52ee328bed1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92ac2d8-27cc-44c4-8176-9a1a3ef1e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38c896d-59c1-4ea9-b4c9-1c033e557a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd8edac-a5f9-4d67-bf88-29cf4d2faa46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df252c9-2cf4-424e-a088-f4ac735db17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6f6ae0-106f-4e29-a052-679e77fbb41d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ccd407-2cbb-4199-94a2-8b4294e70961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791d381b-f427-46c6-b548-860e73c9ce60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a924db22-873f-404e-8fad-c52caf47c1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0693d0c2-2ebb-4fe8-b62c-401a59a917fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482333e3-2ee3-486f-848a-181978b40809",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1199244-1ae5-4665-a76f-869d98126ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92c8e91-3f05-4960-84ce-a74ee02ce6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68a496d-1fc0-45f8-9d4b-4568646652e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b305109-95cb-4b13-a83a-314416342f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3b6566-6523-4d0c-bcae-67907ae0f5a4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9633c3-dc4c-4777-a531-6f7c499b96f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd81e8d-85e4-4da5-af74-b85f06882e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7f4b21-a486-4aa5-a917-ed23b1f62e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989bb886-63fc-4107-8d8d-0eedd0afec53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08711020-172e-44ae-b401-9d6c70f23238",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d726fdb-bf8d-4ada-9a37-482b653ec97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3aa9db-4927-4a4a-92e3-5940442729cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4347e07-49a4-48a4-9624-66c64bc6dea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a733e8-a2d4-4945-8187-fa5694dee925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff8ab26-2475-4b77-8a85-3a11dd007755",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a8e4c-9b41-443d-982c-367a8d07309e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57430f8d-fe77-4c51-be34-c1a06d34ae97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfff6a2-0637-4daf-a9cd-0a565256bea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d93673f-ea20-4454-92a0-d791b9a9a760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc1eaf7-2898-441c-9dc2-65d0af24960d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99570ee7-5c84-4203-83a5-8c8c049964f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac53602-8cd6-4cb2-aab4-7ae27dc8a5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff70f2e-0739-4fe3-a900-1653d28ab713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a7c97f-789d-4788-bade-dbbf73d483c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254efb63-b6cd-4787-85ba-83ad5183b706",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566bc092-31f1-4c00-b916-f3347612b4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79878842-e442-4120-a29e-25bbddaf8cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e62b9-d850-4307-82c8-d8fdbd7d751c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bf7ac1-df12-483f-a074-06f4b11ee72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d290f0-caad-4aa2-ad51-b9348a36cc59",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edd4ee8-5b47-4378-af7f-7a1b207999f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae98d5ba-d071-4c7b-a0d0-ede4225f0cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e651710d-dd94-46bd-8c11-8a112e17ae01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9e1bab-8403-476f-9ac1-3328bb8f6a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cce781-fbac-4a80-9d3a-c9e162d8d232",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac76b7ea-ce13-4edc-ad73-e7f3ae6610e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de22f67a-b9ea-4e5b-9a06-ad454fa8b5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8831a0f9-c26b-4654-8a69-c6dc8c42c19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c7e175-9c2c-4f59-bfb6-2e7899758156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a19244-53e7-482f-a8dc-587a9f04b7e7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befbbf5c-7de3-49a4-8239-6e0ec21b46ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6720e30-d7f5-4607-9835-86aa91299867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb2e248-1544-4968-b667-33e80b11a174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2f4e8f-f013-487c-b8cb-7235bb802935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d066170e-24fe-4bd5-bd36-7df39069936f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee8bfcf-37dc-4f0f-8138-a8c6024e5304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd56307-d288-41d5-8003-ce42427cf857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03928450-8b38-473f-b827-7c9b87641859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb5114b-f1fd-4ed4-aea5-9862e6bbd776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114bffc6-b6cb-4983-a93a-3123dca00776",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045a530-2cc8-4049-b8b9-4217cd21120e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4c4fd0-3f9d-403e-9e33-016e9556e9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9022eac-97ee-4cbb-ad49-e56f9956be2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7908ec-c2f5-41ec-adba-948ab063e2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371e7005-b613-4f6e-a2a9-e97e991f64ab",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740fc357-6a40-495c-b903-cb9883a68163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7004f11e-4efe-4d93-9994-0fc220505926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7097491-2ce9-44f6-a21b-1cc1a63db61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692e6e66-433d-4777-8ee0-c044b75583f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3255b72a-ef9b-4340-9389-18caf02cfa3e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56258b8-4ca7-4278-849b-3de8eb8984f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d7d957-0785-46ce-99e5-2dccbee7c3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24f290a-b578-4cf0-a4c6-2c90f04d7c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6942b6bb-c750-44e3-9cf1-03653563f8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd359971-d40c-4f5b-90ea-c81b7d6cbd87",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825474be-6692-47b8-82ac-a1a48d5be880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f10369-0afc-4a18-9feb-a1fe1e21aaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ffb53-1b7d-4a2c-8509-49916bafa8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff3d497-5cee-4ab3-b42f-13b15fa2ca9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8454669a-3164-48eb-aaee-af49f8743573",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbe311c-2e15-4a02-8700-827a85c4920c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88544a9f-33eb-441f-9c3b-b5fd0ab85c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f0b84e-0a51-47c4-83ca-51cd238b4931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c9916b-2e2e-48bc-8bf3-ebde1e0c5316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15632ebf-b33f-456b-890d-07116bc52e61",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5ec6bd-94f1-44a0-b267-9cfae1f44663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7051de4d-3221-4eaa-a999-8b2266d2f23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bebfa4d-ad84-4f31-8e33-feb5b535da55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41859142-4d50-4edc-b95a-104638c763a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c666db-738a-422b-adaf-2c3841e64943",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f89dc6-29ee-40b1-b910-11ff77f2b214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e521dc-144a-4b1c-9458-5810f1de0147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47d101f-d247-4d3b-8383-2609e551100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc50894-6706-4b63-bb28-dacdf1440fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257e3b85-60b9-4276-b1d8-5460e534a677",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2ac214-fc3a-4a8c-8185-3833b58b16f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b913d97d-04eb-482b-88cb-688eaba2d30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d9657a-ddc1-4abc-ab34-5b79ca915ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f8cd87-e1b7-4c28-b26e-d83e883b2a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ba62e2-ee64-4329-81c0-b33439bec25b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc45da-45c5-4480-b6d9-19a2cc61d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6798c3-95d8-436c-be34-53192bd4c6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d057924a-29e2-4b66-adb6-4f24f5b99354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f0ed1e-aa8c-4cc7-8806-823cb4bd3ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5481b081-0978-4406-85fd-d3c0ffa28355",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d116a-0b7e-48e0-8593-4adb92147cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409095a5-4415-4421-80d5-fe153c751b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d1d739-a314-43a7-9896-67af8c8bb361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10966f29-39f1-4ece-b342-7b242e04d84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50305367-033d-49c2-b0be-f653d5773800",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3804481f-a0bb-4614-aa8f-53b1c291a0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56e825d-99c2-453d-b8ce-f91fba27f8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4357de-0679-486f-bc8d-e759404e8c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d8edb5-f25c-43e1-b23d-74f8cce27950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507a0bd4-1f5f-4828-a45e-d2cd083b192f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14bc517-d67d-40e4-af68-835c88c9ac83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b9b1b8-361b-4854-81f8-3f23531fff88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbec1b0-2b26-43d8-89bc-a43ce2d2e77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b88f83-7527-453b-98f3-17bc184c4da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20814eb-656f-4ce3-8450-94f8c59b72d0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d73b02-5972-411c-bd36-ff5a2b2a1cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135fa5c8-1115-4975-b813-a2b9903706ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8334f-d20b-48a8-9e2b-61fb7c9ce0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de3bee7-b43e-4df1-b09f-5b5f5711347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d80999-3226-4b26-a28f-8a304e8465c8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e5b4cd-3c06-4cc5-80a3-5153fa08d2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78246eca-dad0-493c-9ae2-a72e49b37c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2c3f09-3a66-4e68-a742-4b04c99bec1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41704ec8-e203-476f-bb87-580e041efca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0065869c-5450-4a99-bb17-7f07fd58d4b2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc76b3f1-6ec3-4361-8706-8c2f3eee128e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89db027-94a4-4602-afca-5da0da5d5b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8414aa6f-7a54-4622-918e-c74ffc19a53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee98686-36eb-45f6-a948-34121a83c2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117bd2f7-c697-4636-bad9-dc14da32ace8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63332e61-1cd0-4fb9-8fef-ebde7ea449ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d9cd6c-672f-4d3d-a3d6-eca562c6f627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be9cd1f-fd97-459d-932a-cb8e8a1a2404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5047e84c-4e6f-4d9b-8eed-a236ce748984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8354aa-dd17-4989-bbde-0c416da4c6fc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c1acf-1558-40eb-9f69-8f75bdcb0009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4e1b10-7987-49d4-8680-9f4e3f336446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fc5ea0-a205-4620-96ac-18b73cd21536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6815bb0a-3b59-4b34-91aa-8edceda3490e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e10a25-34d0-419f-9ffd-dca819d50c4b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15af8452-6de5-4a9b-803b-6f9513e0ad92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffb95df-dc76-4c6b-8268-ce9e983c42e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daddbe98-53a7-4621-8fb4-90b6a7e5139d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d0fe49-0ee3-4e0f-86ea-8478253383bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f355629-06a7-45d5-9d6a-5e83aa62fb36",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fed1766-84b6-45e5-8bf8-4e6029736f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a965c87-1e59-4aeb-833d-76940b740daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc7d05b-6fbd-4bee-8585-2b477092d4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb44a274-9b4c-41bd-bef6-31c92d757b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3659f34d-dd4a-4fe8-9545-58979800f7d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015be1a8-0908-4a88-a872-8645c4061e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dff0bb-dcce-4692-a905-995f498d9351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5975218a-4d22-4974-85b4-583cc2639910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf9747d-7eee-474f-bbbd-3e0005a69a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e535a5f3-9c6a-48fe-bad1-52dbc8ccc732",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2fb3e3-d504-4e9c-b05d-c0cdab32cf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85700405-8a47-4c08-a527-411aba33254e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acc09ef-49e8-4d62-8c43-a3a10963b1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f8c217-54b7-4bb8-9c63-e2ec936710e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860f41bb-48e6-4afd-a164-8987d5b82916",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425f07c3-2945-49ae-87ad-1d300c55a43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcecfcf-ec76-41bf-8d30-431760e615d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b406d1c-785b-4ea5-a3b4-5c1cf3cefa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614fcc98-d129-4368-a9bd-3db5bf55148b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23a5893-6179-4de0-82da-f39193b277b5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b018cfc6-0dfc-4af4-ac04-0d2c520baa8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e4b0e7-63e0-419c-a3d1-d51012f03a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eff2c2b-a7f6-47f8-a9ba-d461bdc257dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1b3221-886f-4656-8240-f873f04d3ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5321b1db-e6b6-4f4f-97af-994fc6a364e7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f700bc54-0d36-4bca-bf18-60c18f1db960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75378c30-98b5-4827-b8e1-38538d88e587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede3adc7-23b6-4f03-9b11-6b62d5c99428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28c978c-5974-49b9-a2a0-6169a27a0b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a88dd-7dba-4a4c-8cb9-bd75b18d704b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd59a15-c9fd-45b2-95d3-f622e289b405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb83288-85ac-497f-a4c7-2fbe8e9c1e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598b1a72-f64f-4a07-b155-e09d8f162a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493d46a2-9794-4a48-88c8-3c609da02a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd72a83d-2bde-4799-9828-58317d876207",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51477e5-0682-4d91-8099-f6cab3cc0648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb5af89-3fad-4c69-8f31-8474c5699217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf1bae-dc61-491b-b3be-8f2f85dfed10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491840d6-aa4c-445d-ac01-7ae80f58461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142e6c3f-3d6a-4025-88d2-067b1b2ad1a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe78f88-cea5-448e-93c1-8d845d74aa87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c39b02-d56a-4ed7-9815-45be366d6f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1359fc-3c90-4b37-8354-9afa3db9ae28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e7566d-f47e-4216-b9a2-093eb41406e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5651668-0d33-4fb3-9aae-bd19ece9ea4b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f40cc5-3102-4df8-8960-be12741d0b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96513111-85b1-4bca-aaf9-e25a1ab16abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163be084-7f5b-4dcf-9201-9d146543d611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb06650-6a29-47cf-82ce-866916986ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a145da-3902-4460-a6a4-c2c0a8ea663d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb708ee1-f7e0-439c-903c-f15dd45777ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687399ec-9817-42d1-8b51-99fe6e75f9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9465c8f2-ec31-44b3-aa83-e53946a4fa62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79389040-81c1-4112-b7eb-a4f50e4e5630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cdd521-438b-4acf-af52-e391cbadd246",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510ab04e-4e66-4489-b3a8-c0d46ef92a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94802b57-23f7-4894-93a2-9ab00277b28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1b4339-84b7-41d4-be19-99cb62c927cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd452913-afdf-402b-b9c8-894d32697599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c203bc7c-a38c-40d3-bbf3-52e597b42066",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3932e859-731f-485c-93fd-b113b96deb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abb0d55-b4b0-44a6-840c-e6568ef026c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8374f688-f615-46f3-b5ed-af1a4b870ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca75c77-138d-46e3-b84e-1a1be2e25f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b577890-4370-4ece-bbc0-5bfbbd2c4fe3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9819da2-5787-4c68-91de-1665944a846b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a066eec4-07c3-4c2b-8895-c841afae7160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7700c478-d031-41e7-886b-ac6976db7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608697a5-4bc0-4caa-8673-c106dda94e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1976b422-208a-4562-ac71-574006f0f518",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5216b81e-bad4-4ef3-82ee-1ed876f0e991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1c8bf1-8f42-41e4-a60c-5c65d5bb145e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e892e6-b07c-41c6-b166-d146c224b66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c082f2d-8b6c-430a-a6cd-66a23dfd9a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad2d444-faf0-4767-98cd-0d54617ee4ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4735caf-5fba-4acb-bb4b-d3d57d806062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d1dd66-4dd4-45eb-a70d-5848da1264e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d77af4-b7a7-4319-a347-469c5f88410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ab2f0f-1fb9-4098-bde3-f4893b2698b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7cdf6-c9d2-4ab3-9af0-86148d216305",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61341f57-a616-4dea-b009-2efd9ebaaf7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf5a238-335b-4bb4-b8c3-188950915026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6612424a-609b-4b41-b0a8-058a4694cbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d43a61-35d0-4ccd-abec-a6cf3651bb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f7436d-09f5-42f2-a8e8-ad95d6d71e8f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebf0047-e0fd-44c7-a905-a04f586a58e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b27e111-c0ec-4720-a1e6-69590abb2663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89dfca4-b289-4ef9-9507-a453b5839ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b90b4b-4f38-49d6-8ccc-9aa9fe938b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b204653-0372-4128-bf07-2e218c7674fa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a034c0-5050-4ccd-8a0b-d9b30c6e4ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55366347-18de-4705-9a55-ff3866178f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c0366a-4bcd-4b6f-ac8b-2ad6218812ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11cf8b7-87ae-4ec8-8a85-a1296135e3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc5a35c-4412-4fb2-90cd-f6894fd4ca55",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00f9da1-12bd-4361-b1ac-3ff6177719b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e48ddd-094a-4cb9-8637-b4739307be87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279e80d6-489a-4b65-9271-3f13c49925ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba4fa61-290a-4dcb-b8d3-f1c33e011028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1c9cd4-8001-406d-947b-de49351638cb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75c4911-8e16-43f7-af72-cd2a210eb601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb5b8c0-31c2-4a8e-8c45-f3cdf2e71e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5541ff-6ba4-4ac7-a0b9-9c6874243f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e458d158-df31-484c-86b9-36e1c22e2e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e74444-cba1-42c7-96c8-153187b3f936",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f23311-b42c-491d-868d-47176a21d2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1010138f-b3aa-4bcb-b15a-b9f422a282d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd60501e-0915-4fb6-801d-e04b1a277916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b20708a-3ecd-49d9-aa59-3843738a0f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3493d9ba-62f0-4e92-a371-321ed9055ce4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2862ca9f-28da-44a9-b6c0-fb6740438ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14993e91-1406-40c0-a6d5-ca5b24efb33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290a183e-403a-4d98-be2c-5e27fee5e2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61c9c2e-4dcb-420b-babd-5ef88d6ffbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff4cb7-a005-4041-adf6-31289996fcc4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aea360b-3d8c-48bb-816d-c780b368a1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1060fc9-0ffc-4b89-b2a0-4a98e72ccb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c434e9f-088e-4dbd-be28-5eefa7f7bab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9389df7-369e-4a8f-870e-a3b49f20a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41200f6e-43fd-4c1c-9577-e4fe0170f788",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc33cb-3ce4-4533-9847-076d532bb548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cab520d-d844-4a4a-92eb-ce347fa8dcd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb0783f-3d2d-4be3-b130-6f6f662ce2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7834a5ee-5a03-4e1e-853c-e6e3a7761b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb523cd-ceac-414c-8a9e-56d130fa6107",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836af96-81fd-4e18-a931-6d01335f3ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6690ad8-a483-4e8d-a43b-8c993aed69bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6a087-c424-48d0-83f8-c01c2491e574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926d1ec5-b5cf-46e3-9038-644fa2044bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08d9b9c-0902-4470-9f4f-08693f03483e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8280209-4232-4eb6-af97-3b3a3309b4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f41b32e3-1004-4061-b57e-8bf29decfe13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decc3491-69a1-41f7-8161-8ee7b5275551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b94d27d-aaa7-473d-b336-335d35ff43b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3852076d-aed5-43c2-9f84-7b63e26aea2f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85125d5c-ee67-4cb8-8a77-891fe0a89c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e165fa77-3b46-4a98-9411-ba5ecdba1967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8442e4-3c1c-49f7-9222-bfc94bf1c769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d035630d-1de1-40a8-a5ef-98a0c8c52bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7557e87f-1bca-4427-ae23-86faa5f0d193",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37901574-88ad-48bb-89ed-141416b1c39f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b6340e-956a-4485-abc4-55334f75f164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc605dc2-9fb2-4358-9316-4e884fb2e771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8908464-f141-4485-be24-ad9f86be6bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac07e57-2258-4046-aedf-00bbac870fa7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100744f0-33b6-4a4c-84c8-008a35b1c93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984bd2af-45ff-4d27-a0e2-7a6718578fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31508702-80d7-49d5-af9f-7268e476e1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2616962-696b-4c20-bc7e-71784b163ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceef0d6-9ae9-4887-bc83-6a5438d6d450",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0359bd1-f7c2-4255-9da2-10cbc13a6b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a520049-f1c4-4490-958e-0c81698880f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8caf60a-c045-4bbc-955f-8e06cef7a0ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56d98a9-534f-487a-9a16-582ec591e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ebfa54-b4b9-42a4-97fc-5d5a32d34396",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b623f8c-0757-4c61-90fd-281153f58ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1578a6ac-1c3b-4698-9948-a41386256f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77352a14-731b-456f-933c-bb252673aee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756e63b0-4024-4aa3-a9e2-8985c62365a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d900adc9-1a33-4b1e-b4bb-aa9dfa960a5e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1283fd-f75f-46eb-9e12-12f2834dda17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b155a8dd-ff3b-4021-9abd-a5ea671cbe5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0239f0-9e92-45dc-9183-e85c795e3499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a5b408-c52d-458a-a9fe-7c4b73ae0623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6465b373-13dd-4f5a-b904-790a0c8cd054",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6299d744-e7cd-41a0-a37d-2bd3f0d96c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58be295c-50d1-4301-8441-a945331d0254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0f22c3-68bb-44e3-9334-8dcd32010602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1864f232-89ad-4a38-996b-21ae50568e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19be678-e901-4815-be3b-3c9282f0d764",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df423604-8e52-4441-90b9-6fcc7fa453c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25fc96a7-d1c4-441e-a69e-44f60bb15d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce57cc-db39-4b7c-b64a-ede9bc638a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c090a0d0-3c28-4917-89d1-fad2602add31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0475aa-3012-4604-948d-3ed824c54f8a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a08c30f-f3c4-4907-8caa-fcf350bd70dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a94c0cd-d8bf-4d3e-a4da-c6b9e6f04fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4399b82b-d368-41ee-8cd2-416944a6358f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2323a5-162d-46da-ad80-bd8eda8169c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5190ff89-374e-4eaf-bcd3-e28487d3f5ce",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a15c10e-7512-452b-82b5-cc0b2b60b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1df9c3-200b-496c-a2d6-1e2a4d7edd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f25f15c-55ba-4abd-b88a-0f2753b7e58e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd48a77-3f0e-4864-9062-8fcebf2d2d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0cf5b5-bc31-4793-bd70-7aa8c8f117f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e4d30d-b7b6-44cb-805a-4289489e64ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959a9ba9-a382-455c-91ac-878369b0cf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79a1f7e-139e-4870-8670-b04c79a92140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea61bd4-de01-4e58-af66-4a3cbe449157"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "162d0395-c622-4ed2-9245-80746efa9171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33f599a8-8ce7-4f8c-a7d2-c31c99f3be43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf4a5afb-8c29-4b9e-84eb-fab01b3ebce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "118577a4-7279-42a4-b32f-32ead1f5d30c"
                    }
                  }
                ]
              },
              {
                "id": "d4aecf73-0c1a-4f49-baa6-c99bbb8ce9fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64a5b259-9cb0-40c2-91f8-07c04168c362",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55b8354-07df-47ff-be22-88dd6cd5f590",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d7ab615c-87c5-4109-94b7-6492c8713cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bcd32e-846c-4005-b0d1-43edbecd7ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b3402fe-854c-45b7-b5b6-26e31252df83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "900b6d2d-7d2b-4efc-a19a-5a6f3ef2aa6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59befe34-89a5-4807-ae30-f4ed615861fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9810600c-e9d1-4d18-a1b1-de61a1ffbb3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4c88e11-f5ba-4b0d-92bc-217811d0cf50"
                    }
                  }
                ]
              },
              {
                "id": "803fafa2-8b55-4b1d-8cd8-4c5d992623b2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "70b8e196-efc1-4a20-aae1-70557942659a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d04ff-235c-4f5a-b423-8614f900926a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e6aa9dcb-1333-4af4-9eeb-1066ce56461a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ba0c24-64db-4a95-bcca-249100d7083f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6850f5f-20ea-40d7-abf3-f00e69c65b90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42fc8095-3938-4d3d-afb0-223e5a42f281",
            "name": "Positive Testing",
            "item": [
              {
                "id": "022e85d3-9f9f-4467-8c40-3c2f6e7afc5e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e2514a9-5fd1-4efe-861a-c61b5c1ba8cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fcea7fa5-b941-4e6a-8d73-f35fd1fece7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6da482c4-629d-466f-9291-0554c0dcb5ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c3c3a72-bfe6-4b82-876b-7528e7111d48"
                    }
                  }
                ]
              },
              {
                "id": "ff7ee31e-4703-422e-8381-12ee74960abd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ae9e33-1d27-4324-8e83-15e1945e99f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a6b8dfe6-f84c-4da6-8301-1da1285c6edf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "887378f6-18ae-4b5f-8789-52a26024a93f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37fd4243-06a3-4415-af99-0af76475a80e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c8e8a16-35c0-4958-af73-02bcffd1f45d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0a7a3d99-4498-4d5a-afb2-5bf9214b44f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35c1babc-9a46-4985-985b-7bded8231162",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6540e151-f565-49b6-92ef-bd84dd71469a"
            }
          }
        ]
      },
      {
        "id": "e5200fbd-d688-4063-991c-adf18e9d56ff",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5e7e0109-4567-4ce8-8dba-61a992296b77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84b1fe10-936a-4379-a2b7-219de95f3d5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19bcd60-40a4-4325-92d3-eff12d78a1f6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836d4e72-8700-4b87-be41-319f8b4fc289",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4c8f939e-ccde-452f-a2e0-7e6446b71fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47351eb0-704f-45b2-83e1-e0f4f566e165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a84ffbe-2642-4a79-94c8-095b3d73a32a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d3d2fe8-6abc-4ff8-bab7-04067ea56685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9ba422a-d84a-470d-9a18-9eff7e58d483"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2ebade0-1d1c-4b4c-9774-8d8d72d701e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c2b25c5-9b38-4d69-89c7-969edf957efe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4955b38f-04b3-4f08-a224-e53c55bd71e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c8656ccb-44e1-4a42-97ab-82fe56ce7b28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21457e43-7e10-488b-807d-9bdc9081e105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1316460e-f17b-4b87-add5-b874b45a3ba6"
            }
          }
        ]
      },
      {
        "id": "43839eb7-0d1a-4f7d-86a1-300644759b5b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "805a91f9-970f-4fa9-8e74-edb07f18e2bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19930f25-5a7f-4f89-ae46-1a42888eb083",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e34d2518-4f67-4716-ac9d-b35aca3b0959",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e20ff18-eb76-4a34-8463-27e8f6cefcd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79022863-293b-4a49-8745-10a31b401095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90b248-da3e-471d-8578-44b539faafa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f4187fc-0715-44b4-8604-44d36188990d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69647711-c745-403f-a6c5-2617ce763e9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17c5e89a-2eac-4602-ae44-c9ca6006c65e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b036a14a-7832-475b-b47e-1cf9d4f5d25a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dac09214-38da-4984-af8a-2bbfbc083efa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57c286e3-34b4-44fa-b13f-b3888dd68e32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbdfc480-1111-4fd7-8aa4-09ced87a213f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdc8c0d7-9274-4fe7-92a9-2507e401f159",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd74be12-a9da-4ebc-8f98-2f8db4dd9049"
            }
          }
        ]
      },
      {
        "id": "bbf52781-cb37-4054-9509-aac6b78e7207",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c549be4a-6ae0-41dc-9392-888a05aa6602",
            "name": "Negative Testing",
            "item": [
              {
                "id": "190d4d12-d5fd-40d9-b3f6-504751342448",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff074697-b103-449c-8989-f36ef3dfbe21",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345f2d52-09f2-482b-8027-9f96f28959b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "542ab7ae-1bb6-46fb-9f84-7cdffdc45732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1c6623-1560-4555-82dd-6c9d120bdf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbaf7192-1d37-4756-b484-37e9722a85f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b158f42-a6e0-4c48-8347-b06d36e1abdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303c219c-4a56-4a8c-9bbb-ec7f9c7eb79b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbe27d75-288f-42e4-b2a0-0803673afb70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63bb3ba0-5ebe-432a-bfb7-f7d1f9f8b05b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2a1822f-6ca5-4b9a-b7f6-80ce0c0d8119",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e616b5fe-abfb-48d5-b2eb-d1bfae2e0fcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcf8c58a-ad4a-4908-b581-649c0980d765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6561e3c-efec-4ac3-95f1-347430a90d18"
            }
          }
        ]
      },
      {
        "id": "679c5854-f09d-41bc-8381-0ed6223acaa0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5626163-3b1a-4733-8fd2-42ab3074644b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "420cc106-7c11-471f-a9c1-d3395c7dc27a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "65e749d4-a6f8-4771-9bf8-c8c1a57f1519",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a135f83c-b6dd-455b-bc2a-73cd6adcb448",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9afc70f6-1d0b-41a7-acf2-5d9ce86a1745",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 111.98947368421052,
      "responseMin": 5,
      "responseMax": 2877,
      "responseSd": 339.8577461357839,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704846997893,
      "completed": 1704847038974
    },
    "executions": [
      {
        "id": "634e9acb-fcba-488d-9c5d-2a14742089e4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2a297bca-5c1e-47db-be92-734217e930c4",
          "httpRequestId": "8229d754-4a77-465b-88fc-c6e93678e279"
        },
        "item": {
          "id": "634e9acb-fcba-488d-9c5d-2a14742089e4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6c7a54ad-1fb7-4be2-8050-5b0130e04481",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "561d6703-f9d5-46d7-8941-eba642042924",
        "cursor": {
          "ref": "44a2d7ea-a9ee-4f87-ac90-beaa8e60e1e5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd18126a-262d-4016-895f-014f2336a81e"
        },
        "item": {
          "id": "561d6703-f9d5-46d7-8941-eba642042924",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e1628d5e-fc98-48c8-a96f-a3d1bc0c7e12",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f6842f4e-d2e9-4479-b8e4-ecee964ddace",
        "cursor": {
          "ref": "28b48ee2-6478-479c-9679-ad68579140a9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "19954766-be7c-48cc-b7f2-c19469e524f8"
        },
        "item": {
          "id": "f6842f4e-d2e9-4479-b8e4-ecee964ddace",
          "name": "did_json"
        },
        "response": {
          "id": "811d1871-936c-47fd-b6a7-e7290c6d8461",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962871ae-2a2b-4c0b-845e-0d9344b40910",
        "cursor": {
          "ref": "eb074a97-4be3-4b09-a513-546d324e06f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b461c78d-2abb-4a16-8249-8840886805ff"
        },
        "item": {
          "id": "962871ae-2a2b-4c0b-845e-0d9344b40910",
          "name": "did:invalid"
        },
        "response": {
          "id": "d4fdb123-6ed9-4d2f-b50d-e1090b9059cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962871ae-2a2b-4c0b-845e-0d9344b40910",
        "cursor": {
          "ref": "eb074a97-4be3-4b09-a513-546d324e06f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b461c78d-2abb-4a16-8249-8840886805ff"
        },
        "item": {
          "id": "962871ae-2a2b-4c0b-845e-0d9344b40910",
          "name": "did:invalid"
        },
        "response": {
          "id": "d4fdb123-6ed9-4d2f-b50d-e1090b9059cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c2e5e4-6d0c-45f3-8f93-39d913ff675c",
        "cursor": {
          "ref": "1894bdf1-de28-4f36-9754-14bad26ca01e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "793cf8d8-989e-4270-9b6a-2e81209459ef"
        },
        "item": {
          "id": "e8c2e5e4-6d0c-45f3-8f93-39d913ff675c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4460a1df-8114-4114-9971-4c9fbde17bc4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 242,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f222128c-f458-453d-8d96-4135fa3d04c2",
        "cursor": {
          "ref": "c346ebab-1840-4e8d-ac16-23c2a5ebecff",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "115a26f8-adae-4863-8529-36ead35f2bb9"
        },
        "item": {
          "id": "f222128c-f458-453d-8d96-4135fa3d04c2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ae89b32c-d104-4e4f-a938-7e6011ad2c7b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64df5706-3bdc-409f-b018-3b5726cd1a9e",
        "cursor": {
          "ref": "d767a499-67f0-4340-8ac4-0717ebf2df44",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5ae0d725-e0c6-482e-b0c4-3e0745573879"
        },
        "item": {
          "id": "64df5706-3bdc-409f-b018-3b5726cd1a9e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3bff3114-cc75-491c-b727-fdcc0e6ce785",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c94a26-55f1-497d-ad14-7bc6b8ddda01",
        "cursor": {
          "ref": "89c91809-dfac-4c12-bb5c-05f66325074a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2711038a-5855-4222-bbf2-fde678d8c39e"
        },
        "item": {
          "id": "28c94a26-55f1-497d-ad14-7bc6b8ddda01",
          "name": "identifiers"
        },
        "response": {
          "id": "5ba73821-f88e-48f2-9988-64918f2bbce4",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada35d60-9a1d-4c56-bdf3-98eddab5921b",
        "cursor": {
          "ref": "19ffc88e-4dfc-4fe7-8cf7-0d1f8730cfe9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d90d833d-d79e-41bd-9ca6-c5e154137f5b"
        },
        "item": {
          "id": "ada35d60-9a1d-4c56-bdf3-98eddab5921b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99c7466b-f994-4aac-bdda-a7d84562548a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fce74c-9ab5-47be-9c01-2cd827473302",
        "cursor": {
          "ref": "7dd9b43b-837e-4c77-9dc0-4399698ab6b3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "222a88ec-7570-46fd-92f1-2163a7962c4c"
        },
        "item": {
          "id": "b2fce74c-9ab5-47be-9c01-2cd827473302",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3bb73d51-ae65-41f0-b44e-a93e4c6bf593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146f9a6a-9c81-44ae-ac9d-f7d246cb32e4",
        "cursor": {
          "ref": "746cea52-5ca7-4c2c-bcdd-4d0e6181a33a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b3431a15-0d87-440a-b655-73e49a541b92"
        },
        "item": {
          "id": "146f9a6a-9c81-44ae-ac9d-f7d246cb32e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b6113bfe-490b-40fa-b552-3b431a137ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4905f3c3-f18b-4935-be61-5613d490db6f",
        "cursor": {
          "ref": "2ee2f836-5366-4571-b929-e243f6271a2d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "99e6dab1-b864-4468-9ac4-db612d973dd6"
        },
        "item": {
          "id": "4905f3c3-f18b-4935-be61-5613d490db6f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c3b8330-9098-4b51-995b-af41b8a38663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92911c9-ba82-470b-8c64-a20fcc0bf9df",
        "cursor": {
          "ref": "0e614fd2-bbfd-4769-a7de-8f88f6a34227",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "71dae8a5-f1d2-458d-a00f-857a4d27ecfe"
        },
        "item": {
          "id": "a92911c9-ba82-470b-8c64-a20fcc0bf9df",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "da86c818-fd7c-4034-bed9-f622aaf2ae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccc33b6-da08-4f9a-b4d2-7dc666cefd4e",
        "cursor": {
          "ref": "5668c5ed-cc78-4f6e-a019-4c257ae54e5f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e034b7e3-16d6-48fa-b60e-4b3393369ba4"
        },
        "item": {
          "id": "5ccc33b6-da08-4f9a-b4d2-7dc666cefd4e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d115a047-4b3e-4d51-9285-781a0ad99bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00485f2d-a018-4280-b638-f71734fce755",
        "cursor": {
          "ref": "0aba5bad-7c4a-4e84-a249-0bb507ac0eea",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6faaf3f6-117f-4850-8b5c-d035342d1355"
        },
        "item": {
          "id": "00485f2d-a018-4280-b638-f71734fce755",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aae91242-6003-4d1a-97db-d617b7a5dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faabb72a-c892-4317-a36f-b3ceb19f046f",
        "cursor": {
          "ref": "571cedb9-a7ac-4262-9ebb-f5549cc8dd19",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9c800a31-1182-49f3-bb43-4f56f664e90f"
        },
        "item": {
          "id": "faabb72a-c892-4317-a36f-b3ceb19f046f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5da7dc3e-71dd-4b01-b46d-2f9935fde26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1283ff-b86b-4583-ac6f-4488e09eda83",
        "cursor": {
          "ref": "beac091c-d839-4a9a-b7a3-53d10c157395",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fc3054f4-f983-4178-b443-02e2026a6469"
        },
        "item": {
          "id": "1d1283ff-b86b-4583-ac6f-4488e09eda83",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2d0bc817-d199-408a-854c-54c3b5874308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45cc267-ad7c-46b8-9a60-b5efc75344e4",
        "cursor": {
          "ref": "c2a97511-f856-4f87-9cd2-46f76bb196c4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0ccf0dfe-038a-4ba6-a7ab-b0b72d872446"
        },
        "item": {
          "id": "d45cc267-ad7c-46b8-9a60-b5efc75344e4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f44c6dc0-f90c-4275-bda1-f0e9d2ced7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c8106-2293-4160-bf01-dc874d39cabe",
        "cursor": {
          "ref": "3ec8d31b-25c6-4378-b8ec-08c32d132631",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d7f0f15b-f749-47fe-902b-490877db17ff"
        },
        "item": {
          "id": "d02c8106-2293-4160-bf01-dc874d39cabe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b8ace461-1ed0-40dd-86a5-d4b3ace5390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4bb421-cef2-472d-aa1a-3f3a7a06d7d1",
        "cursor": {
          "ref": "935f8642-8456-4d21-b259-0f3acb752651",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "72a7eadc-6104-4969-97e1-767015baf1c1"
        },
        "item": {
          "id": "2a4bb421-cef2-472d-aa1a-3f3a7a06d7d1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7698a464-ff2f-44c2-8f94-87832591c995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8f5edc-0d74-49ba-ba8c-7f2fb2bd62c5",
        "cursor": {
          "ref": "2f7e7733-d5db-413b-bcb3-6cf194276c86",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d62de7dd-44c9-490e-8e40-4468eb2f8259"
        },
        "item": {
          "id": "8c8f5edc-0d74-49ba-ba8c-7f2fb2bd62c5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "66240baa-22e4-4adb-a248-0e34b602d942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a18de7-7923-476d-aa11-42b0a79df662",
        "cursor": {
          "ref": "2cc227cf-ba13-4023-8dbe-22b380bb9a35",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9786b1e7-d509-4deb-b071-385d8553dc29"
        },
        "item": {
          "id": "98a18de7-7923-476d-aa11-42b0a79df662",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ee7c0260-065b-4cc7-a696-86f61c1ebf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2934c34-78b8-4791-8368-a4c0066378be",
        "cursor": {
          "ref": "1f855ae4-5611-4e36-b683-6f4e3e18839f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b39456c5-8ba1-4449-8542-4fe4cc7b209c"
        },
        "item": {
          "id": "c2934c34-78b8-4791-8368-a4c0066378be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f9d3b27c-c01f-4e4b-8720-18580352db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0f28d7-96f0-46b4-8b7d-da7a1902a221",
        "cursor": {
          "ref": "edd046fe-377d-4420-9fa8-8710285d6a3c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "51ca793e-b6b8-478b-8f5d-d343475090a0"
        },
        "item": {
          "id": "0b0f28d7-96f0-46b4-8b7d-da7a1902a221",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1ad55d63-ac0b-4b1f-837a-ac235fe282f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe857722-07fa-44fe-87f9-ef37cc693604",
        "cursor": {
          "ref": "d43fa240-2abf-477e-b6f0-e2b3661e7264",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e67a9c9-a18f-4e98-aed4-c9b1ffb978a9"
        },
        "item": {
          "id": "fe857722-07fa-44fe-87f9-ef37cc693604",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f54db31a-0f43-43b3-9be3-48a5be5ac81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e997919a-a884-42db-82a9-88a69027328f",
        "cursor": {
          "ref": "5e144b57-15e6-4dca-98f5-8a5958cdc801",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b1590875-ad9b-4fbc-8ebd-9866220c15f3"
        },
        "item": {
          "id": "e997919a-a884-42db-82a9-88a69027328f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "05e2d2b3-e68c-43f5-b33b-8411f3c9cc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d5e1f-37eb-4ba4-8d32-2579e8b5c2ea",
        "cursor": {
          "ref": "255f9e93-7015-4985-b3c7-764f0b680a9c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "12ddea4d-4032-413b-bc37-bd531b259037"
        },
        "item": {
          "id": "0e4d5e1f-37eb-4ba4-8d32-2579e8b5c2ea",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aa81b37c-9741-4cb0-b1bc-7b77f38a341e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8cc6a7-92a7-467f-8814-ff739ebf60d9",
        "cursor": {
          "ref": "a2e23cdf-4414-4872-980d-7b0049d9f13c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ebea4081-952f-43c8-af16-cd12c6e1e808"
        },
        "item": {
          "id": "ad8cc6a7-92a7-467f-8814-ff739ebf60d9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2d37d81d-3c48-499c-9334-e201cdffe226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2723b5a1-be91-426b-9d3b-471cb65ae7cb",
        "cursor": {
          "ref": "f7f4cf7f-ea6d-4a9f-878c-2d3651effe07",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f939cf8f-07c9-44d6-8cef-b7963b097491"
        },
        "item": {
          "id": "2723b5a1-be91-426b-9d3b-471cb65ae7cb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a615eaab-5e36-4562-82df-948e733ee3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed6262f-1d7b-440f-ac41-d5e262af9b7a",
        "cursor": {
          "ref": "5d377efd-cfe6-4eea-b22b-e664d9d55e24",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b95bb4c3-a44b-4324-85d1-0e92a0ac3414"
        },
        "item": {
          "id": "8ed6262f-1d7b-440f-ac41-d5e262af9b7a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "12204d86-3b83-4b94-9969-c3c15df87309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501748c1-3a44-483f-ba13-b17407f527b4",
        "cursor": {
          "ref": "76ccb7e1-46cf-4ba2-a3d9-e75a17c3e187",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1dbbfa4f-f592-4f83-85ba-0c615e7adb2e"
        },
        "item": {
          "id": "501748c1-3a44-483f-ba13-b17407f527b4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "136906c1-b382-4740-8ca7-b683f61263dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2339ba20-7815-44ed-808f-5427b4b5f5a9",
        "cursor": {
          "ref": "ea963bd2-9726-4661-8220-7465468da5d9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b27113ff-3560-4d56-890c-d2a1c640b4eb"
        },
        "item": {
          "id": "2339ba20-7815-44ed-808f-5427b4b5f5a9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a68403e3-8d02-4420-9f0f-cfdd44491df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed04f153-fc61-456b-b764-e38b6fc6014a",
        "cursor": {
          "ref": "805ffe95-c340-48f6-9838-50fa8c014954",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9f870c27-1cac-4e5d-9680-4f6d4b600dd9"
        },
        "item": {
          "id": "ed04f153-fc61-456b-b764-e38b6fc6014a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2b80338b-1550-4dc5-aced-b8349a884e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bf9f82-112a-4910-8c0c-ecc3f998d24f",
        "cursor": {
          "ref": "d6c940db-420b-4978-9fd6-a35491c2b4cd",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6931e427-dcb3-47c9-8995-6b06f6920aad"
        },
        "item": {
          "id": "66bf9f82-112a-4910-8c0c-ecc3f998d24f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6fd49b34-20d0-4c7a-95ba-64ff26029f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632fdc07-4631-4d2e-b97d-b898a0d7ee5c",
        "cursor": {
          "ref": "288d40a1-f1c4-4f2a-aff3-644bdaded29d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab6bd115-9c0e-4823-a4b1-ab5c2481d488"
        },
        "item": {
          "id": "632fdc07-4631-4d2e-b97d-b898a0d7ee5c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "375acde9-6484-4d0c-a452-1d39ad0fa857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dcd54f-a88d-4f73-a287-647bba440b37",
        "cursor": {
          "ref": "2536b078-b52c-4b7e-b607-6aa46ae9ee2e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a9683860-65f8-46e2-a8d5-4b1fe934eb3f"
        },
        "item": {
          "id": "16dcd54f-a88d-4f73-a287-647bba440b37",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f3dffdeb-413c-4afa-856d-a0ed812fc729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b093afd-6672-444b-b458-e35a2adca737",
        "cursor": {
          "ref": "80c22851-472e-4726-8e2a-26b7f34ba901",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "090edd58-79e7-488c-b2f6-35ce0295599a"
        },
        "item": {
          "id": "4b093afd-6672-444b-b458-e35a2adca737",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3ea5ab77-7f31-4879-8022-ffd96d5a8296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97480f7-6d92-4519-9ef7-3a2942af0cc4",
        "cursor": {
          "ref": "7a21ad25-0f85-46c8-9316-926a28ccc665",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "944c4789-9ab4-4180-b6ff-7b0f2f53e3ec"
        },
        "item": {
          "id": "b97480f7-6d92-4519-9ef7-3a2942af0cc4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a3491254-fd76-4d2e-84f8-068524561d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab8b2b7-79b2-4775-9c13-32ea468432e0",
        "cursor": {
          "ref": "f8706660-8f12-4d94-9e87-ad5a54b7da68",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e882910c-57e1-4514-81a9-eaa72606f129"
        },
        "item": {
          "id": "4ab8b2b7-79b2-4775-9c13-32ea468432e0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b0277908-1a1e-4a79-a3d7-09f09b89e235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b868fa13-7a6c-400a-b798-ebb31d5cced6",
        "cursor": {
          "ref": "e26d7be4-e522-4058-9c75-8b115c97cc48",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "23e8ca79-ebfe-4496-99c4-6707502439ca"
        },
        "item": {
          "id": "b868fa13-7a6c-400a-b798-ebb31d5cced6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a706d78d-c698-4ce1-ac82-862141066ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ca2ea-ff28-4b9c-8c7f-e0cb3536ae6b",
        "cursor": {
          "ref": "b12bfa60-8edf-42f0-9adc-de6c16b48a13",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5241818d-0289-4143-9f30-56f5b7ec1df4"
        },
        "item": {
          "id": "896ca2ea-ff28-4b9c-8c7f-e0cb3536ae6b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "91dc7e0f-a480-4022-a157-c232acffc892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c04ec47-8c7e-4778-8d7d-43f66c18b0ec",
        "cursor": {
          "ref": "32c321d7-a304-4577-8571-2d12616192a1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "be3b7cd4-60c1-4cb6-aac3-c8527845c9c1"
        },
        "item": {
          "id": "1c04ec47-8c7e-4778-8d7d-43f66c18b0ec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eba5897b-13f1-41f0-985c-1965e90b27e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3085f4-496f-4413-b797-5e743c8059fc",
        "cursor": {
          "ref": "07a2b62f-3462-4e66-a2ff-26e2df76b9e8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c4022a0e-e51e-4c87-9c16-7a8645f995a1"
        },
        "item": {
          "id": "3e3085f4-496f-4413-b797-5e743c8059fc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a8975ce4-2020-4b90-9f21-a1bf35fb85a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6e5a2a-496d-4e01-a40c-a919c12f110c",
        "cursor": {
          "ref": "6480c08e-db3d-4940-8d96-116cfcd6a533",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9f73fc60-4329-4394-99a8-04b438193923"
        },
        "item": {
          "id": "1e6e5a2a-496d-4e01-a40c-a919c12f110c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5aac132c-e649-4155-a245-6a2795304011",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 321,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13668200-5295-4571-8bad-5e73c5a0d30a",
        "cursor": {
          "ref": "89ed96cb-377f-47b0-ad4e-0485867e6edb",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c6f5c4bb-6915-424a-9495-2d2c2a21ef10"
        },
        "item": {
          "id": "13668200-5295-4571-8bad-5e73c5a0d30a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d8cbf641-4fe2-42ba-b921-5a427dc88957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c271b7-35be-4608-88d0-fea83c723881",
        "cursor": {
          "ref": "fd1bf581-693e-40ce-9ab4-2b7d36b75e25",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bd1c8022-b608-4bef-8e49-0fb01be92386"
        },
        "item": {
          "id": "82c271b7-35be-4608-88d0-fea83c723881",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "77cf1e2c-61a9-412a-90ee-378e553cc608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47bfa45-98e2-4609-aea0-663416e62832",
        "cursor": {
          "ref": "e349ec46-c037-4512-a340-4aa8e75b9cb2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "082e34c1-cc73-461d-a35e-96b5b59dfec7"
        },
        "item": {
          "id": "c47bfa45-98e2-4609-aea0-663416e62832",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "65daadc9-d374-41b6-aa88-a298b4c70a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1ea65b-90b9-4aff-9189-33c40633f1ca",
        "cursor": {
          "ref": "4f022cba-28f7-46ea-b3f1-6b91fff8c4f0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9fffca66-0eda-430f-92fe-ca26a9493184"
        },
        "item": {
          "id": "5d1ea65b-90b9-4aff-9189-33c40633f1ca",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8b0d908e-299a-4f58-ae1c-0b0d6540e708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b06ade-34a1-4721-8920-2399f4144b84",
        "cursor": {
          "ref": "269fca98-fa19-4cf3-9ec5-19764b0899a1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3d0ad23d-1cef-495a-9489-f4546e8bd09c"
        },
        "item": {
          "id": "c3b06ade-34a1-4721-8920-2399f4144b84",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fd1c94ef-2d0c-48d2-9a0f-ada14c23283c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331fdd1d-222f-4c2a-92ee-d19b68582edf",
        "cursor": {
          "ref": "448e4399-1f66-4448-9116-953f02695acc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0385a994-c56a-4b29-a9f4-8b0c9456beb6"
        },
        "item": {
          "id": "331fdd1d-222f-4c2a-92ee-d19b68582edf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "56b8f635-2ad1-4e81-8976-f43c5c3b7105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa91d153-c4b0-4853-b2ac-5c9c2b67245f",
        "cursor": {
          "ref": "da007dd0-d017-4829-93f9-c3852798e786",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db28e244-a6a3-4305-8d51-a88f6187ddce"
        },
        "item": {
          "id": "fa91d153-c4b0-4853-b2ac-5c9c2b67245f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "515830f1-19ca-4093-8713-4ca1bb47cf84",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 317,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3610cc12-1784-4a6e-b7de-1a41cfc6aa4c",
        "cursor": {
          "ref": "2089210a-ccf6-4cdb-a519-55ce4534dd9c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20d7bcd8-4e10-47ec-b6b0-3816fe629c55"
        },
        "item": {
          "id": "3610cc12-1784-4a6e-b7de-1a41cfc6aa4c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d9172c15-8e57-4e10-819d-374776bb2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aef26d-9d64-4c0d-984c-65134c9b0596",
        "cursor": {
          "ref": "990b0d5f-16b4-4946-a045-ceeb6ee5d2ee",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7d773fbc-179e-4ce5-b77e-22b4b44d0101"
        },
        "item": {
          "id": "d4aef26d-9d64-4c0d-984c-65134c9b0596",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f4a3268d-ad6a-4e38-9181-c0b805a56770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aa1d58-bf82-426f-bfa4-19f20e656721",
        "cursor": {
          "ref": "2cee1d26-1ef0-4d9d-b644-3ba50da65b7a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fcd984cb-03f0-4a8a-88d8-b031f4699c5a"
        },
        "item": {
          "id": "78aa1d58-bf82-426f-bfa4-19f20e656721",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "96eba737-ade5-4ebe-8a8c-657c414b19aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec3668-dc0a-4172-b354-5e9107291d35",
        "cursor": {
          "ref": "dc9e27e6-418d-4ee0-8e66-610904174ba2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dc53924a-9373-4b28-ac1f-b9a202343ddf"
        },
        "item": {
          "id": "5eec3668-dc0a-4172-b354-5e9107291d35",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "42f93451-f7ef-4c41-a5d1-ac435ca6cc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99903567-0ac2-4a7d-ab95-241c57c975d0",
        "cursor": {
          "ref": "7ba8a50d-d005-451a-9d1a-75649f30023c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9bd9a5a5-1bbd-4263-b8e4-050fbc026a63"
        },
        "item": {
          "id": "99903567-0ac2-4a7d-ab95-241c57c975d0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b10173bc-7903-4804-9891-ccf145886df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eab2f43-b0ce-4a5c-9fbf-b9beec139133",
        "cursor": {
          "ref": "fef2d6bc-de10-44af-800b-12818dad7a2b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "33153ee7-7b4a-48f8-aeaa-71be856632ae"
        },
        "item": {
          "id": "6eab2f43-b0ce-4a5c-9fbf-b9beec139133",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "22fbb81a-5df9-42bd-bd7e-13948e1b7659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0678bf-aab2-4c92-b7a7-d13e877997fa",
        "cursor": {
          "ref": "98bc5ffb-42a8-47b0-be5f-ce9b1f184284",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "86929a57-e3a7-42ce-a7eb-d82e8a769131"
        },
        "item": {
          "id": "0b0678bf-aab2-4c92-b7a7-d13e877997fa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2f46ce61-b73b-47e6-b6e0-622b31088325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683b6b07-96ec-4b24-8c54-c1b344c8bc3c",
        "cursor": {
          "ref": "408d7057-21fa-463b-91c2-9ca97706a50a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a80e80c4-68cc-45bd-91d9-68b1aee91652"
        },
        "item": {
          "id": "683b6b07-96ec-4b24-8c54-c1b344c8bc3c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "31f7eab4-76b2-403d-8afe-1c1e651e720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac2ee0a-2453-47f6-b14f-dfff04cbb194",
        "cursor": {
          "ref": "6d60fc07-f567-4b11-bd31-16629db0ff37",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5a3067df-aa30-44d0-9481-2ec4eab32916"
        },
        "item": {
          "id": "eac2ee0a-2453-47f6-b14f-dfff04cbb194",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "decaae86-fb47-43eb-aa22-8697f24a3e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aa2cea-9219-4d16-9911-ac7bbb852b93",
        "cursor": {
          "ref": "81d19699-e32e-463d-94ed-4620c1a6a7d5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "021079fd-ed76-49e7-98b9-ca50cf964951"
        },
        "item": {
          "id": "29aa2cea-9219-4d16-9911-ac7bbb852b93",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ed055ff6-ef2f-4c17-8461-53e6e747241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec46460b-25a8-4505-8185-6641d490b4ac",
        "cursor": {
          "ref": "f41fb163-1087-4a14-8f7a-ba8ef25a17c9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e8758cf1-3413-42eb-aefa-197bfe70aa0c"
        },
        "item": {
          "id": "ec46460b-25a8-4505-8185-6641d490b4ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "64ee5278-246e-4d1b-ae00-4ffe23f2246e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f762dee3-2c24-42b0-b750-37ad8fe715b3",
        "cursor": {
          "ref": "c05235ad-8869-4af4-bde1-de121c54cc73",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2370d920-cc88-434a-ad33-e3ad488ee58b"
        },
        "item": {
          "id": "f762dee3-2c24-42b0-b750-37ad8fe715b3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "14622c69-9d2b-4d8c-a5df-3b99f3a749ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5c4241-0979-4654-9a22-b790fc3b1e4d",
        "cursor": {
          "ref": "ae2e0546-e13f-4aa2-b7e8-28da9e09acb3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19a5155f-1b12-4d27-bef5-7d7152d29619"
        },
        "item": {
          "id": "8a5c4241-0979-4654-9a22-b790fc3b1e4d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "03a1ec7b-4e41-43c0-acc9-ef0c32c36808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a060cd64-660f-45da-a625-476157e1ab13",
        "cursor": {
          "ref": "45270ca7-eb99-46bb-b1b7-c46259803a48",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "28cd2093-3798-4411-90f7-156e39ff5e45"
        },
        "item": {
          "id": "a060cd64-660f-45da-a625-476157e1ab13",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "664c21e5-10bd-4583-b120-a88ecf5c1aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdadea2-ebd6-4a31-b59f-1cf91542a435",
        "cursor": {
          "ref": "05fdfe01-51e5-4d3c-ab3a-b8c18b252b12",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c4f56ff-1bca-4618-9212-4a9e750b2ce9"
        },
        "item": {
          "id": "0cdadea2-ebd6-4a31-b59f-1cf91542a435",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "25f3c464-fc6f-4c52-8446-bd91ae4cee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435eaefb-6624-4b82-aac8-30071b4c773a",
        "cursor": {
          "ref": "a3e7cdd4-f4fb-459b-9d6a-9455a60e9341",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e5d62ee9-9dff-453c-95dd-080605eee5e1"
        },
        "item": {
          "id": "435eaefb-6624-4b82-aac8-30071b4c773a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f176899d-bd74-4c9e-9b0c-74d06fa2542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4ac0a8-f473-4570-b624-541d01c22ed3",
        "cursor": {
          "ref": "2ed09cc7-6b2c-4f1c-859e-8cd3aee973ec",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "913787e5-2a62-40db-b9b5-bb3d5d70f173"
        },
        "item": {
          "id": "df4ac0a8-f473-4570-b624-541d01c22ed3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e236cb97-1a50-4726-b3f4-a14577a43952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6bf0a6-490b-406a-9edf-cecb1a597fa4",
        "cursor": {
          "ref": "37c33eec-2eb5-4545-bf2d-bf629ed5574b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "40058862-4bc0-4b54-b9ed-e2b25dd3ac0f"
        },
        "item": {
          "id": "5e6bf0a6-490b-406a-9edf-cecb1a597fa4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "744ef693-2de5-4524-a156-acc859bfb604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb47af5-6ce7-4c63-aa54-295ebeba6918",
        "cursor": {
          "ref": "18bcf9e5-5a61-40e8-9227-49c804a60e1a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c1471238-c6a7-4d21-a499-32765eb578a4"
        },
        "item": {
          "id": "3cb47af5-6ce7-4c63-aa54-295ebeba6918",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "48393160-919c-4fa1-8a2d-156a511ed7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27a5eb5-9857-4d41-bca8-1e83edaa4afe",
        "cursor": {
          "ref": "782aa4d3-2ca5-4488-82af-e5f9e0a5977d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "19084635-5283-4336-9582-33df5aaa83dd"
        },
        "item": {
          "id": "b27a5eb5-9857-4d41-bca8-1e83edaa4afe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8b55b950-5ba1-453c-a835-c34bd24a9707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26330b5f-9137-4de4-ab9b-c3589b51d715",
        "cursor": {
          "ref": "fd80f126-594e-4f42-97e4-352164a08756",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d23da71c-3f4f-4abf-95fa-142a5d3c363f"
        },
        "item": {
          "id": "26330b5f-9137-4de4-ab9b-c3589b51d715",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "284411ae-fa1e-45af-a1de-9330840217ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251298d2-07c4-4490-b9f8-462c42c19af1",
        "cursor": {
          "ref": "24635a9c-05a9-4874-b107-1f7125275116",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8838d40c-b261-4fd6-9bae-ddfc3c1d61ca"
        },
        "item": {
          "id": "251298d2-07c4-4490-b9f8-462c42c19af1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ca42e1ad-8fbe-4302-9ce2-b095b8f86091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4353f8e1-7006-408b-b28b-abcb99abe1b3",
        "cursor": {
          "ref": "3b952ac7-f1d5-4732-82e8-7a6e9c4b93d7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "45b54b62-ecd7-481c-8720-5d2228bfd6c0"
        },
        "item": {
          "id": "4353f8e1-7006-408b-b28b-abcb99abe1b3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d908dc74-6542-48a8-8ac2-834ffde1d14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09f8f31-b192-4f08-9e35-d74e566c2a57",
        "cursor": {
          "ref": "d243123b-f7c6-417c-8e4c-35127f1ff1fa",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "75cb23f6-8250-43dd-9290-b6d07260dc8f"
        },
        "item": {
          "id": "c09f8f31-b192-4f08-9e35-d74e566c2a57",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "86f5ea00-bfbe-4851-bad0-aa4f50edef44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2079a1c8-83e7-4d2f-9197-0cca2f7ccc20",
        "cursor": {
          "ref": "cc82bc99-f798-46fe-b3dc-9c6575a70f67",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b67bbb73-c62e-446b-aa5b-b528c1aad61e"
        },
        "item": {
          "id": "2079a1c8-83e7-4d2f-9197-0cca2f7ccc20",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7aeebb7a-99e5-4151-8006-6e9be77d0169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a609860-9edc-41b0-8ea2-fbd9a34545db",
        "cursor": {
          "ref": "e82eef22-ce98-41b5-9ae2-3047a8513568",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "10f7ed0d-67b6-497f-a42a-6f2667c5e7f7"
        },
        "item": {
          "id": "2a609860-9edc-41b0-8ea2-fbd9a34545db",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a97792b-633c-480d-a6e5-af8579a2c61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c315b3b-4f1e-49e6-9efc-b853fc3bd566",
        "cursor": {
          "ref": "77152aa6-f148-43ad-90ba-5088bacaa44c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c75740b5-8feb-40d7-995d-f9d4b299ef33"
        },
        "item": {
          "id": "6c315b3b-4f1e-49e6-9efc-b853fc3bd566",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "284028a0-3f1c-47c5-a32f-a2febe0c147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfec2bc7-be48-4572-a24b-bf9cd79dbfed",
        "cursor": {
          "ref": "d1364675-1f15-4d81-b562-77ce17739801",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c774f251-77a5-4fc8-a2fa-3530bcad8cc5"
        },
        "item": {
          "id": "dfec2bc7-be48-4572-a24b-bf9cd79dbfed",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "063f6cdc-c186-4608-9144-4dec75f6256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef67ff38-3af9-4f85-adb6-8271c78dfad4",
        "cursor": {
          "ref": "bd632df0-3fc7-4be2-9df5-bbde203e063b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3fdb929d-4064-4eb7-bd20-08ff3d185768"
        },
        "item": {
          "id": "ef67ff38-3af9-4f85-adb6-8271c78dfad4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "571d768d-ec8e-48b8-a2e5-e7942c0396bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cee034d-4625-4799-a2d7-96125af8a8ea",
        "cursor": {
          "ref": "e89773b7-c16b-4a8c-8b22-f3e66afaa4d7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b31b8dfc-a5af-4b25-b36e-609d4ab79848"
        },
        "item": {
          "id": "4cee034d-4625-4799-a2d7-96125af8a8ea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1488865f-6552-4b5a-91d5-d6cd6e7a8631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2bbfd0-5b40-449e-89eb-d205ebab1758",
        "cursor": {
          "ref": "175a7f02-10b1-4517-9457-dd48b40cd9ae",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cd9e4edd-af58-4c8c-b55b-78ce9ef30caf"
        },
        "item": {
          "id": "ec2bbfd0-5b40-449e-89eb-d205ebab1758",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b5229d89-0da2-4d7e-ae42-1e8f79d9c760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b74b18-e21d-4977-8d41-e2c5917a6668",
        "cursor": {
          "ref": "41f50fd8-8ef3-412b-8bdb-327f3a26dbea",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f8bfa8c4-8bd1-4f99-a989-0bba4e090abe"
        },
        "item": {
          "id": "d8b74b18-e21d-4977-8d41-e2c5917a6668",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "da355978-d8ff-4cda-abcf-b829b5b23045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2de439-7f3b-4700-a414-285639c3ee8a",
        "cursor": {
          "ref": "4b2238d8-b80d-4e12-87d1-04c00012c7fd",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fa2c8312-f0a7-4dce-a417-00daa96b72ac"
        },
        "item": {
          "id": "5b2de439-7f3b-4700-a414-285639c3ee8a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bf7b0d8e-0284-40ca-9a15-7624c2ac192f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e209947c-d0f6-417d-b6af-bd6658683b46",
        "cursor": {
          "ref": "2fc0b1dd-af31-4d2d-a9ea-c66a3cf3c85e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a89ef656-4b25-4c95-b0bf-6c9cc1ef49af"
        },
        "item": {
          "id": "e209947c-d0f6-417d-b6af-bd6658683b46",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c42cb045-f514-494e-90a6-eec2eb9ca4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c9e653-ba35-4679-a0c0-8cb6d31dd7ac",
        "cursor": {
          "ref": "ccb85b70-2694-42bf-aa76-febc1d55c313",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "094888f6-cc94-4aa0-8fae-e5ded3f7a3e1"
        },
        "item": {
          "id": "f1c9e653-ba35-4679-a0c0-8cb6d31dd7ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f0e7081b-a8fd-4f22-be31-3991f3a656a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a34c04c-b542-4735-99a0-c7bee3fbd119",
        "cursor": {
          "ref": "63179107-9ec1-466d-952a-324bc7927c07",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6ed40f7b-9053-4bc7-9513-e871f719b467"
        },
        "item": {
          "id": "5a34c04c-b542-4735-99a0-c7bee3fbd119",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a7f6a86-9784-4dc5-ae50-258384742f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43828ce-ff2a-47fe-b5f1-ceab07554a82",
        "cursor": {
          "ref": "14294de3-fafc-4841-8fb6-3e5ba6d1a935",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2cbf96f6-b251-4222-a8e3-a7990a7079a8"
        },
        "item": {
          "id": "f43828ce-ff2a-47fe-b5f1-ceab07554a82",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f2ec2a7e-c074-4408-8b87-5c92945e0850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d0eea4-d2e3-4c73-ab97-d53f7a078f90",
        "cursor": {
          "ref": "2e6c7e95-b552-46a4-a1a7-f9d5d525b099",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "741d4c1e-c2c7-40a6-8383-9d26fa0eb48a"
        },
        "item": {
          "id": "76d0eea4-d2e3-4c73-ab97-d53f7a078f90",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2d87d532-3b0a-4618-a49f-8e6ee9926698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8006e-7140-4781-8860-4d53a8db2938",
        "cursor": {
          "ref": "bc20a46b-00af-4e11-8234-22b68c279e3c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4429c413-5c42-4253-8951-9a73a542624e"
        },
        "item": {
          "id": "b5a8006e-7140-4781-8860-4d53a8db2938",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a6cf1315-40e4-4b4c-a038-febf47c7a02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258087af-4326-454f-a0a1-fde50b8be34c",
        "cursor": {
          "ref": "037205fe-1a7b-4d86-9928-afa8676154ce",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9b05ed95-a4c0-4882-b525-e8ecfd3f5b47"
        },
        "item": {
          "id": "258087af-4326-454f-a0a1-fde50b8be34c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "412acaad-d469-4601-94d1-42fea849e2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb437e15-1b2b-47a8-9846-302fe68a619c",
        "cursor": {
          "ref": "1d7ef101-cb05-421a-bbed-d4ea892cfafd",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3ee1522e-98cb-48f0-8ade-fc4caac7e273"
        },
        "item": {
          "id": "bb437e15-1b2b-47a8-9846-302fe68a619c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "42cb3d06-b9f8-4fa5-ab07-1edc4a699845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c45894-eb37-4456-bf28-4ccf1daf6b63",
        "cursor": {
          "ref": "5c953d12-01ae-46f5-8085-6e5547b3b14a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9c027825-2232-4029-b823-3d80e78fbe5c"
        },
        "item": {
          "id": "88c45894-eb37-4456-bf28-4ccf1daf6b63",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "59beef40-e02e-4eec-84b3-11a21eaaae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38347263-327f-4437-a528-33e10bd5a702",
        "cursor": {
          "ref": "0eddf206-8b25-4749-b66e-24f453ff32fc",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "735798f8-b307-4049-893c-76fa178ac0f2"
        },
        "item": {
          "id": "38347263-327f-4437-a528-33e10bd5a702",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a0ccea8-635a-4bb5-8131-af6c6334a4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0c563a-1354-4616-93ee-59e7ddece227",
        "cursor": {
          "ref": "ed3e35e6-afb4-4f11-913f-4cde70d91864",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0714f6c3-2630-4ff7-81ea-bdb3c553acd4"
        },
        "item": {
          "id": "ce0c563a-1354-4616-93ee-59e7ddece227",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d54746eb-5fd9-49b4-94cc-e88fee7c5144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc23b0e-ebd8-470a-a7f4-ae739ede201d",
        "cursor": {
          "ref": "fd66246a-3865-407d-9f12-90b071e48a05",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "85316eff-4b02-4712-a976-fd9b36cf0d27"
        },
        "item": {
          "id": "0cc23b0e-ebd8-470a-a7f4-ae739ede201d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "575bbebf-c5b1-4b57-963f-994c3e5f14b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c27b4b2-7d02-4242-bc63-292c68450be1",
        "cursor": {
          "ref": "80b8e541-645c-49c2-a556-36310b45eb83",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8a46876c-1ec5-42bc-8dca-38344181db80"
        },
        "item": {
          "id": "1c27b4b2-7d02-4242-bc63-292c68450be1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f34412f4-20f1-47aa-9cfd-887b0f7c102e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337d2b96-c0ba-42bf-b9f9-fb2ec43b7a93",
        "cursor": {
          "ref": "d987fa27-17e6-4fe2-8b2a-cfd08d0da9a9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1fde5883-6ae7-4008-b158-0191a8a0c973"
        },
        "item": {
          "id": "337d2b96-c0ba-42bf-b9f9-fb2ec43b7a93",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fb1b649b-9921-407d-8414-c94ee7c427e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a677a300-736d-4508-81c2-68c0f8834d82",
        "cursor": {
          "ref": "f1de1629-5e4c-4c81-ba26-de34079b49d4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "38ff5afb-c787-4fe7-99fd-5c25215dbb8f"
        },
        "item": {
          "id": "a677a300-736d-4508-81c2-68c0f8834d82",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "59e84a2b-3384-4e2a-b417-750b896dc998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b68ae36-e500-4511-a04a-5d1c302ac993",
        "cursor": {
          "ref": "d18b6a2c-c07e-40f8-84cf-97368df958a6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b75a9790-b0e5-42b0-8624-24e232899a10"
        },
        "item": {
          "id": "7b68ae36-e500-4511-a04a-5d1c302ac993",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aa7978c5-9a25-444b-baaa-bbc4ecc131e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c0529f-eac9-4ec2-8b97-52738c0d9512",
        "cursor": {
          "ref": "c400e838-4d02-4103-98d4-3b0ef95ffd7b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "327d6f92-43cd-4407-8a41-bdb1d73f9687"
        },
        "item": {
          "id": "76c0529f-eac9-4ec2-8b97-52738c0d9512",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "95da2d40-5f76-486e-9fe4-9cbfb78913ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01303d6c-ebe6-420e-9de9-ee6d764d38e1",
        "cursor": {
          "ref": "849f4a9b-1b5b-4f43-956c-b1a21781d9f2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4f152884-315a-435e-aacb-f0655956f6ab"
        },
        "item": {
          "id": "01303d6c-ebe6-420e-9de9-ee6d764d38e1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6cb337ef-37d0-4abf-94f7-03dadf33d8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f17a97a4-1bed-4028-9a3f-91bad58b969e",
        "cursor": {
          "ref": "b1911dc7-f951-4510-a36c-5276771a75d6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d9f3b4c-8893-465f-aa44-8459d2b890c5"
        },
        "item": {
          "id": "f17a97a4-1bed-4028-9a3f-91bad58b969e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9acd01ee-a706-4465-8134-5a2b2529250e",
          "status": "Created",
          "code": 201,
          "responseTime": 2877,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a20a26-066a-4c1b-b56a-2fa86bde7763",
        "cursor": {
          "ref": "fec29cef-7cbc-4d4c-bc7e-8830f959ea63",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ade83749-527f-4848-9699-c71cc99e3e6d"
        },
        "item": {
          "id": "b5a20a26-066a-4c1b-b56a-2fa86bde7763",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f662649-4a23-4f3f-89eb-6dfdb8a297eb",
          "status": "Created",
          "code": 201,
          "responseTime": 2268,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e6d7db-62e2-4ed5-b22d-ecc664df7e35",
        "cursor": {
          "ref": "2b533c58-3906-420d-9f98-dfd8c9bff5e2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7cba13b9-3df5-4126-b479-ac5ff0913d23"
        },
        "item": {
          "id": "e9e6d7db-62e2-4ed5-b22d-ecc664df7e35",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b7ef89e4-1c2b-4e47-a2fd-071b5651bd88",
          "status": "Created",
          "code": 201,
          "responseTime": 2221,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3d73f-1270-499f-b2fd-ae7068555659",
        "cursor": {
          "ref": "c7d367e7-2aea-4ad3-ab4f-59b3d0f62632",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0cacbd19-1ba5-4a71-abf3-db89820eafcf"
        },
        "item": {
          "id": "77f3d73f-1270-499f-b2fd-ae7068555659",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "11947294-c4e2-4fdd-aadb-b5c6cb367ed2",
          "status": "Created",
          "code": 201,
          "responseTime": 2741,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cefb606-7e7d-4390-ba9a-c80bbfdb739b",
        "cursor": {
          "ref": "a654c1a0-8837-420e-ae67-d6a7de41458e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4dc9835e-ea48-4999-b423-af1cceb96a51"
        },
        "item": {
          "id": "8cefb606-7e7d-4390-ba9a-c80bbfdb739b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "39689a19-425c-4621-8f79-1c41eeb8b53a",
          "status": "Created",
          "code": 201,
          "responseTime": 2119,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "826f22b2-71eb-4133-8ee5-46503b41cc46",
        "cursor": {
          "ref": "39f8a057-3546-46e0-8b95-0bef023858fd",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "26bcb21d-3901-4b1b-8a81-b0515603c3f0"
        },
        "item": {
          "id": "826f22b2-71eb-4133-8ee5-46503b41cc46",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1e2b5174-279f-48f9-bf2b-0de0f28bf99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a00e2655-968a-4cda-9587-97d9dd2543cb",
        "cursor": {
          "ref": "9831f68f-bc75-4c78-a6a1-a07aaaaf0bb5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f6fbfe33-bf8e-4938-84dd-0c874202f85d"
        },
        "item": {
          "id": "a00e2655-968a-4cda-9587-97d9dd2543cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ae77e620-2271-4770-a57a-8c3c13f11bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f6139-509b-4901-8290-5ccb62e2ada4",
        "cursor": {
          "ref": "c426b346-b649-459c-b1c7-5b60cb1aef79",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "31181e8a-0d65-462c-8f59-da403cc6367a"
        },
        "item": {
          "id": "b57f6139-509b-4901-8290-5ccb62e2ada4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0d4934c1-4a80-43f1-b747-c4d6f58a7147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4677915-2012-45af-94b8-8157074ab0e6",
        "cursor": {
          "ref": "dd75f565-5c85-4476-aa25-aa68e820abed",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c984322d-fb5c-4746-92d2-c09fa1cc90d3"
        },
        "item": {
          "id": "c4677915-2012-45af-94b8-8157074ab0e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f9ec422-287f-4e4c-9093-a55f89ba60c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dffcb5b-9dba-441b-aa04-d671d87acfb8",
        "cursor": {
          "ref": "5c825ab8-da48-4a41-8647-418a43fde13e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "43a79e3a-24cd-43eb-a6c6-73c437f124d8"
        },
        "item": {
          "id": "9dffcb5b-9dba-441b-aa04-d671d87acfb8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d8ef7ee3-0cd3-4061-aa9a-470822b8ea0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d524ea-f40b-45c8-8121-1d80bb8a3c88",
        "cursor": {
          "ref": "cf2569bd-152f-47de-aea8-b4b9452db657",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5db10d4-838e-4032-8e8c-de6df72980dd"
        },
        "item": {
          "id": "77d524ea-f40b-45c8-8121-1d80bb8a3c88",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bfcbc299-2fc1-4bd4-a6f1-9f27a4cbd19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57f4a77-e8da-437e-a73e-27ebe09ec924",
        "cursor": {
          "ref": "93d4431c-3bc1-430f-8c8c-407677802c9c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "29ebac4e-21de-4d39-adbd-c91a1717f985"
        },
        "item": {
          "id": "f57f4a77-e8da-437e-a73e-27ebe09ec924",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "85b073ff-eb19-48a3-8dcd-65e8396054ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c76c73f-71b2-4cb7-adb3-18699306f908",
        "cursor": {
          "ref": "d9806ab8-2988-4066-bd94-668449520f27",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5651725b-be27-4cb6-8897-7494600d7be5"
        },
        "item": {
          "id": "0c76c73f-71b2-4cb7-adb3-18699306f908",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "01eecd79-9418-4cf4-b45a-2253884b662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0607f6e3-d8c2-4957-8eae-ce46d9cdc1b0",
        "cursor": {
          "ref": "56472724-f820-4a98-b9e7-3ae9c3e2a3a3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3aca7887-0dcd-47b6-ac31-a36c3839eeff"
        },
        "item": {
          "id": "0607f6e3-d8c2-4957-8eae-ce46d9cdc1b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c64b8241-de3a-4737-b32d-726948234e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3223171-1dec-46f0-98e0-63c8a37b2d48",
        "cursor": {
          "ref": "4b493064-23db-4694-8210-19093c2ba73e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1e4bf266-0151-4e51-9d34-669b4327b181"
        },
        "item": {
          "id": "b3223171-1dec-46f0-98e0-63c8a37b2d48",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "68839af3-ac27-4aec-a6f5-f181e7072208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f99d3d-ed9f-42a9-8e05-19980ff60722",
        "cursor": {
          "ref": "b43c9d38-77ba-4297-a5fc-dc6974906991",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1ca4244e-92f5-4609-9635-66e4d2f6d6d2"
        },
        "item": {
          "id": "d3f99d3d-ed9f-42a9-8e05-19980ff60722",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa6bf60e-42e7-4824-b261-c54ba478dc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444f224c-892c-4e8a-823f-64896c14eff7",
        "cursor": {
          "ref": "67b67db0-a8a8-47f3-8ef3-a3ab56d20d2d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6dde71f1-f392-4e63-b798-d623cf0bc658"
        },
        "item": {
          "id": "444f224c-892c-4e8a-823f-64896c14eff7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "026b6630-d4df-4e76-a89a-b416b54c4661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a9dbfa-88c9-430a-99c3-504292508ee7",
        "cursor": {
          "ref": "0f63f6f4-eede-477c-bb5e-3891ac2d1f8a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "136d5aef-0b33-40a3-a26b-cc92b7f341d2"
        },
        "item": {
          "id": "01a9dbfa-88c9-430a-99c3-504292508ee7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "988d7bc4-9208-4e7f-bae2-30f5f749a6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59abaec0-e25a-421f-8f01-85ffffb27d16",
        "cursor": {
          "ref": "d005fe6a-00e2-4fc2-a496-67fba74cd17e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6c341b75-d755-45ef-91e7-693ec75ff96f"
        },
        "item": {
          "id": "59abaec0-e25a-421f-8f01-85ffffb27d16",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ae3f36ed-529d-4665-ad55-7f480222c5bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 110,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ae87cc-bcfb-49db-b4f4-ab7090cb196a",
        "cursor": {
          "ref": "f640f3a1-4976-4472-90a2-87abec7867e2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0ab02a98-e435-4882-aa7e-6e9e39603ec6"
        },
        "item": {
          "id": "01ae87cc-bcfb-49db-b4f4-ab7090cb196a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b3df57a7-7bb4-4918-944e-6abf5d42f40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1984da-f619-4399-b04e-9cce3998f202",
        "cursor": {
          "ref": "ad6cd1f6-6433-47b3-b06c-d5bbca5ba614",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf5fcd21-27a9-4120-88ab-a4ddf89bd544"
        },
        "item": {
          "id": "ba1984da-f619-4399-b04e-9cce3998f202",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54760f99-74f8-4ffd-917e-9c3fa135af83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3c96fd-0dde-42b0-b53b-cedfff398253",
        "cursor": {
          "ref": "5a10b5ef-3ec4-46a9-9bff-b5d3cb025df8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d66baa88-34f8-4672-9891-2fa58d21f495"
        },
        "item": {
          "id": "8b3c96fd-0dde-42b0-b53b-cedfff398253",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "934c346b-9866-4ef5-9e4f-8854009d4628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80865018-45a0-400c-ab46-9b167b8eabf7",
        "cursor": {
          "ref": "b53535c6-d575-4950-a3bf-b834cb67f35b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5c9bcbe9-1a9d-461b-ae04-fb9dfef58d12"
        },
        "item": {
          "id": "80865018-45a0-400c-ab46-9b167b8eabf7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b892dc72-ba45-4d27-b78c-91576592a1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6074bb34-0506-46f5-b6f3-2b10d1958673",
        "cursor": {
          "ref": "035664ff-8fc0-424a-9090-d13e7834ffd6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0c4b7361-af3c-48aa-90f7-1685888dd519"
        },
        "item": {
          "id": "6074bb34-0506-46f5-b6f3-2b10d1958673",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6504fd7-8e65-4b28-aadc-a83a5fea8128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f2e0bf-f924-443b-bc4a-630d8c8d6ba5",
        "cursor": {
          "ref": "2c79a2f7-70b9-48a9-a20a-9b55bfb34e9e",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dce30af0-9c3f-47ff-ba1e-ba50d2f50bdd"
        },
        "item": {
          "id": "d3f2e0bf-f924-443b-bc4a-630d8c8d6ba5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bec1e293-3eac-4eb4-9097-d35a0c320ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bb7d93-fd65-401d-82a4-fbc4ad69e522",
        "cursor": {
          "ref": "c7692aeb-f61a-46bb-babe-09a155c3e640",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a43a531-2bff-4f8d-804a-6d7fb6879e93"
        },
        "item": {
          "id": "e7bb7d93-fd65-401d-82a4-fbc4ad69e522",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "590f9d2e-38ee-467e-8475-225dfebe327d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26cd30d-d761-4cea-b6a2-4aad3d36781b",
        "cursor": {
          "ref": "e3614d60-d2ba-48cb-81de-092da5314536",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "95316118-a4e9-4a77-8240-74c6b2e6fe9b"
        },
        "item": {
          "id": "d26cd30d-d761-4cea-b6a2-4aad3d36781b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1f2f3d93-6967-4270-86c1-41bb83c8003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf36a4d-b568-4099-9456-47885775b12a",
        "cursor": {
          "ref": "76d3a73f-3df2-4330-b36f-a0cf1be8288a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5cf6da34-b3f1-49d1-98f7-8f7c291731bf"
        },
        "item": {
          "id": "8cf36a4d-b568-4099-9456-47885775b12a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5368677c-2883-4df0-9b07-1457db81a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a5e89e-b377-4862-a404-5666875549bb",
        "cursor": {
          "ref": "749fb3bb-ae0d-4ace-b90d-03f1f34098f8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d193d3c1-2c6c-4845-91e4-c520343092bb"
        },
        "item": {
          "id": "88a5e89e-b377-4862-a404-5666875549bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "705ebba2-3e29-45ee-ad69-3e404b781dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a8ee24-225c-41aa-940b-742a1101d696",
        "cursor": {
          "ref": "3e4ad9b7-b782-4b72-b979-3ebf5a70a14a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "67501b13-16a9-4dc5-ba32-5c70b587716d"
        },
        "item": {
          "id": "f9a8ee24-225c-41aa-940b-742a1101d696",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "947ce3b4-d924-485e-bbd3-c685a2512467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f220e6-5fc9-48e4-9140-913bc644b287",
        "cursor": {
          "ref": "81e6be78-046a-4fad-8271-00add6f2141a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99fa84a7-d174-463d-9e77-7d16b8f53411"
        },
        "item": {
          "id": "d2f220e6-5fc9-48e4-9140-913bc644b287",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27034548-fb8d-4102-9281-962be6f29813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b8357f-c066-4a86-b654-f8c8ebb5d42d",
        "cursor": {
          "ref": "a5c003d2-dc8e-4ae7-af76-8c1d5397efff",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c409de1d-ecaa-4911-b89a-0e0f0796dc2f"
        },
        "item": {
          "id": "b5b8357f-c066-4a86-b654-f8c8ebb5d42d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "24b870e8-2e62-4aa3-9859-1274491df8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32021c61-d467-40fe-93a0-80efbef0961f",
        "cursor": {
          "ref": "b6358194-60df-4f3a-9136-0631d3901d0b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e8d1ce18-f5a6-46e4-9458-445f7f74e38a"
        },
        "item": {
          "id": "32021c61-d467-40fe-93a0-80efbef0961f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6a3c9b16-587c-45c1-b5e3-e00c1cc323f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cd6229-a97f-4132-82d1-7b08e47dac9b",
        "cursor": {
          "ref": "fc0933eb-51ee-4e9c-8557-9cc498c72998",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "951a108a-0f5f-41b8-9c7d-0e92476329dc"
        },
        "item": {
          "id": "36cd6229-a97f-4132-82d1-7b08e47dac9b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5753667-fb04-4cba-9e69-9db073500619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed7bffd-8135-4f42-b9b7-bfcb0ecdfb37",
        "cursor": {
          "ref": "a39b58ee-646f-4944-91d5-57e4dca16715",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb357128-f47c-4c49-9ead-9321dc751992"
        },
        "item": {
          "id": "fed7bffd-8135-4f42-b9b7-bfcb0ecdfb37",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "be0c6e54-7543-4343-bc2c-c32df7646403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cdbcc3-32a9-482f-99d1-f10f6771316b",
        "cursor": {
          "ref": "d80e7b32-c553-4976-8602-4b0418b06a73",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "52de6f83-b53d-4edf-b5c5-fd10576438bf"
        },
        "item": {
          "id": "57cdbcc3-32a9-482f-99d1-f10f6771316b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f36ddf5f-43d7-4247-a835-e23d66240e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e866d77-c122-44e3-a574-bab85abd66b7",
        "cursor": {
          "ref": "9321c5f5-29d1-4631-9353-0e9c9c6e9f66",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "61e434e8-623f-4e3e-b7d4-c0701f9dcd5a"
        },
        "item": {
          "id": "7e866d77-c122-44e3-a574-bab85abd66b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5c9f3e5c-efd5-4d75-91cb-4c28fe8efb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dc039b-9b20-49f4-bf1b-03e4ff10d37c",
        "cursor": {
          "ref": "59e75ad2-6e51-4e6b-a8c0-316542268f13",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bb44ff06-d78b-4951-b60e-63bc31d5b177"
        },
        "item": {
          "id": "a4dc039b-9b20-49f4-bf1b-03e4ff10d37c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "96186816-683d-4642-86b9-b0ae85beb5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4633768-cc06-4c9e-bad3-d7f5434f14fa",
        "cursor": {
          "ref": "d80a3a72-4f1d-4a7b-8edc-9eb34b2cee10",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "391c4fea-e6fe-4881-a67a-c983770309f5"
        },
        "item": {
          "id": "a4633768-cc06-4c9e-bad3-d7f5434f14fa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8d025661-7ab3-4963-83a9-8c3445f64fef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d972665-25f5-4f6c-8e5d-cf467728a331",
        "cursor": {
          "ref": "80845ed5-5ae7-4844-a711-dd3e1440bcbb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b28145d2-a438-46c2-981e-519752f80ae8"
        },
        "item": {
          "id": "9d972665-25f5-4f6c-8e5d-cf467728a331",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d9ccd6fe-c2e9-441f-8d6d-140b94c74a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af49b77-4f03-4a9e-842f-63497cfa3b58",
        "cursor": {
          "ref": "5b366459-b38c-4c83-9e3e-3b2b4b479b3b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c3bf7736-7768-4f6e-aaaa-5c7a6cbdf8af"
        },
        "item": {
          "id": "0af49b77-4f03-4a9e-842f-63497cfa3b58",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c8b02027-084a-47b6-b22b-147b2ddbe784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7522cb9d-4fb1-4a08-b729-4a5738813e5f",
        "cursor": {
          "ref": "e71f7bde-0b79-482d-aceb-036c31eb5dc1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "91450157-162c-4670-aebf-b57a48bddc9a"
        },
        "item": {
          "id": "7522cb9d-4fb1-4a08-b729-4a5738813e5f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1076e2a9-bb73-4cf1-b6c9-f6ddaea129e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700ca55-a5bc-4b67-b14c-8af5487d361c",
        "cursor": {
          "ref": "e3454f55-dafc-4503-90ca-ad28830d0689",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d9075983-d5bc-4df4-b9c1-79ab3da8aeeb"
        },
        "item": {
          "id": "f700ca55-a5bc-4b67-b14c-8af5487d361c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3e62b454-402e-4fde-bdb5-09e79bd1f141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf8e46e-5dbc-48c8-a80e-2b7901c15d77",
        "cursor": {
          "ref": "b56b49d9-bf85-4bff-a164-0ff02e2aeef2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3f059417-7931-485a-a6b2-ec2e748127c5"
        },
        "item": {
          "id": "bbf8e46e-5dbc-48c8-a80e-2b7901c15d77",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57dd6f15-3dfd-4462-bb3a-76e6c06cc61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0de6d7d-4b2a-4844-bfec-cf79cec013da",
        "cursor": {
          "ref": "6df96333-5481-4a23-8edd-72f26f30d47e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "21014d5b-f9b5-4936-aab5-a4b385d2c79e"
        },
        "item": {
          "id": "e0de6d7d-4b2a-4844-bfec-cf79cec013da",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89d9ad06-44b1-4efa-87ba-8c01534e9b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffdaa8b-f630-49ec-a31c-df7d75c58dc6",
        "cursor": {
          "ref": "71b8c429-6040-436b-8abb-498309e0b08e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2696470f-2677-4bd6-a250-4feb8a8bfac8"
        },
        "item": {
          "id": "0ffdaa8b-f630-49ec-a31c-df7d75c58dc6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c5dc842b-efd5-45a2-9c18-633c3ce3b3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280892e8-4a88-41aa-b64e-2ef848ff180c",
        "cursor": {
          "ref": "3955b166-41ce-403d-91c0-382572883409",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e36cf47a-1f16-4b29-9cf1-8c3c9d1e4f7d"
        },
        "item": {
          "id": "280892e8-4a88-41aa-b64e-2ef848ff180c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7200f422-3e35-42e0-89d2-0480ffd03b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d54cef8-e9ac-444c-9b2b-d92e039aca4d",
        "cursor": {
          "ref": "e518768c-a03b-4797-854b-000d1117926a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a6612501-cd05-443e-bcff-0d2986898f3d"
        },
        "item": {
          "id": "0d54cef8-e9ac-444c-9b2b-d92e039aca4d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0678feaf-533b-4f4d-8ab1-f759b4ffbada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0d38ce-3687-489d-a6c2-cd46514bf1b3",
        "cursor": {
          "ref": "c13ddddc-0d40-43ce-ad00-faafba900700",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dbfbb32f-bca4-45aa-b44f-8719599ade52"
        },
        "item": {
          "id": "aa0d38ce-3687-489d-a6c2-cd46514bf1b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "13cb695c-e8fe-41e9-9028-a7c7943b32f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a776f1d-201e-434c-a6da-ab0465504605",
        "cursor": {
          "ref": "7ce01242-237d-4fc1-85ad-ff880c3b7564",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c53b9f7f-b3d1-462c-99f0-a4b9481cbb47"
        },
        "item": {
          "id": "4a776f1d-201e-434c-a6da-ab0465504605",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2a9c0ceb-129e-4a49-a123-1934ad15cdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb761c-1e8a-4f3a-a89e-a1a3ece2fee7",
        "cursor": {
          "ref": "ca7d6ad8-ae39-40ce-80e9-8182927e30f4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4cce6ce5-f393-46d1-a250-e818c80b7ed1"
        },
        "item": {
          "id": "8bcb761c-1e8a-4f3a-a89e-a1a3ece2fee7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53c646a6-91d2-4f83-8d48-6ff03a905445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0dcd76-007f-4500-b73c-7c16401f8d82",
        "cursor": {
          "ref": "b7ca6f5f-fbcc-4707-b04f-957f479643d9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9afca34b-d457-4b86-83d4-397983db74a8"
        },
        "item": {
          "id": "5e0dcd76-007f-4500-b73c-7c16401f8d82",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25bb6700-0687-4d80-b1c2-eee2f304d6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cc7feb-85a3-4f13-af53-37dd4497f02a",
        "cursor": {
          "ref": "a086c778-14e2-4761-9c73-0336217bd846",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cacae4c0-a045-428b-a839-3c1cc1a63ece"
        },
        "item": {
          "id": "17cc7feb-85a3-4f13-af53-37dd4497f02a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed6fc06d-bdfb-483f-ac76-99d68fdab566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c967dc25-0663-4e4f-9929-f990b75703c1",
        "cursor": {
          "ref": "bd8a4d57-54df-4aa9-8abc-b5d79c306d9b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6ce65a30-cc3f-4248-9d8f-7c65d15b2c46"
        },
        "item": {
          "id": "c967dc25-0663-4e4f-9929-f990b75703c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "120deff3-010a-4516-b96c-58e0a60308bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154175d1-91bc-4a2b-8802-a910f79a961e",
        "cursor": {
          "ref": "2174b2f2-9894-413a-a823-d9306e6a1d57",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cbe120a7-cdd5-4c8a-b24f-bc6b6549c475"
        },
        "item": {
          "id": "154175d1-91bc-4a2b-8802-a910f79a961e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ceec8cba-1125-4a99-8666-c2712f7f7e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b45e9c6-a9c4-44e5-b9f2-085ec9693ce9",
        "cursor": {
          "ref": "ff806d3d-438f-4744-b3ed-a38102706e68",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0be20961-7a25-42f5-8212-cd9bb279d8be"
        },
        "item": {
          "id": "2b45e9c6-a9c4-44e5-b9f2-085ec9693ce9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d208f65-cf9c-44ac-bd9d-903b183d106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ea198c-2c20-42b3-be9e-5f46ac589c7e",
        "cursor": {
          "ref": "e7d40f18-b9dc-4875-b859-67df52271c7f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d77f6a19-379e-4e23-ae08-3051816b6e91"
        },
        "item": {
          "id": "10ea198c-2c20-42b3-be9e-5f46ac589c7e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "836c84c2-3dce-4e5e-a359-3722b8cfcde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0d340b-fb0c-4fb1-88a3-0b3b2af730e3",
        "cursor": {
          "ref": "a5073b18-64ca-4076-b0d2-bcd100b7d8a9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4f24a7f5-1a1a-4fc8-86b4-e96071986731"
        },
        "item": {
          "id": "6e0d340b-fb0c-4fb1-88a3-0b3b2af730e3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "25ca54f6-e441-42f3-97ff-657193c300f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a576da-3591-495e-b9ed-16c42a573b40",
        "cursor": {
          "ref": "4ff0fc56-c9ec-42eb-9473-1947c651255b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "10d9e7e7-f93f-4096-9e69-cc51695df55b"
        },
        "item": {
          "id": "81a576da-3591-495e-b9ed-16c42a573b40",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "48c14891-dbf0-4dd7-a120-45dc28323e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2acf39f-cf9e-4cca-ad1c-acc3486ba64b",
        "cursor": {
          "ref": "95ababaf-e496-43a9-bc88-fc088e7fb8e5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a04039a9-133a-4667-9d1a-278fa7574ff8"
        },
        "item": {
          "id": "b2acf39f-cf9e-4cca-ad1c-acc3486ba64b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1f0a277b-0b3b-47a2-911b-90baaa826966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aef0239-5a5b-41fb-85d2-88613cea7fbd",
        "cursor": {
          "ref": "03f7a35b-9e77-4337-8dde-78ee55e871c1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "746b2b59-2183-474c-b85c-948121fb53fb"
        },
        "item": {
          "id": "3aef0239-5a5b-41fb-85d2-88613cea7fbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "67612056-4b8f-4735-b85f-3ca8db831002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce945f2-a48b-4eb0-9411-37062a05bf48",
        "cursor": {
          "ref": "7f808aa1-83a6-4f27-a260-54b8f2dfd441",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4831294b-3885-49a1-aba2-818a25511c41"
        },
        "item": {
          "id": "2ce945f2-a48b-4eb0-9411-37062a05bf48",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e68a5860-473c-4337-90e6-001ed22f562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dcd93a-eded-4dc6-a3b3-e0592966b3b9",
        "cursor": {
          "ref": "46858d73-090f-477e-8aca-d249912cd4ce",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "554d56cd-c460-4145-9514-6bf944ea5da4"
        },
        "item": {
          "id": "84dcd93a-eded-4dc6-a3b3-e0592966b3b9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d897ab6a-2c5b-4ff4-8a3e-83835d15d123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847bba98-5db3-4818-a47d-5af9b05ad23d",
        "cursor": {
          "ref": "ca0c6ede-160b-4b2b-b09d-37fcbb982d7b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b68e5d3c-d369-43a8-ae89-6377e7640121"
        },
        "item": {
          "id": "847bba98-5db3-4818-a47d-5af9b05ad23d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b46f9649-bc8b-4ca6-af7b-7fb721179808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab26900-a749-4b8a-9431-6c68074248fb",
        "cursor": {
          "ref": "6298d8fc-8ea9-4a68-aa80-6216356f94b8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3c8a1e73-15c7-426a-8c4f-e16376918d27"
        },
        "item": {
          "id": "6ab26900-a749-4b8a-9431-6c68074248fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07feeeef-0f72-469f-92ef-c00d70fd3c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0e39b4-35f1-4a3f-9286-88a3b8bcbb17",
        "cursor": {
          "ref": "7aab60a0-34ec-4528-a223-3430fde7daf4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "415f347f-8db2-4b53-b042-6b6825eac74f"
        },
        "item": {
          "id": "3b0e39b4-35f1-4a3f-9286-88a3b8bcbb17",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "049487d4-72a2-4067-a77c-eba598433591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429e98f2-1e38-4858-b812-0c58fa930208",
        "cursor": {
          "ref": "3c6eec4d-b3cf-414b-8e06-f8e550770675",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1940aa18-9cde-463e-bb5f-c8fbd44b2765"
        },
        "item": {
          "id": "429e98f2-1e38-4858-b812-0c58fa930208",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d24f7262-b1b4-4945-a660-2eb3e099843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b99aa-1c6f-4a51-bcf0-8d381d542783",
        "cursor": {
          "ref": "9932b9eb-3bd0-4f7a-babb-ff87985b7735",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "30ca40b1-1fac-4fa7-a87c-04ae345383f9"
        },
        "item": {
          "id": "e25b99aa-1c6f-4a51-bcf0-8d381d542783",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fafe4832-d049-4853-a08e-45a871887e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678b1ee6-9972-4f99-94f6-0217a00b03a8",
        "cursor": {
          "ref": "b6dc0b40-2641-4614-9a25-7a5fa64b80a2",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1b9a4bef-9691-406f-9396-3aaced70a729"
        },
        "item": {
          "id": "678b1ee6-9972-4f99-94f6-0217a00b03a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b7ce5c06-2b94-48ce-a5d7-b93da610e9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccd17bc-2b63-4ade-a23d-7a6d619ee088",
        "cursor": {
          "ref": "aeb26910-3ca0-4b4d-a6ec-3d2a9651a4c1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "10c4d734-e708-4f40-91bf-3b93702beb9d"
        },
        "item": {
          "id": "2ccd17bc-2b63-4ade-a23d-7a6d619ee088",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db51374c-50ff-49bf-b9b2-6f2cd3c83386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1a9101-b071-4805-993f-e6c17f629f19",
        "cursor": {
          "ref": "ff4cb9d6-2416-48fc-92d7-283cc1082cbe",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "636b690e-ced1-4c44-8e89-bdb891196dec"
        },
        "item": {
          "id": "2e1a9101-b071-4805-993f-e6c17f629f19",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bda6b637-5583-4810-9be9-8b4f1196f06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e84482f-4a0b-416b-9734-03a591bbe811",
        "cursor": {
          "ref": "17b97114-ff12-46ce-bebe-e6457498199b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3a24ba4d-4949-4220-8f0b-67d251d212fa"
        },
        "item": {
          "id": "1e84482f-4a0b-416b-9734-03a591bbe811",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "443f5400-49fd-4207-bffe-3294bc8236c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26867751-8518-4e3f-a0a5-7aeff6b5af1f",
        "cursor": {
          "ref": "b0f0d9be-900c-4a50-bf5a-459ef86d93b0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "270315d4-47cd-4b8a-bac7-3aa7f86f1bd9"
        },
        "item": {
          "id": "26867751-8518-4e3f-a0a5-7aeff6b5af1f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f7b6ab28-bbea-4074-a071-79a293e1f85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d7875-bf03-4458-909a-e1c8bc0b83aa",
        "cursor": {
          "ref": "5ab3e312-4242-48aa-a6ca-951097397482",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7c5dfcf8-0419-4c78-9939-dd8a0d49b779"
        },
        "item": {
          "id": "230d7875-bf03-4458-909a-e1c8bc0b83aa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "97f1c5de-c46a-457d-b341-3929a0d94283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb19010-2cc4-41e3-a159-f3eecf235679",
        "cursor": {
          "ref": "3daf1dbb-90e6-453e-a183-4747b479086b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba6ad0dd-4647-4482-9605-866ef4f2cb59"
        },
        "item": {
          "id": "8bb19010-2cc4-41e3-a159-f3eecf235679",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d5fb5cdc-d156-45b0-852b-8e9335f47d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c01b03-9dae-47c1-aab5-7615907d0a83",
        "cursor": {
          "ref": "029bb4c8-feea-4f75-a310-84abb963fd1d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "360f2fcb-dd22-43a0-9708-a80b16e3ce9c"
        },
        "item": {
          "id": "00c01b03-9dae-47c1-aab5-7615907d0a83",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3968afa3-4bc0-466a-a8cc-cb06e6c77213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2879eab0-ad4c-4090-8ce8-32fe5614ee2d",
        "cursor": {
          "ref": "0375668c-f7ed-4c49-afc5-bb610cd664ad",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "49ded06c-d191-40d9-9151-9754491d6bbc"
        },
        "item": {
          "id": "2879eab0-ad4c-4090-8ce8-32fe5614ee2d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4e25ddb-610a-4ab4-a701-65f71948d0e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80cb432-a584-46c6-b5c5-43b8431716a7",
        "cursor": {
          "ref": "18bf14fc-e035-4ae9-9359-18c63e8f0f9d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "134e99f9-197f-4f39-8104-17e2cf50a87e"
        },
        "item": {
          "id": "f80cb432-a584-46c6-b5c5-43b8431716a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6d11c860-3948-4127-a70d-b9b2739ae0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee41574-aa90-4482-bfc4-67d109e2127f",
        "cursor": {
          "ref": "8816608b-86cd-41ce-b2dd-43a566d5f684",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0e4fdd50-51d7-416a-8887-012676060235"
        },
        "item": {
          "id": "aee41574-aa90-4482-bfc4-67d109e2127f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8df2667d-18db-46d5-97a1-d9f3d151ca54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949c9e6f-09b3-4932-b789-1f76ba8d3bdb",
        "cursor": {
          "ref": "ecbe2874-3f5a-4cae-8adc-17796f1e3998",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0969fdcf-1674-406d-aef7-bff6f4008fdc"
        },
        "item": {
          "id": "949c9e6f-09b3-4932-b789-1f76ba8d3bdb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b40f825a-0e27-4690-b432-6e658f7d51c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9846f5-b199-4622-b631-774403050e9f",
        "cursor": {
          "ref": "0527d44e-f44c-46d3-a591-f882f256c321",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7bb51140-5ecb-4a64-b477-05c12849f751"
        },
        "item": {
          "id": "6f9846f5-b199-4622-b631-774403050e9f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a539a95a-1da5-45eb-a59a-04fa7d14a1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973bb89f-dc90-4256-9903-def55a20e16d",
        "cursor": {
          "ref": "940f6feb-0807-4f58-a41d-cf780ab6e55e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "130c649e-8ee6-41f8-ad31-9634759114f5"
        },
        "item": {
          "id": "973bb89f-dc90-4256-9903-def55a20e16d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c64c09ad-9e29-41a0-8603-73e07d39cea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073cf02c-01fc-43c7-a8cc-b5a5ff2f9d8d",
        "cursor": {
          "ref": "d2f68091-3920-41b0-a9bb-f0500489c0b8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b0814bb0-5a8a-4bc2-82e1-a4a931e6ad9a"
        },
        "item": {
          "id": "073cf02c-01fc-43c7-a8cc-b5a5ff2f9d8d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "706cb7d5-5c93-42cc-accf-e1867f81aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ea36dc-b4a3-4694-bf63-00bba4ffe410",
        "cursor": {
          "ref": "b035fd98-1827-4e08-b138-832d2d093281",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f244a84e-e0f1-46ea-a7ba-94c15fc11a46"
        },
        "item": {
          "id": "27ea36dc-b4a3-4694-bf63-00bba4ffe410",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ff683a31-fe65-4df5-b424-9bca3a33d621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c47eab-b8e3-4e37-b733-4efb1bb6e967",
        "cursor": {
          "ref": "80cc4aee-b407-4881-b844-519719b1640b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f065ce3b-bda5-4748-b6c1-465778f27dac"
        },
        "item": {
          "id": "73c47eab-b8e3-4e37-b733-4efb1bb6e967",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f91bf208-d774-44ca-a0e6-fa144a5b0133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3feb9e-50ad-4bf7-adec-d447b0a67bbe",
        "cursor": {
          "ref": "447c1dc9-4413-48e4-8818-6d27aa8bda5a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fb6b641c-8eb3-4c5f-8ee6-17a66d6fa6b2"
        },
        "item": {
          "id": "bf3feb9e-50ad-4bf7-adec-d447b0a67bbe",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5b0256ae-662c-4faf-bc12-fa45d4c93def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c7589a-7780-434b-b61b-ab66e56b65cb",
        "cursor": {
          "ref": "d8423751-d15e-4db3-8566-55500bc37312",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ccfd13c4-b399-483e-a528-2e691388d5b9"
        },
        "item": {
          "id": "b2c7589a-7780-434b-b61b-ab66e56b65cb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a6475ca1-bf57-47a4-b591-8bfb7517b291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56917c8e-170b-4e11-ac95-cacab03ee867",
        "cursor": {
          "ref": "7f2a733f-654e-403b-937e-b5beb1ae4fed",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5cacd656-7396-4ba2-9541-a78a9a723d9c"
        },
        "item": {
          "id": "56917c8e-170b-4e11-ac95-cacab03ee867",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6ebdb8d4-218e-4bd5-856b-51d27fcbbd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929cebcc-c4fe-4f19-af6e-3925a4726a91",
        "cursor": {
          "ref": "92a16bdd-de21-42c7-b3c7-030a0740288e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "df6f803e-7739-44b5-875f-aecd29209f94"
        },
        "item": {
          "id": "929cebcc-c4fe-4f19-af6e-3925a4726a91",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4f654217-adee-41a4-b1b1-c7503bc7ff23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ccc716-d2f8-4e94-88f4-9700a8e2ef06",
        "cursor": {
          "ref": "fd507684-3dda-4225-b8f8-c12d7f55b9d4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f71bf0d4-22a8-4454-9588-59e907577e64"
        },
        "item": {
          "id": "79ccc716-d2f8-4e94-88f4-9700a8e2ef06",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "14eafc48-460d-4e81-b29c-ba025ceb6c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77352c1a-e154-48fe-b722-a32b88590266",
        "cursor": {
          "ref": "bbd0ee0e-fdca-4f1c-98d4-85ecb7441e11",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0d280b1f-35d6-4448-9db8-7868f9c0a75f"
        },
        "item": {
          "id": "77352c1a-e154-48fe-b722-a32b88590266",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fd44cdfa-1897-43b8-8e6a-10b34171ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbf5ce5-5d17-4941-a627-4dbe462c522d",
        "cursor": {
          "ref": "6befbf91-ef22-48b7-8788-e0976d3ce946",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8836b3e8-8ec4-4819-a3bd-abe7e1aded14"
        },
        "item": {
          "id": "fcbf5ce5-5d17-4941-a627-4dbe462c522d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f639952-17a8-467d-ba01-7cd341447cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5eecf5-07f0-48c9-91b6-d622d3a16903",
        "cursor": {
          "ref": "bf463928-e2f0-4aa6-899b-058ed91e7bfb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "34d52741-7740-497b-8a28-cac24cb624a0"
        },
        "item": {
          "id": "ba5eecf5-07f0-48c9-91b6-d622d3a16903",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c3225087-4180-4ea1-9f66-1a2b7f23c154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0441bcbd-557d-420b-9614-57dc4da4ba2b",
        "cursor": {
          "ref": "d4d89514-8623-4c97-b5e5-c88010234b31",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "869675c0-361a-4b3d-868d-52d2d16dd18f"
        },
        "item": {
          "id": "0441bcbd-557d-420b-9614-57dc4da4ba2b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d0a7b051-9d75-428c-b029-988d078b0648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6ad63-48b0-433e-9db2-dab79a083e4e",
        "cursor": {
          "ref": "842295f1-3bd5-4e5a-888f-0f505d799c44",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a3f7fceb-8222-4296-946a-f4e29b3f942d"
        },
        "item": {
          "id": "09c6ad63-48b0-433e-9db2-dab79a083e4e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "faea683b-ce5b-48ca-97c1-d87483a8b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d445e-3023-41d9-9e47-1137f8c89714",
        "cursor": {
          "ref": "a152029e-4f39-4212-9c60-128650426275",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2a0913bd-e2ae-4270-a4ee-dcb30717f5c7"
        },
        "item": {
          "id": "9c7d445e-3023-41d9-9e47-1137f8c89714",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0b11b280-62ae-40ca-ac34-e3a5e85d5eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea53d2-6d16-4377-9c0f-11cee54111cb",
        "cursor": {
          "ref": "ad529f9e-e75e-4e1f-9dc7-76f361f7bba1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "38e2dda9-39fc-472c-8b20-57c82820b4b9"
        },
        "item": {
          "id": "53ea53d2-6d16-4377-9c0f-11cee54111cb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6e74cb06-1779-422e-891d-91c86690681e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a46e82c-ff99-46fc-a8d9-2a52cd871713",
        "cursor": {
          "ref": "98f10df9-d4d5-4076-9de3-9f190a4c7f58",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a3d7e68c-fd70-478f-ae57-d0ed7894d1af"
        },
        "item": {
          "id": "6a46e82c-ff99-46fc-a8d9-2a52cd871713",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9df0d64e-ec68-4e16-a295-d1f449873080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa983a30-c42d-4e0a-8103-bd44d12f6f6f",
        "cursor": {
          "ref": "060358f1-b275-40cc-8038-d71abd924395",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2891c653-0247-4e88-a5bf-7184520427e8"
        },
        "item": {
          "id": "aa983a30-c42d-4e0a-8103-bd44d12f6f6f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d8d542bc-2c78-4527-94bb-6374f93431ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab32a82-b0b2-45d5-9467-4cdb39879803",
        "cursor": {
          "ref": "6c13192e-0a28-4c73-9c89-79c8e701c22d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ad4cacc3-f508-4e54-b803-1698a79bb2d5"
        },
        "item": {
          "id": "eab32a82-b0b2-45d5-9467-4cdb39879803",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc66c0dd-2547-4ef0-a5f2-ab3a2fa77b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f4cab-6297-4708-8267-5f06928f0fd8",
        "cursor": {
          "ref": "fa005297-78f3-403a-a139-4e82a454f034",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0e0a4ad4-44e9-4197-8e56-eb3f50e7dd1b"
        },
        "item": {
          "id": "855f4cab-6297-4708-8267-5f06928f0fd8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03793714-316c-4fc1-b739-c885c12dcec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aed9362-cefb-402b-8654-cabc9b2b1c81",
        "cursor": {
          "ref": "c56c372e-26a0-4b8c-bc0b-a9fcf678cd62",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01a93de7-8a79-4da6-b4ce-1185f15db13d"
        },
        "item": {
          "id": "7aed9362-cefb-402b-8654-cabc9b2b1c81",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0a0d9f0f-9e4a-454d-bdf4-fc808d13a138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db30a6d1-3972-4c60-a25e-3fceaa82c022",
        "cursor": {
          "ref": "1744e879-4047-4ff7-8df4-14805877d0a9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cd0fe966-236f-4259-bd22-023e140694c0"
        },
        "item": {
          "id": "db30a6d1-3972-4c60-a25e-3fceaa82c022",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f10fc27-7668-4aea-9dd1-0c71e9bb0f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61202337-63a4-4d38-9c36-b92b3c3b4d5a",
        "cursor": {
          "ref": "c90a64ea-1470-4f76-a04d-d64477e774c0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "29d9f4d2-d297-46cc-8b41-1ff0ae7f4a2d"
        },
        "item": {
          "id": "61202337-63a4-4d38-9c36-b92b3c3b4d5a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d65a585-9802-4418-bf15-fd0ba8f4de4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a313ab62-be28-4ab0-82cc-605cb52a4909",
        "cursor": {
          "ref": "93d3718d-b3cf-4d27-9077-a7dac186fdca",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8de55f8a-5464-4d02-b6b2-e709ea5c163a"
        },
        "item": {
          "id": "a313ab62-be28-4ab0-82cc-605cb52a4909",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3d551213-dc94-470e-a0f8-4e3ded42f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c0c80-73c5-45dd-8135-bef2245bfb62",
        "cursor": {
          "ref": "a4b83de1-064e-4b1b-a9cc-b23ddcedda4b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1c634b9a-b116-447b-9f07-6aaed4b3a4d5"
        },
        "item": {
          "id": "292c0c80-73c5-45dd-8135-bef2245bfb62",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d61e9574-12c6-4690-a858-938d2dc6f036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3327f-3021-468f-89cc-c52ee328bed1",
        "cursor": {
          "ref": "040d26f0-2621-4a9e-aaa4-f388b8804b4b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "34110cd1-cf94-44ed-a7da-e54d51730240"
        },
        "item": {
          "id": "79c3327f-3021-468f-89cc-c52ee328bed1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6b260de1-1c63-4c9c-bdc9-39759c0801cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6f6ae0-106f-4e29-a052-679e77fbb41d",
        "cursor": {
          "ref": "ce466c20-66b8-4eca-818b-d2d510a599d3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c16b6de-c409-4014-af4e-e7f4170b0dd1"
        },
        "item": {
          "id": "bb6f6ae0-106f-4e29-a052-679e77fbb41d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d82dd21b-adc7-48d6-9827-b1c75aaa5baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482333e3-2ee3-486f-848a-181978b40809",
        "cursor": {
          "ref": "aa07b3ee-de57-4536-bea5-b130243a14f3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9f97afec-39ac-4339-9a60-8f68212f72f6"
        },
        "item": {
          "id": "482333e3-2ee3-486f-848a-181978b40809",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3738f5b6-2858-4bed-b595-9c7f80de09e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3b6566-6523-4d0c-bcae-67907ae0f5a4",
        "cursor": {
          "ref": "4c0ce8de-deef-49a6-ae26-b113f2c9cba1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b70c3ce9-3899-48c4-ba42-96423324bd0f"
        },
        "item": {
          "id": "dd3b6566-6523-4d0c-bcae-67907ae0f5a4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bf980bce-b11b-4ad3-8ed3-6cf4aa416cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08711020-172e-44ae-b401-9d6c70f23238",
        "cursor": {
          "ref": "0ec9b1f4-f33f-49a1-9e35-eedba3650824",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "91b59ec3-9a15-4646-8060-8cdd100dc7cb"
        },
        "item": {
          "id": "08711020-172e-44ae-b401-9d6c70f23238",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "61989d47-e772-471a-9790-5e7d58cabc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff8ab26-2475-4b77-8a85-3a11dd007755",
        "cursor": {
          "ref": "35aa273e-f873-49f6-a51a-cd7ede044aa4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c7278b44-e2cb-4681-b2eb-0e5906333415"
        },
        "item": {
          "id": "0ff8ab26-2475-4b77-8a85-3a11dd007755",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a47463d3-910e-4d01-8f8c-21fe3b1cd39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc1eaf7-2898-441c-9dc2-65d0af24960d",
        "cursor": {
          "ref": "10811f3e-be43-419c-a738-6f563f2857ea",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "41cb2e5b-7447-4b9f-896d-38b0f75a1fae"
        },
        "item": {
          "id": "bcc1eaf7-2898-441c-9dc2-65d0af24960d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eeba987d-5a94-4f73-8d88-a179b1e2757b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254efb63-b6cd-4787-85ba-83ad5183b706",
        "cursor": {
          "ref": "7d2a6f78-8f9b-4750-a29e-00381b66a723",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8211040f-f91f-45d3-95a3-96992c94334d"
        },
        "item": {
          "id": "254efb63-b6cd-4787-85ba-83ad5183b706",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "96f34c1d-0910-4726-a8f2-aed1e741d136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d290f0-caad-4aa2-ad51-b9348a36cc59",
        "cursor": {
          "ref": "a1eddc5b-4ca6-4f80-abe3-b30a063f7497",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "edd2655c-af1c-4402-b991-c89bacd6511d"
        },
        "item": {
          "id": "50d290f0-caad-4aa2-ad51-b9348a36cc59",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dcb06345-fe4c-4acf-a6a4-2e9490bee596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cce781-fbac-4a80-9d3a-c9e162d8d232",
        "cursor": {
          "ref": "1a3890ee-434a-46ae-956d-fa77a38acc95",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9c463bd-0ef2-4f66-844f-bb637fc5b321"
        },
        "item": {
          "id": "d2cce781-fbac-4a80-9d3a-c9e162d8d232",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c689379c-54d0-421c-a2de-c702417bc058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a19244-53e7-482f-a8dc-587a9f04b7e7",
        "cursor": {
          "ref": "465f14ee-adf7-4881-b0e3-6244cc220576",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3192a179-edc2-4d9d-bfbb-9b6209bae040"
        },
        "item": {
          "id": "95a19244-53e7-482f-a8dc-587a9f04b7e7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "41069918-ec2d-4d7c-b5cc-11d2926f966a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d066170e-24fe-4bd5-bd36-7df39069936f",
        "cursor": {
          "ref": "b3930111-ec98-4b06-9fd2-36bc48aae000",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "75ddccf2-5988-4c6d-aa48-2bbc3e097a08"
        },
        "item": {
          "id": "d066170e-24fe-4bd5-bd36-7df39069936f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d12fd62f-ad66-4209-b16f-e4065296f2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114bffc6-b6cb-4983-a93a-3123dca00776",
        "cursor": {
          "ref": "a753c615-c8dc-4188-a0c2-b226b424fd46",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e0ac8f70-46a9-4e00-a96f-c26cdd16383e"
        },
        "item": {
          "id": "114bffc6-b6cb-4983-a93a-3123dca00776",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "53a7069c-0ff7-479c-af0f-da24c495155a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371e7005-b613-4f6e-a2a9-e97e991f64ab",
        "cursor": {
          "ref": "e7dfb9a2-70a8-4573-9ed9-ee24636130b4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "65a65720-9dca-4cf2-adcc-9eb54183eb2e"
        },
        "item": {
          "id": "371e7005-b613-4f6e-a2a9-e97e991f64ab",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2e5eee25-ea21-45d1-9776-555586f865fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3255b72a-ef9b-4340-9389-18caf02cfa3e",
        "cursor": {
          "ref": "9ea17de6-8355-4c29-875c-5ce45336c11f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd30c531-ca93-4ca7-b96e-9dc87e9d5e94"
        },
        "item": {
          "id": "3255b72a-ef9b-4340-9389-18caf02cfa3e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64cc568a-c3f7-4d5c-99d0-bdc7ff7a7d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd359971-d40c-4f5b-90ea-c81b7d6cbd87",
        "cursor": {
          "ref": "f43fbe2a-ee2c-4f5b-a869-9ed9166ef14f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d53d4ea7-bcd3-4150-9ff1-3a667707cf92"
        },
        "item": {
          "id": "cd359971-d40c-4f5b-90ea-c81b7d6cbd87",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a729d24b-a60f-4628-88f2-5bf6ea07fac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8454669a-3164-48eb-aaee-af49f8743573",
        "cursor": {
          "ref": "634d12c1-3282-4f06-b131-98749e6eb25e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8b34ca91-08de-4940-87ec-baee28cb2481"
        },
        "item": {
          "id": "8454669a-3164-48eb-aaee-af49f8743573",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "97945b12-0c5b-4d43-a6a0-34f0a68f6785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15632ebf-b33f-456b-890d-07116bc52e61",
        "cursor": {
          "ref": "9760bf6a-e3a8-4514-87c7-82b1a998a023",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15a55cfd-98f0-4703-8314-9c35a9ee30b8"
        },
        "item": {
          "id": "15632ebf-b33f-456b-890d-07116bc52e61",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ee34168b-8582-494d-b589-c919d5aa7ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c666db-738a-422b-adaf-2c3841e64943",
        "cursor": {
          "ref": "c8cfdf66-d1fb-44f0-a099-662e00371e63",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "999b82dd-475c-4d9d-9244-3a1bca75f8fa"
        },
        "item": {
          "id": "83c666db-738a-422b-adaf-2c3841e64943",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a4810689-cec3-43a3-b96e-0671ea6a884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257e3b85-60b9-4276-b1d8-5460e534a677",
        "cursor": {
          "ref": "3d7ecf4c-8189-466c-b083-cec173ef2093",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f46357b7-f415-4220-ade4-6d89c389d47e"
        },
        "item": {
          "id": "257e3b85-60b9-4276-b1d8-5460e534a677",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "38484426-6ac3-490c-8b85-5daba3255526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ba62e2-ee64-4329-81c0-b33439bec25b",
        "cursor": {
          "ref": "c0c54a61-4263-49b1-806d-09eec6b0c2f8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "48782207-f64d-4388-bb77-6178da239332"
        },
        "item": {
          "id": "14ba62e2-ee64-4329-81c0-b33439bec25b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9f10bb67-b004-4c71-a05e-61c242f2787a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5481b081-0978-4406-85fd-d3c0ffa28355",
        "cursor": {
          "ref": "8a2e4d79-a2e9-41e6-84c7-1993722a941b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1d25ffa3-3f60-4640-91f8-7a3c987a708a"
        },
        "item": {
          "id": "5481b081-0978-4406-85fd-d3c0ffa28355",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "867c130d-42cf-408a-844c-b144b6a7b29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50305367-033d-49c2-b0be-f653d5773800",
        "cursor": {
          "ref": "0411a834-a57e-4f3e-8d0c-5b3c13651101",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "971a12f6-d6fa-4b87-a0e7-17f9b63e7ab6"
        },
        "item": {
          "id": "50305367-033d-49c2-b0be-f653d5773800",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cbb630fd-43d0-4901-877c-c95af93bd823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507a0bd4-1f5f-4828-a45e-d2cd083b192f",
        "cursor": {
          "ref": "4eef2844-baa4-4521-ba00-5a91a3685fc5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a4bcffa6-0f37-4285-9209-8a72e328788b"
        },
        "item": {
          "id": "507a0bd4-1f5f-4828-a45e-d2cd083b192f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2bafbf82-cc3a-45fe-9d57-719761e54480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20814eb-656f-4ce3-8450-94f8c59b72d0",
        "cursor": {
          "ref": "56cbfa21-5ff2-4714-865d-1b29002e0340",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2692361b-565d-407a-9a12-0c309babb4e6"
        },
        "item": {
          "id": "a20814eb-656f-4ce3-8450-94f8c59b72d0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "653c91fd-3d79-4ccd-94e7-c7fdf253d4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d80999-3226-4b26-a28f-8a304e8465c8",
        "cursor": {
          "ref": "367a7803-742b-4798-bca7-eb802ff2e820",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a0f71706-790c-41bd-9361-fa6c092ebb53"
        },
        "item": {
          "id": "f2d80999-3226-4b26-a28f-8a304e8465c8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08f13408-3df3-4aec-89bb-58351977cfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0065869c-5450-4a99-bb17-7f07fd58d4b2",
        "cursor": {
          "ref": "8dbd84c8-7dca-420d-a5ce-8212720a1094",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "61cb472d-034b-4764-9879-f0e33d9d2360"
        },
        "item": {
          "id": "0065869c-5450-4a99-bb17-7f07fd58d4b2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b1b9919f-81a7-4165-a7fc-076573b768f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117bd2f7-c697-4636-bad9-dc14da32ace8",
        "cursor": {
          "ref": "2c4e6ff9-9bb9-4d40-9d3e-ebbd3cc5b771",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "712d0576-6b04-4999-af52-742a02b768aa"
        },
        "item": {
          "id": "117bd2f7-c697-4636-bad9-dc14da32ace8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3c191846-4e39-487a-92ae-904dc00091a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8354aa-dd17-4989-bbde-0c416da4c6fc",
        "cursor": {
          "ref": "919c9901-cdac-48aa-b626-5b13a08243a5",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2cee50ee-fd4f-4e84-bdca-faac32770603"
        },
        "item": {
          "id": "1f8354aa-dd17-4989-bbde-0c416da4c6fc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7034b1ce-95a4-4f71-a245-0fcecd11c540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e10a25-34d0-419f-9ffd-dca819d50c4b",
        "cursor": {
          "ref": "ef284de3-f3a6-4514-a7d9-399d8b1ae00a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3aa1c1a6-53e7-4b7e-81f4-17692fd33220"
        },
        "item": {
          "id": "e4e10a25-34d0-419f-9ffd-dca819d50c4b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "878ab389-f6f8-47ef-bdb1-391c2cf78a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f355629-06a7-45d5-9d6a-5e83aa62fb36",
        "cursor": {
          "ref": "ac7968e1-3579-4c6c-8ddf-c34b5b6bf004",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e2c894e9-f1cd-4476-812b-06ed76f821e3"
        },
        "item": {
          "id": "8f355629-06a7-45d5-9d6a-5e83aa62fb36",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3ba6db5e-7e06-4f68-a282-a16bad8c8dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3659f34d-dd4a-4fe8-9545-58979800f7d2",
        "cursor": {
          "ref": "88e2d1bb-c302-41fe-b730-0f34287fd492",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d9d43536-546c-44b4-8589-a92b1f68544a"
        },
        "item": {
          "id": "3659f34d-dd4a-4fe8-9545-58979800f7d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "70172026-71cc-4363-91e5-d815551c0b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e535a5f3-9c6a-48fe-bad1-52dbc8ccc732",
        "cursor": {
          "ref": "9742da0c-a463-4a38-b219-57b3c2207070",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "12755ee8-e7dc-42bd-8eed-db59ad5406be"
        },
        "item": {
          "id": "e535a5f3-9c6a-48fe-bad1-52dbc8ccc732",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce8f5384-0701-4176-acb3-e2f66beae451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860f41bb-48e6-4afd-a164-8987d5b82916",
        "cursor": {
          "ref": "426baa72-66e8-4dd5-bbc4-96d3da8c6f47",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "90396afc-a5e5-4661-9351-3ba2c446f2c2"
        },
        "item": {
          "id": "860f41bb-48e6-4afd-a164-8987d5b82916",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "00d672f0-5d00-4d06-b51a-46e2a4bd7689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23a5893-6179-4de0-82da-f39193b277b5",
        "cursor": {
          "ref": "4d4cea26-14c1-48e9-8be8-cb14ea4edb24",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "70b1513b-fdfd-4f83-a085-22bca821f35a"
        },
        "item": {
          "id": "a23a5893-6179-4de0-82da-f39193b277b5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3a937950-d526-43f9-8813-d29348357756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5321b1db-e6b6-4f4f-97af-994fc6a364e7",
        "cursor": {
          "ref": "d0cc7bac-21dd-40d3-9914-50ea1f699f53",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0cfe8b4d-6e7c-49ac-a248-ad5a2ec42f61"
        },
        "item": {
          "id": "5321b1db-e6b6-4f4f-97af-994fc6a364e7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9b34fb1b-a420-47d2-81d0-f8df3bd25599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a88dd-7dba-4a4c-8cb9-bd75b18d704b",
        "cursor": {
          "ref": "d3a405b3-8472-4baf-9af3-abfed858b089",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4dbf868b-a8f7-4aa3-8910-c527fa70fed1"
        },
        "item": {
          "id": "423a88dd-7dba-4a4c-8cb9-bd75b18d704b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e3714a78-658b-45a9-b96c-c90beaf0afde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd72a83d-2bde-4799-9828-58317d876207",
        "cursor": {
          "ref": "efa668a5-9f08-46d9-94d3-6e39a883b969",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c52a6db-9ca4-41ef-9061-df53637e279c"
        },
        "item": {
          "id": "cd72a83d-2bde-4799-9828-58317d876207",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0b5a0cc9-8a3f-4927-89db-f94367830cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142e6c3f-3d6a-4025-88d2-067b1b2ad1a5",
        "cursor": {
          "ref": "70074155-c888-4755-adfe-dc8185393038",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2dc1fac5-5fcf-424f-81f2-4b2965e0c7c6"
        },
        "item": {
          "id": "142e6c3f-3d6a-4025-88d2-067b1b2ad1a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ceb3fa07-27e8-45cf-9d34-6fec8afd442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5651668-0d33-4fb3-9aae-bd19ece9ea4b",
        "cursor": {
          "ref": "2527026c-3fd9-4b79-b045-87fe455ba7d3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "422b60cc-433d-4eee-9a43-de32765cbca0"
        },
        "item": {
          "id": "e5651668-0d33-4fb3-9aae-bd19ece9ea4b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "da0b45ee-f701-484a-a994-b95b5302cc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a145da-3902-4460-a6a4-c2c0a8ea663d",
        "cursor": {
          "ref": "fbeb4891-3595-4b78-87fb-61d221e33824",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c9bfac6a-aca4-4a3a-8e67-590abad09d20"
        },
        "item": {
          "id": "66a145da-3902-4460-a6a4-c2c0a8ea663d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1eb6dba3-c1c2-4e11-ab20-4b2bf0b784a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cdd521-438b-4acf-af52-e391cbadd246",
        "cursor": {
          "ref": "7600e2f2-e6f9-4f0b-b508-cf126ab54ff6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04d635fc-2f45-4879-ab87-df1938d558b0"
        },
        "item": {
          "id": "54cdd521-438b-4acf-af52-e391cbadd246",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2e5f2db9-7b90-4760-97e9-4c67f58e609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c203bc7c-a38c-40d3-bbf3-52e597b42066",
        "cursor": {
          "ref": "f107b30f-67e2-440a-9fb9-8da23badd44d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9981fa01-5136-471b-af3d-f720bb7fede3"
        },
        "item": {
          "id": "c203bc7c-a38c-40d3-bbf3-52e597b42066",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "08da1f17-19db-4665-a0bd-84f1a17d5e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b577890-4370-4ece-bbc0-5bfbbd2c4fe3",
        "cursor": {
          "ref": "40fb798a-9fa8-44be-b0cb-f63df82ead5f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "02017aa0-2d9a-4f8e-b7af-8046efeebb71"
        },
        "item": {
          "id": "7b577890-4370-4ece-bbc0-5bfbbd2c4fe3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "508f3872-9dcc-4e30-88e5-2f15ff525647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1976b422-208a-4562-ac71-574006f0f518",
        "cursor": {
          "ref": "aae949be-f878-4784-8aeb-b40134819757",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c62f1769-70e2-4ec2-ac16-2bfff3351cfd"
        },
        "item": {
          "id": "1976b422-208a-4562-ac71-574006f0f518",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d034fd1e-7df6-4642-bb74-29834eede254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad2d444-faf0-4767-98cd-0d54617ee4ed",
        "cursor": {
          "ref": "61692b80-b201-4319-a3bb-025f38ead045",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3a24d5c2-ea27-400d-9274-19b2f1f7c87f"
        },
        "item": {
          "id": "8ad2d444-faf0-4767-98cd-0d54617ee4ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "87483e1f-0f2e-4fb0-8607-805cce3a1ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7cdf6-c9d2-4ab3-9af0-86148d216305",
        "cursor": {
          "ref": "079eb182-2e1f-42ef-8cd5-e72c8826f8ec",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "45636c8e-5003-434d-8532-e3d255b46edc"
        },
        "item": {
          "id": "c6e7cdf6-c9d2-4ab3-9af0-86148d216305",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cefd82a3-03cb-4fce-99df-31e413391c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f7436d-09f5-42f2-a8e8-ad95d6d71e8f",
        "cursor": {
          "ref": "64c806e0-4875-4fe9-bb20-62701c933c9a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8e8d349f-6c6a-4ab1-b74e-291bac06ab99"
        },
        "item": {
          "id": "d0f7436d-09f5-42f2-a8e8-ad95d6d71e8f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38167627-03b7-41b8-bbbc-876fabe01a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b204653-0372-4128-bf07-2e218c7674fa",
        "cursor": {
          "ref": "d0c466c0-17e0-4c89-a2a7-f4e16e3a605e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "edd7f7af-072c-4024-ac6b-fcaeb0ff6103"
        },
        "item": {
          "id": "0b204653-0372-4128-bf07-2e218c7674fa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7365e701-2909-491a-a7c2-a0c7d7157851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc5a35c-4412-4fb2-90cd-f6894fd4ca55",
        "cursor": {
          "ref": "3c129b93-dd8c-4d74-a3b1-80031211f517",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "01fa042c-f2f6-484c-80c4-4f0a7324fe44"
        },
        "item": {
          "id": "3cc5a35c-4412-4fb2-90cd-f6894fd4ca55",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dd43b523-0dd0-4b7d-bfde-f23517ab17cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1c9cd4-8001-406d-947b-de49351638cb",
        "cursor": {
          "ref": "e2b6fd8b-70cf-4f1f-99c4-9e1da5a97e86",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c042bac0-9159-43ea-ae5e-13504860cc0f"
        },
        "item": {
          "id": "3a1c9cd4-8001-406d-947b-de49351638cb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3da4faa8-43c3-494b-9008-f3d46022d597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e74444-cba1-42c7-96c8-153187b3f936",
        "cursor": {
          "ref": "9648f74e-ae14-4b45-b383-a2eb34336706",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7b15db61-70e5-4c01-b918-bb031cc606df"
        },
        "item": {
          "id": "d7e74444-cba1-42c7-96c8-153187b3f936",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "08b69b09-f9dc-4d21-861a-6dc6c0a345da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3493d9ba-62f0-4e92-a371-321ed9055ce4",
        "cursor": {
          "ref": "ccc9b0a2-da80-44f0-b5c4-9f620cc2ad23",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ebf18206-0aaa-4b24-b681-67019bbd322c"
        },
        "item": {
          "id": "3493d9ba-62f0-4e92-a371-321ed9055ce4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aacac59c-418f-40ab-ad28-9f6f635a835e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff4cb7-a005-4041-adf6-31289996fcc4",
        "cursor": {
          "ref": "fd2fe93b-30d7-420d-b8f0-30bac9542835",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5ca32a6e-8a53-43f1-8b7a-88691c4a1442"
        },
        "item": {
          "id": "d0ff4cb7-a005-4041-adf6-31289996fcc4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04ff5b48-d57f-43e5-a8d1-b6619a5293c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41200f6e-43fd-4c1c-9577-e4fe0170f788",
        "cursor": {
          "ref": "807bbf48-3dd6-475b-9798-ab72989c2bc6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "25635177-c138-4610-a044-d290c8adc1de"
        },
        "item": {
          "id": "41200f6e-43fd-4c1c-9577-e4fe0170f788",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b76b55ba-07e7-4e99-b5b5-aea443d1dbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb523cd-ceac-414c-8a9e-56d130fa6107",
        "cursor": {
          "ref": "910ef303-3575-4308-bdc0-6f1e30ded7ac",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2c951437-2d03-443a-a550-ed17b985f6c1"
        },
        "item": {
          "id": "dbb523cd-ceac-414c-8a9e-56d130fa6107",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "437659b7-f858-47e9-bb69-a1721110cb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08d9b9c-0902-4470-9f4f-08693f03483e",
        "cursor": {
          "ref": "db1bf99f-892e-42b5-8b11-a4742b8ba2f7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a9ef13cf-1a55-46be-af26-36122f9550e0"
        },
        "item": {
          "id": "c08d9b9c-0902-4470-9f4f-08693f03483e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f01a29b8-7cb7-4fab-95b2-c48a61086283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3852076d-aed5-43c2-9f84-7b63e26aea2f",
        "cursor": {
          "ref": "3574021c-8e68-458a-b297-70b03cbb2aa7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7b45fcfd-84e5-4e51-908b-a06a58948929"
        },
        "item": {
          "id": "3852076d-aed5-43c2-9f84-7b63e26aea2f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "24151de5-0399-45f6-af00-871aa39738b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7557e87f-1bca-4427-ae23-86faa5f0d193",
        "cursor": {
          "ref": "60f8277a-a891-4e60-8fcd-e8b5d95c666f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "73fda0b9-b814-4c61-9997-eff2b359f57c"
        },
        "item": {
          "id": "7557e87f-1bca-4427-ae23-86faa5f0d193",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3c6ef4f5-921a-405c-9148-9ceef6745576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac07e57-2258-4046-aedf-00bbac870fa7",
        "cursor": {
          "ref": "8d179b08-5763-4102-ae08-c04f6f5c50b0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ce686be0-9e29-432e-988d-8142ede3194e"
        },
        "item": {
          "id": "3ac07e57-2258-4046-aedf-00bbac870fa7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "23993063-59fa-4099-8547-bc0e98d09890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceef0d6-9ae9-4887-bc83-6a5438d6d450",
        "cursor": {
          "ref": "9f7dcfea-3cf2-4dd8-a9ad-56b909d14ffa",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "640980c8-005b-4733-ab89-8406aa5ac466"
        },
        "item": {
          "id": "1ceef0d6-9ae9-4887-bc83-6a5438d6d450",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "02ea53b4-701f-40d3-b7db-df478d74814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ebfa54-b4b9-42a4-97fc-5d5a32d34396",
        "cursor": {
          "ref": "6110c2fc-0863-46f7-a626-0f66ebaf0961",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "adcc1d82-344a-4495-8f21-dc6b23f2484c"
        },
        "item": {
          "id": "34ebfa54-b4b9-42a4-97fc-5d5a32d34396",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d6b178e2-fe29-4520-b3f8-684e1b6e16b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d900adc9-1a33-4b1e-b4bb-aa9dfa960a5e",
        "cursor": {
          "ref": "1c25d610-ea99-4ed1-9878-35630ecf0ca5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "98da0e5e-8f08-483a-8701-72bc2cfab382"
        },
        "item": {
          "id": "d900adc9-1a33-4b1e-b4bb-aa9dfa960a5e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "efb7cf65-3ffd-4626-909a-7187a8b8530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6465b373-13dd-4f5a-b904-790a0c8cd054",
        "cursor": {
          "ref": "d10425f7-5a18-4123-90f2-2863e53e6551",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8f99ddcd-471f-4f62-8642-be8f3ab830fd"
        },
        "item": {
          "id": "6465b373-13dd-4f5a-b904-790a0c8cd054",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "38717504-6c83-4e76-adb9-4182666f0e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19be678-e901-4815-be3b-3c9282f0d764",
        "cursor": {
          "ref": "6a546c0a-fe10-447d-84c9-d3d11a7dd7ac",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "19283ab1-b6c7-447b-993e-e7c55b03bb6d"
        },
        "item": {
          "id": "f19be678-e901-4815-be3b-3c9282f0d764",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e36a9895-d2e2-418a-9a31-83bb74e83f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0475aa-3012-4604-948d-3ed824c54f8a",
        "cursor": {
          "ref": "46294886-2519-4a91-b18c-b57356b09874",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a13f96f6-f6c8-47c2-a1ea-7f80a5c32506"
        },
        "item": {
          "id": "4e0475aa-3012-4604-948d-3ed824c54f8a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "587b7da8-e564-4e02-ba86-42d7a01ce1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5190ff89-374e-4eaf-bcd3-e28487d3f5ce",
        "cursor": {
          "ref": "95af848c-c27c-4ca0-923b-410b9a60d114",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "097a1b28-946a-4ce9-8a36-f68ec507defc"
        },
        "item": {
          "id": "5190ff89-374e-4eaf-bcd3-e28487d3f5ce",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4382aa67-048f-46d8-ab4a-4eeb9a75a43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0cf5b5-bc31-4793-bd70-7aa8c8f117f8",
        "cursor": {
          "ref": "ca3e2c1b-703d-41e0-9d08-ca565ce91fe9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4a797a21-b588-4e17-aee1-23e762917b81"
        },
        "item": {
          "id": "0c0cf5b5-bc31-4793-bd70-7aa8c8f117f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fdbc8b23-7959-4da2-872f-d2a2e818dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a5b259-9cb0-40c2-91f8-07c04168c362",
        "cursor": {
          "ref": "905f3e49-a0d3-4468-9817-8d5e4abd86d2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c6bd789d-55f8-4b46-bae9-5dd0ba661173"
        },
        "item": {
          "id": "64a5b259-9cb0-40c2-91f8-07c04168c362",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "be9bf52d-6887-4146-b89b-69c3550cc1fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b8e196-efc1-4a20-aae1-70557942659a",
        "cursor": {
          "ref": "9de2e1b6-ae7e-460e-a91d-6220b7f1a7a2",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3c3fcc97-958e-4be1-977c-38348d2f7390"
        },
        "item": {
          "id": "70b8e196-efc1-4a20-aae1-70557942659a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "41d0610e-7fee-4740-8908-07bd65233e73",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "022e85d3-9f9f-4467-8c40-3c2f6e7afc5e",
        "cursor": {
          "ref": "fbe2f4da-9508-4a35-885e-03ae0f8466db",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aa4485d0-af04-49a2-891c-c39aea97a7e9"
        },
        "item": {
          "id": "022e85d3-9f9f-4467-8c40-3c2f6e7afc5e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "358dbeb8-2b42-4c26-b655-9ea2a1668180",
          "status": "OK",
          "code": 200,
          "responseTime": 1534,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7ee31e-4703-422e-8381-12ee74960abd",
        "cursor": {
          "ref": "004ed0fd-b82b-4b3e-90ca-b6d2596054d1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8bf7fb8b-5575-4b52-9815-f6448ab8749d"
        },
        "item": {
          "id": "ff7ee31e-4703-422e-8381-12ee74960abd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fff829d1-e6a7-40ed-86eb-b9a6d4382014",
          "status": "OK",
          "code": 200,
          "responseTime": 1443,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19bcd60-40a4-4325-92d3-eff12d78a1f6",
        "cursor": {
          "ref": "67605083-5b05-4e8d-87e6-a3c7462089d8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c1dcc7de-9908-4fd6-a061-541a86251891"
        },
        "item": {
          "id": "e19bcd60-40a4-4325-92d3-eff12d78a1f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e3ba171-db07-478d-8e60-f0cafdf7537b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19bcd60-40a4-4325-92d3-eff12d78a1f6",
        "cursor": {
          "ref": "67605083-5b05-4e8d-87e6-a3c7462089d8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c1dcc7de-9908-4fd6-a061-541a86251891"
        },
        "item": {
          "id": "e19bcd60-40a4-4325-92d3-eff12d78a1f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e3ba171-db07-478d-8e60-f0cafdf7537b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34d2518-4f67-4716-ac9d-b35aca3b0959",
        "cursor": {
          "ref": "82766a1f-a457-46a6-8ac6-2407c7e49400",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b63a5417-a522-4eea-b451-4bc688d771c9"
        },
        "item": {
          "id": "e34d2518-4f67-4716-ac9d-b35aca3b0959",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "54d8852e-0ef5-4115-9530-7ee63103e8cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff074697-b103-449c-8989-f36ef3dfbe21",
        "cursor": {
          "ref": "ab77aa78-3452-481c-8b08-685390abeed0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b20748aa-202f-4032-af7f-3c7fe6f5ab82"
        },
        "item": {
          "id": "ff074697-b103-449c-8989-f36ef3dfbe21",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20aa0439-30d1-4ec7-8457-bad38a3cfcd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}