{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "81ae7936-e3cc-410a-ac49-fefbf0ff4cf4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "21971461-cb21-4632-9576-a504590239ff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e737c3fa-2d72-4357-ab34-351931dc2802",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8374a3be-8963-4516-9eca-08709df23f25"
                }
              }
            ]
          },
          {
            "id": "b5560cb4-f1f4-4d2d-a6b1-0439aca67949",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f29103f-6b49-45e6-9105-cee7b220738f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bd8f1d3e-f4ed-4157-9b03-469fb54708c2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "733f0ebe-640a-4ce3-9404-d5661d39ff9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b8790154-f91c-4cee-8e59-71226a796578",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4160b3a3-92d6-4161-83d5-cbb969853b4e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8bbd8dd-c6cd-4eb4-8a68-bdb30784b712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e27ad619-dbc5-4ace-9956-d9e7650d83cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0503788-3c96-46af-adfe-eb0e46ac2e8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44f4307e-e8c5-4793-ba26-4e53f6b5042b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c844704b-4699-4665-a32a-8501de83ba08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b47ff57b-1bc1-4295-8f00-8337d1004d8d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48a6de9c-4ab1-4de0-8399-08ec8b7006b1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0f047b2d-703a-49a1-ab14-ccabdea58dd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f35816ff-02aa-497c-9aed-260d86a48215",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfdf673e-6af5-4bf9-be09-5f1f22fdf6ac"
            }
          }
        ]
      },
      {
        "id": "3f9dc5fd-3b47-43c3-8356-51ab8b491b42",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "31f482a2-49ad-42df-b1dc-e815cf8ef475",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22937599-3b22-456d-954e-646f71c065e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76b3ae99-e7fd-463d-ab96-1a7325c7f399",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e2135-f83b-478c-afe9-b181f875be74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63a7b2b4-ad23-44b4-9ed1-8d23411ecb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff00890-5cdf-47b1-be9c-483054303ea4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab1872d-090f-4b25-917d-d83a1d7b30ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e22992b2-1570-40b4-895a-53d50e53d7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4124ae07-14a1-4609-96aa-f4f59fa78bda",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d77802d-fe8b-4dc2-b72e-be56a6ca0be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b37d5426-12c7-4ead-a395-4328ba4e6f52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c0e87fe-972f-432b-bef9-886047eed456",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8a4329e-c59d-4be2-9983-b222f2670bc3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f8d14-220e-4856-a7fc-370300e1eb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4d028ab-35b7-40cd-a439-f4009b414be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191f39a3-c517-4ffc-98be-d853ab548602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33130a9-0e15-43ed-8d47-bf543116cc2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a6c28cd2-59d2-40c4-acd1-5ed76a15a0ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b248c70-e07e-4641-8a27-7d20383f2307",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d35ba58-6c59-4cf1-bd73-2c3fd1a6c8fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "87912706-552d-4507-8201-87d7ca1371a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f139aaf-0bdc-40fe-bfc8-6883ee43f984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1360843-7a94-46a6-9087-26181983f5ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5da63ddb-6044-4fb2-8661-48ebc7c4efe2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93270da9-7b90-4889-8c2d-f31527aac409"
            }
          }
        ]
      },
      {
        "id": "f96c2879-033f-4324-9d31-d8e500dc38a9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "163882fd-a13e-480d-91b1-4db8d7a32034",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33bad83f-153c-46cf-96d4-4489c351472f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d22b512b-ff06-4ff6-8779-0ffa7371b917",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d653acf-5b62-4be7-910d-3a5b122114a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8a2d21-81ce-44be-ba28-46c00830fab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67ade04-3a3e-4716-bfd2-87faa36485aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "817e3ef4-3b6d-440f-bf50-64f45ff99fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ca351c-133d-41da-9ad5-5a1e80763098",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40a3e5-a603-4694-9e99-769f17123c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c31cfe6-b21a-4701-8462-012618f441da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a4a016-51e0-449b-a46c-0d71f90682d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d7c86bd-8801-4396-a293-e11527c41d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afa50ee-ce0e-4024-b009-73a00b4030fe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37047d3-2e13-438d-939c-3d31ec08a983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94f6a6d-b4c9-4fe9-87f7-d24566bd8aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b839317d-6421-4bd5-bd5c-bf665ad87b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae17bb9e-e9d2-47a5-9f4d-8878e7029874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3668e6ba-ef2f-44ef-aaaa-b39db43bc781",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff815cfc-bb07-4880-873b-7b06952941c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f849b2-3923-4dab-8d76-28b603090c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b305ec-7577-4b6c-b499-7f52abd3eb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0fcaea-1f39-424d-8bc7-72b1f1cb008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc65ad4a-4a75-47f5-a976-fa7a177bc734",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37684ba3-bc69-49a9-97ea-b776d6891de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5cafba-6f97-4ce3-a21f-34d0df3609cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef81ce-6171-457c-8adf-955ad0fad8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff64e21-a426-4be4-9bc0-2dd9ae520712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b6a8a-fd57-49ce-a264-1b714f1bdde5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacf4a34-5e23-4551-bb70-c1840fc7e2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97218fd-1bdb-4827-a975-b3501fcca76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f4ddff-12e1-4214-af00-dccdaf122046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66bd0d2f-d005-4613-839f-cbc74fc7e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0e67de-c4aa-468d-a8c0-998692378440",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51db888a-e283-4fbd-9f84-051cd7ba742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3fc374-f36f-4a98-b105-76504b4ad791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9674e1-a656-4c0b-a3ce-16521be1599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2a4a21f-2fb4-47f6-bc52-2d23a979e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38670fd3-8e3c-40fb-8743-62c8c941f34b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615305ed-81d8-4b7e-bb68-05f2b6b5e032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acabd64-767c-4229-9639-37c80b17734f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f028eed-4950-452a-9bb0-796b05b13501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9085123-9489-431f-95be-cc72db0da73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f49d960-c2f9-4dbf-9d30-9e6123c141cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee2edda-a325-4abb-ae16-e198acf47ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c30063-5b3c-41a4-ba97-0b91088e031b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e439a-bda1-4447-8dd5-e741bc357a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88f16c24-cd41-4d5a-91d5-7bb727f623fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c4cc09-fa98-4e87-a316-54699ff81603",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db859e56-e990-4db7-b9a0-5cd56721d72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8090c8e4-265c-4b50-9d5a-1fd3412c76e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7462bae3-72d7-4b27-ae99-8be615b58a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e2717ac-82f9-4114-8ab8-c89076cc5145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6981cbce-0502-4d38-8d30-b3a66496c176",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2de87d-18ae-495e-8bf4-6817ade51eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6d30c1-aeba-4952-ada3-d29d71b21f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b73a5c-8b30-4f03-9c51-0ff33aa37521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "974d9fe5-9374-4e9f-981b-5168d2251a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd45fe9-fdc6-44dc-bfa9-c27506991e15",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bc810e-fdc9-40a3-9890-5317e9e2f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83730fdc-804b-401f-b499-cdae80e91110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773bdf93-90f0-4c3d-a136-8b2b912ae807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "875a2c05-6831-4668-afdc-13495f363634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c5e03c-7ae8-417b-bcae-44e911193cc5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263e87f2-40cf-4202-b390-8d0334b9adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934cf7cf-9127-4333-8887-bb83439e8c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f614a5-0a7a-48ee-8265-94840839e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af61f5c5-5914-48cb-a131-266a5f13565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d2a22b-0bae-402b-bc49-6572a08fd605",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09a07f0-a38c-484c-882d-35c181b2d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46505eef-9d97-4f7b-adb2-4fafc2479cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0d06ea-d8ab-484b-8192-6c865ee6c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45df7f0-04cd-4bca-91be-ca07f6f4ecd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98e6a25-71ea-46a5-bd2e-7c80912fcd87",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc9bfc1-f459-4e70-9938-e7494db3c67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9109f474-a98d-4405-be5f-376513ca5d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527b8c7d-9f95-4132-a367-d1d670fd56cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70bad179-fcfe-4643-84de-1672dd5040ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefb5e3a-d6b8-4bc4-8fc9-80caa8233ec8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e51fe2-5c54-47a1-9926-aff6fd830428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcee710-365b-4112-ac0e-0ae27fce3a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0482d3a-e266-4a7c-b1c3-3e5b3e1835de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bcc2f04-8e5b-449a-aeb4-ac38bd22f4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684656c8-1cf0-47eb-a0fc-cc34334fa28c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a2ccba-27c5-4bd5-a31d-851268af9a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad70020-bf41-4aa7-96b9-6edca440a987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a4e283-843b-4a7d-afcb-baaa8ef805be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51e6a399-ac01-40d7-bb4d-e6f9918e2723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc2f242-9628-4057-b6eb-ab8317219222",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05accf0f-3126-437c-b2e2-072295d4189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dc73e1-786e-4246-ac75-23763c6deb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c7b8a3-1031-4d7f-9cf9-817c054731d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bb536e-d1d5-48ff-886c-c4777d6a396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862532e2-333f-4765-a8f1-a95b7bf53835",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6d4a58-1abc-4566-8d4c-872d56f511e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb381de-6cd0-4dbe-b288-0ef2b35771e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4336f0f2-b1f3-4e7b-b473-2c058414f428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef44e520-551c-49f8-b850-13d589ea83d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f64af0-071b-4a0b-b52a-f64853d2db67",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2065e450-5272-46b6-8c11-704c56464bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68cd046-a478-42e8-a56e-be8ff5c8b74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b9599e-ad88-41fc-80d7-178d1c9e7f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdf1a9e-ba5f-4059-b7ce-9d3bce22934f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daf4a16-3754-48e1-925e-e672d49bedc3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d234b1f1-889d-4c0f-9151-f04559b022c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce47c474-4f0b-412f-a689-faca30af5ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716f1cbe-2559-4925-9dd1-5c431a9a5d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a078d6-5003-40f0-bb18-f71f9314de35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a6cd47-8b74-42d5-9ca1-fa34934a27d0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9dd37c-9d3e-4f12-bfd4-5d903715a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765c99b7-9dbf-415a-9d3e-5196d24d26d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db383088-0f1e-4adb-9691-973e2f4da045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7082762a-62dc-49ad-ab2a-7a3a5c8c0eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c75f35-f923-48eb-9fe8-f1f12debe927",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff96e9db-5f4c-4fe2-b51f-0dd727386345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d79100-cd17-477b-b81b-4d3662a43437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e62218-d11b-4c36-856b-d6a7ab881e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "217bb96e-1517-4ae6-8107-8e0bb5da952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e2ae5f-a48a-4938-b3fd-ff69c7083400",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073c0aa3-147e-4dc5-b622-43977c53becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c55251-15fc-44a9-89b9-24ce7218f40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526b80c9-650c-41f2-b7be-5e6b54541a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23090f3-95f5-4dfa-9f44-c452ac3c5b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd301e2-0cef-43fc-84f3-ac43dc64de86",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0334c01f-cba9-4621-8c58-73345188dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65872e6c-47ee-4572-adc8-9da3a949d18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bfa500-ff45-4f2e-8548-21933702a98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dafb2abb-4eb6-47b1-a6db-7d168bcf773a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41588eac-a64d-4e23-a581-80437a74d25e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce380d7e-3dd0-4e33-96b3-898512bee532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3adf5f-2dd8-4662-91da-acc5d218330c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eef7a2a-56b2-4210-b459-70c1f1e8e43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc6ffb5-bc53-48f3-8b03-aa44d7c56bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47ae6f8-3ccb-4374-b406-bdef987b2621",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d2d939-d3f8-44a2-ae26-99496eb561d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a1ea90-2dc8-4c54-b3af-ac4cf3b9efba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ffbcc5-5cb4-4116-9962-8de0ff9f8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9059294c-6cdf-4340-a0ba-c19cb4a080ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28f8bbd-0750-4f40-a70c-42626afc2c56",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3f7c8b-974c-4879-902c-a424b26584e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c7e48b-2837-4874-8f38-4043a21a1c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8283fbaa-1dcf-4a22-864e-6932440091a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5f78b-e17d-44b8-b8bb-be7c0e423a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea255dc-39e8-4ae0-b1c6-561f51629797",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36ad421-5011-44ce-928e-b09098670270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1697fb3-3d08-463f-9dc5-a2e3f1dbb4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fe6662-dd0a-426b-aee7-e5cb781583de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e47166d-b198-43db-b8ff-83f7dbe244ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab1146e-d255-4ecd-a3ee-878f0622db1f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfaeb36-beb5-4399-8c94-2acc3f9b0933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc750ea3-f156-4ff5-9d23-08dc23453868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891fe86c-73e9-48de-8f4a-d9b65748aa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e89669-61e1-41b9-b059-e1b9d0f29fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e702c19-96c0-4266-9f41-8ce00873f4df",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f0c938-ff26-4c16-b2bd-3ffc466aecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f44014e-de31-4204-9a37-3d22544513aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee158f1-d2bf-43c9-86b9-98e04359ae9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cf260c-c3ea-4d83-bbe0-8bb846da7e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0b4fc1-2789-45c5-a8ad-ceb989cc832a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4a9e90-52d6-4c87-8dcb-bd045e349af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b5ec33-fb3e-4b0d-b7b9-befe13482f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6b146d-2202-4553-9cf8-a4a704c1a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42bac65e-0bcb-4ac9-874c-4d65a4731dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893b185d-3026-46a0-8a3a-9e51543a8af8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a889a324-eb14-4759-a84e-78cbceaaa9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28c92e8-62a1-44b4-8b2d-6261de106171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd613f48-3ae9-4f0c-a0fe-b6b1f5191eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4c30d5-be6f-462d-81b7-b686ba7c823c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7527f916-aa8f-498c-960b-e83dfcbf7bd8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5792ecc5-69e0-4ead-bcf0-c83fbc2af7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5311a9-55a0-4612-8537-559a5e2f3866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579ef845-3521-4481-8ba4-a42a6748b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b90fae0-dd95-4509-82be-d560b56d6606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a000a7-97e3-441e-a581-af797795737b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed49e9d4-4543-4e0f-a3bf-3485808c1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee86e14f-9a31-4359-b037-83845049797f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f33553-2b7d-4237-b6cb-355290a082cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8cc5de-22d1-4a1c-9dcf-646badbc5d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1e63bb-ecb8-4f5a-aecf-abfe894eb33f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06397ea-a68c-465a-affa-ff99e5f597d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a027eaa-e13b-4bb1-9d6e-bad5f7e960f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a30d3fd-2b0d-46a0-8abf-a01b7ffc68e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35e3376a-ce73-4af1-ae08-efea9a150afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbd984f-2d54-4e8f-be40-70f2134f8e08",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d544af-9509-489e-a95e-0dcee7914a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4348dcec-ade2-4943-bd7c-42d48e25e666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba0cc9c-03d0-4ab7-9cf0-fcbd477e2825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4569e83-5888-4ae0-9b45-0adc98ca212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d42275-e617-4513-bfe7-9ebba4339f37",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ba43b5-397e-47c6-b5f2-27afceb94bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f0f995-3e4b-47a0-a1fd-0a859985f1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dd188d-afdb-466c-ad10-bea9af1fe832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a11c9fe0-4390-44a4-a38d-3bc7298bba0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03acf09d-c7d7-4df5-8a44-f5def84b58ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501095f7-774a-4489-ab22-c34102fb2728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfe1856-1c6d-4cf9-b346-47c6df1ae4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0d45ec-847e-4936-a18d-8695ede0ae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b45f8f-879f-4752-999c-2989a9d6c9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639a4241-34be-4a9d-bc68-1bbed4c090fa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed10067e-1f4d-49af-a612-96818b14c9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d72826-0599-489a-8f17-3cd325203a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e4918-7fe7-4b14-9382-dcbf46cbbb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b219ea20-e758-4cc5-8e05-190075ac87af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac29ae2-46b9-45d6-a605-1e81893d9897",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c529623-31a2-4310-8f6a-7c0859ad7da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c7f5b7-4249-403d-a635-4476b4bce9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b667cd0c-fb0f-4aab-b9b8-c709d4577cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c687d36-28a3-4788-8f5d-56976c6b00e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6202125d-0bd3-49da-b0d1-6541767dd3fd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0955bd5f-3242-4040-8c10-2a37dc035921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91724a66-2fc5-4673-bd63-bbcb382ac7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3a10fe-a967-4bb5-b966-b08897076795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "13caa146-0cd0-4d46-a6d0-a97a8da6933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fbf500-a6ce-49e6-9ba4-ce13d33107a5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db0302e-d5a7-4b4f-983d-b23753dc82f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ee7905-8578-454d-8df5-3696a3ebf831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3721f3ad-c392-49a1-a4fb-43ed2c4de2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b76e55b4-a37d-4acb-9f61-b255f904eba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ea9987-f208-49e0-9b72-375484c710d2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13347f4f-fc13-4d37-a500-d9fa7a706b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcd2cda-1c35-431d-bb6e-f24f79de0797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4aa266-477f-4bad-a9e0-26ed557ef1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f49e45-59ed-4b9d-b50a-32c82b2a711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4e6c5a-1081-49d1-a468-7e014240a378",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34ae709-ad88-4fa9-b7db-e351bffceaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fdce01-5b2c-474a-b3b1-765064fd932f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff3f29d-284e-434d-aecb-7e2acd354ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6be2304-9d66-4954-b880-a71abebba69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997caeb7-ecb9-4eb2-8900-06453c6d444e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a64247-7d47-4a96-99d2-f9680cd99b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e542578-4a84-47e9-8755-67a34d469544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6012e3d-9df4-4eb4-a258-a6a5f13b5537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc0683c-d070-408d-83dc-9403fe65d8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d76c2cb-2d5e-4cd7-bc4a-7d26112daf6f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f7cf34-523b-48f5-9299-eac4390db0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f58d55-c536-451d-846c-e4933288fac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662ffd7f-b125-498a-92a6-70cf71e38c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a739f3-f7b6-47f0-b2a1-ba068739726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6540d347-627b-4d04-b08e-f05886539daa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabce002-d5a6-420c-9dab-ee135c72cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e18d38-d20d-41e1-9352-be36a25d2533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c1d129-d970-4a15-81fb-3a618ee26b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c787ecf-6a3d-4afc-b915-c180b666d9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ecb15-7f20-4ef2-8785-25d4065b493d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf30632c-13ed-4484-85d6-7974a283a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db036bc9-a991-4b0b-bf2a-c8730ae5a4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100a27dc-6949-4df3-b9fa-dacf100426db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f58f4716-bb3d-4c3f-a2db-8fe8204b4a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74cfd16-8c7c-4c98-8f93-db268dfa54e3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4522c81d-48e9-4239-bab1-d5fb11c23ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8914eb-2397-4dfe-a3be-498166c890c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd28f6d2-e5f7-4232-8533-75d7c07c1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e575683-ee9e-4cc9-877c-9c9ba99b1918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb709081-1be1-4ef0-939c-af103c1781a4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9c8bfa-62fc-4f96-bc71-92b1e86c3ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfa510c-d1aa-42c3-b697-48cf4b1d7489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c030b2f9-63ce-4a22-9393-e2fb75b54855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea664f2-bd12-4358-99c0-78f761757ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c44105-7d84-4a36-bfb7-9a07efa58477",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9ed117-ff51-437d-b972-f22f7bdee649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e113d2-cc22-4e69-a2a5-c213d3b98c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8ed9e3-3450-47f0-a48b-e173b3340637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a7f231-9e31-40f1-8cb6-8a7bdeb71b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3550e64-e12a-4fca-a8af-12b867386a2e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bfa0ee-0df6-4299-84ac-7109f921c747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a200ac-2039-49e1-81ba-7e9af575dfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c317552-95d6-4510-9820-3f7618633d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d14e4767-6326-4d96-95f5-3a79fc2e3fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f211452a-f67e-4ba3-a9d3-57f97abd7e4d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7002a54f-6fb5-464b-a87d-7d2f45a8cc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173862a2-b91a-478f-900d-8eec53b6ccef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bf71c4-def9-4729-accc-2e6286a9a491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdefb1d0-4063-42c7-80cf-32db8ad31a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decd94b6-11fe-4d8c-9031-99a5af95fcda",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff4e94-b8c0-45ef-a85d-fed992953770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8423357-b996-4a93-874f-48b3981bedae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ea3da-f469-43ab-9fee-3c52117f6205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab19c8c9-63c6-4bef-b74e-bc47cc8b2eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b63492-f4f6-451c-a47e-bae482340896",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91a3030-557b-4f9c-9149-2ec68ad9f796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4969abd-1542-4548-b792-e779f4606700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2e777a-28a7-4cd0-9d96-d024b3735978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7995430f-8dec-4c62-93c6-32e3f8861eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8487c0-2ad6-42cd-b14d-3f34b44a9ec8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd6dec2-c2ae-4aef-92e4-4cfc49aaee81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346887ff-6740-4c85-9581-27d21a6dae15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52963480-5a16-46f6-8796-8188f2217e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e09de014-5e9a-48f0-8298-01c0b86c0d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dc617e-622f-4e96-8999-a5d4651b94ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af95fb7-1cdc-4c48-a1a5-389e1a640038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8972a2-4b4c-4425-8dbd-e6db9c9ddf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391fb14f-d998-497e-8176-c898d1ec67d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57d433de-9839-4ab3-bca8-0ca0eefb35f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd436f5-8f83-4902-85b6-62fc7c236ae5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc28f81-a91c-4691-b5b4-e938a60b822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d895106-1213-41d6-ae52-f30c0fa546b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768f7fac-2748-45ce-aacd-b900922b016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e85ea14f-7061-4a71-a2b1-2c86227b2722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9638db05-3db7-4633-b2d1-45ef36bd48eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ade6d9a-9ec2-4751-b55d-2b7921aee6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c80d14-f5ea-4c2d-9d20-7380f35ad4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc2f76-c3c0-47c7-a676-e61003bdff75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "297c6280-9a1f-4cae-9972-6c1d762992af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3f7eaf-e839-496c-8804-3ff5485e2481",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdf288d-39fe-432c-9ff1-f13a038f9daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28deff1-7cde-4574-b5f4-7f6a48e724ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f25bc3a-9611-496b-92fe-ac29b93254ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "693d1594-78e7-4fb8-af88-73d634b6fa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291afa3a-14e0-4fa6-8bc6-b451adc35965",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d329ee53-9419-4f2f-abbc-b8f331fbdd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40155a96-d131-46b3-948d-e325710970c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f366287-7b25-4f07-b316-222f92df2e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef88c0c0-1701-44a8-85e6-d2f0ea2eca70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ffdae8-175a-4e68-81cd-ddd674d471d4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc1daa9-0564-4846-a4e9-86d52dae165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be992dea-95d8-485a-8c03-6a11d6a4ccd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a6e9ac-0524-4a43-98ec-9e223f9bba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a529eb99-c019-4767-a0ce-e45f5436b1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054c0b13-9db3-4582-a0d8-1bc72c9ac614",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043031b5-6209-4682-8e3e-8a544c9af3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9e59c9-16c4-46ea-8858-4e187c2f9463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba48a17d-7ed3-4369-a3f0-26d2e085557e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ad27a0-005b-4027-baed-e7689c8f5015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a3008-8092-424d-b41a-72039cbaa9f2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6c863b-6cc8-43d0-b8af-cd40dbbc57e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489753bd-af6b-4457-a7d5-ef2647d48fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd6115-41d6-48fb-ac67-f79d716d6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d28834-894d-4375-a838-c634000d9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eef20fc-5854-40db-a1a7-a87b0ca3eb45",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b6233d-c504-436f-bd54-7636185aa137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2eb42c5-e51d-452b-a4e9-d96474454a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0ffd52-92fb-4fc6-bc1a-6e974fdd0b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85edee6b-a6f9-442d-8b5f-765eff799675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f737be-5160-4a42-9418-30e03954f964",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544afe66-79e7-450a-8c56-ae60339b0a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5f00d8-f0db-4600-b251-7dd879d7fe54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506a7cbc-cd31-44d5-99ea-441b0a8a1e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e223313-65bd-4d20-a700-726fc0dc5c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9dd5f7-dc1b-4f34-9b69-3b1430771ba4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b595b9d-a0bf-4beb-8a7f-a6bc5e9a75b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3badb2-e04e-4efc-8337-ed9545d0a299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdf53f6-aa81-434a-80b8-8d64ed10ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb6c6d6-95f5-400f-b9a4-13cb50965504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caa467b-edf4-448b-af24-d9a486ff463e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c238de81-4574-44bf-a043-1d7d41c64e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e25790e-d966-4573-a6b3-367f58def3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af81069c-aaef-41de-bce2-fc81b4047bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7843d2-8643-46d1-a176-9fa0102ee843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf02212c-6a33-4db1-97d9-892eeed2f6ef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246a6438-6bec-4387-8b90-9d6bec77edd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3397e0c-ded8-4b73-bac9-72a91a708af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a25dc7d-2ae1-4f20-8fd5-ea81e85888d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8f5d85-751c-44f7-9be5-0ac7ca8bd49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c3f3f2-a446-424f-80dd-0b6b5fbc241b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a380b23-eae4-4cdc-9245-dac415613cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47835bac-5a44-4064-a146-376b94aae5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780bbffd-047a-4026-8ccb-2429f37ed943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ab69a7-70b5-4c4e-9e63-cb97f413ccf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6c0fcf-7cfe-470a-8625-997ab3bb905e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7d966-ba16-43c4-8bc1-1e6fee903417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b21e194-800f-4c95-943c-527204979e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa62cdb-56cc-417a-aea2-7073c3b2b372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d7673a-2424-4e84-b123-d71b1d3aae69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8182c0a-9cea-4a2b-9318-c713851886df",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a090d1-8cde-4fdf-89d0-3ef0ee0cd5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2328f072-6952-4c00-92c6-fca83edae1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a6a24-295e-452b-9460-0041ac9eaf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5007bd9f-2e39-46ec-a361-306621fd7f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01968e8a-a8b7-4d89-9dd2-03cc30ab8bcc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d93d06-61a6-42b2-ae51-27ae2759db6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f914b3-bc35-44bf-a3bb-8567c910d1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846d9782-4807-4919-b83a-b271ae44c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00b550ef-44d0-4576-8268-2da3e094242b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99efb728-612c-47b5-ba1c-c64a1b72ce3a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ab0616-a17f-468b-a61d-18fddd742943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703bebeb-5826-4064-9ba1-5b8898491a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b54ac36-069c-4279-82b2-7026dc7894cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40eed56c-3c43-47a2-b22f-36e44f8542d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba8b97e-e755-4269-b84e-55d642d6b932",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9078b0d-63ad-4750-b0be-f55f2873c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba2bbe4-fc8a-4658-b46e-94f9f2ea7dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993f4165-8b9d-4f97-8668-232df7fbab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8499faf-b80e-4d6d-9291-ada2ed1e5da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabd9115-2bf2-40f9-81fa-08486833a5f0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2fed84-109b-49f9-8f62-78af221e1169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5e09a4-28bd-49a9-ac8f-c53523a6e6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec658a6-83e8-476f-8884-c9b2b762d876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "378f4958-a963-4b8a-abf1-cd6f3e69945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4f3a30-485f-45d1-b5c5-5d2e07a6baec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc011f-bea9-4391-a4c8-a918c6036850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4055ada5-6e7c-4b56-8c73-5b1deb0287b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b30cf20-4d10-4ad2-8038-33d14a35ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b4a627-5a1f-4e49-80cb-b88eef578add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a060c2d-a0f4-4c84-8934-338ac936c52c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb8fe7b-506d-4830-bb34-badb5ace0679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24c50ff-3608-4533-b3b8-014b69831951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f567a39a-b1b4-4936-8319-b2220133ff31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04f5244f-d260-4cf1-968f-039eb71c62d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65344fc-b27b-41da-9b33-feddaf26c93f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15b47b0-c249-4822-9bbf-e2bf7d8689ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cc5713-5131-4a38-85e1-7b1791b33baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c6f048-47a3-4897-9a0a-4ebda152012f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6a8db2-cc8b-472f-8a82-2dd63f624be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a999c500-cb3d-4fe1-a6f5-dbe38b49939f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5441d5c4-1fcb-4a72-a663-016b49cd92ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6520d91e-32c5-4586-a08c-6bf97e230b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4c2ed6-7dd0-423b-9409-aaf2008d59fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b7f8e6-8156-4b30-af6f-9ddb14e79eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac68f8c-058e-470f-b1c6-a050bea41293",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244e3abe-7505-4d43-8af1-ffbf6a4e8b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b903f817-2f0e-4c29-9861-a72658ccf28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ea1cfb-cb9f-4d4d-a26a-19b5ca09b61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d739dac-ef9c-4120-8449-87ce77068f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a743cc25-fa6a-4d37-a2e8-375dc04e6e53",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ac845-99c8-4af4-a12e-120396364b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a54550-0219-4ba8-aa93-3c77858ea267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb263b5b-2e87-4cba-9fa3-f3119c620278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8335d4-ca92-4394-9fe3-ee9fa152e99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a9e91d-3400-4882-a1ad-d14a78f34e4f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58bf90e-e7f1-4517-a78c-6981c3ec489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85bfa94-0f34-48df-a248-2ab78fa9b195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444704ec-eeb2-429e-97be-e1f265a9fb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58f9820-0a58-4366-8f94-f13dabda1956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65be11e-ac7c-4502-8c24-24784d2b6a24",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e43c2-1391-43eb-84ef-595e055a4830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec49b92-d2ea-46ce-bc48-c6f3f3ac50be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0a9665-cead-4978-bd19-27ff8c122f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e47eb575-22f0-443e-92a5-e4f9f897501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ca4701-7aba-403d-991b-e9260273c93e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fab59c8-117a-4a7d-bc66-607485c17198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46420666-b4e4-4f1f-ade5-9f8691a1c742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12005c-fed9-48c1-9785-8ef7b46c5b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6a5afc-7dc0-4414-a23d-7395ad1b0ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197a100e-a1a6-4166-ade9-9ca89ca3e5c5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9929e66-d0e4-4f86-8dc5-79fa1d3385ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab366f9-308a-4094-b197-082c8b7387f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa7b389-5852-4bb9-8e53-1b0bb36ac464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4de072-4cc5-4799-8de6-2e8059a51650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6192f357-02ed-48cb-8db4-1631c6749715",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21978dac-9b35-4ade-954b-0738af426685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e16a86-4098-420d-9737-5b1dd5d71639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56f5369-2fe8-4a70-8aa7-5d965da465f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "93f894a9-f7d4-4ccb-a33a-1591d37c6764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84319b1b-01a6-44b2-a18b-611f11eb2cd0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fc7d7-53ca-4898-9f09-202ee4a7a831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2b5bec-b937-45ae-a7c4-66336b44eff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c748f6f-1f55-41a1-9364-c1454f30dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab06ff9b-98d0-4791-8222-e6aabae8fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2f3866-d4ff-4658-a3d8-312e8b472378",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0cf348-c592-4d4d-bc41-73170ccdaa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771a8e4b-553e-4c6f-8dca-c79f81605bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb2c0c-ad2b-461c-a6e2-9fb1c237c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89cd78e2-5f4d-45be-8b15-315c8ca8a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48ddb5b-8214-4358-a292-fbc60a9e9ab7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d7f398-6c54-46ab-b155-b448954466ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933a6ca4-3523-4732-a07c-177581b7e4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6257e701-262e-4556-96d1-52b9d16050e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecc71e4-139e-482f-9c36-abae6d7f8890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a470a706-6a64-44ad-a2c2-c0232830ed89",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e359df83-076e-4b7b-ba9f-fe03e2b97646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce0d3ffe-67a0-489f-8e83-ffbd14d17047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca7d1d1-1c65-422c-a5be-e63732d72b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4187fe-051a-49a9-a2cd-67f65b758a51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d41eb46d-f8df-4a54-a765-58f22e9e506e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7a4bbcf-76a1-4801-8a2b-7b8a475d77fd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e55ffc1-87f8-45e7-8373-9ec9c395c216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5276e6af-6df5-4830-a2fb-bf5884f9f276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098e3deb-8647-40da-a455-a12626a1fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eb43d09-2aa7-4ab1-9b0b-0f299ad30fcb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e53e783f-d9a9-4828-8a5b-852764cd635b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43935e09-a7dc-4d71-92e3-a4c97f3854da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a37218e7-c75c-46ac-a97f-f3761b771564",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e2f8d7-a3ff-4b07-82ed-8c830174ded1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a29628c8-1821-4c12-a185-932798ba6d03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b5a40e8-697f-40f5-bd74-0ee1277a5512"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f2517bb-d2b3-4ca5-89ff-0c9deb5f4ebf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fccee92-f3e1-4918-a423-159b9752111e"
                }
              }
            ]
          },
          {
            "id": "b55277c1-0671-43ed-a831-e25e3fda71ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31338e97-2cda-4c41-90e4-7aa6d3d36e36",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "963d03e4-da59-4f87-9eec-ccc5dce85fed",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76cc126-a37f-4099-8ce0-f1e8e3cdc887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cef20d46-9a28-4ffe-b6b8-69b35f0aa097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3039c04a-ae52-4617-9a15-5d00d570f6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6af253-c2ca-4a28-b683-a9b1eab4a20b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96110742-54f2-4d8b-883a-2ced7a00e85c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b68ffbdb-e2ef-4cf0-b42b-cb7c40c59ef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f331d256-0dad-4f01-83ab-9bcceb192966"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78b580ee-d3a5-47ea-947c-9b565c0dc9e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4342d28-f333-468c-88a0-999e503883fc"
                    }
                  }
                ]
              },
              {
                "id": "04d4e3e4-f40d-4ce3-be9d-a49b644aff54",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1678b815-6e5b-4404-9b26-b201d04d626a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71b80c1d-8c5b-4fcd-b98c-206a17a0c90a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e7da20d-6204-4075-89f1-fdc84b0ad594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94413ba5-a652-4ede-9fca-698a6482440c"
                    }
                  }
                ]
              },
              {
                "id": "dcae260c-0758-4409-b3b1-89d4ea660bf1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebcaecc8-2f92-4138-8784-5c3fdf6adfa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbc62e80-9b42-4d7b-865f-78beb7066252"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64b9ce79-fa7b-4ddc-ac64-dad9cce88d36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a27974d-53b1-4e1e-83d1-9f8ae238847c"
                    }
                  }
                ]
              },
              {
                "id": "0938d5c4-421b-4a73-83c7-f3daa06b5959",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b7eb84e-1e50-4257-b392-1145296fa1e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18119333-a876-472b-978c-c5512a72f7a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16e2c8fa-b77e-47ad-a74b-cc4eca99cd07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8dc35891-4922-420c-9fd9-f14fd7cfcb23"
                    }
                  }
                ]
              },
              {
                "id": "2afe8078-e212-4df0-b548-9e35695a5660",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3640eb95-caa7-4e11-94aa-c12c59d0b925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "184d5eb8-cecf-48de-b971-41bd0d36237d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2840128-206d-420d-abdd-641b85c37275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0799465f-64bd-41b3-969c-6b45a11c17d9"
                    }
                  }
                ]
              },
              {
                "id": "0fd4a525-4a3d-4734-bc1f-a9bb548c1c4b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40117eed-f07e-445c-9fe0-9de828ba8eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f61ccf7-ae26-4c75-b2fb-3ce9af3f56ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81502ef8-61e0-41d2-9bf4-435f0852306d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48d9fed8-0c5a-43ed-b46c-e8976d7d0867"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cf4700d-c482-4b65-95f5-4ddd4045d41a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afaf1adf-1904-4636-b836-eaf2d319abe5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "807be397-38fb-4cb3-b749-d5889274878b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "097cc5e3-33fc-408b-8e5f-b482ed8e0bea"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cdf5fca-21bf-4f69-b104-627e2593074e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3e0d0e7f-b57b-4e56-ad27-792bd19066cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3355d064-b7fc-412c-aa1c-f6198f888dc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a3cc268-7a21-473d-9efd-d1818eb8f1d5"
            }
          }
        ]
      },
      {
        "id": "9440e5a3-27d0-40b1-9305-63c2f8b1eca1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a1baa82-6fb3-4b0a-ac3b-868d98ffef94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79ef04b7-4522-4613-ab75-b6a6c5bf0130",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8880da97-51a0-4bd3-905a-c91e1df575c2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225bfa81-d3ca-4c6e-a1c1-1cc9b146f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19170f49-697d-46f1-9a3b-18b38f50ea80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bccc4-51ce-407d-b929-0e8ce80059ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c0429e-ac7c-4a46-ad3c-d8f96233ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b190b255-33cf-4172-972a-30df5ed1814a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f75632-649f-4144-9792-dcab7923347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1481a0-3865-4e57-990b-a77d32cb1c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f9a861-4ef3-4059-ae86-d349c2d5389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e1c6c5-3321-465c-8c7d-719a7e410c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a614693-9b44-41f5-a12c-e67189f6df30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389a32cd-6141-414b-8cca-143b4cf0f1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df2cf08-0f3d-4c0d-b3b4-4d9c77803b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1681a600-af5f-4fb5-aaef-970467d80813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ac6aba-9464-4a18-a81c-dfbcce48d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aab550b-e0c7-4570-ab9f-36c8453afcf0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fefe8d-fdb0-4491-a017-092dd2e45ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e160c3ac-09b3-4e9d-9b65-4e231972e563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87533e75-1365-4487-952d-9b4605d953a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e30e03-865a-4efd-9813-dc081862be20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025357b4-6c45-4903-8ef4-10593657b666",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb93370-7a2b-4292-b921-805a842764ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a382fc91-1048-4f2f-9329-81985a4f5650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a1d0ae-86cf-405a-9576-325b5d560c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b99d2bce-632b-4066-8891-f1c39fbef2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec701ab-4e67-42cd-80ef-0e588a51e31e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59b4593-9bc7-4700-a00d-ba33c39bddf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dc8482-499e-4ed3-9fc4-0808acc1bf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93c5e8e-caec-41dd-9791-93d098269c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2500b002-2e11-4db1-a83c-186a1b517710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08044bc-8d64-4205-876d-ec5879cc04bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e87d715-2776-49e6-a566-206d42ff7e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec06c82-40f5-4805-9428-7bb57059f63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd14f5eb-9ec2-485d-a7fd-ee3a1173d814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f188da42-5721-4697-8d9d-e8bc84f52d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962aa5c2-8b39-446c-ae7d-0a38832a044e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962536dd-dd3c-4f6e-a261-ce925c297e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91100c3f-672a-4e0e-978c-e7fd6ada5a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e65163e-aa35-4ad7-9359-aee01ef666b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d699c84-90f0-4963-af7b-25fa1806615b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb02e7-6167-41aa-94c9-d53b319398d2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d694f3-22c2-48c2-8746-3f740b65e19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d419f72-5043-4e78-9925-85e4a4dba5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5704d1b8-d352-4686-bb3a-212625949366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a02817e-4250-45b4-b31f-c1a317ee6d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120cc999-8b5e-453c-8a51-0aedec359147",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c48f5-09ef-482c-b715-6936eac1d9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190d5051-2a76-42ea-845d-c7bf10b454fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27760fb-948e-4b5a-b1ee-851a3f4205be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c131c3-95eb-4253-8996-a34dacbee315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ac0170-5c99-483c-b344-780eb7b18f73",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807995f5-5e51-4f6d-9bb0-c9dc325c4ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8611e2-76ca-4a79-a2ca-5745f83bdc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac26b98-3b4b-452a-920c-6036af92324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6043802a-78ab-452a-b5e8-0d07ed90ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65738777-6580-46d2-b9a1-5a6e312f61cd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa15c9e6-a80d-41ac-9c5c-dccefeaad29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fdcc0e-7d60-4033-866c-f81a8d7d63ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e146fdb-48b0-4119-b9c4-eefe91a43743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d46df0f-6ad8-4a5b-91ac-f2875d1bc030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02cd8ca-ac17-4b53-b714-6824b44c5636",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571acd20-7090-49b8-8209-bd69c918f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3f0216-822d-4cdc-9500-aab3f74a3c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861be2db-8c9d-42ff-98bd-67978b9f3097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c93bae16-0d31-45c6-b25e-c14412b2c491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74ee9bb-caf5-4893-bf1b-5606a706b7aa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebdb5e1-e8cc-469c-aee2-fad87810c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbcbe93-151b-4422-b0b9-34e7d8a10b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b074ce4d-23ac-44f5-a804-5d4193369fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f25214e-1583-4e4a-8ad4-b01f8ff99a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e469c97-a98a-4a8a-b26d-b706c8bc5d64",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5a503e-f116-4f71-8cc4-7c3f7c49e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330fe4ff-2fed-43bd-8468-0d93e0bddfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3dfeb6-2f7a-47a7-92e5-e7768463d781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eded377-de54-4e1c-af02-ec3a8ef1f9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5bf04d-fbbf-4620-867b-87e9a615d245",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133c24b2-4623-419e-9566-5abcd48bbd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff6d12f-8acb-42c3-b353-743de0454bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b2a651-08e7-4a74-8506-0a4ec2a451a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b124f203-ff60-471d-ba99-8e7ca8bc1fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c17086-32d5-4410-8305-25eb0c41749c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cb7ebc-d9a6-406a-9e7a-6cdb6ff2c505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03211367-ba70-4102-aab3-41a6a8744f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04308a0b-9433-4824-8a3c-288955b0363f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "685c6acd-2d9d-49b5-b5cc-9d8cf14969b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da0b6c6-8c89-49d0-834d-f1a8822ed5ca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca15348-c5af-432a-8dac-876fd5c442d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb8b1af-f90b-44cc-b937-4efe86f886e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c7a053-ffe5-407b-90e2-fc54763e6e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc65ef2-3335-4677-bcb4-df45814745ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9290418-d0e5-41c4-a532-46a119a5a304",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e273ed-9b34-4a00-9e3b-07439bdfe1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c597c4e0-f5b8-4193-923f-b81828254968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd596c68-7d45-416b-bb3f-3914708dc946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc5fe6f-15ff-4a2a-a901-3789b2af2d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914863b4-7ef1-4816-8cc9-7cb9f8c28a1e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ad6094-de3f-4466-8b22-357662088fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a40a52-9c92-48d6-bdd1-6eabdd8f3b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fb5fae-1b63-4274-bbe0-e0217125de4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b1fc59-13cf-4800-9708-777537ece1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02646e9-33f1-4222-bd2f-437ffffefdb1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563842c4-3782-4d37-8e22-8bb636f3d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53713c7a-7ac2-4b96-b600-4af8745a0e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fe4a57-0fb3-4349-8db6-e430934cb645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9bdb73-8d91-42d3-a7a6-06483e5a52dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77834f01-0dd1-4b90-85a3-6aa378f17f98",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3848dd3-a59c-4a80-8b7e-3da0a943bc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50464ccf-e2a9-4dc8-ba0a-41dbe853a27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b5160c-00bb-446e-a30b-e6a3ee429b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf25f3e-64d5-40b2-aa9c-82035ba0a01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aa7e96-595b-46a2-9f62-e4eebb4c2f29",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9adac3-6f5b-4c3e-9c2e-ff374d2c2aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2461b8-09e9-4e4b-9c8f-50e07d8a19fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef660ace-dacb-44db-aaa4-aa9840d2f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3045a854-1dcb-4d8c-b496-579546800597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc6f7d1-5a6d-4597-94fc-b81578d228de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f2935c-df49-449e-87b4-ee8e2c9726aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74103990-6771-4846-80f1-801741122155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbe57e1-1b0c-4da7-8a8c-efd11e4e0c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341543ce-2e8b-469e-8ecd-bc282a6d1b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6126c0ed-9849-4260-94c3-9785aed550c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf21139-b62b-4225-8986-70283ad4d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76b12c3-90f3-4a03-b22b-6a52f9f2cf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92bce51-90f5-458f-87e5-2189a10427e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb4109c-d588-4c0d-a216-e30bdee4f5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942b424a-6dff-4b71-9482-22e1adb14da0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c65a9a-8caf-4714-b2cd-44983abda45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afe3b80-8348-452d-9840-cc9799e1ea96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d10fc01-5565-4d1a-85bb-eef49335b6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5cddd9-2f6d-408d-a335-6d251a5d70ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ac833-8921-4520-8541-5afa4b96cec7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9c0d8b-0ae6-4ae6-bc5e-d8dfbf2d6749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43cd626-e9e2-4f99-aaa8-3dc692a83928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cea8cd-7d78-4dd8-9b0f-c0c076285a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a35c0c3-430c-4903-a1e9-05d4f493cea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083ed229-5070-4c88-866e-984e141776b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced57c53-7eef-4cb7-86f4-979d89eafd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a985cc8a-2678-4e3b-8bf0-ff9e29a26dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea70ea6-f6ba-4db9-be5e-25b7c882d54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e1a0f1-f0bf-43b6-9c18-b0e02b1fbc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506dee66-4cd6-4d2b-a669-3cd2fc176e6e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf5c55-328b-447f-accc-3b54431ce99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1431d7-5f12-4d91-acc1-db2f4f4a9ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54901de0-7978-4e16-a4c5-6b17c03176e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2455b8de-1f59-476f-9834-f66e2779d741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14da7a86-7ddf-4d2f-8450-301cf2c2cbe9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a895bb-16da-4d1f-af9d-e3c481f4bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a199427a-a649-4b08-8882-00bf049557dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7b06e6-bce2-4a89-8ebc-fd563b51d40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "646f6946-bcba-4143-8401-73a88f253cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbf51f7-1043-4bbe-a432-d2a955375115",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ea3c91-e8d6-4a67-a98f-f6bf4dcc46c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba30d7a3-e1da-4118-b672-276a69446d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649328b-5284-4013-9525-e0fa33c3cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25d12d0-36ce-4253-b185-83f14d25a00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26db0bf-98ac-494f-a88f-59ccae04c72d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5008e0e-c433-43e4-b0c6-1f6fe4e1a474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95928fd6-ecfa-457e-bd5f-276d35b6b419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a6a0a5-0867-46ab-af40-0eee053fcf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5937c732-77a0-4f23-a32f-6540efd39358"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d295e75-94de-44c5-bbe7-740a56f2a135",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "479f5fd5-1739-4d61-9e11-10c15aa86ef0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20f7a8c-91f5-41bd-bee7-b060b619d13f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8acb7d09-ab83-4817-a076-71d3f6909c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b255b318-e45c-49df-a7fd-1e7340128388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd3a5d92-a806-4508-876b-30167bf6d969"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c8211a0-1872-4df9-9bcf-a18dfb360bb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f4fda11-3cb6-4264-8473-0286d77ac2fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2c6c44e-5b72-4517-b7f2-227dc8d41361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d9e89dd-a0c5-4456-a31d-57f8b63ff77d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dc10cd5-ac5b-44bd-bc91-762dd8c49f71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7251fa1b-1b61-4201-8e66-48b9d4e464e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8ac639b-f430-4668-8d92-14e9d9049d6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d47131d-82b2-4032-9448-66f0374d17d5"
            }
          }
        ]
      },
      {
        "id": "9f5cd8e2-c091-406a-bfd9-7886066d68e8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fbdc4d27-d6e8-439c-a923-cecf0c7056f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1ee72cc-3180-40cb-8f9c-6bb47c87fab4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "393f265d-163a-4866-afe4-ae14ebd0a4eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da21842-a79a-4df4-9f88-d22e77a19456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d3a706-3512-442e-a132-a71a51c1c2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a0219-60e6-4c0b-b2ad-7eba0eea9088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef681cc7-997b-4893-8fb3-f275b4ddc723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb633f-d273-4617-bcc8-d2456ad1207d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c417fb-10ef-465c-9df5-1d9a082b4c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d30d633-a5ee-4410-8114-3028f0cffc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e6835-09d6-4186-a14a-888db10e1673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b3ea8c-2e3b-4dd3-a081-874a63a52a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29805653-8c29-4b62-8c18-4bd11d33ed48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92431732-0bd4-4b9a-b954-d82f23275360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa7b65c-9782-44c5-a7ba-47ecac09f4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b739575b-59e1-423c-8ae3-db4ea9d2a15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e0b44d-7515-426a-a08f-382c8f2231e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0d812e-2b19-48e1-8fed-5c2c5f2f2401",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152f2d62-3021-495c-83e2-092bf575f4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df69444b-3231-453d-a46d-7ec1709efee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c65315-af82-4a8f-9899-2a3b4fd6520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7640dfd-b109-47ba-9042-dd74f985ca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf1eb8c-226f-4481-96f6-0f5dcfef9953",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e7ec40-b029-49a6-844a-89882c3814f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b43e609-da32-4e22-b156-766c55e6c7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d904d0-0914-4a73-b3f5-6f40c7e8f504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0f1789-aefb-4c73-bb06-27c385615e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a489b86-fb06-4210-b10c-10d303ca3fd9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec4594f-47cb-481e-875d-b263a456302c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16136859-a559-4724-bdbb-d6a087495e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f79081d-3341-46d4-bf37-b38326429b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19f4e81f-1fb0-4426-b836-cb607d808fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb2f482-c821-450c-9c73-3bede70053b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53b92ae-76ab-46da-9961-2e0b8b16f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0c521c-156c-4372-9040-2f0ac41a803d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db063a0-eb41-4ae9-ae07-25c579af180a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b37028-882d-4b83-a4f6-077c85f3565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fc3563-dc7b-4cfd-b930-5ec6d1ae3ec7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7d4d25-1db9-497a-ac77-4cd942610c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139c7b8f-91c5-492a-affd-c24e440d2ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd598d9a-f015-4303-8f85-4029582285d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d06515-e8c2-4062-a454-4d472b2a6ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2086d01-33e9-4aba-8ef2-7e0bcd428edc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d982c26-48b0-4cfb-a8b2-a10ebc4f1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa679ba0-464f-4386-8fd7-fdf4e963e2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff24ad90-711d-4d03-94ca-a66849d82062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ede7594-42fd-4c29-aab7-1574a22ef5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4327f0-508b-4f19-80b2-48d3b9797b8d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3563fdfe-111b-401a-b377-b8512a079eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b15d57-fca7-43df-83b8-4b2fa664689b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148c592e-073f-460c-b1ad-3b78bdedd2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "332c9c88-dff1-406c-a2c3-f1f114359f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed40af6-1aee-4af4-ab57-bd7b528e1ea5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe4a9f9-6ffa-4266-904b-b9106477345c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3794311-cf25-45ab-8065-f556c66c0900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da0ce0c-df86-4018-8546-7b708ba7f74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d30de01-c523-4579-a9f0-b776056e1625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9db1080-6406-48c6-ac53-f45c6a97638d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c0a816-1729-4c5f-9664-bede585b8c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fcf010-f0c8-4ed0-9a18-f6055323f845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16845510-9b8f-4cc6-93d2-e51f3d9203bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8f39d1-6146-42bd-97b4-12e9a7a12eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dd3620-b91b-4f50-a9b8-6426b14503a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65fabd2-fce8-437b-9ed8-7b85c6919bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71c6e81-ca90-47d5-bdd9-57ed765e8448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b0fd3c-c104-4e38-86d4-b7847e4fd5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6afda57-e6a9-48b3-a769-be1f5635bd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f59b23-b398-413d-88b1-2ff2d0acc36b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b8c6f-9c24-4900-88f6-de713aca652e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e718179-a2b3-4de5-8f78-d7466cc5cb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea910ab-d79d-4461-b7db-586de486b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e6492d-1f7a-4f76-b4e8-a937bab43b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29cc0c8-dc10-49a4-b386-ebd80ceec435",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ec0356-1140-40ac-8c8e-8f798b94747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae7741f-b87f-48c1-a093-238fae3ca4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f5507c-a509-4f95-b554-650acd8de07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d249119-08eb-4fae-9ae8-c7f09bf1f6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d20166-026c-4abe-b4ab-1104660790db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dad224c-2812-4ffa-a2b4-de1bb364868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e374b7-df23-4fa0-806a-a5c4f386fe9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7494416-cc4a-460a-b156-533d6e8e6293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb398ca-7dd9-4bac-a749-10b769f66905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c926e4-d0c3-4885-b2a7-9876aea58423",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e0a2dc-899b-459f-9d89-92146757eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98fcfa8-2676-46e9-8f58-2211bab9064c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9984ddc5-78c6-4f9e-a955-38b4331f1089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a34d17-92e4-4b5f-bf15-4a46b03be86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56abac48-9de1-4878-b0f8-8626417775bc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c56d9b8-296d-47b9-b475-57e60e62ec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9b6bb9-2c49-4eff-9b7a-d57255ea7d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71aac71-b0d8-49d7-b9c5-f95f1ec95a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f5ed2e-fb54-4176-bd29-449587645217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b718ee79-2108-4ee4-9b28-b02802c61dea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849dd874-4b65-4ee5-8baf-ad4ef7bce563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ac76e6-94ab-4290-8a8a-ab4a1a979c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d94d9-6a73-4a85-ae8c-f988913aec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c69779-eae3-4c0b-bb79-11d510033570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb3093-6e6f-4297-8bf6-6975b3370276",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda2ff96-3418-4c88-b2c4-400afc24a423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2be8be-9424-4878-b78b-8311529ea352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39fa937-9a15-4832-ac73-55e2e90695b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf018a1-5bcf-4314-a08d-c49e091c78bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068a9141-2331-41a0-ba5e-a0e740d875dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79305699-3b15-45c2-b193-42ed5a6e748e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d682fb98-ccee-4868-a86e-1cf002b5af25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859fcee0-1c86-4468-ada6-29a838188953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce08c92d-c262-4a08-b9a9-b1cbc78ce552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8737fdb-a084-40e4-9695-8a9ff0c14b85",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f1f2b9-8bc4-44e6-bdfd-f5f5c08c8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99151e95-3778-4d4d-815a-e19db753bc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed066bd-ea9a-4249-8b4b-4be2c3f9dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "595ab28c-4b51-4166-bbf7-a705d61b4649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0e6d46-5c11-40bf-8d52-069bba26d01c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451e631d-a982-41fc-85f7-d96f4117762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc57f89-e501-4a49-9357-c8ac5f07fd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17980000-f0c9-448f-b026-09f9ec138804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a61d047-2c5e-40a1-bcec-f44494dcd92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8f7007-cc34-469b-ad39-3cfe3576f97f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d928b-af0f-47c0-b2b1-79bb6782bd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78887d9d-a4dd-4bd2-bb7f-9964e68d3e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119cb38e-3d8d-46fa-a250-33cd64b4ef57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c5844f-d786-4da3-9311-165315225da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5463022b-55e5-46b6-a128-6b21b6758c54",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbad4df1-3b6d-47e8-b589-63eb2b2beff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beba06d9-2273-4155-8d80-a63067bc3525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cade0a3-979c-4206-9558-930b8ce546aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e41772-e093-4131-81ef-d2b6050908fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabe43dd-8b3c-4af1-b8e6-435c3fa48495",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8112f-fe42-4373-875b-83bd39d56f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b6a777-7692-41ad-ab58-ebf13cb7f03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e35659-a6d7-471f-971a-27bab510392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e14c11-fade-408a-8961-c470a519de6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b98f2c-9f77-47f2-a58d-d8a51f691353",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff41a21-78a1-4b19-b945-38ac64c77445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660a0ed2-11ce-4eae-8689-362bef8318d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a629445-f5b7-4e0f-8ad6-365bc36fee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51af9172-4372-4e6c-aad0-399139b4c561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12806d76-d7ba-4e1c-8ecd-acc114389892",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808fa719-d871-462d-b08d-b9711632a195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2520d970-5994-4676-b07e-87f6dcd1e24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9636d29-c787-4962-9715-eaab5a15a94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e325445b-93bb-4d79-8c57-bde35abe1c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456c2cbd-c1af-4bcc-9e77-7cdf8c989a91",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607cc154-aa69-4041-8d10-41de0b0faf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5953cdf-a729-4e90-aa9b-79556b5be177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2edfec4-84f9-4533-be25-e152620d69b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "666385c0-4c71-4859-990e-0968024a60fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9162b0f7-2000-4c93-ab7e-8250f66f69e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a8dcff-d8ca-4236-ba54-9b114b57415c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99852c7b-9fb0-411e-ae3b-4a5a17681d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3c323-35ff-4191-b965-8c5fa92e947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a16a24-1871-45c1-92db-f7bdc7f1bb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5884fb-ecf7-4d73-b656-949f7cfa41df",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a0136f-3f10-4a71-b5bc-9e048f701b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dc3fee-2064-43da-baef-dbda6e2d2ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e4371-ec8a-4c35-b1ec-939e327d6fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a493f5a7-f878-40b1-88ec-8c5f71b5ad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ca3089-3460-49af-9359-19fe4da6142f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4463e778-35cd-4385-8b85-d4599266b606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787108e4-cb88-466a-8ada-1399329fbc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190963fc-3a98-4d0e-bbd1-7fa6582c60a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37966291-ac98-4ac6-a9a5-5dcaed0bbab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a22d83-8065-4584-be33-556ee58b646c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cbd3b5-6c42-4835-8782-7739b9aed1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae101774-bbbb-4a51-bf33-9150f93f8d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce18a6b-9c84-421d-b3ce-7f789c1125b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f5f1a2-6028-403d-8bbb-a6a83af4bc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb44c009-93d0-41cc-bc54-c0402ef46c19",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ab64ec-d2c1-4968-a636-da7e29e0e770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e41cac-97a3-4f0d-a467-b767bc5f3e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70213ff2-d6bc-48e8-ab98-0dd35f85b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9f88c1-5d75-4e73-a69f-62cca053ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7771085-844e-4c88-b75d-2e37e12c5a1c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0815278-33d9-4599-98c0-0882d275cf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b580ab91-034d-43b2-8e79-61724fe73f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f767b81b-241e-4608-8196-61c1246797da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390382b6-b15b-4458-9964-5887370df9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c00ebb-dd81-4c4b-9936-16e669d164c8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7420af-d73b-4095-be3c-4d5f89fe9853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3d37bd-970a-42b7-a468-794fa949b026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269b0e1-fc79-42fc-ba55-dbe02e8b1080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd24168c-f8b3-4baf-a01a-1c3990278c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49282626-9420-4dc8-bee4-c5e0ba56d507",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bb8f4e-6f30-4556-b72b-a9f8f22bd28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e00e764-37a4-4add-8f63-fa59a73fc61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e94c16-62ca-4a95-846c-da21d13dc3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1d582f-7624-4c2b-a866-f7f1fdcd97de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c365d81b-64f8-416a-9124-a10a07c4f7fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6a946fb-0c1e-40e8-9422-b715cfcf677d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11615fe0-7379-407b-98cd-2e0206728ef6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab2a3e2-40cf-47b4-8480-d8171771899f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3df368-6cf7-4d5f-af80-c6442bf279b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56be8f63-2cf4-48c0-8da0-ee67d762b2bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96b66c0d-8a44-471b-9e43-95cce908338b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2c42018-7249-4762-9b57-d3f8a6d45162"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d277d34-d43b-408b-bc44-532bca36a412",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f2e2aef-750e-4013-b916-5c9f6f98abfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cd1feee-0f0b-4d5b-9b4b-5845fc56f701",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08727653-8b9b-4799-9668-716f0183f426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1861aea1-bb76-4ab7-b2b9-0217b6648960",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98f72b8f-d2d4-435c-840a-e8dca8a68e7a"
            }
          }
        ]
      },
      {
        "id": "d74e8baf-426b-444d-8946-64d1a68b2131",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "03103cb4-8f51-4e51-be97-f96974b37131",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffae1878-4c91-4594-9b55-18631a5db84e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5927049-3b72-46a0-943b-433561042d7e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bfceca-5e37-4143-a9fd-efa0efc75f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba076489-a7fe-4185-9ea2-04da59f2bfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1632ac75-5cdf-443b-a87c-ee72f74be29c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d70b457-2518-479e-8879-7e2f61f374bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8096bae5-7778-4ef0-954a-09032261baf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ffa409-1329-49bf-92a9-b4806f3cbe37",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec91555-795a-4c8d-9102-feeacb207006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545cb571-76cc-45b8-8d66-5f726451fd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03535e83-cd23-4727-b115-a0e4b76a7f60",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f62648-825d-49a5-9a24-8724035b78ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2200cb52-f68b-414b-bc3f-8588ea2f8ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df527c6-9686-492e-a3db-c500c3d97a67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af51c483-028a-4b90-8c81-fbe4de8ec2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d196a3-28fb-49c8-94cd-d4bc7e83c2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fd3d21-0fd9-473f-85e3-29fccc37a5c1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ba0501-06cc-48a1-a4c8-e8f9eb8061b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beeacc8a-41fd-4dbd-8a2c-5b38a8c2c2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436cf6b9-e20f-4a50-a7d9-439c377dc6de",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0dec4c-6652-4ec9-b0ff-ab93b546228f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b506a5-de5e-434c-87d2-e023ca6a8899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a28bf2-2ac2-4bc5-900a-1de9b76a9e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672cc752-7e64-4aec-9d82-487a0ebcac1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5737241f-cd43-489e-a95d-646ce8a5ebcd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05974f1-6f8a-4b04-b79b-40568ce41bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4d32a1-56d9-4597-ab06-6273d51473e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e112952-56df-47fd-8a07-cd557a5ac288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7045d250-16cd-4ea0-a7d4-9c337d0a7c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edc1812-9e3d-46a6-b997-0d97982dc447",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a9e79d-e184-490a-80dd-bcc56da8e529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4146ec71-2de5-426b-ab60-da2094f0253a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ee5d50-65fe-46f3-8745-6d559b1ef0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b963503-8374-47b4-bf53-26207e3fb050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c23d90-fae2-4533-9a14-17b1d52b0f2a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d259b6bc-19a7-401b-b906-40d560b652bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310cf188-037d-489c-847f-41e60c6973c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e664a18-ee07-4cf0-a724-1c12bb98f004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65aa829d-1541-4667-813e-acb93627a49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb1aefc-06f6-4e9d-bc99-c5f30014b268",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144f1fec-af65-4717-9ffe-43dc289052f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08187308-d695-4bb1-be92-76adaca9b9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e42525-cdff-45a9-8e6f-e7ee90448008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32588e31-2d24-47ce-9478-70f4f45a142d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64b8e8d-0b4f-48e3-bfe4-3b52fcc6ed39",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ec7355-6a46-40c5-94cb-2c0ab30010d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de55653e-7d96-45b0-8404-1cddbb522cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06ee872-bb47-4ce7-beaa-cee96a506d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b202f9-4a7f-4311-abad-27754384555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b017ee8-4193-4a75-bc65-d923e3858dca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b90be1-04d9-461e-b027-377925e83558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248ef10d-7973-4568-a5a9-09307abd654a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81192a9-6f4c-40e6-8295-2111b751d253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b4409e-59e9-45da-9512-f2cc5834eab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b109bd5c-f6b4-44a4-a17a-97bcc4b12ccb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8bd09-759b-4d0a-ae02-53adddeab8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4252b768-20c2-422a-bd07-dab998e72f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76939184-e9b0-4c17-8515-8097beb6c3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aeb34f5-e97a-4245-b8a6-c09ab72cdd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0cb5f8-5e33-451d-8ea9-cd69f5e95127",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60bfb32-d1db-4a16-8995-2b024a8eb752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2460bd5-8b61-4d60-b93f-ae3bdf1d8fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced0be61-809f-4250-9f33-0c406f9f0fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba21025-90a3-4466-8362-1728c8b26433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ff59fa-0ab6-4201-95b1-01cccab3ecd0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273135a4-02f4-40eb-827f-d3e2085d22e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a115722-a303-4305-81ce-2e268c0ad10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a043e8-a0c5-4c13-93e4-c020cdfed57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40f85d9-cdd6-4144-a152-6fa77b61af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704edee9-2568-4fce-82c5-008a2967375a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e42fe3e-8f51-461d-a7e0-cc365711c010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6d56c0-5fc9-4cc7-a21c-bcc8082b95b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3253769b-2139-4804-90cf-6d0da961912a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd68ba6a-4d1c-4807-98d8-e9828616d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f356cf-4caa-4db9-9238-478c2030da38",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47602ba-b3a7-46ea-a7c0-17eb615d95b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136d99c8-cdf5-422d-96b7-3da78bbb9b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b43c46-983a-40a8-a7fd-cb7ca91bb899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59373c6a-2606-4f39-936a-9faa04cb1c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc324151-0c81-45dd-97c7-50759a1fcd1e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd651fc-4413-40ba-ae5e-a036294644ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3ce1a6-bd64-4880-8cbc-9cdca86e1057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb987569-c645-4895-933b-681d0d7e573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5db8760-ae69-47e4-9319-d0410be9903f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c986d1f6-9a4f-434a-93db-3916344b9c72",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4909d47-5e72-49fe-831a-1ba78126a051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1121ae-e481-4683-99a4-8f1cbbbc2806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77910c6-6e81-4b66-844b-e51b08b0c4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cefd2c8-f124-4ff1-9f17-e0a4684a3310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce592fa-a0cf-4f97-8772-40336f665325",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb928372-06b4-4d9d-b55b-16445e403e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1cda32-9580-458e-8e34-79faa88662de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4686355-ab2d-46f4-b085-0b7dbb699a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009ffb28-2701-4adc-bfa8-569d94dd531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04020699-458d-4f27-94cc-533ef4983c78",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9c9222-19fc-4f2b-8502-f742d59454c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97c35bd-76e0-4cfb-8dde-fcc0e01e8698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d763f8e-5ae7-4ea0-9534-e235b5bd3d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc69ac-51d3-400e-a7e8-59423a8d9cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e5cb1-b903-4938-a0d6-438d9ddd8402",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b595bc42-4a7d-40c8-a851-bef1b0e9e936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db6efeb-77b4-4ee6-b443-555f4a929dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c36900e-67e5-41d9-a994-c6fe5cc104f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e09aff5-c0ec-4f40-ba57-d0db28373b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90946c1-b08b-4174-aa55-0ff12bdce44b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb074a0f-9e6f-4935-80d8-7b6ea329f92f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7468e0e-e024-4d4e-bba8-ad4afb559f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba8807f-9fb3-4d5e-a122-b82e30a4b257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf52614a-e387-4355-a7a8-a01c0c40347e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf53ba8-608d-4c0b-940a-7fc67e40c0ff",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2bd264-ff41-46dd-a208-d12bb7b38876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6112f2f-bde7-4483-8bb4-79bf934660f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5b40a3-a413-4e51-bb0c-b08e5295ffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafa453e-8e11-4d32-ac2f-09d89d4ad078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b30f3ab-3ec5-4757-9937-752f7fab3503",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d01ba5-7f17-495e-a3b8-b3bc4197346a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2357cdbb-5bdd-4520-b4b8-a53290ca2b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936ab374-a1fc-4fa2-b36c-f0d51b2049f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42643ce5-a6c8-46d2-810f-f9ad876532ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cf758d-2851-458b-a8fe-60fd135758f6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dbda6d-3235-4b63-ae00-eb372b131b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9c4e53-aba8-4f5c-9ad4-33e0644c983a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f64567-43ce-4f22-a31f-b5299f16c986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8ee692-e9ff-4a6a-8842-686cecfe1eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a68384-3a82-4985-ba58-4b77b3e3fab9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94c1d4-b667-486b-941b-a0acd63cb8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e63650-c896-453d-86d1-67c4510400ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7014ae67-09f4-400c-8bbd-493530dad3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8292aef-f8f1-4763-8dee-34912a252120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdd801d-8bea-4504-9048-729befef7009",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a178d7-3fcf-43ea-8509-268154e64940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1e4662-2983-4314-942c-2c4f5308a1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6094b64-fd92-4da2-9fd0-20a78dd0c830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8e8b91-277e-46b0-ba5b-9412b53f88a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88515d7-b3f3-4f83-abaf-47d45efa9984",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a4d77-56d7-42b0-8e84-7736f007f090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77142174-04d3-4746-a219-844dba203b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5417f457-7d1f-4a72-b166-353cdfc8c8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c409679-fe78-45ec-a810-94c6f2d9d145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9c3472-1a67-4f1b-9185-c83a97f29814",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea73f16-8365-4477-a691-a3d2ec63ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94459c30-127b-4f20-9e6a-6217a998e091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1713ecd-b7f3-4de2-a612-4dc84831924f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc86a34-bd67-486a-a63b-6ac435982e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92408c3e-0013-4bc9-993d-d190b5527dd4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d6f77c-a6d3-4bd5-9dd9-3a037f8dd0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591cb6f6-3dd5-4867-a2c8-3e5eb426a8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ae0d12-b7cb-47f8-9ccb-7aca036f35b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8ed0c7-547f-4b97-9d79-429b7425949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c32e03-dc4d-415b-a4ce-3b1f212dc622",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df84458f-6958-4bb6-a807-bccf9f7494ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a2a878b-96d5-47ea-8f1b-26c5d1b13aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3e42fd-c959-4394-87b0-ea820ca4b0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bdcb7d-df3a-4536-9527-2a82a7031717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3990ddb-ee7b-4ac0-a3ef-07473a17b0ff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6ea859-b06a-4f7a-a9d7-3f66ae91d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1d75b5-feaa-4d97-872b-0633a68d85ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb35159b-37b7-4123-865d-a10194cd9806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5677fd2f-8f22-4c3f-a127-989d2c0ed01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa62b58-c22f-4a9e-bd63-847375b762bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec0e57d-d5d0-4f16-b14e-459552587fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e185dd4-0f39-4144-9ba0-dea7c11f6f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e40527-76f2-48f3-b763-770c0236a636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f0d741-3072-4d71-88ce-c504fd53cee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dcce55-fac3-4601-840a-b8a8a4230ff1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ffc2de-d5a6-4da7-ab75-3758fdfce04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bb2464-b2c9-4cc9-aee6-0d83a425b8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f650c7dc-324e-41fc-96bd-52e2e9595f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13b2d51-19cc-4185-83e0-957b4f0d6a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efcb21d-2e63-414e-ac8b-754ad52619b6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8965a1-c52c-449e-be2b-e72d37cb091e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0918f529-82ab-4675-a3e6-bba4de66e582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567905e3-e535-4314-b3e8-5fd891170855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7284e20-8169-4d7c-a283-dd63172a7737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00e4598-8753-4fc1-8fbd-741333bed644",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e499b38-8648-4b2c-b7fb-c12d1dd1f7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d82aad-3d40-4227-a6c8-2d99334297b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62522c2e-8acf-488b-9502-74e13bdf8ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4074ffb6-b79d-4e90-a6c0-1b4425c75eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045d21f-e5f1-469a-aa0f-2b57a4c95f98",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d794aba0-3346-4874-aada-71b1db95d6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5d1da9-932a-4b23-bf30-58f63c03690a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67540a3-6a46-4295-bb88-3604005880e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a6b6a1-459d-45a8-b3f9-bbb0cb2a97e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fea805d-1a5d-4277-a1f7-f6371fb732b5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b4e53e-87c2-4264-8cc7-e419ffccf5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8782803-74e9-4641-9388-6d297ebabc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc6f837-0371-47aa-8ef2-bae0dff1d4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebff8a6b-1419-4e3c-9ee4-80bca808b325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2d4a3e-495f-4dee-a51f-55b1ce13d276",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f589b8-e2c6-46ca-a5e1-6db86d080610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4a648a-8a22-48d8-83b8-53668d650bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956d150-9b50-4a89-96f1-b5e26d8ca699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2189486-c5ba-4ce1-81f3-4ff722ed452d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881e3e36-3116-4e1e-91e2-58d633957b2f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9276cca-50a5-44ad-9967-9f0d00731f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77617ffc-eba6-4ebd-908d-79ba32741ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edfed83-195c-433b-96a4-a7b786efaad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62c5abc-ef0b-43c7-b634-5ec734edca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb83d21c-3e0c-485a-aef7-6740af9a5545",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7fd3f4-d7a8-431a-82d0-1d47fe843577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1739a0d6-a25c-404b-9b24-0e0a12f76c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b3a8dd-ed59-4bc3-986f-d249bd1928ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b31cf4-f350-4236-b025-b793f6898401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f69193d-4f08-4dfd-86e6-32b4d1bcaed9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a2adae-10e1-458d-bf77-3dceb815754e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1925dd8d-566e-4e4a-90f8-b3accda1b185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca9b4eb-d304-4086-b12d-af8c38e8d1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c6aeec-b0eb-41a8-b046-77aecc2a2374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a0d6e8-2bad-4a71-8abf-0673a9b7bc98",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9369f7cd-5015-42ee-9548-6046f976d43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2237e61-95c5-42bf-ad8b-ed02ad33792c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b478d7-f9e8-4109-8f57-24ca7776dee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a45277-ec3c-4e07-9bbd-53abfa975c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727e2134-4d24-4ae0-a33e-544595960edb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38035e5-53e4-4651-afb5-44312bcb2fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec6cc5d-f7f0-4db9-832b-ff3b6a2f1390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2144b48-bec8-4500-ab9e-1221e264aad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61903a48-ac59-4ef2-83c0-83db94d4ce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b35320-258e-422a-9d29-a8f7dbbab0c7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f8aa65-9dc3-4002-9a79-9aa57ae96fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d08b6ac-efef-482c-9f68-2664c5f61ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e408e4c5-de0b-4b32-a724-dbf34eafa9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29025a2a-07e9-4fce-a8ca-8c30a9aa6d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742581f4-c09b-45c4-a2a8-95035e9fdd62",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10289559-3da9-40b9-b7d1-5ac0da2e2e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c62c9c9-e4d2-4964-90c8-2920b6706241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf17606-f0b6-41a2-a634-5cfb2b991dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48437ac-7cb3-4ed5-85b0-8873da63c2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b261447f-59bb-465d-ad41-be3f3c93629c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acb1d00-a3e0-4778-978b-e1a35e8a6d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefc1e94-5e6b-476e-bb00-c2ba762674cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3555bbde-8e46-4515-bed0-b7514ea92b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9717246a-9420-4cfc-92ec-9e976e6e1424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0ef17a-3210-49d2-9a07-5b144583786a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2df4f-e69e-4210-ab8d-4412f9ec1ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641485ee-e9a7-42eb-969c-7cdc78f925c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa66d714-eb68-45c7-971c-0946c53fa68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9671011-36f8-4988-8068-f6e0d617f810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6211af-d908-4ff9-81e0-acfaeb9c9c94",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74725bb6-e413-4194-8292-0f05af1df01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96d7049-b247-44fe-8d7c-e985f6b4cb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716082c-6c20-41e7-bf6f-0d73a182ac99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd77981-3579-45d3-981a-1db0c6643ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78fdb22-f440-465e-9fbd-12fe7f62a90d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79665a22-a404-458b-83da-f2752ddca464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f37f7c6-8c75-479e-a4fb-0e98c9cea2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b63d1d5-dcb6-4f93-811b-0fae6facc483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e66fac8-7957-4b26-929c-114e5371c125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd5273a-5640-422b-9718-f64a0c76115c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ad1522-2e44-4913-85a4-67ca94cd8989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97018da4-a975-44bb-9a19-399c48080ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988baad9-3e1c-49cc-9531-53e820e1d202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4486b850-f84c-435a-ac49-dad95f78a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54646225-bd15-41a0-9423-43887948af07",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6916cd9d-f667-4fb8-8e2c-b04f3920c5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb43dc3-1cf9-4105-8952-c51259afecd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a10332b-cbdd-4677-bfbe-ab38f5769fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88bc684-676d-42b2-a49e-559b03624994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e2ce37-1b39-4bfa-a396-32314b854b2f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c445901-3757-4e18-bd42-9b771ff5e00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d93a1c6-c396-42d1-a011-89a4b3aa23f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8f33ab-ef3c-48eb-a509-a817d4954103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c7a66e-a57b-4946-8a4b-70b971fe1b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e771a-7df6-4d47-b57f-482956d72d3a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0d7633-3ab8-42c4-a9e2-c1f291e6f4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150817d8-63f1-48e1-85e6-b6342910b5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c47675-cac5-4f0f-bf03-7a4e9af02abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6e09ac-9b9d-45dc-b123-f702cb03c147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998ac395-7573-4387-8328-46027f1e4058",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f88a58-6df7-4116-927f-340db37707d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74caa785-9945-4460-832e-55e2c659ade0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575fd4a7-00a3-4dd5-ad4e-d548077c4ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee0ac40-9438-4ec5-98b4-f2eaf0abaa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffb371f-93a6-436e-a711-611ff6142b9f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fec4074-a10b-44b7-914b-9f0d751de0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339d4346-e6f6-436e-b2d0-d9ccbfcb2d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcb6dc7-d54e-4754-8fcc-8715223ce916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa05c294-11ec-46fa-b59b-d945bd8c9d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0720daf-5834-430c-b07c-141003b20543",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d7d84d-1a46-4b04-a183-4f3c0cfe861d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce99df1-f2bf-44bc-b299-0dc2c3964c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6084b85-af35-4967-8980-b5300d18d33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8868e67-cfd5-4b2f-a935-9b65d275d9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a4dd1a-0896-4f81-a7a0-99d734bec383",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b444f07d-d372-431b-80d9-8d764386817f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6607d4-36bd-4540-b424-74e8555416ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e846b8-31d5-4ad0-94fc-c682ba72252f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff91c5e-638e-4b9a-a5dd-5fd3c2a6542d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0c0b9b-356b-491e-8545-4334001f1888",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e79d6df-1ff3-4b53-9bc0-76e8840a9d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e415638-75ac-4b15-be20-aea92396e48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb58556-9dea-4e6b-b114-03e7cfeb3389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973c15b7-3688-4707-81b8-1745ba06fbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe3da6e-366d-4ee7-befe-698a9fa2bb2d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6258fb20-9d50-466d-a23f-df45b19a99ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8fa4c0-215a-4e36-8afb-7956382dd57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fdf96a-0c46-4ee9-89ee-25f9c49e681a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e0cc16-8cf9-44f2-a9b0-2a446609634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba9473-2480-4d84-9744-bbc16a85b53c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2de4db9-72ce-4f81-85b9-65991f875691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995f5550-06ec-4142-b83b-0898de7eab74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73414051-84ad-4752-81f6-b3f76831e544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46e7f9a-95df-4259-bfe4-426db0da6cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e6d7cb-ef20-428e-9967-fa1aaa7383a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55203612-4005-4409-88f9-7cfcbdd7f5f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6cf427-6724-425f-b8f7-b19e47bb3675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c57ffd-36be-4167-b31f-a646796f352e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d832c79e-cc5c-4687-8cf2-030751163f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeec72e-d967-4446-a60d-be1426201a81",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45222b-51fc-4f53-9e8c-747fa0ac185f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c080007-dc0b-428f-943a-7f62a337aef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1847947b-82d9-446d-a8b2-5111f02e28e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a750b3a-269d-4b65-8156-cb208a695697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97653fe-3604-4b5c-9ae3-b840a8184857",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae73c08-f758-4463-9ccc-7f7747258586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238383d7-def4-4ce2-9bb1-a30f40a677b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72436797-6fd1-47be-a800-4c492ac47f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c35bf04-ee33-4aa3-8065-b2a7ecf0c2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691faee4-5d29-4fc2-896f-195c18768aef",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a592c88e-9da3-43ef-9f0d-2df096561f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3393c1a7-277c-44ce-8632-5890d2a37a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d80d1c-6852-4a5a-9584-76c8fe8b4f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c621da-81db-454b-9614-6511b17d65da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe48d8d0-c5a0-40a6-911a-c5675e24cf9c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d9146d-45d6-4497-befc-e176f4cf72b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c5094f-5c38-406b-8cdb-bcab75eae54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f500ba-eb9b-4f52-b7f3-241e16178d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606ea8cc-b97d-4a0a-8b98-97381bff8e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3979750a-da21-42e0-b939-d410630a112d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8d8d52-376e-4b6b-8000-ccffe32894de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b3a9dd7-07d7-496a-9aeb-0837131cc373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49484749-30e8-40c0-ab1a-8ae91d8e6390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b2dca7-62d8-4302-9c8c-cdcd5bf81267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5727a09-2f7a-4750-a03b-e8ff0afd28ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd66d98-7fb6-4d06-b277-b09f95caaf0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d322959-bb4e-46db-814a-ea41a0cf9cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4925440-d546-4d02-a4ae-b8604eaa916c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f91d752-a824-4e57-a331-3cff2653f49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ee6e4b-683b-4256-bca3-65e03ff2a9c2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0ff8d2-6adf-499f-8001-8d26700397bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28bec1e-eb69-43c1-863b-ea21fd211d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a90a5c-daa4-48ea-9a52-d9f58749a85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9102f150-c86e-472d-b474-9324ac27c867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d695248-5c22-4d6e-8457-81dd20311ec0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f59f49-1dd3-450a-9399-1a1c7b2b7ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e547dd-b845-4028-b51e-c1e16a306e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce397da-23da-49a8-a54a-f58ea280b37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2508da2a-7aab-46db-968c-33fce9f4a0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833be3ea-2f8c-4480-83f4-2bdac5d448a8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c513e757-5950-4129-a979-287548840d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f959d5e8-1b38-469f-97e0-825a57a5bd9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eebbd09-4086-4abb-8f90-5896462e96c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88320b1-bd4e-44c9-95d5-bed4f78a6c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c356712-0bd0-4b23-a195-8432b7692a94",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1932f0a7-becc-462f-ba44-03c51e547c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc1de04-1405-46e1-81aa-a6fc8dca4d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6750bd-1b9c-4f36-9639-c4e15b158748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16389b9a-1829-4bf6-ab08-05e553bf66d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c87651-3a7f-4081-995c-e88e3e84afa4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ac58ae-bb50-471a-a6b3-595899aaefc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd80a3b-8bb8-48d6-b808-ce0e4eb603e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c7cf15-4529-4dde-a9ba-d63a1c345525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779540db-e0c7-4239-b819-2b6b5d5ad06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff631c8-4c83-46ac-a49d-0a6878f895fe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b41f72-734a-4a08-aa32-6f88ed0cb53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f8a325-b3b2-4d14-8261-39a018caef93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc5c8d5-52dc-4665-bafb-48986b52cfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bf9e6a-9656-4149-a9c4-8735f94246e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad82298-2a5e-4810-8f24-a9dd9fdba52f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c5c662-db4a-4854-bcd9-5fc13e95b0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "268da0c1-d081-453e-8160-0b384fa38352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc651d79-6f8e-48bd-bd0f-66047df0cc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42359386-3e02-4aa4-b948-f6de0eeb03e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4f3404-6e37-46ca-9671-0a9c22333a5b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e908b7e9-63b5-49bd-9765-25219a172bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac0b4ff-b432-4524-bc74-857744778ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8827197c-7b24-4538-ac6a-738d7ff6892d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041a4698-1005-4880-a2b4-71ccb7c1006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1081d7fb-9669-419f-8a1e-bc00dd9bd250",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ec89c9-0d61-4d43-90b7-e3b1945bb077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6b7570-b891-4f8e-8b4a-d7ef58bffaff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8026734-1847-4bbc-8b37-eb27025d2370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07b4121-66b8-4ea7-a2e1-e1b0f0056d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a182f7-00ac-40c1-b817-294551d7e56f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84055b97-391e-4678-9900-424063fda33d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30abc7a6-934c-4541-a390-486f8b3d9910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a015d4f-a350-401c-98cb-5d129bdc7055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d335ac2-9cad-423a-b93f-205d2c8b0d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4698e0f3-5595-4864-9bf7-5c673875c73e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a660bf70-13a0-41c7-97dd-b66ffd198926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f124966e-8568-4e00-b393-5f1f467f9791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b810d1fb-7d64-4765-be77-0480ee3452fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986d5b11-9677-4b46-ba39-6ff1dcb599de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae03064-1cd0-432e-bf4b-036d7b0e0213",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a53666-12b3-4f2b-b972-2062284aff9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "645a1c83-a180-4f59-92dd-d505108e3d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43edb033-48b8-457e-a569-163984a50bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed41d07-ffd2-4595-8877-c64f3b231205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ddda92-6927-4534-ae35-7096e39d275b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c152ac-9322-4796-969c-fa55547c1ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b08c51-73e5-480a-baef-2d23a9f4c402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab3e3a3-0190-40a0-8ff1-790ee4c9420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22b8142-dbe7-42fb-b3ac-88cfff58d6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13712a6c-2ec2-4130-858a-2622498ad170",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9137e4d7-f4ad-48e1-b914-d1eec564c187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08633b83-5a0f-40ab-9193-9b8481107f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77223599-ad16-4065-80fe-c270586c50b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0f3504-16dc-4cd5-870c-5465acf258ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ca2db4-f189-4ede-9406-9f3445292667",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7e2255-2525-45e1-b25a-fc360717f83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbaf5f52-23f2-402f-8200-a0eef7632fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b561df2d-32a8-4cb9-b8a5-dbfc165ae0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69b8248-7018-4874-88e2-7fb760cf24c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0178d9-1757-4f1d-b7ff-a8fe4ab2091d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3826a9d-8070-469a-beb9-a3cba6fee13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb4cb9f2-cf41-4eb9-ace8-0c98f36e42fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef4be59-c3b5-4316-8bc2-9639963964ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7fca7d-fc6d-4425-91f3-fb6082c6e265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e780dd00-a20e-4a10-ae80-94e19299f462",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14074e59-789a-457f-9946-3f8b0de15ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272778c5-73bf-48f1-bd26-9686d5be94d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39871a46-12e1-45c9-862e-159a1bef7fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617933c9-d075-4e5e-8f66-3a6e567a6437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d4b3ea-e46a-48e8-910e-645495fbf2b1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ee6614-73e3-4bca-ba64-d0015e55c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6233761d-3541-44b1-9c16-c7eee0bd1a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8beb1cd3-bb45-4e20-b15f-22ad49756bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383a187b-f34d-4325-8ff0-f96585729fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfdfe97-2376-474b-a2b3-20095cebf007",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68578c36-f879-4751-b755-25a59c2f6b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e7920f-efdd-475e-b289-5bac20f1c128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2d8ef0-f2ff-4426-b7a0-4819327c2a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68a7122-27e5-49be-bfdd-54567972ee30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c203f5bd-f7cf-4c97-a6c8-4571c387dda9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46449842-35c5-4b98-ac93-50384aa3d481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895a4f71-90fc-4089-8bfa-58cb9e4dace0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129e0ce3-7336-4175-aae9-15aacaacc14f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f02332-010a-470d-b023-6f955433f7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb7afe3-074c-47c1-b3eb-dc452d73ddc5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047758e4-2df0-4fa0-ae11-3253d3312ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff350bd-df02-4145-bcda-46a181b4fb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb550f36-7279-428d-a30e-bf7b34319f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc92e8fa-1c6b-468b-b279-66fef9b3684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacb9a4f-555e-48d7-be58-3d852caeb7f6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a804738-ac0e-4480-913f-a7cd194ad79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a68ad5-acdb-4594-978d-e0de7b2f2612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5653ed9f-91f2-4084-8e16-214fe267f741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ee706f-31d8-44b8-b480-5f37960d74f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc859f2-986c-4c80-a298-181403440a0d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4fbdbf-5567-45f6-93bf-8fd0b7e8101e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6103c751-9246-42f4-baf8-eac2f9ed25eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd1c300-4218-4b61-8f6f-66701ca94bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d042154-d004-400b-8738-b40b21d92174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73e9fc1-b522-4054-8916-7d7257ee8b44",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddef9bb-e821-4814-98a0-1f7658ea6656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a5fca1d-ba19-44ef-8663-b87989bdf37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35471ce-486b-45bb-9e74-f54da682ba46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6133bb45-ac90-49e9-b2a8-d97e53b04d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a710a5-e93a-42e3-8648-01d3c50516e2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a61fa92-7657-440d-8cf8-8671e31eed07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a8164e-cec7-444b-839b-539511bdb85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b28fb9-ce03-4de1-a7dd-c2cded2aeabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8e7286-41fe-403d-9c85-5c99626149bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6bf61-6fbe-4880-ad9b-16ea2c3dc480",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1c30fa-3da9-43da-9210-4e7390cbb264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87c5cbd-9dae-49a2-a164-585322dfc301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e674ac8-4f7a-4ecc-9216-4fdb6b65772b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abceea20-5601-4d1f-b096-592aa113a191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac679fe9-0266-41f6-a88f-06b72ee23d54",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61793909-9157-42a7-a638-1980ac8ef987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e075ebb-20f0-480f-abdf-910d28d7630f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828964eb-ce8f-436c-a7d4-e1af39db450b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5c6816-9e2e-4fd0-8fb2-aa063a7f3558"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed071d69-5b26-49e4-b1f5-6f4999e62865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c2378fc-f92a-455d-abd0-7e813f8a5285"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ef61fc-9bd9-4937-80ce-ee33527a774f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95a2647c-933c-42b0-8001-f1b318b3c3ac"
                    }
                  }
                ]
              },
              {
                "id": "cb8455f2-4fc3-48eb-a1d4-e78ce1b529b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c813f202-e148-466b-84ab-8a0aeac913aa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667134af-e8fd-408c-b695-bfb87afb13aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e022b509-0b55-43fc-b1d7-384c64178346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b48738-584f-463d-81c6-8361260423d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d0a733c-055b-4c3b-81ef-c0bf86628732"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0db267b6-c182-4c38-841c-df63aa1048d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "241d4ecd-a957-491f-b082-68e4f325642a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2d44e23-76f0-4535-b541-e5d5cc053869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c97c46d-7cd4-49b4-b64e-b2282e49350d"
                    }
                  }
                ]
              },
              {
                "id": "b5eb6c9c-026b-4794-acc7-2a7fcc0fe6a8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c00122f8-505f-463e-93aa-ab9dd4f4ceb4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973511d9-b781-4225-b20c-ad6b66373447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9004c0ad-fc8a-4950-9115-6f3f2b4cc36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947f663c-0de6-43f7-aa70-a4e8657eead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ef065e-0be3-4527-8a29-9fbaae1926af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd91a57e-924d-4cb1-8214-56594071733d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a72d1ec-89a5-4486-a41b-a6d5398f3f53",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4faea09-ab9f-452e-af27-3e065f761ccc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66f22eee-95b6-4961-800b-131f90c6fb17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f971e326-7c8a-4753-8200-4a2f8e443ebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1949686a-b61e-4ebc-a2c2-2c9ae687338a"
                    }
                  }
                ]
              },
              {
                "id": "3d7816eb-c246-4fa0-9864-6cf18ede3427",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3823b001-a52a-4b43-bcec-68534ed756d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bc4e40d-f543-40c3-84f3-21961f1081e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9af3a9a2-2111-40e3-aecc-e8e67045ac0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d15ddef-7461-4c6a-8f9d-c6fd4f4277b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f4b912c-4363-48dc-8bab-c63c72a45102",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "99f833e6-a5d7-44f3-bdb9-2586f216abcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8927815d-91f2-4c57-8852-be058168c56b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d8e1a62-f0b6-4e77-8232-6f40d9391ef6"
            }
          }
        ]
      },
      {
        "id": "dfd59bb4-9e77-490a-bd26-59547406ad79",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bf1a912e-0c95-42ce-8923-bd96cd6ed3ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d258477-bd22-47d6-8c99-8b1c7055eb26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c87398fa-d25e-455a-af27-a54bdf552188",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c38e91c-4992-4ceb-9c70-4dd52f30c234",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f0ad3de-007a-46cb-a794-13ff7cb7b332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e9d06f-a84c-40a9-8a70-7912a70b4d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79ce1f56-49eb-4226-9015-ba9ed91c645a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d1a90d8-ac3b-4982-98ef-564aea976195",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61d345e8-31e6-4f55-a933-893d246064df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "617a998b-04ac-4df9-8d5f-c55847c59b89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3b12562-81f8-4026-b78d-362ff139da25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6a4a393-5db8-4387-b0f1-ef39cd88497c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cb83254f-09f1-4d0c-a87f-0e1909c01876"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb433a3f-c8a6-43dd-8399-2a147e18a20b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f16704e5-7277-44f2-8f9f-54839fd3e867"
            }
          }
        ]
      },
      {
        "id": "5ab54815-25c0-44b2-8099-d2d194f31bdd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "56d96fa5-5038-48b8-90e6-e6c42202790a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a96bca8-353e-4e3d-831e-8f8fc757fade",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69300e67-4234-48dc-9ff4-42092b13a561",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f63110-601d-4e07-bd39-b3797c85fb43",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226030ec-8245-4a71-9883-9f07e733bd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808ee160-b8d6-4af2-a8b2-fcad700b9889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a210c1c-4882-4290-b4e0-1d1f7eec07a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "999cc06f-fe75-413e-b8e5-21da44077bc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54607fd8-7e31-4669-9063-62a70e150526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf8a55a5-ea4c-4e1d-822f-7fc11c1acaab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c434c19-8e29-40f1-92ef-202172db049e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa18af13-5d41-430d-af60-a6839b0c109e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "396f05bf-5829-4f2b-9904-2690719755d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77a3fc08-4836-4324-9af0-fcec5bb9b565",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e573ddc-fe72-415d-8894-7584514f2ae2"
            }
          }
        ]
      },
      {
        "id": "90130433-5ee4-4940-a510-5cd62cea600b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd708d66-9a2f-4059-afda-40f346262e4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa9e98a6-ae41-4bbb-af22-b5fc14377a0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32228d6d-760d-45b8-84ae-8e4291a1b6ce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b390e8b5-0bf2-40b2-a170-ab1e06d7891f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0511407-8574-4c00-98ab-0a8b28eb80b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34366749-006e-47a7-8821-be1ea15c0a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb33cddb-137f-4395-8a29-67a388cd923b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1a0cf1d-a354-47fd-b702-4ac58c64dd15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c4a5f89-a499-4313-839f-cc802d6b5d98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9ba8924-c7bd-4059-af01-77a4f2d5045b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "688a18a4-ac87-4c4d-b4f8-16bc3ab9325a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7aa261b2-dd25-443c-ba44-1067d97ad3d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c48f703d-1606-4612-8fe6-df6070b790da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc6d4cf7-96d5-4c89-9033-92455dc2ba86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0819f4b-c994-4f90-830e-41dce9367918"
            }
          }
        ]
      },
      {
        "id": "ae266849-5346-4c75-8575-8c11975b4dab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "300a1264-5087-4479-8cc0-f418b4e40262",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21f12409-bf8d-440f-b12c-572513ba3baa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9bcc83fc-4844-4040-bc2b-9806e16bb02e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cbec288-cd73-4d74-b567-08043802f461",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5f30918-d5ce-4db6-97d0-2f503277bf4c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.224561403508778,
      "responseMin": 2,
      "responseMax": 427,
      "responseSd": 33.62620261047354,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704846998010,
      "completed": 1704847009330
    },
    "executions": [
      {
        "id": "21971461-cb21-4632-9576-a504590239ff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "adf7483a-62e2-44bf-bb3f-72a5a1e1ed22",
          "httpRequestId": "827025ab-b0b0-4b45-aa94-d5f13740293b"
        },
        "item": {
          "id": "21971461-cb21-4632-9576-a504590239ff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6d289d5c-2a8a-4b11-b1f6-2dcf0e281ef5",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "b5560cb4-f1f4-4d2d-a6b1-0439aca67949",
        "cursor": {
          "ref": "355ff5a6-e3e7-4d68-85b2-d4343d529245",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "86552939-b96e-4a87-ba67-58258dea3819"
        },
        "item": {
          "id": "b5560cb4-f1f4-4d2d-a6b1-0439aca67949",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "70e23e8e-7640-4f99-bf1c-7164b9acfeae",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4160b3a3-92d6-4161-83d5-cbb969853b4e",
        "cursor": {
          "ref": "3f1fee3d-0e15-4d81-9a0e-4714a73f8266",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e7228a35-30e0-4c67-bfa7-736c2d74978f"
        },
        "item": {
          "id": "4160b3a3-92d6-4161-83d5-cbb969853b4e",
          "name": "did_json"
        },
        "response": {
          "id": "2df8605e-3010-45d0-b74b-26863efe26c4",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b3ae99-e7fd-463d-ab96-1a7325c7f399",
        "cursor": {
          "ref": "2e0c4230-827c-432b-9db6-d01bf4304988",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f612f424-f6ce-4b6b-8922-fd464b11ac7a"
        },
        "item": {
          "id": "76b3ae99-e7fd-463d-ab96-1a7325c7f399",
          "name": "did:invalid"
        },
        "response": {
          "id": "c89b79d6-b47f-4b7d-aa7f-0a7606122c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b3ae99-e7fd-463d-ab96-1a7325c7f399",
        "cursor": {
          "ref": "2e0c4230-827c-432b-9db6-d01bf4304988",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f612f424-f6ce-4b6b-8922-fd464b11ac7a"
        },
        "item": {
          "id": "76b3ae99-e7fd-463d-ab96-1a7325c7f399",
          "name": "did:invalid"
        },
        "response": {
          "id": "c89b79d6-b47f-4b7d-aa7f-0a7606122c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff00890-5cdf-47b1-be9c-483054303ea4",
        "cursor": {
          "ref": "1273cb0e-09b6-4c28-8a76-b00c9021c256",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8484b3f5-d6dc-4678-83b4-a16879428e51"
        },
        "item": {
          "id": "cff00890-5cdf-47b1-be9c-483054303ea4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8a9371d7-f548-43ab-a970-9e764eaedf43",
          "status": "Not Found",
          "code": 404,
          "responseTime": 298,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4124ae07-14a1-4609-96aa-f4f59fa78bda",
        "cursor": {
          "ref": "8c6f3dc2-8b13-4dd5-a373-e7e58e27d8f6",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf86ebf6-8ae2-43d4-af55-65e8cbd28ee7"
        },
        "item": {
          "id": "4124ae07-14a1-4609-96aa-f4f59fa78bda",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8d2df8d9-3eb8-47d0-a691-93d2595a5c10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a4329e-c59d-4be2-9983-b222f2670bc3",
        "cursor": {
          "ref": "93508ad1-2c69-44fc-bccf-501fe5505c9b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "da7087af-f7b2-49f1-b48e-573b17cd95b9"
        },
        "item": {
          "id": "f8a4329e-c59d-4be2-9983-b222f2670bc3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3cd7a548-e9cb-471e-9504-cbc7badf22af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b248c70-e07e-4641-8a27-7d20383f2307",
        "cursor": {
          "ref": "a04b39e3-0dbd-4c71-86e8-d8598409877a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a922224e-8367-4ac7-972a-0578925e156c"
        },
        "item": {
          "id": "8b248c70-e07e-4641-8a27-7d20383f2307",
          "name": "identifiers"
        },
        "response": {
          "id": "d1dcc0ee-3636-4af4-8615-66cbbe834d10",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b512b-ff06-4ff6-8779-0ffa7371b917",
        "cursor": {
          "ref": "83234a1d-9458-4a23-bbe3-ba22709970f0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ad968b4f-15e6-4849-a37f-e862519e272a"
        },
        "item": {
          "id": "d22b512b-ff06-4ff6-8779-0ffa7371b917",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "131c811a-18d3-4acd-97f3-9bb09d61a06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ca351c-133d-41da-9ad5-5a1e80763098",
        "cursor": {
          "ref": "7f598cdf-ddf1-41a4-b403-8c0df458dd0c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e6604d77-d699-454f-8bd9-4ae490b8a1d3"
        },
        "item": {
          "id": "a9ca351c-133d-41da-9ad5-5a1e80763098",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "adec91d7-45fb-4982-89af-f72ce5530a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afa50ee-ce0e-4024-b009-73a00b4030fe",
        "cursor": {
          "ref": "2f0466d1-cc2f-477d-ade6-a94ce5cf2ea1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "04c026b1-a01d-4112-b808-4ac21cbfd05c"
        },
        "item": {
          "id": "2afa50ee-ce0e-4024-b009-73a00b4030fe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7e363cb-5831-4837-9865-772c6bec22e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3668e6ba-ef2f-44ef-aaaa-b39db43bc781",
        "cursor": {
          "ref": "8b19b39c-8ef2-4243-b384-f2c78f5ba9d6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2e3b2de7-9192-4000-b1a6-3c8988034f3c"
        },
        "item": {
          "id": "3668e6ba-ef2f-44ef-aaaa-b39db43bc781",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "531cfaae-f34f-41b4-bf0f-493747b81390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc65ad4a-4a75-47f5-a976-fa7a177bc734",
        "cursor": {
          "ref": "135cf07f-3c5a-448c-8702-fc17de7dcb96",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e0eff438-1241-4fd8-a656-b5152d6c3c3e"
        },
        "item": {
          "id": "fc65ad4a-4a75-47f5-a976-fa7a177bc734",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ab868855-ffaf-4d11-9400-73de911234d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b6a8a-fd57-49ce-a264-1b714f1bdde5",
        "cursor": {
          "ref": "b1184cad-11c5-41ca-88a5-e48981513adb",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2deff58a-7ff1-4e17-a545-c9e9b43d154b"
        },
        "item": {
          "id": "9e5b6a8a-fd57-49ce-a264-1b714f1bdde5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "165c1321-33cd-4afe-8dcf-ab60504139ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0e67de-c4aa-468d-a8c0-998692378440",
        "cursor": {
          "ref": "9aa5e680-382d-4609-b90f-ec105bae3f67",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bebc50c3-8688-4491-ba81-f1db1feaba23"
        },
        "item": {
          "id": "ea0e67de-c4aa-468d-a8c0-998692378440",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2b96ae02-74a9-4579-a5ff-af925a447a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38670fd3-8e3c-40fb-8743-62c8c941f34b",
        "cursor": {
          "ref": "8b3ae856-9555-43e3-a8d1-795948b314e8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d4eb9a2-86d6-498b-89dd-1d7deb2e78e2"
        },
        "item": {
          "id": "38670fd3-8e3c-40fb-8743-62c8c941f34b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f580b0e2-d3c0-48f3-879b-7bd3ad0f59d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f49d960-c2f9-4dbf-9d30-9e6123c141cd",
        "cursor": {
          "ref": "ffa81097-271f-44f4-ba26-473133b425b9",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bcec0a6b-f621-46e9-a28c-9199433aeaa7"
        },
        "item": {
          "id": "0f49d960-c2f9-4dbf-9d30-9e6123c141cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b251f0ff-bb60-42b2-8ab9-227875c9efe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c4cc09-fa98-4e87-a316-54699ff81603",
        "cursor": {
          "ref": "d7aded0b-921f-4a2d-aeda-2f2bc608f0e3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6378f14f-b50a-4226-bca0-1361264bd002"
        },
        "item": {
          "id": "a4c4cc09-fa98-4e87-a316-54699ff81603",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aeca7157-915b-48a9-94ce-413e6d398b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6981cbce-0502-4d38-8d30-b3a66496c176",
        "cursor": {
          "ref": "91562b35-17f9-4a49-91d9-7c7149f2af8c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "53a5aeac-5eef-4e60-8859-c93ddf37a151"
        },
        "item": {
          "id": "6981cbce-0502-4d38-8d30-b3a66496c176",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "be28a48b-68a1-48dc-8a19-74627ba92d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd45fe9-fdc6-44dc-bfa9-c27506991e15",
        "cursor": {
          "ref": "7c16aa01-9b24-4df6-9d1f-628df05f591d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "101597d5-1e9e-427a-a44f-84067eb625f3"
        },
        "item": {
          "id": "4bd45fe9-fdc6-44dc-bfa9-c27506991e15",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c90f68f0-6f90-40b9-9319-8926e53c9bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c5e03c-7ae8-417b-bcae-44e911193cc5",
        "cursor": {
          "ref": "bea1396a-7857-4bae-883f-ac56bea26142",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1e174e45-0552-440e-934a-e7798eac2ef3"
        },
        "item": {
          "id": "96c5e03c-7ae8-417b-bcae-44e911193cc5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9f902a54-c752-4816-ade3-71ac16858611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d2a22b-0bae-402b-bc49-6572a08fd605",
        "cursor": {
          "ref": "7b4e4e21-7020-4413-bdf0-1a33df14d2c9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "03075c26-df2d-432b-b2cb-819694cc5885"
        },
        "item": {
          "id": "56d2a22b-0bae-402b-bc49-6572a08fd605",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "abb08aed-4707-4b48-b572-410459b6b85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98e6a25-71ea-46a5-bd2e-7c80912fcd87",
        "cursor": {
          "ref": "27d0003b-37bb-45f9-aed2-d8fe16eb2405",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd35046a-a612-4804-a569-f0fb379c6001"
        },
        "item": {
          "id": "e98e6a25-71ea-46a5-bd2e-7c80912fcd87",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9874cb8-d52e-469c-8cd6-f710f65ca57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefb5e3a-d6b8-4bc4-8fc9-80caa8233ec8",
        "cursor": {
          "ref": "fcf08cec-6bb1-42ba-92b7-552266946888",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "959f98ba-0085-4587-bd73-d4aaff3ec3fd"
        },
        "item": {
          "id": "fefb5e3a-d6b8-4bc4-8fc9-80caa8233ec8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8788ab88-0f22-4799-847f-f770ffa6255c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684656c8-1cf0-47eb-a0fc-cc34334fa28c",
        "cursor": {
          "ref": "6d594713-f4eb-48d0-8a9b-7169c6d7d4c3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f5a00fa8-a917-45b6-928f-3ed91b2f96d1"
        },
        "item": {
          "id": "684656c8-1cf0-47eb-a0fc-cc34334fa28c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1fcafc39-2769-4ba4-b1e1-e051db626404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc2f242-9628-4057-b6eb-ab8317219222",
        "cursor": {
          "ref": "fcc6a892-93e4-4a13-9e7e-b6d7122c2139",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "16e34452-374c-4f78-8301-abcd82251d58"
        },
        "item": {
          "id": "9cc2f242-9628-4057-b6eb-ab8317219222",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ce059292-0bf3-4276-a777-483cb2ab8709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862532e2-333f-4765-a8f1-a95b7bf53835",
        "cursor": {
          "ref": "57ad7482-2239-4a73-b3b7-73bcc661a691",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "336cb2e5-decc-4e7b-9795-3e2d2a3261b4"
        },
        "item": {
          "id": "862532e2-333f-4765-a8f1-a95b7bf53835",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "219050ba-e5c1-4357-bdfa-b26e328fe8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f64af0-071b-4a0b-b52a-f64853d2db67",
        "cursor": {
          "ref": "242af119-a7fc-499b-8f23-a5467cebe3af",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d135c409-fe1f-40f7-bd5a-fe289300e049"
        },
        "item": {
          "id": "05f64af0-071b-4a0b-b52a-f64853d2db67",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a359a729-9e03-4ea5-95f7-5b8e57f9487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daf4a16-3754-48e1-925e-e672d49bedc3",
        "cursor": {
          "ref": "2599461b-9f62-4bea-8af0-087b6fe0f48c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a63f6163-ebbf-4b1d-93c6-dfc1ff33d9d1"
        },
        "item": {
          "id": "8daf4a16-3754-48e1-925e-e672d49bedc3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "367fa269-7aad-4f9c-bf9e-0fefdfc71c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a6cd47-8b74-42d5-9ca1-fa34934a27d0",
        "cursor": {
          "ref": "c4076f51-b833-493c-a652-4184f7635476",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ca6956b4-1de3-443c-b6a0-b7fdb9212a93"
        },
        "item": {
          "id": "48a6cd47-8b74-42d5-9ca1-fa34934a27d0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6db36329-3a89-4d88-9772-132955d6b1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c75f35-f923-48eb-9fe8-f1f12debe927",
        "cursor": {
          "ref": "d00fd30e-bca3-4243-abb3-a070f76f6abf",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d337b6b2-1225-4ee8-af9c-0e3b31fc3df3"
        },
        "item": {
          "id": "a7c75f35-f923-48eb-9fe8-f1f12debe927",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "af88be59-c64e-421c-9264-eeed994dfe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e2ae5f-a48a-4938-b3fd-ff69c7083400",
        "cursor": {
          "ref": "90b2aa54-29ca-487f-bd0d-807bab528728",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4148be9f-56da-43e0-91d8-cb14c003290c"
        },
        "item": {
          "id": "90e2ae5f-a48a-4938-b3fd-ff69c7083400",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8b348d66-dfe6-468e-bad8-c7f4ff0283a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd301e2-0cef-43fc-84f3-ac43dc64de86",
        "cursor": {
          "ref": "3f9d9e83-1fdd-48fa-9bf7-8c36529758db",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e6399d6-924c-465d-a29b-c95b17e2791a"
        },
        "item": {
          "id": "2fd301e2-0cef-43fc-84f3-ac43dc64de86",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7417e4f6-d5f8-4f6c-96cb-745c1c9cb5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41588eac-a64d-4e23-a581-80437a74d25e",
        "cursor": {
          "ref": "881dc434-269f-43c8-975e-0b85b6744734",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "616b9cd5-cacd-4468-8ea8-b901a9f928f6"
        },
        "item": {
          "id": "41588eac-a64d-4e23-a581-80437a74d25e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "50bf1c20-5658-4568-8375-749958351fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47ae6f8-3ccb-4374-b406-bdef987b2621",
        "cursor": {
          "ref": "0ec89366-7680-4a92-af2c-7c1e7a071188",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "999207de-81fe-48ca-bd6a-740050745d15"
        },
        "item": {
          "id": "a47ae6f8-3ccb-4374-b406-bdef987b2621",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "24a81046-2e06-449e-9ee3-4b697fe9a9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28f8bbd-0750-4f40-a70c-42626afc2c56",
        "cursor": {
          "ref": "97318ca8-49fe-4b9a-862f-7d3252a2353b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e5fe0d8-dff3-443c-a8d8-10a562b6eafa"
        },
        "item": {
          "id": "d28f8bbd-0750-4f40-a70c-42626afc2c56",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b57591af-1cb3-43af-8ed5-7d90a1083e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea255dc-39e8-4ae0-b1c6-561f51629797",
        "cursor": {
          "ref": "72ec7396-ac15-405e-a77b-3548d6871428",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "79774f73-d922-456e-831d-8c98c008d407"
        },
        "item": {
          "id": "dea255dc-39e8-4ae0-b1c6-561f51629797",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "edb471ec-bffd-44e4-8d38-439b53e24d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab1146e-d255-4ecd-a3ee-878f0622db1f",
        "cursor": {
          "ref": "aaf09b68-c395-484f-a447-86be6c0c2447",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d7415750-15d7-476c-99de-43abc987c938"
        },
        "item": {
          "id": "5ab1146e-d255-4ecd-a3ee-878f0622db1f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "59fdbf0c-2cd4-424f-9387-82a384682293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e702c19-96c0-4266-9f41-8ce00873f4df",
        "cursor": {
          "ref": "38691191-0cc1-4072-867e-af6f553779d7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8983e0ce-bf51-492c-9281-3f4ea6c13b3c"
        },
        "item": {
          "id": "8e702c19-96c0-4266-9f41-8ce00873f4df",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f24f1587-3aff-4d88-962e-77d59ccdf64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b4fc1-2789-45c5-a8ad-ceb989cc832a",
        "cursor": {
          "ref": "93a9320b-f11e-4ddd-a8e0-c3c0b43db9b6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0666bb08-df54-4b93-9f11-e85c402b431b"
        },
        "item": {
          "id": "ae0b4fc1-2789-45c5-a8ad-ceb989cc832a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b43ff656-2950-43ba-97f6-bed17dbc48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893b185d-3026-46a0-8a3a-9e51543a8af8",
        "cursor": {
          "ref": "d1fe27dc-5b5c-4163-921f-64c6dccabbf0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ec3f837b-d47d-4661-a114-1681f6c36bbe"
        },
        "item": {
          "id": "893b185d-3026-46a0-8a3a-9e51543a8af8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6fea705a-bebe-4d7f-9bdd-159872346f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7527f916-aa8f-498c-960b-e83dfcbf7bd8",
        "cursor": {
          "ref": "7bb0905a-f70a-4400-a1c4-ab3dce4398be",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dd6ac66a-816d-4abb-8c85-5e751bfa4f5d"
        },
        "item": {
          "id": "7527f916-aa8f-498c-960b-e83dfcbf7bd8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d6a8509b-932c-446f-9bdf-15c3dbb6f8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a000a7-97e3-441e-a581-af797795737b",
        "cursor": {
          "ref": "95c6742d-2039-44eb-ba55-2cc3790af680",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3ce4fc36-f689-4a54-b480-1f0b0a484f0d"
        },
        "item": {
          "id": "a1a000a7-97e3-441e-a581-af797795737b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5b06b6db-dabd-429e-ad10-e056328426ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1e63bb-ecb8-4f5a-aecf-abfe894eb33f",
        "cursor": {
          "ref": "fae09d83-87b2-4c3c-acd5-06e5fa2de06b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e678ff38-bad1-4ce3-bcd0-3950b969df39"
        },
        "item": {
          "id": "aa1e63bb-ecb8-4f5a-aecf-abfe894eb33f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5cf04927-26e5-4e38-aaab-b4461b75c220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbd984f-2d54-4e8f-be40-70f2134f8e08",
        "cursor": {
          "ref": "071125b9-9b37-4256-ac91-2625565f457b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "daf9da0b-4fcc-4284-bf64-4534098ff835"
        },
        "item": {
          "id": "ddbd984f-2d54-4e8f-be40-70f2134f8e08",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9613ebaf-a1bb-478a-967a-0597138acaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d42275-e617-4513-bfe7-9ebba4339f37",
        "cursor": {
          "ref": "03af4481-9f90-47ee-80d0-25ed5bbe247b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "21d02443-6302-4a9e-92d8-512a2a947fab"
        },
        "item": {
          "id": "a4d42275-e617-4513-bfe7-9ebba4339f37",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e26db5fd-b24f-4b13-a292-8ee26e708d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03acf09d-c7d7-4df5-8a44-f5def84b58ab",
        "cursor": {
          "ref": "d66fb492-882c-4341-a803-2e69b406f931",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "72dfe520-6e31-42f1-8470-ad93ab5df9c1"
        },
        "item": {
          "id": "03acf09d-c7d7-4df5-8a44-f5def84b58ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9c4dca0b-9872-4d67-b490-61cf17d68d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639a4241-34be-4a9d-bc68-1bbed4c090fa",
        "cursor": {
          "ref": "abbad13a-6095-4d3f-90bd-57e1a8314725",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c8f5370-525e-4d94-8705-b39597fc196b"
        },
        "item": {
          "id": "639a4241-34be-4a9d-bc68-1bbed4c090fa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1a50645c-e34f-45c0-add0-d87b126f0f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac29ae2-46b9-45d6-a605-1e81893d9897",
        "cursor": {
          "ref": "ddec5dd2-74af-4f1f-993a-2fcf667b6bfa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "33df8283-9717-492d-bda6-7a7ccc287659"
        },
        "item": {
          "id": "8ac29ae2-46b9-45d6-a605-1e81893d9897",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d6134f5d-c2e6-4756-819b-a760278bfbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202125d-0bd3-49da-b0d1-6541767dd3fd",
        "cursor": {
          "ref": "b2762487-baf6-4784-aec7-92b6b6a2e1b1",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "700208b3-53f9-46cf-8e6a-394e730ed510"
        },
        "item": {
          "id": "6202125d-0bd3-49da-b0d1-6541767dd3fd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "662681db-f060-4b33-8067-89a9439629ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fbf500-a6ce-49e6-9ba4-ce13d33107a5",
        "cursor": {
          "ref": "aa568066-46f3-40c5-ae49-7115273c1f89",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0226e3ab-b7af-4b95-98f1-3b44a3c61576"
        },
        "item": {
          "id": "97fbf500-a6ce-49e6-9ba4-ce13d33107a5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f656732d-fecd-45d1-b3cf-bc5e0de1411a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ea9987-f208-49e0-9b72-375484c710d2",
        "cursor": {
          "ref": "0bbc8170-5b8c-4582-9a38-9ed49efaf406",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c06d91a2-4cce-466c-bc97-ed352552b3f8"
        },
        "item": {
          "id": "b3ea9987-f208-49e0-9b72-375484c710d2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e644a2ab-3369-4313-b697-3277463edc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4e6c5a-1081-49d1-a468-7e014240a378",
        "cursor": {
          "ref": "ab31e15d-b3cb-4a63-b39b-b7d2987b844a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "40104d3d-0c8b-4c47-9b58-2eddc7c7b123"
        },
        "item": {
          "id": "0e4e6c5a-1081-49d1-a468-7e014240a378",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ff44e93f-cfc7-43a5-a6d4-90548805944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997caeb7-ecb9-4eb2-8900-06453c6d444e",
        "cursor": {
          "ref": "a495d958-4aad-4918-a14f-f965e9e4d41f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "35fe9ed3-4306-4a7e-91ab-265126bf98f5"
        },
        "item": {
          "id": "997caeb7-ecb9-4eb2-8900-06453c6d444e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7056e935-6f13-4c69-9f44-de83fc474f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d76c2cb-2d5e-4cd7-bc4a-7d26112daf6f",
        "cursor": {
          "ref": "f6d41db7-69e0-4102-bb34-e1d7aee7f053",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1f3abf43-731f-44d7-b908-35c1c46500ab"
        },
        "item": {
          "id": "8d76c2cb-2d5e-4cd7-bc4a-7d26112daf6f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6d8a1405-4df0-4665-b94c-3174410f3782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6540d347-627b-4d04-b08e-f05886539daa",
        "cursor": {
          "ref": "ff8e0b69-c966-449f-897e-6ef64cdc1b42",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bc0ce3f3-1f9d-46c1-ac82-2a03fc932ea8"
        },
        "item": {
          "id": "6540d347-627b-4d04-b08e-f05886539daa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c13a75f9-ed92-40f1-a3d6-fd24e0235059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ecb15-7f20-4ef2-8785-25d4065b493d",
        "cursor": {
          "ref": "e4bc0533-7270-48ad-b3dd-d28c7a8733ff",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3bffcf72-1c75-48d1-b5b0-f81c32d65786"
        },
        "item": {
          "id": "368ecb15-7f20-4ef2-8785-25d4065b493d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "924b1f03-71cf-450c-85f7-619637a4d74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74cfd16-8c7c-4c98-8f93-db268dfa54e3",
        "cursor": {
          "ref": "3c3e3a46-821b-43d6-b582-5e0b60e87bf7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a240fc50-c7e2-4333-83a8-ace0edb02100"
        },
        "item": {
          "id": "b74cfd16-8c7c-4c98-8f93-db268dfa54e3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f4fbbdb4-4b58-4a3c-91e8-8b03628a0bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb709081-1be1-4ef0-939c-af103c1781a4",
        "cursor": {
          "ref": "0704cf59-e1c2-4d64-a7b1-e3a9bb023550",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "43267fbd-f107-48b6-839d-5e3ee317009b"
        },
        "item": {
          "id": "cb709081-1be1-4ef0-939c-af103c1781a4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9e77bbf0-0e71-4e4c-8cc5-e3911dbe5d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c44105-7d84-4a36-bfb7-9a07efa58477",
        "cursor": {
          "ref": "986197e8-907d-4387-97f7-cc8b38b9c893",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f7003951-b82f-4097-8098-bf1c4d60c113"
        },
        "item": {
          "id": "13c44105-7d84-4a36-bfb7-9a07efa58477",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "105efe0c-a9cb-401a-851a-38ef394aa79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3550e64-e12a-4fca-a8af-12b867386a2e",
        "cursor": {
          "ref": "80c62a28-850f-4da3-9d53-c4b71b72ada1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "21f0eaa0-987b-42b4-8f21-e1035db17663"
        },
        "item": {
          "id": "c3550e64-e12a-4fca-a8af-12b867386a2e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6d32a6f-afb7-4409-ad0a-a344d870626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f211452a-f67e-4ba3-a9d3-57f97abd7e4d",
        "cursor": {
          "ref": "75323eb9-b208-4e46-993b-b5b1c555a81f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6030cc12-5046-425f-b6e6-dc87fec484f3"
        },
        "item": {
          "id": "f211452a-f67e-4ba3-a9d3-57f97abd7e4d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7ea9423f-c489-453d-84c4-99b443ad7fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decd94b6-11fe-4d8c-9031-99a5af95fcda",
        "cursor": {
          "ref": "3034a627-9729-4101-92eb-fb1e4eded475",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c776a446-e7f8-4a10-add7-187f533e1879"
        },
        "item": {
          "id": "decd94b6-11fe-4d8c-9031-99a5af95fcda",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "687e478f-6ed3-44c6-b81c-7d878cb8b044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b63492-f4f6-451c-a47e-bae482340896",
        "cursor": {
          "ref": "2834bc46-1116-4af8-b015-b7f88e055a66",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "44232634-b452-4b42-8fd5-b34438b564ee"
        },
        "item": {
          "id": "33b63492-f4f6-451c-a47e-bae482340896",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6fa4575f-6e92-4c2d-ae98-e025a3247ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8487c0-2ad6-42cd-b14d-3f34b44a9ec8",
        "cursor": {
          "ref": "693b1d61-b42d-4b6d-8b3a-252ed014a5bf",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5961f753-7024-4ab7-8e07-61a8886f3628"
        },
        "item": {
          "id": "aa8487c0-2ad6-42cd-b14d-3f34b44a9ec8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "edbd2015-c7f5-43d4-9024-caa6b078e963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dc617e-622f-4e96-8999-a5d4651b94ff",
        "cursor": {
          "ref": "7b9c693d-62e9-4e19-a3e7-d239b0fabce7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "597ae155-6178-4b8c-920b-8c6ea3c761e1"
        },
        "item": {
          "id": "14dc617e-622f-4e96-8999-a5d4651b94ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5d83c826-bd58-4f07-b8dc-17e5b43450f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd436f5-8f83-4902-85b6-62fc7c236ae5",
        "cursor": {
          "ref": "aca46bf1-c6c3-4a2a-96d8-6aacf69ab79d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6f7fe752-2199-4c37-a388-266692362a7b"
        },
        "item": {
          "id": "afd436f5-8f83-4902-85b6-62fc7c236ae5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac2199b1-8b2a-465c-8ca5-3790837dde02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9638db05-3db7-4633-b2d1-45ef36bd48eb",
        "cursor": {
          "ref": "e763d5a7-270f-4aa2-88b3-7528a2ed562f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bfcddc3d-98c6-4bab-8d83-dc95e8961259"
        },
        "item": {
          "id": "9638db05-3db7-4633-b2d1-45ef36bd48eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7ef9b6cd-0a68-47fd-92f9-c59accc6d566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3f7eaf-e839-496c-8804-3ff5485e2481",
        "cursor": {
          "ref": "8e8d5077-eb62-4b92-88e5-6b2b25ad7e34",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "24cac55b-78eb-4f56-a329-ff118d9dc5fa"
        },
        "item": {
          "id": "ff3f7eaf-e839-496c-8804-3ff5485e2481",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6683eddb-ffcb-468d-8975-0253c71000bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291afa3a-14e0-4fa6-8bc6-b451adc35965",
        "cursor": {
          "ref": "17012a61-457f-4141-b166-17bf1aaf656f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f4fca547-8030-4051-98da-4df8a3e80cd8"
        },
        "item": {
          "id": "291afa3a-14e0-4fa6-8bc6-b451adc35965",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9e26da0a-3304-4816-8b03-46c80cc01ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ffdae8-175a-4e68-81cd-ddd674d471d4",
        "cursor": {
          "ref": "954084ee-5d68-449d-96fb-0edbc4068c9f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6e1f6388-e0ca-4343-8f3f-fe47222d3a16"
        },
        "item": {
          "id": "38ffdae8-175a-4e68-81cd-ddd674d471d4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bba7c328-5b5c-428d-aaa9-47df932f9388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054c0b13-9db3-4582-a0d8-1bc72c9ac614",
        "cursor": {
          "ref": "71974c31-09fc-4e14-b86c-a6c89ff6a6c1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "37978003-c43b-4748-aa75-cce053aa8283"
        },
        "item": {
          "id": "054c0b13-9db3-4582-a0d8-1bc72c9ac614",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "04bdb530-d1c4-4193-b7d7-b423633243f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a3008-8092-424d-b41a-72039cbaa9f2",
        "cursor": {
          "ref": "ddd71a23-9dc9-432c-a565-f89c89e3024a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8d3d3f94-b0aa-4e0f-acd6-f5fda664c0d3"
        },
        "item": {
          "id": "d02a3008-8092-424d-b41a-72039cbaa9f2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3f896905-9d72-4280-b28a-c7cb291923f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eef20fc-5854-40db-a1a7-a87b0ca3eb45",
        "cursor": {
          "ref": "84e8df1b-2ff2-4b75-bf3d-076e6f9bbfb7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f5243afd-4636-4986-a492-80c15c3cc071"
        },
        "item": {
          "id": "9eef20fc-5854-40db-a1a7-a87b0ca3eb45",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "94a2f1ad-1b25-4a69-bdd0-bb710ad95b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f737be-5160-4a42-9418-30e03954f964",
        "cursor": {
          "ref": "2a9a250c-72da-4fc8-8646-43c78a25bf6e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "106f77e2-d228-4c56-b1f3-0a069b4cd4f7"
        },
        "item": {
          "id": "15f737be-5160-4a42-9418-30e03954f964",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0869005f-eaeb-4110-91ab-af0e47b472e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9dd5f7-dc1b-4f34-9b69-3b1430771ba4",
        "cursor": {
          "ref": "998c901b-1941-4c0d-8e9e-41530a0f0774",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ac255830-c49b-4b8c-9138-9da9313e1e6c"
        },
        "item": {
          "id": "4b9dd5f7-dc1b-4f34-9b69-3b1430771ba4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dc008b77-c720-4ae6-874e-d4f04dd3a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caa467b-edf4-448b-af24-d9a486ff463e",
        "cursor": {
          "ref": "1981c733-f729-4312-94f7-90078246a5c1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "69aa100e-d409-4e0b-b2e7-e9c740cc45a3"
        },
        "item": {
          "id": "7caa467b-edf4-448b-af24-d9a486ff463e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "66eae0c9-cac2-45fd-a442-48283dd66945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf02212c-6a33-4db1-97d9-892eeed2f6ef",
        "cursor": {
          "ref": "02701b9d-d4f7-425b-b51b-ec114ee0d33d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c74fcd58-4a2b-43a1-b48d-581a3f3596b5"
        },
        "item": {
          "id": "cf02212c-6a33-4db1-97d9-892eeed2f6ef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "81010199-6392-44e4-87f2-46c770a30c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c3f3f2-a446-424f-80dd-0b6b5fbc241b",
        "cursor": {
          "ref": "90930ab1-7edf-4553-a389-c3b5118f62ba",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2eb6c575-7535-46f7-a532-6bc311ff3e45"
        },
        "item": {
          "id": "a2c3f3f2-a446-424f-80dd-0b6b5fbc241b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "042abbb8-b818-4214-8c86-f3b0c503b43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6c0fcf-7cfe-470a-8625-997ab3bb905e",
        "cursor": {
          "ref": "eabc2284-ed3c-4d3a-9a64-592c2635d4a1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c0be8f6a-e23e-4ebd-ab3d-55db74121dd7"
        },
        "item": {
          "id": "7d6c0fcf-7cfe-470a-8625-997ab3bb905e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "92e3ecd6-6405-4e08-8d0d-2d49f8b22257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8182c0a-9cea-4a2b-9318-c713851886df",
        "cursor": {
          "ref": "142c0f29-ee2d-438c-a9c6-70ded0a07253",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aa337c35-49a0-4587-a97c-ce6a0e0f079b"
        },
        "item": {
          "id": "c8182c0a-9cea-4a2b-9318-c713851886df",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6c335b06-5a32-44d2-9bf4-8a5338911ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01968e8a-a8b7-4d89-9dd2-03cc30ab8bcc",
        "cursor": {
          "ref": "ae4d238b-9d14-412d-8621-2479cbc06015",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7f781241-9e96-43f4-9c04-f4e5291be727"
        },
        "item": {
          "id": "01968e8a-a8b7-4d89-9dd2-03cc30ab8bcc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "749c3d32-5b1c-4127-9051-8007d9a086f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99efb728-612c-47b5-ba1c-c64a1b72ce3a",
        "cursor": {
          "ref": "c4244420-1708-4099-a266-d516adf851db",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fee9fecc-661a-4275-a0bb-31d162e7b4e6"
        },
        "item": {
          "id": "99efb728-612c-47b5-ba1c-c64a1b72ce3a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9e6892fd-61f1-4698-9466-7752c3d739df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba8b97e-e755-4269-b84e-55d642d6b932",
        "cursor": {
          "ref": "3b70f192-ce35-4d59-972a-848a802721a9",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2110871d-f4f0-437b-ba1f-87aba8f8fa39"
        },
        "item": {
          "id": "bba8b97e-e755-4269-b84e-55d642d6b932",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b71c0cfc-6c32-4bf7-b1c9-6ea78c595a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabd9115-2bf2-40f9-81fa-08486833a5f0",
        "cursor": {
          "ref": "37792bc9-8b79-401e-88b6-11db3a13e3d0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aeaf52d6-f845-4aa7-a3d9-e61c6b6e1c1f"
        },
        "item": {
          "id": "fabd9115-2bf2-40f9-81fa-08486833a5f0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8915fe9b-a259-45fd-a50e-45ceecd8c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4f3a30-485f-45d1-b5c5-5d2e07a6baec",
        "cursor": {
          "ref": "53a30b2e-f762-4850-ba34-0d6c2c18ae9b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d1c019a-1414-45ba-8aab-62df7b4c3759"
        },
        "item": {
          "id": "8c4f3a30-485f-45d1-b5c5-5d2e07a6baec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "405034dc-3811-4043-a622-610b67f9534c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a060c2d-a0f4-4c84-8934-338ac936c52c",
        "cursor": {
          "ref": "ee328d85-1abf-4cf4-8b46-78e6d61963f8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3b6a1309-2d43-4b59-bd82-84c15b7a2165"
        },
        "item": {
          "id": "3a060c2d-a0f4-4c84-8934-338ac936c52c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "369e0c84-f605-4e57-8f96-7d78c2491114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65344fc-b27b-41da-9b33-feddaf26c93f",
        "cursor": {
          "ref": "099c3bb5-d5cf-4d8c-b368-5257486fb03b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2b5cf5b4-a046-473b-b139-d4f2783e2aab"
        },
        "item": {
          "id": "f65344fc-b27b-41da-9b33-feddaf26c93f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b6dbcc91-b141-49fc-8cef-8c894bdc75bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a999c500-cb3d-4fe1-a6f5-dbe38b49939f",
        "cursor": {
          "ref": "273d12d8-1dc8-4920-b71d-1844e789afc0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ad05707-e729-4319-b31e-1ebcaeaa38d4"
        },
        "item": {
          "id": "a999c500-cb3d-4fe1-a6f5-dbe38b49939f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b615bf30-450d-404b-b0e4-596b6c61b5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac68f8c-058e-470f-b1c6-a050bea41293",
        "cursor": {
          "ref": "d1b55178-6037-44b5-881d-90a0cf122c66",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2152f3f9-06db-46e2-83d0-cff63509f291"
        },
        "item": {
          "id": "cac68f8c-058e-470f-b1c6-a050bea41293",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "650c75bc-edc3-4c65-9e81-44ed709bdb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a743cc25-fa6a-4d37-a2e8-375dc04e6e53",
        "cursor": {
          "ref": "808184aa-1f98-42db-9956-ec400f8e0dde",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7268b95f-25d0-4f75-903a-566a031a720b"
        },
        "item": {
          "id": "a743cc25-fa6a-4d37-a2e8-375dc04e6e53",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "80b83693-55ce-4068-b659-26a26501dcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a9e91d-3400-4882-a1ad-d14a78f34e4f",
        "cursor": {
          "ref": "ba28c01f-a91c-485a-a53a-4e86f44e892f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0590f954-7774-4082-a3e2-8cd4fef79c71"
        },
        "item": {
          "id": "04a9e91d-3400-4882-a1ad-d14a78f34e4f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2380fb63-a382-47c9-876c-59ae2d84ab35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65be11e-ac7c-4502-8c24-24784d2b6a24",
        "cursor": {
          "ref": "050d1d36-1239-4424-bf9f-9cb6a41b1010",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "47c094ae-bb28-453b-b600-71a5a2cb4eae"
        },
        "item": {
          "id": "a65be11e-ac7c-4502-8c24-24784d2b6a24",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cf6d948f-e257-4e75-9562-5cfaf04809cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ca4701-7aba-403d-991b-e9260273c93e",
        "cursor": {
          "ref": "bc1cfa5b-aec9-4033-b835-c9732b1faab9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e90ce191-b0c6-40c4-b25c-e934b4eefd26"
        },
        "item": {
          "id": "60ca4701-7aba-403d-991b-e9260273c93e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "35960bee-f70a-4f44-af09-3ed64c4e3c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197a100e-a1a6-4166-ade9-9ca89ca3e5c5",
        "cursor": {
          "ref": "4a57fca9-8bfa-4857-a6db-6bf55d13bd8f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "92bc503c-bf4b-420f-9572-610e90383385"
        },
        "item": {
          "id": "197a100e-a1a6-4166-ade9-9ca89ca3e5c5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4baa8534-69cc-4682-8463-0147a59e5aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6192f357-02ed-48cb-8db4-1631c6749715",
        "cursor": {
          "ref": "8a43e470-ca6a-4338-bb19-b8db4d621004",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fb6c8d89-5e18-4a11-8552-2fb212aa4e41"
        },
        "item": {
          "id": "6192f357-02ed-48cb-8db4-1631c6749715",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7fe303ad-db32-4e7a-80e8-b13c80aae796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84319b1b-01a6-44b2-a18b-611f11eb2cd0",
        "cursor": {
          "ref": "e6eb0f2b-e7a2-4461-a284-6c880d6c810f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0828ecc5-9e5c-482d-9aed-eb56cceaa627"
        },
        "item": {
          "id": "84319b1b-01a6-44b2-a18b-611f11eb2cd0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7960c0cc-ee50-4d15-8da6-85ae0ce87c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2f3866-d4ff-4658-a3d8-312e8b472378",
        "cursor": {
          "ref": "78161462-0348-41a2-b6ad-4b43c8cd546e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "274bc88a-8be5-4319-aaf0-568f8395c263"
        },
        "item": {
          "id": "bb2f3866-d4ff-4658-a3d8-312e8b472378",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8744cc9a-151f-4085-a08e-054f9b390f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48ddb5b-8214-4358-a292-fbc60a9e9ab7",
        "cursor": {
          "ref": "b4a4c765-253d-4b1c-8c86-0729ea1c69dc",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3c2f3b6a-fc02-42a1-b743-b30da0b06d60"
        },
        "item": {
          "id": "b48ddb5b-8214-4358-a292-fbc60a9e9ab7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ddd565c3-f6c4-4fd1-96a7-4d523c5e7e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a470a706-6a64-44ad-a2c2-c0232830ed89",
        "cursor": {
          "ref": "cfe01d18-c31f-4448-82cd-79653bb91dad",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "766a2ed1-a69a-40b9-be15-425d0bd0c31f"
        },
        "item": {
          "id": "a470a706-6a64-44ad-a2c2-c0232830ed89",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "934144ee-22d2-4d3c-a6a8-211de15a8b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a4bbcf-76a1-4801-8a2b-7b8a475d77fd",
        "cursor": {
          "ref": "df038ef6-2dd9-4b8f-8c8d-aa07a1ddf1b3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4aca4ce1-743c-448c-9b86-e678a4c3143b"
        },
        "item": {
          "id": "e7a4bbcf-76a1-4801-8a2b-7b8a475d77fd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a7f5c11d-dd36-4c28-b748-3f0eb4e72a3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963d03e4-da59-4f87-9eec-ccc5dce85fed",
        "cursor": {
          "ref": "321a1347-f1a7-4502-92de-1a073785a5a5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f789badd-3c87-400d-8f43-c1e9b60096f5"
        },
        "item": {
          "id": "963d03e4-da59-4f87-9eec-ccc5dce85fed",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "815f2e3b-7197-4db6-85ec-84d773b73ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "96110742-54f2-4d8b-883a-2ced7a00e85c",
        "cursor": {
          "ref": "193fade7-8cec-4184-a73b-38ef3c194da4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3785f348-811b-417a-a074-52f49588ac16"
        },
        "item": {
          "id": "96110742-54f2-4d8b-883a-2ced7a00e85c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a96df401-90e5-4b62-a136-5985056efc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "04d4e3e4-f40d-4ce3-be9d-a49b644aff54",
        "cursor": {
          "ref": "99b40601-7525-4360-be1e-6b3115ef5ca7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9a4362aa-d59b-4643-b7b4-f924011b68b1"
        },
        "item": {
          "id": "04d4e3e4-f40d-4ce3-be9d-a49b644aff54",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9067a00e-c89d-43b7-8233-2e20fec094e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dcae260c-0758-4409-b3b1-89d4ea660bf1",
        "cursor": {
          "ref": "2c940ef2-afb6-4472-a2bb-a2329ca90814",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "29bf0027-643d-4df9-8a70-15f1882c519b"
        },
        "item": {
          "id": "dcae260c-0758-4409-b3b1-89d4ea660bf1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "43d81873-ba11-45fb-ace4-66cc49d19d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0938d5c4-421b-4a73-83c7-f3daa06b5959",
        "cursor": {
          "ref": "77e59802-c938-4e10-bc9c-bfd0797f9b0d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b72f6cd3-e77d-4677-8053-8ab762b097c0"
        },
        "item": {
          "id": "0938d5c4-421b-4a73-83c7-f3daa06b5959",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "37f14441-13fb-41ae-8e99-1aba8c0930cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "2afe8078-e212-4df0-b548-9e35695a5660",
        "cursor": {
          "ref": "3eb852d6-ddc5-412f-abc0-d5c35fbd83db",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ae35b5fc-9cc1-44dc-8a3c-9d8d9ca7349f"
        },
        "item": {
          "id": "2afe8078-e212-4df0-b548-9e35695a5660",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8888fcaf-76c8-4b58-afed-b5d5cfc4e639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0fd4a525-4a3d-4734-bc1f-a9bb548c1c4b",
        "cursor": {
          "ref": "26088191-9384-4494-a11e-d7a9ec0812bc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ecaee746-2bf9-4d38-b1a8-a2a6396629b0"
        },
        "item": {
          "id": "0fd4a525-4a3d-4734-bc1f-a9bb548c1c4b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "84890cb7-a2d3-4920-afde-6044d70d076c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8880da97-51a0-4bd3-905a-c91e1df575c2",
        "cursor": {
          "ref": "95e032c5-1480-4f0c-9df2-48d3c2d8b2c8",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0541911f-39dc-4d93-b7f9-0e6f92b55c50"
        },
        "item": {
          "id": "8880da97-51a0-4bd3-905a-c91e1df575c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7634bbcb-6a67-493d-8209-21f65ba47890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b190b255-33cf-4172-972a-30df5ed1814a",
        "cursor": {
          "ref": "c71d73e0-f03e-4e9b-afbb-5608988f5683",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74028dea-10d6-4e13-a88c-8e9e7f230066"
        },
        "item": {
          "id": "b190b255-33cf-4172-972a-30df5ed1814a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ab5717f4-ef38-4477-b82c-5beaaa2d45b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a614693-9b44-41f5-a12c-e67189f6df30",
        "cursor": {
          "ref": "d3d3ac30-f148-498c-92ff-ece9c070281b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "58a43310-f978-41d2-825c-9d5dfadefc77"
        },
        "item": {
          "id": "7a614693-9b44-41f5-a12c-e67189f6df30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d9e45d6d-2de3-41ec-bcac-4efcb0735ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aab550b-e0c7-4570-ab9f-36c8453afcf0",
        "cursor": {
          "ref": "54d174a2-8c2b-4274-9cb4-be86213386ff",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "043291f7-261a-4fd2-a153-54898800f9f6"
        },
        "item": {
          "id": "1aab550b-e0c7-4570-ab9f-36c8453afcf0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54a2626c-99dc-4260-b999-6404cbf280f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025357b4-6c45-4903-8ef4-10593657b666",
        "cursor": {
          "ref": "7a6b7853-2d9d-42aa-a9e1-b10d7fbb52d6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7964daf5-d1e2-4600-b4db-41acaadf4190"
        },
        "item": {
          "id": "025357b4-6c45-4903-8ef4-10593657b666",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d52fe2cb-4070-45e6-bce3-78c857268c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec701ab-4e67-42cd-80ef-0e588a51e31e",
        "cursor": {
          "ref": "32f20bea-db47-42dd-b6e9-67179b816286",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5bd5e11c-902c-4e61-b707-6ae3a3dcb4a8"
        },
        "item": {
          "id": "dec701ab-4e67-42cd-80ef-0e588a51e31e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "230f7120-7e67-4e45-bf44-e4fbc9e7f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08044bc-8d64-4205-876d-ec5879cc04bf",
        "cursor": {
          "ref": "3ce44987-fa58-48e6-b2f1-29966535a7c8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0bd7b0ea-e437-4f36-b735-8f9dcfecfdf8"
        },
        "item": {
          "id": "e08044bc-8d64-4205-876d-ec5879cc04bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3ee937ec-48cc-4b43-908a-0b9b0bf35526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962aa5c2-8b39-446c-ae7d-0a38832a044e",
        "cursor": {
          "ref": "fa357bc1-cd90-4e87-8261-378f74f65fcd",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b91f4658-5fa8-4e43-a223-c57b3d5392f0"
        },
        "item": {
          "id": "962aa5c2-8b39-446c-ae7d-0a38832a044e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a929dfc-1cca-4da9-a329-58ff46be8de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb02e7-6167-41aa-94c9-d53b319398d2",
        "cursor": {
          "ref": "f4755113-4d1f-4c89-8a60-38dce26394c8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "84968e4c-1c7e-4216-bf15-5aa438f6d2bf"
        },
        "item": {
          "id": "cecb02e7-6167-41aa-94c9-d53b319398d2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "64693465-466e-4be0-a924-a6a0c814f0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120cc999-8b5e-453c-8a51-0aedec359147",
        "cursor": {
          "ref": "307dee4b-0de9-4065-904d-bdb46519390c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9f1998e1-c0ac-4872-9371-a6bb518d92eb"
        },
        "item": {
          "id": "120cc999-8b5e-453c-8a51-0aedec359147",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9796af5f-ac1c-4045-8e6d-1fbfa0045457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ac0170-5c99-483c-b344-780eb7b18f73",
        "cursor": {
          "ref": "08a59a85-194d-4e55-977b-7a7df320f712",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a9781d13-027f-4249-be3f-3ea7749c88d7"
        },
        "item": {
          "id": "b4ac0170-5c99-483c-b344-780eb7b18f73",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e16ce89-b249-449f-9c01-21e8c4ee0168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65738777-6580-46d2-b9a1-5a6e312f61cd",
        "cursor": {
          "ref": "3b4e4327-0886-4063-b865-1521c8783314",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "778ef631-f318-4999-b2c5-f43b0ea6c73f"
        },
        "item": {
          "id": "65738777-6580-46d2-b9a1-5a6e312f61cd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f670a3c0-aab6-4803-9e68-e9d27792200f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02cd8ca-ac17-4b53-b714-6824b44c5636",
        "cursor": {
          "ref": "13634499-edd3-44ee-a989-2b49f3ccdd20",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8063ee75-6e6f-43ba-b0f8-0812eca3b488"
        },
        "item": {
          "id": "c02cd8ca-ac17-4b53-b714-6824b44c5636",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ef562357-0754-4235-87be-1d12ea25fba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74ee9bb-caf5-4893-bf1b-5606a706b7aa",
        "cursor": {
          "ref": "36bbf037-6b9e-402a-8adb-3e31a7aed5e8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9e8691d0-83d3-46ed-aa21-daf1cd849891"
        },
        "item": {
          "id": "c74ee9bb-caf5-4893-bf1b-5606a706b7aa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3f2f7093-823e-4a76-bb64-c05ac5775384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e469c97-a98a-4a8a-b26d-b706c8bc5d64",
        "cursor": {
          "ref": "4f267e0e-5833-4de2-a1ef-9ac47d3bfde8",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9d37b664-e369-425c-9249-12d478770b19"
        },
        "item": {
          "id": "4e469c97-a98a-4a8a-b26d-b706c8bc5d64",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc38efd5-1657-4068-b760-4e3c681e71d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5bf04d-fbbf-4620-867b-87e9a615d245",
        "cursor": {
          "ref": "56259d48-3453-46a8-a9ec-d3fe06d91813",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "907f8e6a-acef-4c2c-9aec-56fb1c280c9e"
        },
        "item": {
          "id": "5e5bf04d-fbbf-4620-867b-87e9a615d245",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4a9c6106-0f64-4367-9530-149e8272a5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c17086-32d5-4410-8305-25eb0c41749c",
        "cursor": {
          "ref": "26b3094d-1561-4f4b-9e93-5c83fe3ffb62",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5cfd70ae-689f-49fb-bd49-dc5dcaf3a5d2"
        },
        "item": {
          "id": "53c17086-32d5-4410-8305-25eb0c41749c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4b40f299-9d28-4129-92b6-3234016f3fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da0b6c6-8c89-49d0-834d-f1a8822ed5ca",
        "cursor": {
          "ref": "e275ce88-ef1a-4be2-b9ca-45906036b407",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5a9615e9-7c1f-45ed-865b-2bd3c431ebd9"
        },
        "item": {
          "id": "3da0b6c6-8c89-49d0-834d-f1a8822ed5ca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b035d9a4-080c-4a12-ad47-71dfb76ada36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9290418-d0e5-41c4-a532-46a119a5a304",
        "cursor": {
          "ref": "53980050-bcfe-46ab-b690-5c0999889c15",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c11c23c7-add8-4996-b5ad-70e2fee8b3a5"
        },
        "item": {
          "id": "c9290418-d0e5-41c4-a532-46a119a5a304",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc0241cc-bfbb-4251-a704-54586bf216af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914863b4-7ef1-4816-8cc9-7cb9f8c28a1e",
        "cursor": {
          "ref": "66641e76-8f53-4b02-9aed-920ab0c32dba",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ec758313-e94e-4edb-aebe-ea8be8eb8798"
        },
        "item": {
          "id": "914863b4-7ef1-4816-8cc9-7cb9f8c28a1e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01851ccd-1329-4329-8304-2fc96393a34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02646e9-33f1-4222-bd2f-437ffffefdb1",
        "cursor": {
          "ref": "f75065a3-40c0-4e8b-9c24-fd7053d8d488",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7fa69667-6665-4b45-bb91-c368a5150717"
        },
        "item": {
          "id": "a02646e9-33f1-4222-bd2f-437ffffefdb1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba490326-175b-48d1-92ee-c5fbfd1e983e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77834f01-0dd1-4b90-85a3-6aa378f17f98",
        "cursor": {
          "ref": "91a03a88-679e-404e-aea2-d46313b9656d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4722ce0b-9325-4a3f-9a30-6bf9688eafc2"
        },
        "item": {
          "id": "77834f01-0dd1-4b90-85a3-6aa378f17f98",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "904d745a-0f23-4787-86ca-b1259131afd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aa7e96-595b-46a2-9f62-e4eebb4c2f29",
        "cursor": {
          "ref": "03bf165e-08ba-4ab1-bb71-70bc11d4ec83",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7e54bc92-fb70-4df4-a94a-a63c05212448"
        },
        "item": {
          "id": "d9aa7e96-595b-46a2-9f62-e4eebb4c2f29",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75020082-f1ad-46ac-bbac-a0c8e8486363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc6f7d1-5a6d-4597-94fc-b81578d228de",
        "cursor": {
          "ref": "72fe9b30-3b28-4d8c-ba8f-d509d48944c0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ed582943-3ad8-43f0-a2ba-336da83f5ab4"
        },
        "item": {
          "id": "8dc6f7d1-5a6d-4597-94fc-b81578d228de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2937fde4-664f-4bb0-8e15-ffcc6dde4d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6126c0ed-9849-4260-94c3-9785aed550c3",
        "cursor": {
          "ref": "08997c20-bc6e-427d-9bb8-9748804b380f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d81fb026-e3ee-4d6d-93be-1b7bb1847128"
        },
        "item": {
          "id": "6126c0ed-9849-4260-94c3-9785aed550c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cefb5821-f5f1-4be6-a1f4-cb681ac4915c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942b424a-6dff-4b71-9482-22e1adb14da0",
        "cursor": {
          "ref": "1b9041bc-ee29-4364-be8d-43cba151e937",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c435dbb9-c526-4fd2-a912-eaf55f486957"
        },
        "item": {
          "id": "942b424a-6dff-4b71-9482-22e1adb14da0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d315d110-ec16-4de8-a26a-26b7bdc8ae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ac833-8921-4520-8541-5afa4b96cec7",
        "cursor": {
          "ref": "37a8e994-0b45-432a-96cf-b3157f2cf369",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7e30aedc-c6c3-468c-9649-1ce9f9213590"
        },
        "item": {
          "id": "8d4ac833-8921-4520-8541-5afa4b96cec7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6e55e95f-e356-44c5-aaf8-ab74c60cdca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083ed229-5070-4c88-866e-984e141776b1",
        "cursor": {
          "ref": "a5e6832f-9177-4e4a-9e22-76df9dd83e7e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0e320829-4b3e-4a88-a731-95fed11412a9"
        },
        "item": {
          "id": "083ed229-5070-4c88-866e-984e141776b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11fbea50-7097-4e9c-97e5-16d2e6f46af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506dee66-4cd6-4d2b-a669-3cd2fc176e6e",
        "cursor": {
          "ref": "486f588c-fac2-45fd-9fcc-abe73f2cd026",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7d19b009-ec4a-4b53-9d31-ff2b42b4e857"
        },
        "item": {
          "id": "506dee66-4cd6-4d2b-a669-3cd2fc176e6e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4dbb31c-419d-4006-8fee-82fcbbf447c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14da7a86-7ddf-4d2f-8450-301cf2c2cbe9",
        "cursor": {
          "ref": "ab569a26-d2b1-494c-9a44-883533275c4c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "97752672-73d4-455f-9d59-c4f088603279"
        },
        "item": {
          "id": "14da7a86-7ddf-4d2f-8450-301cf2c2cbe9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ac22974c-2ec3-4621-86a2-9f6dee134149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbf51f7-1043-4bbe-a432-d2a955375115",
        "cursor": {
          "ref": "b6a35f27-a897-4fb5-8659-4c5bc3b77e9f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1a535bdd-a72a-412b-85f0-4d9c02628d79"
        },
        "item": {
          "id": "8bbf51f7-1043-4bbe-a432-d2a955375115",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ad5d90df-5da9-43f0-a733-9467d4524f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26db0bf-98ac-494f-a88f-59ccae04c72d",
        "cursor": {
          "ref": "57308ef1-2eb9-4b48-9951-d9255ce0d2fd",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b5399a5-b2dc-49d4-90a0-26df49fd4cad"
        },
        "item": {
          "id": "f26db0bf-98ac-494f-a88f-59ccae04c72d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f1f555d9-7487-468c-9b52-d4b1cc89c8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479f5fd5-1739-4d61-9e11-10c15aa86ef0",
        "cursor": {
          "ref": "9db75da3-e8d1-41b3-866c-61e94f62b32b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "19bd42c5-2bda-4cb2-9c0f-66a64fcc5e73"
        },
        "item": {
          "id": "479f5fd5-1739-4d61-9e11-10c15aa86ef0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1617a25c-3946-4e97-86b4-bb4a496e940e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393f265d-163a-4866-afe4-ae14ebd0a4eb",
        "cursor": {
          "ref": "7b0bdf4d-2084-4d3a-b082-3dccf21e62c4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "07657c60-9b96-4676-9a95-1251d96f6e60"
        },
        "item": {
          "id": "393f265d-163a-4866-afe4-ae14ebd0a4eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "92c0e593-4627-4e3e-98d5-8eb62b6697c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb633f-d273-4617-bcc8-d2456ad1207d",
        "cursor": {
          "ref": "c8b75a7b-c1e3-4c18-baaa-6bb18187751c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c4943c46-a88a-44fc-83a3-fa38a61c209d"
        },
        "item": {
          "id": "d8cb633f-d273-4617-bcc8-d2456ad1207d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65987aab-ef03-400c-b2fa-268fc3acfb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29805653-8c29-4b62-8c18-4bd11d33ed48",
        "cursor": {
          "ref": "070bbdb5-db10-44e6-971f-328e334779b0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ab7c5517-d3d9-4a19-a17c-124bc5ae42ab"
        },
        "item": {
          "id": "29805653-8c29-4b62-8c18-4bd11d33ed48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a63ac73-d701-4ce2-b220-74d95000d10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0d812e-2b19-48e1-8fed-5c2c5f2f2401",
        "cursor": {
          "ref": "c9a81486-be4d-4506-9c80-fc3cfb7af3a1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a54ce902-ee75-451c-8f1f-3a61e20626fb"
        },
        "item": {
          "id": "8c0d812e-2b19-48e1-8fed-5c2c5f2f2401",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2aec90e3-7866-4bf0-8237-494647bfbe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf1eb8c-226f-4481-96f6-0f5dcfef9953",
        "cursor": {
          "ref": "5dfb76d9-1b69-4124-8de9-89344d461b43",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1c62eab5-6c4b-4836-aa33-ec6b4efcda6d"
        },
        "item": {
          "id": "abf1eb8c-226f-4481-96f6-0f5dcfef9953",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2d071f60-e95b-413c-8db7-0a19265d7541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a489b86-fb06-4210-b10c-10d303ca3fd9",
        "cursor": {
          "ref": "b4edf915-6672-4eb9-b260-12c71eb413ed",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bde23376-ab1d-4614-8b08-29e163e92346"
        },
        "item": {
          "id": "7a489b86-fb06-4210-b10c-10d303ca3fd9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "070f1836-fa17-469d-8705-565b819c50bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb2f482-c821-450c-9c73-3bede70053b9",
        "cursor": {
          "ref": "2e5a6f8a-4a92-405b-9451-8ceb18a8fd81",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "53e0b3ae-e1bc-4c7a-97a4-4eeb2c044168"
        },
        "item": {
          "id": "7eb2f482-c821-450c-9c73-3bede70053b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f3762303-be14-47da-b518-4ea103c814ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc3563-dc7b-4cfd-b930-5ec6d1ae3ec7",
        "cursor": {
          "ref": "34f7ca78-c079-4fb4-b2cb-9d90020078c5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "357d5762-7912-48c5-bbb5-5d151e93302d"
        },
        "item": {
          "id": "87fc3563-dc7b-4cfd-b930-5ec6d1ae3ec7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "566c6058-8503-4477-be25-41d194974f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2086d01-33e9-4aba-8ef2-7e0bcd428edc",
        "cursor": {
          "ref": "35f332ab-c392-4f7d-ad3d-92817fac30ee",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a09c65ee-58f0-4adc-a90a-58f5b0eeeee0"
        },
        "item": {
          "id": "d2086d01-33e9-4aba-8ef2-7e0bcd428edc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f8e80f2e-67ee-4070-871c-6e3d26091391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4327f0-508b-4f19-80b2-48d3b9797b8d",
        "cursor": {
          "ref": "90590b8c-84ae-4efd-a339-2465634fefa6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "176b4e87-e3ac-4534-8d19-e4bb61803413"
        },
        "item": {
          "id": "ad4327f0-508b-4f19-80b2-48d3b9797b8d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa67792a-f305-418a-9d52-af9dfbe06b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed40af6-1aee-4af4-ab57-bd7b528e1ea5",
        "cursor": {
          "ref": "4ac70254-685a-46fd-ae1f-40db4a9d163c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bd9c8128-62a9-49e5-bb5d-31eec23b5397"
        },
        "item": {
          "id": "6ed40af6-1aee-4af4-ab57-bd7b528e1ea5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e26a65c2-3a95-4af1-a345-fbb35146b31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9db1080-6406-48c6-ac53-f45c6a97638d",
        "cursor": {
          "ref": "e3ca20fa-4dd1-4fd3-af08-c621346350d2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9139da12-7673-4cfe-982e-68b55eb79fe9"
        },
        "item": {
          "id": "e9db1080-6406-48c6-ac53-f45c6a97638d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6ef79810-63aa-4e52-80dd-4235d3b133cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dd3620-b91b-4f50-a9b8-6426b14503a6",
        "cursor": {
          "ref": "334fb2b8-fddb-4957-93d4-ce9a9a9cbf41",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a355eec2-665d-43ad-a7a4-69e7790009bf"
        },
        "item": {
          "id": "a5dd3620-b91b-4f50-a9b8-6426b14503a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "42c5a2f0-9ef1-4598-9349-a374cf52f972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f59b23-b398-413d-88b1-2ff2d0acc36b",
        "cursor": {
          "ref": "17fc6d73-c7b7-4e03-86d9-c55332902822",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d62af6b9-3def-45eb-af9a-194bccb7484e"
        },
        "item": {
          "id": "64f59b23-b398-413d-88b1-2ff2d0acc36b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "17d53d21-7ce8-426d-87f0-31e94720eeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29cc0c8-dc10-49a4-b386-ebd80ceec435",
        "cursor": {
          "ref": "921f7477-e83c-4414-8db5-9259b5828f5a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6587dca-76a7-4499-afb7-95ca79afce22"
        },
        "item": {
          "id": "e29cc0c8-dc10-49a4-b386-ebd80ceec435",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e22de893-41fb-417b-b6b0-e8022d17dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d20166-026c-4abe-b4ab-1104660790db",
        "cursor": {
          "ref": "e9037ae6-b9e1-4e68-8bed-ab6e039178b7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1a272b78-cd85-4f0d-8832-0809bf2d44eb"
        },
        "item": {
          "id": "f6d20166-026c-4abe-b4ab-1104660790db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "30612f16-bde3-40c6-b4ba-1617c2f65571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c926e4-d0c3-4885-b2a7-9876aea58423",
        "cursor": {
          "ref": "d995928a-7bae-4824-bffa-93dae3e03b3f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db445a3c-53d1-44f0-bea4-b7f417eca7b1"
        },
        "item": {
          "id": "c6c926e4-d0c3-4885-b2a7-9876aea58423",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6666ccd7-aba5-46cf-953c-634a76b2d0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56abac48-9de1-4878-b0f8-8626417775bc",
        "cursor": {
          "ref": "89b01ce8-ebeb-41db-9fea-2e40db62969b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b8082623-57e4-4939-a009-ab2f15386adc"
        },
        "item": {
          "id": "56abac48-9de1-4878-b0f8-8626417775bc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62c33ba4-62e7-439b-a9e9-33701ee4fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b718ee79-2108-4ee4-9b28-b02802c61dea",
        "cursor": {
          "ref": "f43e0f51-a1d5-43f4-9ad7-80c5eb1363fc",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "416f12b8-ce95-4a0e-bbad-89dee72331b9"
        },
        "item": {
          "id": "b718ee79-2108-4ee4-9b28-b02802c61dea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1a9cdb3e-142b-4a18-9835-4f9fde4b84c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb3093-6e6f-4297-8bf6-6975b3370276",
        "cursor": {
          "ref": "0c87d373-54b8-46e9-a3a3-701f06856dc2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e422585d-2419-40f6-96db-1d492eaa80e7"
        },
        "item": {
          "id": "25cb3093-6e6f-4297-8bf6-6975b3370276",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa7a1b95-94d0-4d59-8dd9-0c68def06b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068a9141-2331-41a0-ba5e-a0e740d875dd",
        "cursor": {
          "ref": "a36aa201-92f2-4f4c-930f-c7bb115d40ec",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "49dbfe58-07da-4c8d-a073-d6cfa7dd2788"
        },
        "item": {
          "id": "068a9141-2331-41a0-ba5e-a0e740d875dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6e8c19b9-3635-486d-add9-5f22eaf4c245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8737fdb-a084-40e4-9695-8a9ff0c14b85",
        "cursor": {
          "ref": "bf5e6439-cbea-479e-ad6e-0a151e173e0e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "268ef6c9-09d6-4568-b900-4cd218627536"
        },
        "item": {
          "id": "f8737fdb-a084-40e4-9695-8a9ff0c14b85",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df0f3c31-1885-4db8-8659-73923f8e9a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0e6d46-5c11-40bf-8d52-069bba26d01c",
        "cursor": {
          "ref": "7387690a-b17d-4838-a9d8-fdf25db4f8e7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9813aa59-2b91-40d3-abc3-c6564bb085bc"
        },
        "item": {
          "id": "ca0e6d46-5c11-40bf-8d52-069bba26d01c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78462acf-d080-4296-b264-cb221b09bd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8f7007-cc34-469b-ad39-3cfe3576f97f",
        "cursor": {
          "ref": "8e4ef9a1-e88a-4ce0-a41f-7414a36ba081",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a8df94bb-54d5-47f4-a64f-ab41b4f19d2a"
        },
        "item": {
          "id": "fa8f7007-cc34-469b-ad39-3cfe3576f97f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9af0144-be16-4ad5-ab44-b26b7dd9034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5463022b-55e5-46b6-a128-6b21b6758c54",
        "cursor": {
          "ref": "5f7ef5dd-e2b3-45ce-b943-78b09456be92",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "61436d51-e174-4d4f-abec-1789ee341d49"
        },
        "item": {
          "id": "5463022b-55e5-46b6-a128-6b21b6758c54",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9672bdd9-8b14-4937-93d0-0bcc01eb4f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabe43dd-8b3c-4af1-b8e6-435c3fa48495",
        "cursor": {
          "ref": "1f988c67-9669-4374-82c1-f2b092779379",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5aa53ecc-7e79-4796-b49e-6b63b66ff582"
        },
        "item": {
          "id": "dabe43dd-8b3c-4af1-b8e6-435c3fa48495",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a8bb7fa5-59f9-4496-b974-18888e3aa977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b98f2c-9f77-47f2-a58d-d8a51f691353",
        "cursor": {
          "ref": "865b6779-3162-4dde-a9ce-9a1e4f38e27a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ea6d29a0-46bb-450c-85a4-293e10854498"
        },
        "item": {
          "id": "c4b98f2c-9f77-47f2-a58d-d8a51f691353",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2701ab46-a086-4da8-adf8-cf9eeaf5e2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12806d76-d7ba-4e1c-8ecd-acc114389892",
        "cursor": {
          "ref": "c45c828f-078a-4706-aa4e-f09a14f9134e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "034408ad-4e83-4f45-86a4-ddc89b0fbcbb"
        },
        "item": {
          "id": "12806d76-d7ba-4e1c-8ecd-acc114389892",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "19aedef3-30f9-4cf5-bf13-e228a36bf17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456c2cbd-c1af-4bcc-9e77-7cdf8c989a91",
        "cursor": {
          "ref": "2fdbe47f-df2d-44a5-b330-c610a647cae1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "108c9030-e03b-459c-be8a-df8b5f032746"
        },
        "item": {
          "id": "456c2cbd-c1af-4bcc-9e77-7cdf8c989a91",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77014361-5c32-4456-a585-7af28eafa097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9162b0f7-2000-4c93-ab7e-8250f66f69e0",
        "cursor": {
          "ref": "b4b4dee4-64e4-4c0a-b876-402ed9c01ec7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba751665-5706-435d-b89b-bd0e537e35d9"
        },
        "item": {
          "id": "9162b0f7-2000-4c93-ab7e-8250f66f69e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f77aa70a-5d91-41f2-b677-2c0af5911911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5884fb-ecf7-4d73-b656-949f7cfa41df",
        "cursor": {
          "ref": "61714144-f352-46d0-9131-6e868a5b028d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62649d67-1342-44a3-87d3-0d34522a61b2"
        },
        "item": {
          "id": "2b5884fb-ecf7-4d73-b656-949f7cfa41df",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "62858764-a008-46e2-99d1-2d47d2e11e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ca3089-3460-49af-9359-19fe4da6142f",
        "cursor": {
          "ref": "783ffb87-f120-459d-a783-caa0bde71147",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "52dc85f6-1d07-4d0d-a91f-4e157271d775"
        },
        "item": {
          "id": "02ca3089-3460-49af-9359-19fe4da6142f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "55ebc266-85a8-4110-b9fe-c233f8e90b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a22d83-8065-4584-be33-556ee58b646c",
        "cursor": {
          "ref": "d46cb784-0cd0-4d25-b3f4-6e95832c3248",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5ade7aef-2ea9-4c1e-8a11-9b4435fb60c6"
        },
        "item": {
          "id": "91a22d83-8065-4584-be33-556ee58b646c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6ffa626f-e174-4e9b-afc0-ac2e7bdbe3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb44c009-93d0-41cc-bc54-c0402ef46c19",
        "cursor": {
          "ref": "9446ffed-d5fe-405d-be44-d0b07340900e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3d8d45f5-9ad7-479f-8b1e-5aa803247419"
        },
        "item": {
          "id": "eb44c009-93d0-41cc-bc54-c0402ef46c19",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fc9212f4-9db2-40ea-a097-224b38644ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7771085-844e-4c88-b75d-2e37e12c5a1c",
        "cursor": {
          "ref": "029ad121-3e8e-497a-90bc-49a7c94ddc23",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c1c44d42-a29c-47b4-8f9b-30ee304108e7"
        },
        "item": {
          "id": "f7771085-844e-4c88-b75d-2e37e12c5a1c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6b837604-1495-48d9-b7d7-8f449f5fa653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c00ebb-dd81-4c4b-9936-16e669d164c8",
        "cursor": {
          "ref": "17e13872-48fd-468f-9bbf-e4ed6c7ee986",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "367baa12-e02c-4404-9e2a-18ecd332bf1d"
        },
        "item": {
          "id": "c8c00ebb-dd81-4c4b-9936-16e669d164c8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "794b60a8-f3c5-4364-9d95-e9d31c929aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49282626-9420-4dc8-bee4-c5e0ba56d507",
        "cursor": {
          "ref": "9474ae00-d1cc-455a-bdf9-21a538e12d7b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "af4fd329-ef89-419f-ab8c-233c94325c4c"
        },
        "item": {
          "id": "49282626-9420-4dc8-bee4-c5e0ba56d507",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9e9b08cd-c6d9-4c23-b9ff-73ad23d0ea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a946fb-0c1e-40e8-9422-b715cfcf677d",
        "cursor": {
          "ref": "7c67a939-8905-4d4a-adb1-a20c5ae0b486",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e4a73864-f604-4790-9b45-6340add34601"
        },
        "item": {
          "id": "a6a946fb-0c1e-40e8-9422-b715cfcf677d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e771f2f8-fb8b-489b-a301-a3ff31532255",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5927049-3b72-46a0-943b-433561042d7e",
        "cursor": {
          "ref": "0e1a5cb3-48aa-42fc-bc09-b1418313b51a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7a35493e-0da4-4764-b013-3cfc2568de5d"
        },
        "item": {
          "id": "b5927049-3b72-46a0-943b-433561042d7e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5c66728-1fa8-4b23-a4da-550e35345dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1632ac75-5cdf-443b-a87c-ee72f74be29c",
        "cursor": {
          "ref": "6dc5d1ad-e5b2-452a-92b7-a1f0f7b2fb35",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c1ca7475-a2ae-4e93-9e33-759c53b9df26"
        },
        "item": {
          "id": "1632ac75-5cdf-443b-a87c-ee72f74be29c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "00379538-9b56-47e9-8504-dbadc53c3d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ffa409-1329-49bf-92a9-b4806f3cbe37",
        "cursor": {
          "ref": "f1b2c566-003a-4352-84e3-c439c6829b9d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ee2af1d8-3c63-448a-8181-4c387dd74501"
        },
        "item": {
          "id": "55ffa409-1329-49bf-92a9-b4806f3cbe37",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5c48b61e-b5d6-474f-bbd5-dc15455f0992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03535e83-cd23-4727-b115-a0e4b76a7f60",
        "cursor": {
          "ref": "9847d5af-57b7-43d3-bd54-fc307c61ccd9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dad049e3-5cca-4c5f-b133-a304ce56c5fb"
        },
        "item": {
          "id": "03535e83-cd23-4727-b115-a0e4b76a7f60",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1cd60a3b-30f6-4771-888e-f48062943500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df527c6-9686-492e-a3db-c500c3d97a67",
        "cursor": {
          "ref": "b05ded7f-cd9d-432a-bbb1-029db7c22e9f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a6ce82ab-aa34-41aa-b77a-a84593a2f854"
        },
        "item": {
          "id": "1df527c6-9686-492e-a3db-c500c3d97a67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d06d7839-76c6-48c6-be86-7cd50090aac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fd3d21-0fd9-473f-85e3-29fccc37a5c1",
        "cursor": {
          "ref": "21331299-973f-44e6-98fe-00b82010e531",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8978d0bb-2375-41af-b960-5d9386d8f037"
        },
        "item": {
          "id": "38fd3d21-0fd9-473f-85e3-29fccc37a5c1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "aa47011e-7e99-4e06-8b7b-3c3b6b415335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436cf6b9-e20f-4a50-a7d9-439c377dc6de",
        "cursor": {
          "ref": "e14a4451-e76f-42dd-974c-7c010f951545",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b02f6781-48aa-4612-8d72-73f6879e49d7"
        },
        "item": {
          "id": "436cf6b9-e20f-4a50-a7d9-439c377dc6de",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b10e204a-7d0b-4466-a57e-84b44cea5182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5737241f-cd43-489e-a95d-646ce8a5ebcd",
        "cursor": {
          "ref": "3eb0b252-1820-456a-a964-7f8ea1492429",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ea9a42bf-274c-4f06-9f56-0d3d2b7e04ab"
        },
        "item": {
          "id": "5737241f-cd43-489e-a95d-646ce8a5ebcd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "54e7b362-d0f2-497a-bd5d-c2f1b2045217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edc1812-9e3d-46a6-b997-0d97982dc447",
        "cursor": {
          "ref": "0ae6386a-0382-4d5b-867d-a16cea61cadc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e8cfb180-bd66-4fa7-bd02-69ea2f3c623f"
        },
        "item": {
          "id": "1edc1812-9e3d-46a6-b997-0d97982dc447",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "100c3fb0-6303-4e91-85d6-515428d9d5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c23d90-fae2-4533-9a14-17b1d52b0f2a",
        "cursor": {
          "ref": "1b7bc996-3269-4ddb-8212-14f97f5184f4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "94959cdd-f9e2-44d7-a17c-16f50bf26d34"
        },
        "item": {
          "id": "d8c23d90-fae2-4533-9a14-17b1d52b0f2a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0409e2b2-c9d7-4feb-b1cd-88dbd5852fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb1aefc-06f6-4e9d-bc99-c5f30014b268",
        "cursor": {
          "ref": "4ee01f1b-b85a-4438-9d56-fc3a14fab2ef",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d850e3ff-ae9e-47f3-9d2e-761c7dd44be7"
        },
        "item": {
          "id": "7bb1aefc-06f6-4e9d-bc99-c5f30014b268",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e908bed7-e6e6-4f81-861b-1fb52c6d6bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64b8e8d-0b4f-48e3-bfe4-3b52fcc6ed39",
        "cursor": {
          "ref": "e768d662-0a8d-40d2-8c82-081f9d2bbed0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f442d86a-f2e6-468b-bb9e-4f58040c2ac6"
        },
        "item": {
          "id": "c64b8e8d-0b4f-48e3-bfe4-3b52fcc6ed39",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "68dd04ad-823b-4d1f-adbc-d352539aa02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b017ee8-4193-4a75-bc65-d923e3858dca",
        "cursor": {
          "ref": "2061e90b-1ccb-4d25-8bd9-f2f93299d2f5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4d694a03-0dbc-4664-8812-49c3114c4ccd"
        },
        "item": {
          "id": "9b017ee8-4193-4a75-bc65-d923e3858dca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9f073a0c-9341-4cdb-aa32-32a34720209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b109bd5c-f6b4-44a4-a17a-97bcc4b12ccb",
        "cursor": {
          "ref": "f6ffd731-78c5-4f47-bb10-013e4908305e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5d0de624-0180-49a8-863c-69d93679cd29"
        },
        "item": {
          "id": "b109bd5c-f6b4-44a4-a17a-97bcc4b12ccb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c85d50d7-1eba-4d31-994f-43f8a3aff8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0cb5f8-5e33-451d-8ea9-cd69f5e95127",
        "cursor": {
          "ref": "dd71e176-882f-458d-8d91-5b71c3b8a78a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6b4dbbbb-a2f6-4078-8567-489d550fc2d6"
        },
        "item": {
          "id": "ac0cb5f8-5e33-451d-8ea9-cd69f5e95127",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0680e7a7-37bc-48a3-9b69-719085a47ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ff59fa-0ab6-4201-95b1-01cccab3ecd0",
        "cursor": {
          "ref": "e0c4e35b-0b1f-449e-8f9d-19d0e0b365c4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ff33e8e5-6103-4ad3-9aaa-af8aa742643f"
        },
        "item": {
          "id": "23ff59fa-0ab6-4201-95b1-01cccab3ecd0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20a58fe4-775c-4207-a18c-975203600231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704edee9-2568-4fce-82c5-008a2967375a",
        "cursor": {
          "ref": "4d062987-9209-4a32-9bc9-4949036beb5a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cc094f69-7bd6-4b03-b736-e7d15b7d9685"
        },
        "item": {
          "id": "704edee9-2568-4fce-82c5-008a2967375a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e873b96-9a4a-4969-98c7-b0e704fa509b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f356cf-4caa-4db9-9238-478c2030da38",
        "cursor": {
          "ref": "17dc3bc4-6181-4a36-8f9b-583d8ebbcba1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ca13ebed-1bd4-4bce-9b25-07871b5436db"
        },
        "item": {
          "id": "06f356cf-4caa-4db9-9238-478c2030da38",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "89dfebc0-27b6-4462-aaf8-9bea40fc68d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc324151-0c81-45dd-97c7-50759a1fcd1e",
        "cursor": {
          "ref": "0eea7627-b2a9-4768-9170-b4d39dc5d623",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "933d2c72-59ad-4a4b-9397-9a251a9bb609"
        },
        "item": {
          "id": "cc324151-0c81-45dd-97c7-50759a1fcd1e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d0809674-3259-41ce-b9ae-ac6b2d2466b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c986d1f6-9a4f-434a-93db-3916344b9c72",
        "cursor": {
          "ref": "fb0f4f95-5829-4bb8-bd7b-0fa05ad9f9db",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "24f0eb1b-f349-4930-8d75-1d8ea6174cad"
        },
        "item": {
          "id": "c986d1f6-9a4f-434a-93db-3916344b9c72",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "20d78f78-4a2f-4ff7-b1d4-ec15bc6e2022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce592fa-a0cf-4f97-8772-40336f665325",
        "cursor": {
          "ref": "13bd4821-3b80-4dfc-afdd-e572cdaa2944",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b4a7a147-1899-4207-bb43-90e76fb5e692"
        },
        "item": {
          "id": "3ce592fa-a0cf-4f97-8772-40336f665325",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b688394f-18b5-4972-a6f7-a32c8193bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04020699-458d-4f27-94cc-533ef4983c78",
        "cursor": {
          "ref": "30c94326-aa4f-4dd2-b3f9-47640e2cfe0d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "57883268-bccb-44ae-a3d7-9c145442f83b"
        },
        "item": {
          "id": "04020699-458d-4f27-94cc-533ef4983c78",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8ea03673-2a72-4714-8f34-44c8a8080f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e5cb1-b903-4938-a0d6-438d9ddd8402",
        "cursor": {
          "ref": "49388b4d-c80d-46ed-b3e1-a2539676a26e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e850d519-f606-4be3-84bc-0a039d60b76a"
        },
        "item": {
          "id": "4d7e5cb1-b903-4938-a0d6-438d9ddd8402",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c6155366-6fc5-4645-be3a-81a376e6246b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90946c1-b08b-4174-aa55-0ff12bdce44b",
        "cursor": {
          "ref": "2de05cf3-5fbc-4717-9d8a-6f5e92f560e9",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "51816f5a-cb86-4ffe-acec-331a31bbdf7a"
        },
        "item": {
          "id": "e90946c1-b08b-4174-aa55-0ff12bdce44b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "29a0d55e-2774-4029-a679-c0d3a18f0f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf53ba8-608d-4c0b-940a-7fc67e40c0ff",
        "cursor": {
          "ref": "d56fbda2-3501-48b4-a024-8ea4e7cc9575",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ac24bb1c-b288-4dbf-a690-1a87c0f565f2"
        },
        "item": {
          "id": "8cf53ba8-608d-4c0b-940a-7fc67e40c0ff",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "abb6d648-0e36-4a12-9a79-640eda7fe818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b30f3ab-3ec5-4757-9937-752f7fab3503",
        "cursor": {
          "ref": "85d7617b-c34d-464c-be10-c20728c95701",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8a6bf2b2-2622-4a84-b539-27baa165a9d8"
        },
        "item": {
          "id": "7b30f3ab-3ec5-4757-9937-752f7fab3503",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c9f280f-6391-48b4-9479-e95e2c16253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cf758d-2851-458b-a8fe-60fd135758f6",
        "cursor": {
          "ref": "c890873b-0633-4986-8343-346dca8035ee",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3686966-1077-4ddf-936f-eacc7f670715"
        },
        "item": {
          "id": "91cf758d-2851-458b-a8fe-60fd135758f6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "35aab088-2a30-4fc5-b390-4a6fd0b0ac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a68384-3a82-4985-ba58-4b77b3e3fab9",
        "cursor": {
          "ref": "5358765b-82ae-44f7-83ee-23eee87ebf94",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a8eb61a8-8051-4732-80c1-51bde6f506ff"
        },
        "item": {
          "id": "a8a68384-3a82-4985-ba58-4b77b3e3fab9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c3e47331-7c35-466e-96a0-b0be9b6fbafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdd801d-8bea-4504-9048-729befef7009",
        "cursor": {
          "ref": "1b66e6c8-e1f6-469f-9d1b-b801c0d5f450",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "45f93bef-20e6-4281-af7c-9bc9137c9f96"
        },
        "item": {
          "id": "2cdd801d-8bea-4504-9048-729befef7009",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7dede1a2-9525-404d-9f39-9ab982c521c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88515d7-b3f3-4f83-abaf-47d45efa9984",
        "cursor": {
          "ref": "b45123ae-65fb-476d-9c87-7552b08e7853",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6f3f80f-5d1f-4327-8cbd-57915aba222f"
        },
        "item": {
          "id": "b88515d7-b3f3-4f83-abaf-47d45efa9984",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7c2e8620-c67f-4ecf-b3e7-12508d2874ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9c3472-1a67-4f1b-9185-c83a97f29814",
        "cursor": {
          "ref": "a15bc026-f26f-472a-b156-e5e1b6cd33d1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27e23374-63b0-420d-bb11-f45ba64cbc83"
        },
        "item": {
          "id": "fe9c3472-1a67-4f1b-9185-c83a97f29814",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2874f402-569c-411b-8350-b95c6b35291a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92408c3e-0013-4bc9-993d-d190b5527dd4",
        "cursor": {
          "ref": "2436246b-4da5-4d41-b37b-f8c74fd3271d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "61b24219-8f88-4fd3-92b6-b44c9cd0db99"
        },
        "item": {
          "id": "92408c3e-0013-4bc9-993d-d190b5527dd4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4feae812-efaa-4599-a4ea-6b5c40daef1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c32e03-dc4d-415b-a4ce-3b1f212dc622",
        "cursor": {
          "ref": "d091e9f3-75f5-4b66-8bd4-d3cee2d57654",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3e815ae9-78ee-4f2d-8fa0-3a7fae017be3"
        },
        "item": {
          "id": "00c32e03-dc4d-415b-a4ce-3b1f212dc622",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de178431-36de-425e-9efa-e814bfe478c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3990ddb-ee7b-4ac0-a3ef-07473a17b0ff",
        "cursor": {
          "ref": "dc91dc0e-ddef-4b13-80bb-a1be4f1eb95a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e0676767-3ffb-42e0-8630-182fd1a7751d"
        },
        "item": {
          "id": "c3990ddb-ee7b-4ac0-a3ef-07473a17b0ff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5bfd9686-d21c-498e-a990-07a0ff253fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa62b58-c22f-4a9e-bd63-847375b762bb",
        "cursor": {
          "ref": "b7d49a04-510c-47bc-aec1-1fa59b94a55b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7cf2ef0a-f32c-4897-9dd0-cf8b8d549adc"
        },
        "item": {
          "id": "5aa62b58-c22f-4a9e-bd63-847375b762bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6aca6d01-3677-4747-b3bb-3b9e58ac465f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dcce55-fac3-4601-840a-b8a8a4230ff1",
        "cursor": {
          "ref": "783cc0db-d20e-43da-a058-92dad5359ee3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "20f02115-201c-438c-8cb8-72cdc8a2590f"
        },
        "item": {
          "id": "49dcce55-fac3-4601-840a-b8a8a4230ff1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b30f9075-676a-443f-bd5a-d28f324bbeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efcb21d-2e63-414e-ac8b-754ad52619b6",
        "cursor": {
          "ref": "1e3f123e-d877-40f3-a8d7-ab330f3dc1df",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "914cc74c-befc-4933-8f33-7ba37e27800b"
        },
        "item": {
          "id": "9efcb21d-2e63-414e-ac8b-754ad52619b6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b7044366-0c8a-464a-b11f-11c3af48612b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00e4598-8753-4fc1-8fbd-741333bed644",
        "cursor": {
          "ref": "8cef887f-be9f-40ac-80c5-4c79698b00c9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "067dac56-e49f-426e-8437-631cb6f39060"
        },
        "item": {
          "id": "f00e4598-8753-4fc1-8fbd-741333bed644",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "da813e4e-7d22-4a32-94d3-9ab5403f5a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045d21f-e5f1-469a-aa0f-2b57a4c95f98",
        "cursor": {
          "ref": "b14662a4-b911-4ac7-8564-ac21d032dee4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ddc3067c-001e-4f75-b8ac-a2e36bc3882c"
        },
        "item": {
          "id": "e045d21f-e5f1-469a-aa0f-2b57a4c95f98",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1618e8e6-5ce7-4d6a-a4e2-255fcea6d782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fea805d-1a5d-4277-a1f7-f6371fb732b5",
        "cursor": {
          "ref": "51e30faa-8ab3-4507-b7d6-2f1cea52daf3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ccf8fbbc-1064-4634-b94b-15882d97cf1c"
        },
        "item": {
          "id": "5fea805d-1a5d-4277-a1f7-f6371fb732b5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ad6eee2f-2900-417b-ba1d-abd4b17dea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2d4a3e-495f-4dee-a51f-55b1ce13d276",
        "cursor": {
          "ref": "4c0c14db-1bef-4795-b56b-37e3710249d7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3c47b717-bc4f-4979-9b2e-6812d03039c7"
        },
        "item": {
          "id": "6c2d4a3e-495f-4dee-a51f-55b1ce13d276",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2da3c355-0f1a-4390-bd5d-0aad22cc4c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881e3e36-3116-4e1e-91e2-58d633957b2f",
        "cursor": {
          "ref": "b41d3247-d5ce-4270-90ff-a586f551c6d0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c9ff3429-c8be-4d7f-978c-8bf3e013a942"
        },
        "item": {
          "id": "881e3e36-3116-4e1e-91e2-58d633957b2f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0aa7461b-11ec-4c4e-9786-6dd31f764bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb83d21c-3e0c-485a-aef7-6740af9a5545",
        "cursor": {
          "ref": "21dbe18f-5acc-43b7-ad4b-a79bd8425f41",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2f39144b-fbe7-486e-b1b8-f875f8887511"
        },
        "item": {
          "id": "bb83d21c-3e0c-485a-aef7-6740af9a5545",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f10e7713-e52d-4df4-a8c5-963c2b07f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f69193d-4f08-4dfd-86e6-32b4d1bcaed9",
        "cursor": {
          "ref": "5279b39a-ae4a-4aa5-a174-3c6dd9d8e544",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b4e042c7-82a3-4e6d-8ecd-eccaddb8d845"
        },
        "item": {
          "id": "2f69193d-4f08-4dfd-86e6-32b4d1bcaed9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f945e66e-f21d-4602-98c4-ec28e012d81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a0d6e8-2bad-4a71-8abf-0673a9b7bc98",
        "cursor": {
          "ref": "b478d891-aeed-4209-b25d-1c9d13812374",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "93c76d49-6f0e-40be-bd98-e995e8050a12"
        },
        "item": {
          "id": "59a0d6e8-2bad-4a71-8abf-0673a9b7bc98",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f2bb1cbb-d6ee-49c3-9ee3-44d03675a286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727e2134-4d24-4ae0-a33e-544595960edb",
        "cursor": {
          "ref": "008dfef5-e0d1-4456-9218-22edc7d0bff4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "41b94da0-dfc2-467b-823f-36ba7abf798b"
        },
        "item": {
          "id": "727e2134-4d24-4ae0-a33e-544595960edb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c44011e8-b5cb-45e9-abaf-85cd58005a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b35320-258e-422a-9d29-a8f7dbbab0c7",
        "cursor": {
          "ref": "6dbd0b36-b5be-49fe-b554-aa93b9f9d40b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "33bb8062-2fbe-47bd-b237-32767618d435"
        },
        "item": {
          "id": "60b35320-258e-422a-9d29-a8f7dbbab0c7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8a6de44a-3b30-49b8-907e-34bba0e319c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742581f4-c09b-45c4-a2a8-95035e9fdd62",
        "cursor": {
          "ref": "2ab67fe4-27cf-494c-8c55-2234f763c46b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "97c944e2-d2f8-4457-9ab0-ede8f6842695"
        },
        "item": {
          "id": "742581f4-c09b-45c4-a2a8-95035e9fdd62",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "234132c5-0918-40fb-a6f9-44b91745c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b261447f-59bb-465d-ad41-be3f3c93629c",
        "cursor": {
          "ref": "6bf2af96-2b6a-43c8-bfd1-f9565b32ab4e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "79bd39f6-86d9-4ddf-a607-f544065a0a6f"
        },
        "item": {
          "id": "b261447f-59bb-465d-ad41-be3f3c93629c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f7181c0e-d435-43d9-9589-8b1947ea622d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0ef17a-3210-49d2-9a07-5b144583786a",
        "cursor": {
          "ref": "5d4041b1-ca71-4d7f-af2d-edbd4b00c455",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3d8456ad-bec4-4a32-b709-654d7c8f679e"
        },
        "item": {
          "id": "0d0ef17a-3210-49d2-9a07-5b144583786a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d1eef18c-7c00-440b-8ba0-a258950986b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6211af-d908-4ff9-81e0-acfaeb9c9c94",
        "cursor": {
          "ref": "7fc285f8-33e7-4fab-932e-ed9d70d5fb44",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1ff1aa02-3d30-431b-b1ec-d329f291fa0a"
        },
        "item": {
          "id": "5b6211af-d908-4ff9-81e0-acfaeb9c9c94",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "aa64328c-1a74-4b15-abea-4c5c74cd8bba",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "b78fdb22-f440-465e-9fbd-12fe7f62a90d",
        "cursor": {
          "ref": "36cdf574-bef3-49b6-9995-c4623f59cb02",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9f4f28dc-2d08-44ee-b907-af63c3491c5b"
        },
        "item": {
          "id": "b78fdb22-f440-465e-9fbd-12fe7f62a90d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "80e03c1b-3809-456d-891f-3a535a3a3cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd5273a-5640-422b-9718-f64a0c76115c",
        "cursor": {
          "ref": "3c17ad07-afd9-4669-9797-efa119fa0956",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8cf598d6-cfab-4e3e-8742-7be543234bda"
        },
        "item": {
          "id": "fbd5273a-5640-422b-9718-f64a0c76115c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5b0c086e-63df-4819-b282-922aa7915cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54646225-bd15-41a0-9423-43887948af07",
        "cursor": {
          "ref": "85cc432f-600e-4aa8-8df3-9252c31a7981",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "407df9a5-a0ed-4f55-9dbc-04575e23be7d"
        },
        "item": {
          "id": "54646225-bd15-41a0-9423-43887948af07",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2371765b-237c-45b1-afa3-293ec5f2d769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e2ce37-1b39-4bfa-a396-32314b854b2f",
        "cursor": {
          "ref": "a7521f02-0a2d-4d34-962b-e2c462557ac4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3cc01ab1-bd1f-4a40-9d72-5d5795d7a7fe"
        },
        "item": {
          "id": "57e2ce37-1b39-4bfa-a396-32314b854b2f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f7035ea3-6828-4bc6-ba55-476580ff88b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e771a-7df6-4d47-b57f-482956d72d3a",
        "cursor": {
          "ref": "574b0d6f-1c9c-4280-bf22-625e94cc7a97",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7b01cc76-a0e6-4a01-b955-61c4e2c1b352"
        },
        "item": {
          "id": "340e771a-7df6-4d47-b57f-482956d72d3a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "008c6e5d-65b7-40e5-a761-703257245b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998ac395-7573-4387-8328-46027f1e4058",
        "cursor": {
          "ref": "76406665-d3c0-46f5-9b16-a8874f712ef1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f3767079-f319-4ef9-abf9-359bc49e9564"
        },
        "item": {
          "id": "998ac395-7573-4387-8328-46027f1e4058",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5596669b-560e-493f-bee1-4732857a9ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffb371f-93a6-436e-a711-611ff6142b9f",
        "cursor": {
          "ref": "053a776c-b7a7-42f1-98a4-46b03dfe345b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5ab43b20-4679-495c-9e1a-697abbb5d484"
        },
        "item": {
          "id": "bffb371f-93a6-436e-a711-611ff6142b9f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49bddb96-bf48-4aa4-99a0-48e308f56afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0720daf-5834-430c-b07c-141003b20543",
        "cursor": {
          "ref": "78afa15b-1c94-4195-a2b6-3471cb430ccc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e89dd6a4-3cd4-444b-804d-624a48e1df13"
        },
        "item": {
          "id": "e0720daf-5834-430c-b07c-141003b20543",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a722bd8b-eff3-4ff3-90f8-6801c7c1349e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a4dd1a-0896-4f81-a7a0-99d734bec383",
        "cursor": {
          "ref": "b1160387-981c-4f0e-88cd-762e69f0b077",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8986f94d-00cf-47c9-8660-c650aba370c3"
        },
        "item": {
          "id": "a0a4dd1a-0896-4f81-a7a0-99d734bec383",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8920eef7-9867-4b4f-87e0-1ff2f135dd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0c0b9b-356b-491e-8545-4334001f1888",
        "cursor": {
          "ref": "3df42ca2-8e8c-4ab8-9f6d-ae63bf207b53",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c807e0c-4f21-47b6-aae6-b5d1a31fe64d"
        },
        "item": {
          "id": "1b0c0b9b-356b-491e-8545-4334001f1888",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "24bba4a5-f5e0-481e-9d5d-c7a55f2ac2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe3da6e-366d-4ee7-befe-698a9fa2bb2d",
        "cursor": {
          "ref": "7e5ccbf2-2fbc-4982-9580-5e13da7c7e56",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a88cf0b5-521c-4ff1-aef6-3b607adcd792"
        },
        "item": {
          "id": "cfe3da6e-366d-4ee7-befe-698a9fa2bb2d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9d30f1ca-c7a2-4642-a21c-312d64b91b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba9473-2480-4d84-9744-bbc16a85b53c",
        "cursor": {
          "ref": "5ed29b9c-2d9d-4a06-bb49-be179fdd3c98",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e4ea09a1-f2c2-4b99-b208-594e7e1d43b6"
        },
        "item": {
          "id": "fdba9473-2480-4d84-9744-bbc16a85b53c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fde59dd6-3d5d-4410-ae45-fc0a728bc05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e6d7cb-ef20-428e-9967-fa1aaa7383a4",
        "cursor": {
          "ref": "a2846b34-756b-4929-bb4f-466a059a288e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f49ece17-876c-4358-b884-e420f96bd770"
        },
        "item": {
          "id": "61e6d7cb-ef20-428e-9967-fa1aaa7383a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "047c21dd-f128-49a8-88a7-4c6b3d76a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeec72e-d967-4446-a60d-be1426201a81",
        "cursor": {
          "ref": "937d8ca1-c79e-4adf-938d-1aa53ece5508",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "11fedc59-8206-4fb3-acec-07d68add4b9b"
        },
        "item": {
          "id": "ceeec72e-d967-4446-a60d-be1426201a81",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e10977ac-01fb-4626-804d-053db8d85f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97653fe-3604-4b5c-9ae3-b840a8184857",
        "cursor": {
          "ref": "d5293332-7c2c-42ba-93f1-a5d4b385e4d9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d25fc03f-0df4-4599-9f5f-bdad2ed82b80"
        },
        "item": {
          "id": "a97653fe-3604-4b5c-9ae3-b840a8184857",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dfb44a43-3fdd-4c2e-ba43-72151a9dc6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691faee4-5d29-4fc2-896f-195c18768aef",
        "cursor": {
          "ref": "4739770e-d08a-4d38-8770-1af60cd643f0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de17d367-3f67-43e0-a4a6-249fb9028bdf"
        },
        "item": {
          "id": "691faee4-5d29-4fc2-896f-195c18768aef",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d9eef378-d2a6-4edd-adef-9c166ce4dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe48d8d0-c5a0-40a6-911a-c5675e24cf9c",
        "cursor": {
          "ref": "7480ac3e-e4c9-4a12-8c10-94d7e9a5d3ad",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "860d5176-9ba6-4044-a5ab-5fd54fa4094d"
        },
        "item": {
          "id": "fe48d8d0-c5a0-40a6-911a-c5675e24cf9c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3cee8d95-f5cb-4f42-bd0a-64a682074e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3979750a-da21-42e0-b939-d410630a112d",
        "cursor": {
          "ref": "a6936c74-7bcd-4285-8531-83753292ea7d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ac7b3edd-afbd-452e-8cc0-af6c2559ba4a"
        },
        "item": {
          "id": "3979750a-da21-42e0-b939-d410630a112d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7c876722-6880-4066-b24b-5306a5c576df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5727a09-2f7a-4750-a03b-e8ff0afd28ef",
        "cursor": {
          "ref": "78d1d7a1-c351-491a-8b56-6a15c2eb717a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9e99852c-c6a1-401d-8ad0-57995e77ba4f"
        },
        "item": {
          "id": "c5727a09-2f7a-4750-a03b-e8ff0afd28ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a867a6d0-1d5d-439e-8e60-40e6fdff7eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ee6e4b-683b-4256-bca3-65e03ff2a9c2",
        "cursor": {
          "ref": "c187ef57-e3e5-429b-af9b-10cac0b915c4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8b2d8eda-384f-4a2d-af94-8f91aef83852"
        },
        "item": {
          "id": "77ee6e4b-683b-4256-bca3-65e03ff2a9c2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "005047bf-26a6-44d5-916e-71204b232745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d695248-5c22-4d6e-8457-81dd20311ec0",
        "cursor": {
          "ref": "7de74c82-0cdd-4314-993c-7737c6d271c9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "06a70eee-6af1-40f1-bc79-4d2a2fe06295"
        },
        "item": {
          "id": "4d695248-5c22-4d6e-8457-81dd20311ec0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "52beed09-a47d-4c6b-ac34-0919318fc348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833be3ea-2f8c-4480-83f4-2bdac5d448a8",
        "cursor": {
          "ref": "b6e2f89c-b1c1-4cbb-bd9f-210812ff2b51",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1ddce35f-3e5a-4b27-bf1b-34fba61880c1"
        },
        "item": {
          "id": "833be3ea-2f8c-4480-83f4-2bdac5d448a8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bde91e5e-44e5-45bd-9b27-e319b3a8c87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c356712-0bd0-4b23-a195-8432b7692a94",
        "cursor": {
          "ref": "1c283603-decd-44a4-b1f7-a3c1fcbe845c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ba14d7e0-8e95-4f2e-a05b-94c67accb0d2"
        },
        "item": {
          "id": "0c356712-0bd0-4b23-a195-8432b7692a94",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef6b5822-df93-4a42-a214-0f2226b83d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c87651-3a7f-4081-995c-e88e3e84afa4",
        "cursor": {
          "ref": "30a1f121-6e87-43e7-8d9c-f14e2fda1ad1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2f1dd06a-4275-4059-839a-8dbad20e75f0"
        },
        "item": {
          "id": "97c87651-3a7f-4081-995c-e88e3e84afa4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d79e9cac-9692-467d-beb1-0a74d0b84a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff631c8-4c83-46ac-a49d-0a6878f895fe",
        "cursor": {
          "ref": "1970cd0c-4f42-47ba-8876-62d47eb02e78",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e4f78c59-5be4-42f6-b1bb-e836a2e12b4b"
        },
        "item": {
          "id": "4ff631c8-4c83-46ac-a49d-0a6878f895fe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5418d021-ebeb-4d00-b2ef-4b8e74ee5499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad82298-2a5e-4810-8f24-a9dd9fdba52f",
        "cursor": {
          "ref": "21be1a89-9880-4388-853e-72ccfa07040d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b96c4cf0-256e-4bc8-8ca8-3d4e3e2f8d9c"
        },
        "item": {
          "id": "1ad82298-2a5e-4810-8f24-a9dd9fdba52f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "820f9d69-75cd-4525-8265-2cebe2b3b273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4f3404-6e37-46ca-9671-0a9c22333a5b",
        "cursor": {
          "ref": "c5174f70-cd1f-49b6-915c-359779b3e8a5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f6cb591f-ee56-4068-82a5-d303a1e10dd4"
        },
        "item": {
          "id": "ee4f3404-6e37-46ca-9671-0a9c22333a5b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a2c0c969-7a49-40a2-88b0-9e352e157f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1081d7fb-9669-419f-8a1e-bc00dd9bd250",
        "cursor": {
          "ref": "d73882a3-0c3f-4192-bbb0-7efbe8ecef6b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6838d686-0e7c-4c5f-84ae-f1ad7459b010"
        },
        "item": {
          "id": "1081d7fb-9669-419f-8a1e-bc00dd9bd250",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4c72c586-1c37-44bc-aa6e-a6986d0550b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a182f7-00ac-40c1-b817-294551d7e56f",
        "cursor": {
          "ref": "35d9a255-6d83-460b-b13e-6ca8deb4e33f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "412ad0c7-9246-4303-84b5-da4b5d28c11e"
        },
        "item": {
          "id": "c7a182f7-00ac-40c1-b817-294551d7e56f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "24bb550a-ed38-499b-b933-9799d83f0679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4698e0f3-5595-4864-9bf7-5c673875c73e",
        "cursor": {
          "ref": "3fa4eafe-20cc-44df-bbfa-0264fe8de408",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bc1d174b-8df5-446b-ba66-c47f21a85ec6"
        },
        "item": {
          "id": "4698e0f3-5595-4864-9bf7-5c673875c73e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "415e703b-3d56-4793-8a51-94bccb697a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae03064-1cd0-432e-bf4b-036d7b0e0213",
        "cursor": {
          "ref": "c43279d6-a53e-4bcc-972a-3bd7d49d5633",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9319ec8b-7d69-4862-afe2-5f186753b85b"
        },
        "item": {
          "id": "aae03064-1cd0-432e-bf4b-036d7b0e0213",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "17d187ef-4236-4a43-bfe4-39c5502bb40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ddda92-6927-4534-ae35-7096e39d275b",
        "cursor": {
          "ref": "3765d3d7-157f-4084-bbca-8a9ea39ee7ba",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9cf47913-febd-410f-ad39-64fe74c2c9a7"
        },
        "item": {
          "id": "33ddda92-6927-4534-ae35-7096e39d275b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ad38820-6ccd-475d-a065-27abb9d707be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13712a6c-2ec2-4130-858a-2622498ad170",
        "cursor": {
          "ref": "7c68de36-2719-4bf7-8089-7e8503a8a7ba",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5780beaa-0e5f-4c77-817c-0badda867ba9"
        },
        "item": {
          "id": "13712a6c-2ec2-4130-858a-2622498ad170",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "61cfdb56-4ad4-41fa-a252-e275fbf70064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ca2db4-f189-4ede-9406-9f3445292667",
        "cursor": {
          "ref": "60884570-900a-49b8-b1c8-104fbf2e1ccb",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "da8e1620-10ec-4bb7-89fd-19ce3ed7173c"
        },
        "item": {
          "id": "47ca2db4-f189-4ede-9406-9f3445292667",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f253f1f-8ef4-4fa3-a46f-fd5d2eb0a25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0178d9-1757-4f1d-b7ff-a8fe4ab2091d",
        "cursor": {
          "ref": "0ad9dc76-c613-43d9-ae6a-e73f8c975f5e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4dd2e548-773b-47f3-8701-092d16afb9ad"
        },
        "item": {
          "id": "cf0178d9-1757-4f1d-b7ff-a8fe4ab2091d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0acec5a9-02ef-4910-a6f1-85f47a507f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e780dd00-a20e-4a10-ae80-94e19299f462",
        "cursor": {
          "ref": "469e8465-e56f-4a0b-ac35-c0d0f1035be7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "be984772-dfb8-4a70-ab41-0cfcfb62935d"
        },
        "item": {
          "id": "e780dd00-a20e-4a10-ae80-94e19299f462",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "833f1951-7c0f-456f-b99d-494f20086be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d4b3ea-e46a-48e8-910e-645495fbf2b1",
        "cursor": {
          "ref": "abda8528-3396-4b5d-8741-32951b7335f2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "18f10e0a-1df2-4744-a86e-f95114978721"
        },
        "item": {
          "id": "d2d4b3ea-e46a-48e8-910e-645495fbf2b1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "09cf6367-666b-4e15-96d8-50025462c5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfdfe97-2376-474b-a2b3-20095cebf007",
        "cursor": {
          "ref": "9b7adde0-93eb-40a4-881b-fab1f73ca240",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d1fbf9a8-def8-49c6-8068-cf43204ec4ba"
        },
        "item": {
          "id": "0cfdfe97-2376-474b-a2b3-20095cebf007",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "795073d1-0422-48b4-a276-06f29d32830c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c203f5bd-f7cf-4c97-a6c8-4571c387dda9",
        "cursor": {
          "ref": "1abc39a9-1e0e-407a-8e86-6a8cbd859000",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f29d924a-372e-4676-8d66-9e12e69f4a48"
        },
        "item": {
          "id": "c203f5bd-f7cf-4c97-a6c8-4571c387dda9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "543816c6-3cfe-4f4f-b258-1f1de74e4a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7afe3-074c-47c1-b3eb-dc452d73ddc5",
        "cursor": {
          "ref": "4dd36765-8c00-4521-aa17-074d51d363d8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fcecf432-40f1-42be-bd48-f6d52e4506b9"
        },
        "item": {
          "id": "feb7afe3-074c-47c1-b3eb-dc452d73ddc5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2fe2dde9-b110-4dde-af43-6b8c26cd502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacb9a4f-555e-48d7-be58-3d852caeb7f6",
        "cursor": {
          "ref": "d0cc845e-94e8-4378-b972-1c355ebdd3e3",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "295738a0-56f6-41cc-b7e6-976ec3ef29a2"
        },
        "item": {
          "id": "aacb9a4f-555e-48d7-be58-3d852caeb7f6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1d620a79-1704-48c2-887c-d22ab77fa165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc859f2-986c-4c80-a298-181403440a0d",
        "cursor": {
          "ref": "aceaccc9-4542-4ce3-8aaf-422c69f5417f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ee79a13c-002e-45e4-be92-620aa0e39134"
        },
        "item": {
          "id": "9fc859f2-986c-4c80-a298-181403440a0d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bfc1b2ed-cf2d-4db4-8ccf-9e511282ebba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73e9fc1-b522-4054-8916-7d7257ee8b44",
        "cursor": {
          "ref": "d8b21ef0-ad14-491a-acbc-98ffbce9cf13",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "22864830-11a0-4747-8b4f-4148710c9fc3"
        },
        "item": {
          "id": "b73e9fc1-b522-4054-8916-7d7257ee8b44",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "23e30a76-1ee4-43b7-b60d-a965b7efcbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a710a5-e93a-42e3-8648-01d3c50516e2",
        "cursor": {
          "ref": "bf8afc74-327c-475a-b1f2-604eb0943a9c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "46d5cc23-cb84-4259-9d61-ccb3cdc1608c"
        },
        "item": {
          "id": "67a710a5-e93a-42e3-8648-01d3c50516e2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "64bb8c97-ee96-4efe-b431-b6bd1c608ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6bf61-6fbe-4880-ad9b-16ea2c3dc480",
        "cursor": {
          "ref": "15b16b6b-b682-4472-bf41-80a3cf5273f7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "349e0412-b47b-4692-b392-81f4767a73ae"
        },
        "item": {
          "id": "19a6bf61-6fbe-4880-ad9b-16ea2c3dc480",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "25fd6088-8d2b-43a6-9bb4-9fb8e8c628ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac679fe9-0266-41f6-a88f-06b72ee23d54",
        "cursor": {
          "ref": "23e98602-283d-435b-bc2d-e9823907ac87",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "df9968b4-ae9c-4189-989b-6a5bfa9ff79b"
        },
        "item": {
          "id": "ac679fe9-0266-41f6-a88f-06b72ee23d54",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "92581133-2228-457f-8902-ddc7220013b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c813f202-e148-466b-84ab-8a0aeac913aa",
        "cursor": {
          "ref": "f7567e24-a768-4402-b73c-514463ff96d5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c6a0ef3f-0b6d-4b6d-a3af-c896ce1d9e24"
        },
        "item": {
          "id": "c813f202-e148-466b-84ab-8a0aeac913aa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "50cd923f-03cd-49d4-b339-c7ec5deb2837",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00122f8-505f-463e-93aa-ab9dd4f4ceb4",
        "cursor": {
          "ref": "83bcb43d-a97d-4ce3-9b89-0114a2749ecb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6e1fa16c-7de7-4d20-8e3f-dd291a266ab7"
        },
        "item": {
          "id": "c00122f8-505f-463e-93aa-ab9dd4f4ceb4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99a1fb60-4e6f-42a8-be8c-a2528d910c9a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a72d1ec-89a5-4486-a41b-a6d5398f3f53",
        "cursor": {
          "ref": "c241cc70-b245-47cd-8862-082bfbca697f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a4aa02b9-9cfc-481a-9f79-419db4473294"
        },
        "item": {
          "id": "7a72d1ec-89a5-4486-a41b-a6d5398f3f53",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7fef6e6c-fba6-4534-a555-bdd137634568",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7816eb-c246-4fa0-9864-6cf18ede3427",
        "cursor": {
          "ref": "922aa0b1-7ad2-4c71-aeb3-248bca517e25",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "85702e5c-4a26-47c1-b2e9-9ca8e504b4fb"
        },
        "item": {
          "id": "3d7816eb-c246-4fa0-9864-6cf18ede3427",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "67d4cdca-9e39-4397-8e1e-ba2a0cd3954e",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87398fa-d25e-455a-af27-a54bdf552188",
        "cursor": {
          "ref": "feaeb5f1-c6ee-420c-8964-da82375b2b56",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c24b7fc-5b76-49ac-bcd8-0e0e13d4131c"
        },
        "item": {
          "id": "c87398fa-d25e-455a-af27-a54bdf552188",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2135a355-8b09-4a38-a6b2-1c56549d3975",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87398fa-d25e-455a-af27-a54bdf552188",
        "cursor": {
          "ref": "feaeb5f1-c6ee-420c-8964-da82375b2b56",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c24b7fc-5b76-49ac-bcd8-0e0e13d4131c"
        },
        "item": {
          "id": "c87398fa-d25e-455a-af27-a54bdf552188",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2135a355-8b09-4a38-a6b2-1c56549d3975",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69300e67-4234-48dc-9ff4-42092b13a561",
        "cursor": {
          "ref": "b379e453-b781-4911-a0a2-3f8b717ddc38",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "816c01ec-f218-44e0-96fa-adcaf4d651eb"
        },
        "item": {
          "id": "69300e67-4234-48dc-9ff4-42092b13a561",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "be599e10-1ebf-44a1-8af6-7a27a49b08e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32228d6d-760d-45b8-84ae-8e4291a1b6ce",
        "cursor": {
          "ref": "43cebc76-12af-41f5-bb03-3e9b04919df7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1499183e-3ad5-47c2-893c-63886d3d7d1d"
        },
        "item": {
          "id": "32228d6d-760d-45b8-84ae-8e4291a1b6ce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "da62364b-cc15-4676-a4d1-5547db923b03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}