{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7917b916-a739-4f6d-a097-ff66730bd28a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "abe134c3-158d-434b-a6bd-55f80dac989a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b557f55-7e08-4b1f-a31f-de67437f996b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc955c9a-46b4-488a-890c-2266c4643565"
                }
              }
            ]
          },
          {
            "id": "06c9ad4b-2746-4beb-862c-19331b11f623",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "418af565-17a6-4f3d-88a7-a2ab808453d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cd870cf1-4282-4be8-b837-64c8198d4c28"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "84fa3f3f-9402-41b3-92e7-5860f7fca3b2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "478d689d-8e52-4bbf-afdf-6e903ca401c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7f8547d-58ba-44db-ae2e-08bfb0a82d82",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "169aca8a-c547-4a6f-add5-73ad5db9aa61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20bc567a-01a0-4d95-8a47-8562e07dbb46"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1db06e24-9707-427e-9f2a-56a65e1da9e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed7c6a1b-a2b4-417e-9582-5fbb084f7442"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f5e2e40-f567-48ba-a1be-4c5c00ad3176",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1deb4dde-b690-4fe7-b199-56d0931ca60b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef4e7867-83d6-49fc-9f8e-b5b7f3064636",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cdda9e8f-e51f-4384-a3b1-716551dba369"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b2c4972-ed66-4a6c-bbd8-bf39b3001dc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b196aa3-77fb-466d-8a68-afc61fe5ca1d"
            }
          }
        ]
      },
      {
        "id": "a5485a1e-95ae-4a65-827c-7c5be4460009",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "716c7095-df0d-4ac2-9436-ae40a2c8abbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e84d0276-d61d-4be6-b660-90754519f9f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7962bc33-479b-4581-834f-4b48804209f7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6ea2c6-acfa-465e-a6d8-08b6e2e1afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07b298a0-4e19-4257-b0a7-63ee12491098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0e6a97-4668-4e2d-b6f4-5d408cce074d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c63a871-9c46-4965-8a47-9d54e3427b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2ba7cd4-ac22-40b0-87ef-000b3b9b67d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c31dac5-7d5c-40c9-b7e4-b1583f20ac0b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c819d4-3bc4-4855-ac94-b482c7913c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "728bf416-1203-49cc-ada9-96a72d7b9f49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "225a5316-c191-4d41-966a-c5ad1524961f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a50a173e-9f15-491e-9c08-c5f526e94018",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368ae5e1-2e0f-4dff-9ba5-bb2939f21464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2752204-e88e-4b80-b1b6-27525c84d4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23ffe2-8480-499f-a9b4-2097c1c13dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b1a577-0f9d-4426-a869-cd24d7dc26cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "70fe0ed6-6bc1-4d6c-9c5f-71ccd07de039",
            "name": "Positive Testing",
            "item": [
              {
                "id": "826df146-f3dd-4588-b664-52bd80a23141",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85055d4b-3861-4cf2-b76f-90d997038416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bf55aca9-1206-4195-8076-32e215f2f16b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbbbf753-fdea-421f-b307-62fad0f1bb87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c862cf35-0cfa-4a91-8232-e9ee6711c4d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dfe58b3-24d6-49e1-9947-f91fb70d0619",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8169c272-6e4e-46c0-838f-77959a25b257"
            }
          }
        ]
      },
      {
        "id": "5a687613-c7ec-4633-8cb4-75281960c5b9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aed304eb-71df-4ede-983d-f372eb557865",
            "name": "Negative Testing",
            "item": [
              {
                "id": "321ccdd0-209c-4925-b6b8-fa060e593232",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac4aaac5-ee26-41b2-a3af-7ccc92fed66f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8bc60-8839-43ee-a936-24cfbe7ba7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f51ede5-a24e-4c5d-bd90-f66e69a30b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca95ecf-151c-42e3-be8c-047f4a9f07cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcdacb80-518e-4c4b-848d-b7d2fa996968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f7836-b224-49f0-a631-93d465706d80",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfb0b5e-973c-42ab-aa01-64895af71924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a35d86e-9d9c-4c4e-8dd6-cdd3ea0a2412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88184627-eed9-47e2-b2cb-3dedd910a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2685e75e-3834-44fc-9ca9-bcb76990ad9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d43dd7d-c043-4174-b93b-0465ce4ba937",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9a7f8a-1b0b-4d1d-b2d4-c014b8495ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b654e9c0-6f59-41f4-8fb6-13b2a3c095d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ef38ea-21bc-4658-99b1-4bb8b5c42ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b56e0527-5aed-41a5-a752-61f2b27b0930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a2c409-fe8f-4fc2-9dd7-ec1715342671",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1491be2-7543-4de6-98a7-ab9ae3de7a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60c1319-d226-43de-b4b7-62f8ee068663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2689750e-c447-4d5e-b903-e6fa60221266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "901950f1-7a78-495b-b333-9a868bf2b5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85c58fd-00d3-46cb-8f19-2138d4df9ce1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd69dc2-d224-4092-a053-d0acf088b026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3defc575-9808-4116-9f77-a14ec38b617d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eb9f57-cab6-457b-90ac-0d4a555d80d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa775b8c-651d-43ee-be92-9e4f445aa24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdbcac3-6f4d-423c-a56a-6b943c5925d1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdfe179-c9fb-482b-92f8-f6e9a7b99988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fc9253-327a-40cb-8fb7-0bf818e8dda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d67742-c8cc-44d9-bbff-734f8aec287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6324fc56-1c88-4f62-b109-6032370c7599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c026fb83-c702-49f1-aa57-c7c273ee003e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddb7ce5-0903-4d33-b18b-7508258e84a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffeb0725-13e7-4e86-94ac-849acad3d42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e92b1ef-0ebd-4e0f-ac52-e9bc6594cf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cc4e95c-6e42-411e-be08-05e9f9a0b96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1d74b9-c8ec-4af5-8e96-e652adeeec55",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61adb87a-3ad2-4634-b669-4b71d555d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73685572-e91e-463e-b82a-5e3fb217a02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390d8381-883c-43dc-a178-beabf8f3ddee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e570b67f-9eff-4217-8257-a77e3af47093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418497d0-46ba-456d-bf9b-8473c511b3f4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d06f9-6d5c-4635-a170-2b5688747e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863fa106-3ed5-4ecc-a729-c74cb673e0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4e0f08-c0e6-471b-9a87-0ff3140a7339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "688028f9-7a6b-4161-aaa7-c9a534aa97e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7411edc-0bf7-4e15-a833-be050fa52358",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc422f8a-64a1-4387-a306-b25bc28c824b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d9ecfd-e9dc-49cd-b758-e40af97eca99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296356d6-4a1b-42ba-8d49-050c690abf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf73e64d-057a-4a1a-a462-baed68881907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba08aca0-024f-496e-8bfb-02738c4dc67f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3900d7a-d6ba-450f-93c6-048fd08507bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0652dd-89f2-4c3b-9418-4e275faad2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bd567c-2161-443e-91b1-78f52e1082e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e30ca48-445e-4023-8ca2-2ac38187f6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4614af2-1f85-484a-adf9-d6d0bcbe1ccf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b992bc3-6f14-4c94-b46c-ab664161a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5d6bdf-32d0-4cc6-b1a8-ba051e2504e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3035e7-c596-439d-a740-46b1a5ecb3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0807e6-a9c3-4b26-b4ae-a2cb6a59acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2667d12-a490-49f8-8454-b09ba4738aa9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b511f8-6fb8-4b2d-94eb-74d474b49384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2339b45f-2f2c-4c77-a84e-83696feecb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c26364-feaf-4dc9-9e90-c5d9b0127774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0931290-49a2-4258-aba6-6912d794ee2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d69e3d-4710-40b7-9402-67275de03988",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b4f6b0-2710-46b1-a99f-bdbe5d293fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a7c9b-de95-4387-856c-986a47436053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1491a89d-8537-4adc-b342-a2fe4d05c281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0242bcd-d7de-4f7a-baee-da12ecdfb26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9dc889-17b7-488c-ac56-b69498f522f7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470ed878-5d16-4df1-8895-a5d31562e95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6025cd-12cc-4459-908c-3f04f7f7375f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff9eccd-1ec2-4cea-9db5-525af2b0e863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69037e32-00dd-4d8f-90ef-6d220e7a131b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ada0ee3-b13a-45cf-aea8-dca6ae3e9bea",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930b7965-bbcf-4d0e-b179-1c0cd1857f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1383dac4-b2e3-47af-8f9c-6a678a855b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd8d15f-5022-4036-aa3b-c6051bae8383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa6504a-238a-4e24-b18b-7f9d1e80606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6457227b-85dd-4b00-a12e-f6ff2e44624b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd6dfb1-86fa-48f4-854e-f6d74f5ccec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006d2eaa-47b3-4bfc-9e61-43b5802edd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1589d4b-ff3f-4606-beeb-46a5de9a6309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05914fb0-583d-441d-953e-03c0f7f87c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00866a14-59d9-441e-8b9c-eea3e32e35ac",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c28e4c4-cc10-424c-b886-23af512532cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2970dc-f552-4847-b859-34849c31263f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa88312-0c66-45c4-bfea-3d99a0dea01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9869aea-80c0-497e-8052-e6c642e52d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab58d1a-704f-40a9-8641-fdae7c7d8f69",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb165fd-9c82-4408-b27b-8eb52b6f60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855f7075-048e-4ebc-b33c-4d32c5fd49b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf241f-725c-46d9-b746-579fa4e0622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "539f85e9-c174-43d8-8984-507113b9048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb33dd-c138-487c-afd0-3f56f552e283",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedbf0ce-b53d-434c-b158-5db0263b4eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552c03a4-d69e-4981-a92c-1e6426eb6ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc49cf6-2d80-45aa-905b-f71feca8b3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f2fe97-8e6a-470c-a54b-3bfd9d2a9c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3c6a0b-1ed8-4288-b516-be37a29468d4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f024f8f6-af72-4128-9fe4-3c677bef2d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde10221-0f75-48e0-9439-59c667fbf8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28607144-9946-4936-91f5-b1e5fe0fe801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd13dbfb-a6ed-4632-9c17-fda3f3d06470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e883c3-2963-43a8-9bb1-15fec505fb48",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542aa8cc-18af-495d-88fb-47661e641012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a2a9e3-036d-44a4-8d31-581decb6d146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a1eb87-0c30-47da-af68-ea31e602c898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35689b31-c0a9-4f64-91b6-8de99e8c0d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67f3cda-09a2-4bc5-b6c1-f1036f23ba6d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b913c0-9d93-446e-a275-78f52a4a146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75af06ac-04ef-4fc1-bb4a-98e672ab1cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cddd4fa-3dda-4310-a884-33ef57309a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2fc87d-9ee4-4976-97da-375253ed740c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450ca719-fdc9-4b1c-9882-4b54ccc1eded",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f85b26f-9214-4a84-b0db-47d069d38258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56100c9a-becc-4732-9457-35016afa773e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901fb42c-711d-4034-8f74-87760d591dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7a11ce-ff5b-48a9-956c-98940b2ded05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1832d020-9b15-41cc-bd64-aaeaba169acb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcdb844-7c2f-4f8f-8078-0230efad183d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c594778-649f-4071-8a84-b0d178fb2afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e750b084-b3b8-4832-93a7-11ecb5521856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94fd699f-7609-45f1-8027-fdb674f746ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61bcaa5-5fb0-4a48-9842-ef21bb8ce8f5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a82658-9c8c-4707-a312-d8e606a43809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34974cf9-5af3-435f-84d6-9a4c257e8e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007d8a2f-1c2e-4dd1-96ab-855ad686201e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e72ec5-b089-481d-b63c-8b5c12366736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f05a6d-b822-44a7-8885-b160b1423855",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41d972c-5a63-4b79-8864-5a2b93da3431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dbf6fd-6e34-42d6-a882-5a5b3920a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626b476c-1b72-4581-b717-c155be30575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d76752-3152-4e1b-901f-308484c5c60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100a6e42-c209-40cc-b575-70f92c707595",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c3509-b63b-46ea-b762-53d8f973c69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca792d3-f639-4878-931c-fc4ae691d98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a0ec5c-2970-4a35-8080-cf4cec2a669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe01361-b34f-4a98-bd67-56347228b43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0949756a-9623-47fe-a0fe-ed2c3b409905",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867a8ab8-d649-48ed-860c-67d417aaeef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37740293-19ed-45fa-8997-0dbb1712b4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67773e45-b76a-4a87-b7b9-328db641883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ab6967-c343-4f22-8113-756c50c069e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96c50d7-d8bc-4b91-9b38-1e453f3531b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a341179a-4846-42f3-85a2-6f47f1ac5bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf432a6-f679-43b0-87e0-6e6f08f33c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1bb0e8-ce10-4125-88e1-4a1a0683e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "98665043-6931-44f8-9116-ea77f5afab0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d903f6b-a27a-4e14-91fb-b9bec5544868",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622a0117-904c-468f-adf0-7a0c9f0b3413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fa92a7-c8ba-4a38-aec7-9926a11d10e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470305d1-d78b-4f97-bc94-f80ce57aa32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40e71c3-6f95-4c7c-86ff-90dce7dfb9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfdb563-64d5-4eaa-bc24-5554e5866ebf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6799fd25-5e00-45fd-af68-028fb9e1f29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c60f29-184f-4ec5-8ac6-79f06dc5b7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb2693-8fa8-465f-b059-d26c65c486cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14650377-aa37-4354-8a2f-2865c6afddda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30981e73-34ef-4a6c-8743-f5c98a3b1eb8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e75b81-1d36-4d61-8d72-6bbe7e0aeeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee36bb3-4cc4-4255-80b5-250ec9ce766b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65af2cf6-cf59-42b9-bf0c-473210546ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbced5e3-b4e0-4062-8e27-123a79c28c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2401683b-9970-4d76-a32b-49d001c0a6ce",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c152c4-8f35-4891-9e49-41fcad4b06f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6675d8ea-a28c-4a81-a02f-6cb099c21aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66eed5-9901-4e86-8959-31f9a28b2fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422394dd-3cd7-4852-80fb-4cbdd992cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fd7e27-0ce8-412a-8fa3-4e2def7bdd81",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700bad3-89a7-4cac-8726-7c4416f0bdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83e397b-ffde-4785-8368-2c25e49daf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a4a3ba-b454-43eb-9509-a5ba010a4bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "76a76f65-8aac-4b9a-a684-e6af82d8a1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7db44fa-604a-4550-ac31-f17bea018c1c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d18cda8-cd31-443b-a39e-ad6d46c1c681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52d9e116-b897-4d16-af7b-5e0a3c83198d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d27c42f-ccb3-4c52-8ae0-f0e3c54b9d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40b4c96f-64c1-45a0-8051-027cc8494623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e2246-ab34-4dd4-8c4f-8c509abea931",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5e610-d19b-4de1-9c2d-111fc3fe8743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbdc567-c724-462a-afdc-7cc76fcc1eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da21c8a-f1da-4841-8e14-7bf6dd552b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "550b3359-f615-4572-9c45-cdaf352b6943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f6ae0a-4739-405d-8da7-466407505d28",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67626e43-4d87-49d6-9829-5e89b4f22395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46b7695-c4ae-4950-ac9b-ee769c6bf536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf9bbf7-66c4-4c76-ad88-15cbbc5734ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a1a754-a1bb-490d-bd4a-a56828a9d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5e6c4c-7c27-4690-a1b5-67ec049907fc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e284e86c-75f7-495a-b936-b0b8ad910dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded748e6-1359-4132-b398-1ead333f4258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afe700b-b3dc-4f7c-b319-1337d800de5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd968cb-e247-4176-ac73-7ff60f909034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413e2bdd-535f-4324-a062-64805d857822",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae39c2f7-cd01-4222-adec-601428504aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47d4948-073f-45bd-bbf9-dd840a7d7cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12fcf28-46e7-4797-84d2-ede9a6bdc39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c54e6dba-3f51-410a-9d9b-5f8b770aac4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15721a9c-e4f0-4fee-b58f-dc7e5cf81e30",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d0d09-2a36-41cc-84fb-9d1826b1fa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20208eb3-a9da-4c59-b420-6d73f6dcd430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462d384f-313e-4ce4-ab5a-e8db4d40493f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35a0ace1-1f70-4471-bd71-97d7bb6ba722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13f7ef7-464e-4693-84e1-681119c004f2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7609b06-fd42-458a-92b2-20d979d1e684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3856f32e-e7af-4b96-99df-da6818375c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f72e22-32cf-4d27-940a-23dc525e8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7676b9-2858-472d-a948-b66a4c8610f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bee724-40e2-481d-a316-294baa0572b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257f1ea3-98dd-4485-8069-605697eb6fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575de58d-3a03-4d18-a4ab-b1b8f08263bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f9071-8a66-4643-9ae3-5a6b36f3a95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df90526-2bd3-421c-be10-8f8465af2a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de34be-a17d-4c4e-afad-34b51171a358",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699bb049-0494-4df9-bdb3-dfcbb71c207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10df9ba-422a-4f2b-954e-771fa401a451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4700049-af8d-4ee4-ad92-2d5b5c6e3494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f4ef2d-67fa-4f9a-92d1-6ca63fffd694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc4a0a-6296-41ce-a87f-f7489f361f16",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04be6469-d90b-4c41-aad8-8dac82166184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993b030d-7992-473f-9fbb-0c3ca17c878f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a064ca-ceb1-43f9-863c-17b5217b7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "003ebf53-6878-428d-a569-a57488f4b11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056f5c8a-49f0-48e9-95a9-3ecb0d0d76c3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fe754a-42a6-48a5-b866-819c4e39fdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2a234f-1e19-4285-a037-cdbb17bd4875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6326392f-462d-4457-84d4-c77295b92aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d1de38-866a-426c-a697-9ab501600eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d8cf1-730c-4fe3-ac1a-c3494362ca0d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c969858-f011-4912-8394-7d6417e23a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e92ce09-0075-4f8f-93bc-5f1aa363afa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e939a9ab-1afe-4812-9614-c4107029c304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5d2963-3a9c-4a74-9654-87a3365af5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bec169-8c3c-483a-96f0-e64a3e06401b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783e12b4-1c8c-4435-b523-2a3f9dcc672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36e4c6f-9460-4846-b30c-e7cafb303649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c21bdf1-a642-4110-98e9-6f6c26b38acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc87889-3677-45d5-bb33-22fbcd5a7d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dca898-c3d2-4d8b-9fcf-4a2487520964",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40defc4f-6b6b-4561-8c2d-d26644cdd237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862b1860-853c-4ba5-958d-b9cf4b19d6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb4862f-6d97-47f8-8631-3508fcc86e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "837a3900-a04e-4d1b-8366-f86293c25b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554c5913-2ad1-4222-8d6e-1a849dc0139c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588c4ca1-0a93-4eea-ac45-db8d60f5d569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7343393a-d441-4617-9129-b51d114bcc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1250bf-e480-4e71-83e9-0dd96596adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e08fbc9c-b61d-43ca-9a5c-19fe3d5b061c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8de25d-5773-4f84-85fb-d9f8a63fc785",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff72325-0109-4884-8b9d-ffae96e165ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0317c68-2b8d-43c4-8960-82d3463a4c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ddb0ff-2c5d-4147-90da-528c219b9bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ad265a-3b54-47c7-a8c3-a026165948dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf06f5b-1153-4648-bb5b-d6e888b999e6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d18154-4e23-44bb-9b99-7acc503140c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f993a2-a833-40d4-9106-c1dbc428a410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5098426a-46d5-4565-84ed-f26e198795a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e75152-ed9b-410f-850f-1aae734eb53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323cb006-ce43-4827-8d6e-f6a29d83406e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13368108-367c-4c2e-8788-0060c92a2833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04027af4-b623-49f6-9173-5aedfc61bbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e827ac9c-554f-448c-a916-54b4face8ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e820512c-4ab7-4d91-b221-236ebdd01eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea8a045-d19a-47cb-a9c3-e1be52ba8b84",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469c8ee1-e18a-4b2d-94d7-f7b36d34145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ca3f3-14c9-4d64-986a-9f485e82cf93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a833641b-38ab-4f3d-9c45-5f0336231aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddf67b1-a622-42f3-ae60-dfd30172275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af028c33-af42-42f5-b80a-24be14ed3a00",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e4496b-46dc-46c5-bd49-d0182e52690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb1b3ef-a781-4107-8098-ffcab83c2741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1251e1-e223-4862-984c-5836096b144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba189a01-4fd1-498e-89cb-a5280a1f260c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212874db-2d72-4a10-8e9d-699e4f40773c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1fda41-ca64-4c32-b698-fd38f60c4b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33084f97-295c-49e9-bada-f36a54fe9852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1921dc-d02b-427b-8420-78263a5b44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "387f7017-017d-426e-b0bf-407949218ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf5f91b-d9af-49d6-9848-0295a621c07e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a656dc2-2e02-4ec7-84ed-1b53311d3309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56240b8b-1ccf-4cca-b8a1-926c3317b068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c3f658-1836-44ae-bde1-42970c6bada0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57c85e08-0a8a-4bb4-8aaf-fb4f5fa09986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf609f35-12aa-42f7-a037-fecd5e385527",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987cc8e3-4e21-4f63-a765-4da081add1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c86d6b2-1211-4de3-8539-91361765e57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2714d6-c588-42b4-b890-24167eb6e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "646ac4ab-12da-4364-8202-48359ffeb26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be50c8e-75e4-4679-968d-1558f5d1ed65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df221207-854e-4fee-b8d1-2fa5806b8e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7ce43a-8acf-4150-8b5c-6c0647ec29fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0225419c-3cd4-4e8a-8de3-003d5c81b7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a39dc1b6-b261-4241-9efd-87aaabd3d81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447ff4c4-cb42-4d49-8133-feee1684a64d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1330c681-d9fc-4814-af35-31aa5243efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb06fc0-659a-4a4d-a7ea-255c109964c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c9fedf-9b72-4815-958b-839176c8746d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b36794d-8251-4fee-8107-f54af15e5774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d67553b-cff4-4281-98d6-999ec4364343",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f135372-70a9-4059-bcdf-9c98865b7ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3fe389-f103-461c-817c-7acc16f8efaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3a87c7-8725-40b9-8859-200e03d00b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f16da4-f57e-453a-8467-9a7ce561ed68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbb841b-15e2-4b86-a06a-74946276ff7b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c6d7a5-82bf-43be-b018-d4a3bb35b378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7bf733-55f3-4d31-935a-1f52bdc066c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd054986-6107-48af-aa91-35a13c453339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b73fd509-63e8-48ad-87be-40e659902dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ba480b-7685-427d-a280-311a6a75b1b5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c1d891-4169-41d1-9082-6048ed274efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ac1e9f-92bf-4940-96df-c8c814caef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b90bb-9241-42a3-a0fe-c040dece678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9bac09-377e-493c-b661-ca3d6ec270c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d9ea15-9f40-45e3-bbfb-04603ebcbda9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f68164-832e-439a-8b72-c2076fda0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34be3356-2351-463b-8295-26ace36922a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2001c7-6d28-4cff-b479-a8048c887d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0093f7-d34f-4777-815e-771de9373373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f103225-7d0d-4c3c-ac36-3f6b000bffe7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ab7429-2d08-4c16-9e2b-0ba7dc2b81cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d4f37d-67c6-40b6-9871-51bb3c63d476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce564a70-f481-471d-bb48-a57d8d2e2333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "892021c3-5e99-4a35-bb4a-254baa16488d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaa617e-6919-4869-b3b4-ad1d523ab5be",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fb25ed-4a4f-4d4c-aff9-c16523a268ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec37124d-05d0-4069-b8bd-4b3e87594017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c7175-a4a1-4169-bbcd-bb7fb401363b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d7cec6-2951-41aa-80f8-d77126d95580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09100f44-c563-401f-9177-24d3af62b363",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0ef48a-6e6d-4b43-a538-901ab0b449b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963cef0f-2ac4-46a5-9dbd-9fd962ccad70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b5820-e141-4c8f-be63-3a0e10fbe8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "986ce68c-fb45-4566-a791-98850f0149a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5690172c-edf1-44c7-bacb-41bdfbcac4fd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62f85da-1846-4cd6-99d5-581068effcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc6c02b-63f5-4d86-9e55-166fb0f4e6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861201f5-31ca-44c9-97bc-625d43623be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc227122-92d3-44ca-8c7a-98a9ad7cd9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653abf48-3a48-42b2-8fb6-ea6577904df8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c6004d-b5e7-478c-9e9a-7443404d25ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d69cbcd-6785-4ee1-8641-d1c9ca17c2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106404cf-a084-49f7-9902-0f99a4321142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b06683-ddcd-4e93-a5e9-56adaebd9793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fac8ca-acef-45a7-8b93-a59ac8e17529",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3ec788-956a-4a35-920a-29dac0c52091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8521eaf-19f6-4188-aee4-adf37f469c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8198e9bd-cd09-497c-b02d-792c1657390d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86177b4-c608-4c71-b9ae-d9857b21fa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37072e1f-0b97-43c5-80b5-cf8b2d88b77b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4613ca62-d6ca-4b4c-80dd-d59367e40b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beb2c1e-aa5b-4d5f-aa8b-8b7f7dcb24b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840581d0-ba94-4df3-a904-416293346032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "529346ae-6a3d-4b0c-8bb1-f5f6aaee43ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053bbbe2-ad64-4394-9c99-5cf877d47793",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e107b85a-550c-4d62-b308-192e6a473535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d3bbb6-0085-45f7-a39f-4e5f6187aec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d6014a-9c2e-4171-9757-551567d865a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d29c31-49a9-4745-ba04-a79bc41e74f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ad64b-8c06-44fc-a59e-c2e408e8d1e2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838bb238-26aa-41c8-873b-2b7b247079c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad21a8c-e1ae-4433-9e05-2c114551b19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de58b24-cf5c-4fed-a88e-6aaecc0e8212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69aff05-cd38-4e8e-8139-eb65a6020640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae98269-fc4e-4ee6-a05b-5bf521401dec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bbd4c8-19f1-4d04-a9f7-a77f0affa81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd337788-1346-425f-ae43-3a919d17312f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7cb1b9-904e-486e-aef2-3c0bb49d9dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b4ab18-e50b-498c-9e32-68cbcc639f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c037f0b-7ac4-446f-9d49-9fc460138e61",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7587ed-11fd-4b6d-b692-7d8c73cae07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f73f2b9-ae59-40da-ad9b-0ce575ac159a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f30cbfd-6eba-4b7b-8fb2-1a1d7b9e7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "040141a7-5065-4afe-9b39-bd740baa82a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37bf65b-58fd-4fcf-a6c6-4573a85d2ecc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933969b2-0d5f-4ff4-8cda-602c24f0d16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb1a653-7105-40a4-b7c9-a016b1d3194f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4655b8bd-708e-408a-b19c-ba994bc2be97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcddfb5-1a68-40fb-b5c3-aafa08823e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e06913-c430-4043-a2a7-812cc2f7c22c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb73213-29a4-47df-a35a-69a3ba0ebcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7127d0e4-a153-4c9c-b972-ae059f3a0d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187c76d6-16bb-4026-be13-b8cefce53535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c240cff-6a2b-4caf-b7a1-34e6c7214bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860d6cb8-3e70-4ea3-834c-0bd29ef23667",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da65e61-7963-4f7a-ab9b-56e2b8218a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c2874e-9643-4f36-9cd4-bb9dca6b2207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441f29d9-03cb-4064-83f6-a772114daafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf50c38-bdee-4b3f-9ff0-7cb8a09ce044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e10bd15-11f3-4e86-8ba1-202d84a1db11",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d50c3c-a82a-4bf0-9261-7adcedf456aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634589ac-aaec-4368-b874-79bad4a8336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766ec8df-896e-4df3-ab47-6ea5a6ff8785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a6b181-d4ca-4829-85ce-5d1d5104852f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9400b1c3-44cc-4036-87bc-1ec6f3b9dfab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51067c20-82ff-4316-b8bc-7f9473b2bd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8678c84c-22b8-46ed-85b3-b5a3c634d456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ac6416-a787-4b63-84b1-0bd572b6428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa244cd-c7bc-4e18-869e-6f63f3bec2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757783e2-39db-4782-8560-1d7e7d3226c6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307c5e3c-35d0-498d-ad92-834db29d9851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5054d96f-7274-4a9b-920d-10c111e20305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b804d5-e46e-4ad9-af48-c537edcdc2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37668059-aa8c-4381-8280-269d686dff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253c747d-4693-4689-84fa-7d0f48bc89b2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1001875f-3070-4806-96b3-e568a561338e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dd7340-7a74-4d71-beff-d6bd4e47cd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b856caf-aa1a-4a40-ad14-527a67560c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfeeec87-e470-4705-bc8b-23de9bbe39e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bb1996-c59f-428f-88a7-c58c7fb8c70b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5dcac0-49c6-413e-bf25-586eb1a70d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e1425d-79cb-49cd-899e-7994bbf2437c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa245575-eca2-473f-97d2-8c60064abad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f97795-256e-49b8-8b05-5844f7e45093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e09326d-d4ae-4bf6-b3ad-883e8e105685",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fd8ca7-b1a9-4713-8113-67d5d28b32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7998fe-8ef3-4deb-a9e2-963a9fc2332f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152ab0b3-72a0-43dc-997f-33ff5f5c0afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9edc868-a331-4b7f-abeb-6a6e94fb325f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d7927e-16d4-4578-8951-ede9aa7ea363",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a14edf-0703-4fb5-be47-f2c86728319f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d17cec8-bea6-43dc-8b98-9e259f4551c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab49701-b7f2-42e6-a339-219f8fe0be17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76f99ce8-5531-4f53-a70c-fea836d656c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6377f38a-1c11-4959-9971-c5afb7e3ebe5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07057ea-92ac-4179-b112-f0d1699a9322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589bdc5f-0df8-4c33-ba6f-77ab00a29a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ff3aba-2c72-4ab4-9335-7a603e62c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e63a3ed4-35e1-47d1-b2fa-3c5e39832a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb0cc1d-b8c5-4f5b-8d97-1da7a0de13d9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60369d2-2b9c-4268-964b-44dd959d1f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3174de0-5509-46f5-88c8-234fc556c441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2fa525-1549-462d-929f-66126bc15ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce5ce45-5ad3-41c0-8bc9-2a60be020721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0d9ada-e5bf-49db-9452-e080422d10c5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0faf6a-b259-4f35-a84d-930ddeef4fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a69256-f3ed-4340-a56c-a85568612915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36097f8b-e668-4173-a3d8-87248dd6f52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c83b2f-b19d-43b9-be7f-55e72f50c8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e361498-5223-4575-817e-5dc22b25a0ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b108a-17dc-4b13-8f88-15ff97cfe19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04dc462-5a3d-4399-8dc8-8b1fd82f658d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7527f404-9759-4c43-9673-6a219b42c82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4d58e3-a952-411b-83dd-587d8a78da95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bf1f2b-c6de-419b-8872-fbc352c1a545",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c302da38-5045-4b0b-883c-ea3f132374bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f622175-25cf-4969-af5e-3fcb40be9b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e391f33-b808-4027-a9a7-bac2bd9d1b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f8b688-d2d8-4953-9f49-ea2c28e1cd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d871982-8ab2-4c6b-b12a-27ac831528ca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40341f15-62ec-4038-9ed9-90b9cdb61d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a9ef63-7085-46bc-a263-fbafa54a6042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797978aa-49c1-4e6f-99be-248b8a7338a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e557225-6623-427e-8c71-d6bb22129a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dc3ed0-0c1d-4631-9a0c-8856953aa75b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63f7262-6781-4caf-9238-2babbb86aee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "33430d33-dc12-46b2-bae4-1564ae60cc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66af8890-8d3f-41b9-9ca4-d7a91e2385f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d3a1de-5a40-4bec-ad6f-c95d8d6e4f7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba6daebb-4eca-42b9-94d0-dd717dd88ff3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b98b3e6-f11f-470f-9c70-1c3aeb9ad59c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb34fb2-bf92-43e1-992b-d512c60de606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d1d3bc6-8da4-4d5c-94b2-d9e94ab4779b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cf3d1a-fdba-4c43-9dae-8bce9a5cdfa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78bb54a1-0272-400c-8b7f-f0f0b0d2ec26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb859e6e-fbd5-4f17-aee4-841bd1663db5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a91a9c1e-5af9-472b-bc40-b2b1e8f23d22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39bcd28c-d9c9-4d8a-9523-9b9472284568",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "577bbfe9-811a-4da9-843f-76179fc38410"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13796d8d-f49a-42ea-8b91-2d7c6f481531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f45731d8-e780-478d-8fb0-ed9058795207"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f317a21f-aeae-4515-828c-db0c00a92bb2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22fd54ef-307c-4b3d-b8b4-e400351ec915"
                }
              }
            ]
          },
          {
            "id": "a72fffa8-9cd1-4ad1-bff4-ebb5408de713",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f6620b9-60f6-40eb-946c-d9bfb293ab8e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "65789211-2964-437e-8441-2fa23908a342",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14094612-ad36-4ebf-a6f6-85e65d6f88fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b209e12e-9bb5-4810-a8d4-786fe7d3e6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be7f19-812a-49f9-af8f-a9c1b10e5327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8662942e-e0b2-4ecb-ad37-fe2f17e00e9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd7569d6-08a9-47c4-bd17-fabfffa73fb5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1913a5b-f0de-44c6-9549-50c7884197f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "284ce429-2c0d-443c-97da-5b47c6e70c27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbd82b08-2ddb-4e30-86bc-9d83da952a78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb6ac6f9-9d74-4a2f-9490-7f7af3c20698"
                    }
                  }
                ]
              },
              {
                "id": "6211c172-4784-4b66-bcb9-61bf5cae10d1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ce661de-0392-4db1-b8fb-11dc6b01bcc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "878f83f2-fb10-4fdb-a667-b7491b101cf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e7178e-5ae3-4c5b-9334-15e4203f5251",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6874e299-11ab-46b9-8dec-0d8fa71c5a08"
                    }
                  }
                ]
              },
              {
                "id": "c9451ffc-1431-4595-a55f-e6ec227f0fab",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b275e2b9-108d-4a73-9f1b-049f138cfcc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c877c34-060e-4d8f-be62-81a1b783f69b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "532d1299-c28b-412c-9832-5d7613be4ec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74edb32c-04c1-4137-8436-511adf25592f"
                    }
                  }
                ]
              },
              {
                "id": "1c3542da-9427-43b4-b365-50249ca7b8cd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4134d7a9-1acc-4b9d-8a8f-f7a31b03f2e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63f3102b-6fa4-42f5-8a45-82121ee7efd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0be869c6-6d59-4a31-9737-73ae9c54cf42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "73e25898-9fb2-49c0-b482-d846daae0509"
                    }
                  }
                ]
              },
              {
                "id": "6e05ad0f-7edc-4d5e-b33e-d7f5fc4cf42d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab4ea8b2-bf0c-4a9b-bf73-c79ed834bc94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b37a709f-742a-475a-a09c-b6916a1fd49d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7a1c351-ea40-466c-89ac-d2eba7b6ac5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a3771266-10ed-406d-beb4-ab7f4aba8f14"
                    }
                  }
                ]
              },
              {
                "id": "fe64f5ec-198c-4856-89ac-a696bb33f35d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdcefc62-fa6c-4a89-895f-8b994d750313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c159701-cedd-4492-86fe-89f6acdac967"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5648988-797a-4e92-9263-00e9a224ad4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b858fd9e-a12f-43e9-8ea0-1d37e6b719b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7203d32d-03ba-4206-94fc-eebc6aa31c0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5c7d2f1-a2a8-4a1d-a5de-2f2a2ef4d1c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba93f991-c1c0-4d4a-a519-91f3acae5ab0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab17c4d8-a653-451d-87b2-d111373545c5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f271eed6-5eb3-4308-8449-e4ba2237d7c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c89aec58-6f93-40c1-b938-af88c81508c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3f06ba5-232d-4512-8e11-d72dbcd26a01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad20ba10-3776-4303-8f06-144e806636b6"
            }
          }
        ]
      },
      {
        "id": "e64523f6-0b89-434f-96b8-1d0f87084c9f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "19b9dba0-720b-4d39-9867-c1c02dbc966d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edd65789-4d4b-44b0-abd9-b6a4d820d013",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74e62ced-15e5-4d7e-8a8c-f70c2b5c5f5f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f5ac89-1223-4f72-a078-3f6bbafc1c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d3d425-65ad-4520-b342-c3619b034ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae11e36-728d-450b-a776-6426ffd31616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cc657e-ba7c-4cb8-b090-2e008608ea32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb4500a-9572-4135-b554-8c76e7ab54a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5805602-59fe-4629-a214-6f91f81a7d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f075e77-a23a-45d9-8454-3e5c32c527ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd17d63-c5a7-4cd7-b926-53b1042941c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb578f96-0d28-4867-abfa-b84a62e6ccf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69223b9-1285-4652-80d0-1bc4f37fafb9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e8c559-c440-4145-b26e-f3ba4ea9ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d6ee48-5dad-4ab9-a58d-e4b551f646cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c58485-7bd4-4171-b826-4b23113a9ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "546348f9-3da0-4acd-bc92-983205c9174d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a292f-bff5-453e-b7c3-8431e7fe8995",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797eedb2-aae6-4ae0-8e71-21c95d812209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d720d8-334c-400f-84a0-63786a426d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f076c4b-18bb-49d8-a841-61d5ffb99a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94e0c774-5e21-4d9e-acc2-a5b95616eee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637e01af-7dfc-4193-8d3b-30fa318049d9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d99bacd-46df-4745-976f-3c6ee37ab180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22e63e7-c55c-44b2-974d-e82a4f4d5477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ddd605-c118-4b93-8917-16f8dc38d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "184279b3-a71f-4bd6-985a-9a20fa425cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5003bf5-f4f4-4ae7-9811-80e273509276",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024000bf-f530-468c-9317-ab0acc962c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58754efd-de48-470d-a465-ca7d26427552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479c54b2-8664-441a-aa7d-2cb1ed67b080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b7d23c-4ed1-4dab-a689-caf73d0f0ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27cd427-33c1-473e-b914-99bbee1e4998",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a2265f-128b-49b1-83d0-fffda7314d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cd8d19-901c-4ebf-b07f-77c22ca48d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a0e8d-856f-4ab8-839b-0eac88977f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "453db59f-db4b-44f1-b661-9055b3cb41d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c974e351-ad84-4b6a-9da7-9ceecd2f20db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0ee130-f417-4194-b250-1cd4976a25de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ceb36-23f9-4975-9c69-2f57a32983ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafac2b4-8796-47f4-9abe-0830eaa91717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fba75fc-6b18-4951-bf36-aa61c5637cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3c6c0e-076e-49f7-8f44-1fc2ebd3a9f9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93928c29-70e3-4f8f-abfc-55b63ade81d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb216ef-0c69-455f-b46c-7395220d2c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b268c1-a376-4af6-aa04-4d65d1f3c293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f66c7dd0-8fd5-4e89-9cb4-4b3938b4d550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843ede6e-c6d9-4392-8cce-9baeb5e51e51",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16be17c-fb4f-48df-9df4-f1c48b290d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764dc2c4-d3be-470a-9c1c-07ea6b24b271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c98d413-1b2e-4f6a-aa2c-aeb1a1c10911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1786520-5875-42d0-8334-ed0a1d67d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307959c0-a8b8-49e3-b0d9-ca274b534d9e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e46a8d-cdfa-4172-9bf9-7de683feff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c092691-1da0-43a7-8a44-c86fa7b5249a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf905b8-2acc-4166-8f88-248313dd10dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1559b5c9-9b16-486c-8522-a35b65322643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb13ea70-fbd8-4a51-be01-7c1a572abc4e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618ae4b9-4209-46ab-9715-380064847739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee9487c-8b51-4595-b638-3a4cbb7433e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0bfa56-c893-4afb-84be-cef4a8c273c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6012d2f3-04cb-46dc-97f0-f0f3f28e2574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846ccd5f-05dc-4730-83c6-532543c1f76b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18c5f47-1baf-40d7-bfaa-ef1fe8ce56e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b50847-46c4-477d-bedc-25dee98340da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01532b4c-7816-46f3-bc95-a046cc82d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51cd8776-cef8-4f34-a8c0-2634b67e2e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb81ce5-1cee-44bc-829b-372eb92d83a9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09246ad0-22d5-42ba-821e-06d43fc5c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1905af7d-2972-4a3f-b4e4-178b20f625a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc4af0-cf44-402d-8c32-1b6e680eeb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdea4fb-7996-4cd4-8dfa-c204a234ec8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feb8796-17f4-4029-9650-c3b67f832323",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc953218-41af-4cb2-884d-d0c3dfda5308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b781b2-b9e8-45ed-87eb-c42237f846b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1e491d-ade4-4234-a225-0ca5306b774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcf5816-6bf1-44f0-b079-64fde2828bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3fda1e-5885-45d5-b372-ae3e241fc908",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed717289-485c-424a-a666-ebf0214b0367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda72c5f-6c48-41b2-b78f-a0819606f5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3041d7f-13e9-452a-ba27-48d668c13e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a822aeb-a345-46c8-8f03-b8b7ae301a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942211e5-1298-4a11-aa10-93bcbc4525e7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa19c7ef-c06e-460c-83fb-91b6b8963482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fd70cf-68e0-4a0b-86ab-08e2afa2dfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b3ff4b-23ad-4327-a10d-cf6a37611ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ed99ab-689a-479d-9ce5-03ccdf545c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3c280f-48b1-4032-963e-bec2aebd4428",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6432c76c-fd11-4c9f-bdc1-b0284aa19ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd2dfa6-05d4-4f28-a9cb-f65a0a13215a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ccfcf3-c1f9-47f1-bce6-040637be8492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29affe21-f362-4464-b102-37eb585ee78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994715ad-bf9a-48d5-9818-aca6a574c774",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8b5d4b-efc7-48d2-b2f5-ac597070a17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9a3cb8-008b-40e8-abd5-0535b8e157c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f9ca82-266c-41a8-b437-a041869223fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d41764-2ad4-4878-8991-cb092950a1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be49b34-80b8-4a9e-934d-92d29ae1b2e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67a6874-ac94-4930-ae4e-d7d573593348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c554f0d-460d-4f5d-a289-57d59992b6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeedd097-d4a6-4e43-ad58-614f25fbd72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b23969a-04db-4396-a642-9753924026f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd56c27-a6b7-463b-a5e3-5b9b1dd4119e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a36374b-9512-4814-80c0-fdf685389fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47121538-3dda-469b-b940-486d8572343b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d9632-c776-48cf-a47e-8e76c64dc979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c5085f-e928-4d62-97bd-a0aa617a2828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c554915-0237-49eb-82be-f84eb1f8e943",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68effb54-d2cb-4781-824b-20de7e7400f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63712a5c-68a5-4d4c-a796-34b59e5107e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb716ba5-eb6e-4dcf-9fbf-e323df7495c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0709e18f-ebb2-4e8d-9516-d3067f3b655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd026cb-18f8-4b51-a4b7-f3cc2d7515d1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c1534f-0859-4c97-bd6e-2169bd6f2d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fcc0bb-ebbe-4c1f-a73b-9bbc5e475912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c76078-6c0e-4f95-9647-e530b0866743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6129c02b-a6e0-463a-b2ae-e86a3900b226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f4d0d3-8f91-4f4d-bc68-c87474d98ade",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20874bc-caaf-4a89-be6c-b7566b186cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c91fd2-74ea-4945-99be-b51cdffd6dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5a1695-f2bf-4802-8d5e-8540a3775263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4738c7d2-b91f-486f-a903-bc6402f1654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9309fb5b-46ac-4017-b58e-6794817a5e72",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d454cd3-14eb-4b83-b940-72e28f177f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf31f143-6b81-4f53-9708-191cb537ed31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f59fab-36c7-42a1-9774-6c1413fd4c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4b7142-b709-4cc3-a16d-eb459fe28e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cdeaea-78f2-4932-93d3-660f9126c754",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e94c27a-572a-4b26-9369-c5679c0bde68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b9aa4a-d6dd-4add-abb0-db3687329b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5780bb-5c82-4d89-b9d8-4b0eafe55124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39b08f7e-f01c-477a-a0cf-01e4b5bb9dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1927237-c6e3-47cb-9eae-8655a462a097",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d6b132-c15c-44b5-8430-46e278b930bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e296fe69-1ac7-41fb-88c5-5054094c6faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fa6c3f-b126-4112-a6c2-0cf80f7353a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a295b61-2a95-4e39-91f8-5ee1637d47a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3969bd11-75a4-4cbd-aee7-443d4bc616fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2aa179-4af4-4b22-a651-5f9ce803c621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d84aa67-041f-4d63-bfb2-b4a24d39cb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def74fc6-a1e7-4d56-9028-6320c8eb0832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e259746d-f329-48a9-91f1-ccd7df6737fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1681327-8543-4efc-80a8-3a939896d44c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6807e8f3-cb16-4a07-b495-f2331414a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bb89b5-61c7-4b3a-a3e3-a06bc5c2c576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ddbd71-5765-42b2-9998-69fbebeb9e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b29e63-632b-4a5c-b7dd-5d6d2e80e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef043930-14c8-4b9d-9fad-e4ca94225ee8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fd630c-7b04-492c-a436-e5f8b4cc004c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756be3a5-4305-4829-8a20-90b6cc2c9ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a38f9b-fc00-4639-b428-24198f6291c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5bda21-3646-4164-9e2b-983dabde01d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420bd026-bdd0-4b87-b98d-b3b44338d105",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8f3461-d7d8-4d3d-8aae-ca068c062373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee7526c-7cd5-4dba-812b-b6e7d8dcc92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e8dc09-071d-4830-9253-1e7b6e408557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18412012-ce8c-4c82-a675-97b83ce0a9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f976455-839d-4037-bdd0-875784661495",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7df03e3-76d3-4f1e-8188-03032c683c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64c1c08-3a81-41fd-baa7-392d8c70adb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc2e82e-ded0-4adf-b42a-7907bea78fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d783b679-888c-4b62-935a-6c6b169f1181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eea3a7-96ad-4de6-be91-1e3aff3a5733",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef238d-a007-4d56-b77a-9d0065435190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849a6834-4c5f-41e3-b4a3-e78eb7082a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3765320-499d-404a-8f4a-3b230a15b922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b689f9-dad8-4322-ab4f-42e1849de586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2c7e4b-6210-465a-a769-fa79ec58733c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb5fc82-71c1-45ac-aea2-00c70cf69017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e3419a-7de0-44e4-ba0f-f776bbf8ee93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bbb781-95f2-4dd7-ac6c-935156a001ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7430b147-3860-4015-b992-52759160505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ad0ffd-db5d-468e-849e-a225141db5a0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1055977-eb29-49a8-85bd-4d291a615a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51c6c5f-0e5e-4d68-8ec6-40a768011f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945b18da-619b-4506-9a9e-9bcafd460996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21677585-6d19-4fba-88f9-a9e0ddc0b491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae89b3-68d4-4551-97ef-92183270611a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75e179b-b4e4-45d5-994a-2834ff1f7f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187aecdf-9c76-45be-93b9-714234418cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbfc9f0-c1d0-4189-a97f-83604d6d69a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "195aee78-4032-4f65-821f-017fbe441be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d1aea1-9265-4cfb-897a-f3bc5d75d8da",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c500af-95cd-4509-ba6b-aa339ddb2528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32580b1f-a285-42a5-a8aa-0636a47db6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89514767-7149-4360-b65e-90578cf8c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d33d7b2-0099-4ec4-b50e-7b790a6d3a44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb98ec2d-8ff5-4a7a-872d-31af59084027",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28d752b2-13f1-4b00-b9ae-7d3bb6f22b9c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb97eb4-8ea0-4670-bd43-38a386d21f11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "efd4860a-342a-43a2-a64b-041a6061eb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1522bd9e-e075-4f28-ae3d-2d69e0d238a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2894a5fb-b7b4-42e9-9ab4-1ef1e12fe2ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37a56602-cf3d-46eb-af64-a84ccc92b6f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "257eb48a-0a4c-48f8-8d07-318ab1845a7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d471d6d-dd41-4071-8337-b8f87b4f54eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa8e538b-00ed-4130-bb38-5a8ff621fbdf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "245980df-9eec-4352-94b4-417bb669a404",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f527459d-1ec7-4392-aa08-6b6d85399e43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adfe30cb-7613-4ce2-ab39-3e96b12ea1c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e72ded6-6ab9-4233-b1ea-0c8c68068971"
            }
          }
        ]
      },
      {
        "id": "c0626283-b682-473c-9e4c-0fec2eff587b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "110e884a-9331-40ca-b8dc-cddba8e7984f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fae0287-20b5-47a2-a72b-3008c8177e21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62d23b0a-4bfc-441c-945e-6fb8f64e0a8b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f097c04c-1f82-4be9-86b1-d655300d614e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74eec6a9-ce40-4272-9c7a-fc1935f2a3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d4b812-5867-44c1-9b8e-553642db5041",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528ad14-f0dc-4fe6-8604-fe052fbf216c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29f12ac-5b2c-491c-9c86-631416becbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e569b2e6-21d0-42d8-a0d7-ef0279876be7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81409516-01c0-4052-802a-6483659329f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afdf4d9-f9b8-4d6c-b960-0eb578263d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be86ba5-daca-402d-8d01-77af1d2f4af6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebd1773-3442-47a1-924a-4cb693fc1f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0eae76-687a-4ad5-b42e-230e193cfe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e3e579-d799-4255-bf0a-c5e2b6e0d997",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c89e97-56c2-4dea-9b3a-a3e1aa4ef887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeabeb5-20a8-47d2-b2e8-7353843da9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e03d171-3a83-4f2c-b76e-807d8ba3e182",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dcb42e-2b74-4300-878e-8e86c11684fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46a3296-6732-4c6e-87df-47918c9b3cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2cc1e5-b0db-4498-9061-cf0469437754",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c63355e-cc9b-49fd-9241-04c172b90305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb47f48-9af2-4b40-8e1b-912da2d9c883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7866a7dc-aa9e-49fe-b721-d8045b1922df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d93619-c168-49ee-bb85-a0bcc721f5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43682636-8777-4e43-8d7f-7c72101e3d2f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05da86e-1de7-4211-a1d3-f5ce2d90577a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271ce0a2-7adb-4833-93b3-7372e7988da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96bf236-ecbb-4eef-86db-1833cf6f95a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17f9f59-32f9-4694-b82c-be996b7f6962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769fa194-d5f3-4089-bf5b-0a7b17416858",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aaff66-7f3a-4ac4-858b-7ba9a0403281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b89b1ec5-aba0-4fc5-a4d8-ac2dceba318b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc061146-0ec4-4c85-b292-aff40e46a285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99c84f5-84ac-48e8-9f22-a0a4b0a6059f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cc41c2-4612-49f8-9fe3-ada049649e7a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a6bc9d-0503-4664-8c12-5ebde2d26da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df34111-dca2-4b5b-be59-b0a9e3de8bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc3757c-039b-4e28-9f09-98203142ce9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55643440-531a-4d90-9e9c-a37291602e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018e404c-e748-4211-8ba2-579c5fe3854b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ca8a34-454b-42d5-8528-50d829fe697e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659cd7e9-4c1a-483b-84b8-4c0fae1b1045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363326fe-9c1a-46c8-b2f1-3a11f6070dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b64df21-d136-4fea-88f1-6f8222f3d167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a44ea4-bdfd-4af1-a103-b3cbc938bf2d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c04100d-785f-4b79-9dd9-a9b5b0c48deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e265de4-8714-4692-9b2d-57fbc8284b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0100e8-03d2-4ece-b917-1d0c5ec70ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69aea70e-244c-4bf2-9d44-fab2fc4e78d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3a6968-c7cd-4415-bbf3-6b5e466e244f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf2f96-2dbf-49d0-beec-b89813a42d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa5b877a-2768-42d4-8567-ca6711312d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b958854a-2b27-4559-ab72-bd3ac5e91b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246f05de-ac19-434e-87fd-af267fc6f621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cef76e-1811-42d9-babc-50d839b3af71",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3475a766-e439-4854-b2b0-016454c52b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b0bbff-85b5-42fb-b068-75b62aef98e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6764e6-08d3-4b05-89dd-7821dd8681d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08eb5ac6-821a-41da-9696-110ea00f3058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53903115-818d-41e0-8a43-32b547a4dfc6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86143a9-f160-4e7b-9008-fdd9210a45b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6defdb97-3566-4db9-8bee-fd07f0d1d58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4badaeff-6c9e-40c6-a0ff-164b185e7c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f02e0c-0edd-4bbb-b51f-7f1990778c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452a9653-a104-4782-b853-b1c5fea3bc50",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6ecff6-0860-41ae-9659-7b2280c1f530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac88a1f7-8242-486a-9496-f871f8f3e4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d56a1e3-7cfb-401b-9392-d9e8d26f7853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d392a6-67cd-4683-bf28-5c0c67e06269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07009de-ad91-4ca7-86f7-aa3106fdf3e9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa31b1ae-8a81-4f31-bdbb-4c2150a763ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfba75f-fc05-4d5e-9261-8b35e91ccf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e40f997-ffb5-4264-99f4-1fc997d3d3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8b8a33-aa02-48f4-a51e-061c180c0456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfbc330-a69a-4bab-9639-f261f588909f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d9ba71-43a4-4d39-9be2-6ad0d9278cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0cdcab-2287-4c04-b095-8c659d803122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4695167-b5bf-400d-8571-b416f0cf9fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29a1dfa-5792-4a89-885f-ec153ce69e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bff58f0-cf68-44fb-9560-bb38eb5b6458",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b3ccaa-ef56-4749-b8a0-91eef878e371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e53aace-6e0e-4563-9369-a227308b14cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf9b501-4a51-48b0-abf6-0b798138f1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffca891-99a9-4782-8e22-2733610623b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02e7046-fefa-4401-8205-4b8dde197730",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fd39fc-3727-4c94-b0b0-82191c5348e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929b2bcc-deb8-4036-bfbf-3ac1ea3f61f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3209b92c-c43d-4055-90e8-7d51d59bf572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cc294a-8a2d-46d6-8231-a4cb37fba7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8973e0b-e8ce-4f26-a135-8540618457a7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acbeac8-27a0-4bc1-b72d-4d80ee787441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97dba75-84e7-4b87-b191-a73b12246eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1876038-57e9-41ec-9ac1-23c58ffdeec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bec58a-aed8-4b0d-abf0-4c2357d35f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e63c3d-f42c-4d78-b7e7-8880ba3c008b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60220c27-ce8b-498d-9fc3-b6c5c1797d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825429af-a319-49f6-ac57-6945902445af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a9520d-f990-4c32-9ba4-437a2aec7d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e576009-c0f3-4afa-8cbd-1b52167a7809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84db20b1-f497-446f-9dc6-498bedbe261f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caabdb9-a99e-4b0a-8eee-5eece0523737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71eb568-8da8-457d-85dc-5f15b3f00a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a949be88-0f1e-4c46-bb47-a6cc7a0b0123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602d81be-37bc-4925-924b-e8582e73992f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f147558-6b64-415a-ae47-e3ff831a0850",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddc365c-457c-477b-9b28-914de53bc5af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d53c7b-126a-4b92-8b2d-f8ff3de765df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05d78f0-31aa-4e36-905c-75d94db0cda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cbc192-927d-4b7c-a130-3a05b34998fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf5742-3ebf-429e-9ec0-ac9b7225e716",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09354cb1-a6e2-4956-9bbe-9df1c1a3f989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c16183b-0b0e-46a8-a6f6-7b0a3f1fd87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62749664-b551-4524-9709-5c51e935960c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d5b5c6-7d83-44bf-8770-137f4b57e84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf0f8f7-2194-4ad0-94cb-d6ae61f8d7b0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae3186-4969-47c7-8a14-3830a1fb8c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda2a6bb-a251-421e-bd54-840359de39df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77077e1-913c-4e14-8690-e9d81d3a0a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28346450-4441-4e49-8408-10d4f6ebc925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b39b8e-1524-41a4-82c1-e604841c16b5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9d134c-3efc-48ca-84d2-38dd46dd4dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c5eb32-9e77-4184-8f1f-58d48131a62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dea041-d948-445a-8b92-c04a4445c69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb4eb81-fc0d-417f-a955-005761bcafcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb83660-db7c-4427-b8d0-7e6c9d8b7eda",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e550728-a29a-4999-8c8e-115dea199d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63016586-5e79-4b27-b80d-a163a7d3cb33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7194f4-9db7-48ca-adaa-1c9a7d592d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b9d8ec-3454-4f96-b33b-b794982d85e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9520dfd1-3bd2-4838-b1d3-1c9ea11b6819",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308033d1-9764-496d-88be-f7a921137560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309d38c7-356d-4ed1-a810-41f441c8944c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe23a9-fbf2-4d24-b090-332faa177bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d9ac74-a863-4b45-bcbe-8e58e7869199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe5c39f-3612-4432-9af5-e156d58c6a89",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6a225e-81d1-4c78-9d27-01a03624195f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b007133-59e0-43c1-af6d-4e19c4d933b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b806cb50-625a-4d50-9317-50c6470b779f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2012dbe6-2a32-460a-90bd-e3bfd21f79aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0602eff-c43a-44cd-8480-5f561fef54e6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaf290f-b99e-4929-8e34-f72cc60e9e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e32051-002d-44a9-bec1-f0a87c2137c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b22f449-9dca-41dc-9439-d6b9ead40251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac02d54-cfc5-4814-819c-ecaacbcb2547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b540e3b7-a284-449d-9d9f-4af8b630de39",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90595278-932a-4b59-b459-8414b65aecb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f08267-bd6c-4a08-8088-91bcaadd78a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301485f1-3840-401a-981b-22f4b27c7bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f82ad3a-cf8b-4330-b8e9-0531f2f3ad8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf08d0-7e8e-40e0-aeb8-026204445d9b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e720d2-4244-4f7f-9cd2-3758c35e7f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8fd2c4-18b2-46f8-8f2e-9e9bd099f84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d92c78-afd2-4862-a3aa-e76c9009dd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9f1e04-db85-48d3-8b65-5164aac5dcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46fc104-b566-4d3c-805f-42bb9e39d2c7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd3f592-4b05-4c4b-8a19-fb49217d69b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098ec4b0-a978-4b5e-a4f4-c66889a8f3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5531fef-aa03-4f0c-82b0-58b4b69908a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac1eb88-4055-4324-8499-742eb4e3375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c3d85b-be73-4ae0-8dc6-073da521b96d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b042c882-9400-4d46-a1a1-67f55a6bcd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449f1b1a-89a8-4267-bb9a-06e010e11496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182229ce-5e6c-4ba3-ae52-9594b8576adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea760bb-7dfb-484e-91b1-d5af669fc838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd776519-b48b-4478-9151-5cca2deda42c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71006c08-d895-4b1a-aa99-44ae9e1d0431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f97f2a-3382-4149-9dfe-0893f0d265b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becd349e-da90-42e8-955f-b65636d7700d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e813d2b7-cbde-4856-91d6-7f734cab1101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5ce777-c462-4c8c-842e-4df6b06a0da9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38ed9df-6d6a-4e40-81f4-f2cb36461e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a79e59d-086b-4407-be4c-bc51ea44e97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffff51b6-ad83-412d-b9ae-b22f9a2b864d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8837d6-7f48-4c4e-b084-3b41c7e35703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331385a-e70b-469a-aa6b-d007bf073174",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb6b0a1-2768-44b6-91f8-801af742d2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb87921-e715-4916-8334-90c97ea9f087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d35bcac-1e53-452f-b6a7-7721e74fd8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340d3cd0-3e65-471e-a165-d5b99e8afea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af168ee2-961c-40a8-8c2f-9693ea82c308",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb293ab-a24c-409c-b6c5-583115d53b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab295a8-3b76-4148-a83c-61fe3c15ee0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da392a0-05ff-4fc3-a7c0-db93b7c93674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee516061-cc2c-4748-8a1f-90ea27e7c0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7927954d-24e5-4d77-9554-19c91708a8a2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113a58fb-8811-400c-9b8c-78c5a1cf8c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2948d5-6712-4f77-8a61-63ffe26ca1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5c023c-4bcb-4cbe-89f2-28710f6162f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24e93fb-a74a-49cb-8e33-6ef754049bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b555c9d7-b691-4b02-8a1f-60a9cb81165f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da46f15b-5251-4395-a1a1-fb331c6d13f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fc58ba-f924-44d6-ba9d-5d27fe373777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fe5f3a-9177-4d8e-9e69-b69749bcf7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae7f9e4-3409-4fbd-b41c-48721363fbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb400389-8ced-44fd-9bde-aa65567f8873",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc9bfdf-14ed-43b1-9f42-8e5a3bacd56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1412072e-3b72-4846-b8cb-52185505e950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ffabdc-d66e-4ba6-a0c1-b94bb293c476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5627967-c3f0-4bb7-9345-6a7ece233aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f484e51-ff65-49fc-9765-ddf9708f1465",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f168f4-ef29-47d5-b4ec-d4e74e941d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287de637-7ca7-48b9-83e0-8f4db94b582c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d91b04f-0bf0-43f5-9f8d-67652323d2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8d7e16-2643-4798-bbf9-0e92a4cbd6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf60d754-dfb3-447b-97b2-43d88624544e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c95200d-9d2d-476d-a952-14b7c0d37865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c0eeda-eb23-48d0-831c-8f5f219586f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e3746d-115d-4333-9894-c5ec796c1965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6ef367-5a0a-4e3d-a2d7-73a1695941bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfa47ae-51af-4efa-9dd4-209b89768b86",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80820e-51e5-4dce-abce-dadb1478b991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390698e0-a17a-46b0-906e-32522923bf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc85d814-9df1-4b93-83b2-ec911bc76618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710a3d70-101b-462d-ad23-d8a3979e952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6bb81c-5a1a-4c32-8a43-8e64ec273b7e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e302dd6-7b93-4d2b-bf1b-656edd4ab95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca47d394-14af-4cc3-a14a-af065c179cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49034bc8-d883-48cb-8451-346805633908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82b2bb6-000d-4954-9160-a52dd754863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bf37fe-56d7-4e7c-97fe-3249f86bd4f5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb800cc-a9a9-4bec-9039-cc910592721a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a43bcf2-c330-4d7e-a841-b4fcc836436a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3af3d7-ad05-4c1a-bcae-4b9ed8908ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6220dba1-a258-4621-86e0-73dc4af7e32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea372d0f-172f-49d7-94cb-e9a3c3688821",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818c2c06-0253-42b7-8168-4982b81f99c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975a865e-1796-407b-8b66-9664e8e9ce7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c11307-7d0f-46ec-a794-c11ece1a9045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee8bcb9-f20e-4a38-b8a8-d80db0d831bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955ff3dc-ced7-4502-bae9-15a5dfa90ebc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855bc4f7-0383-4245-b7c5-72a1dd4dfce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860be83a-db7a-4f8a-917d-3afdf31636fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7160a293-f155-4c6c-98b6-0c03d32bc22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f64625-a2ff-4566-80d7-7a783dba7b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d9e43d-9e15-4e48-b3d1-0adfc25e27c1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f087af2-05ed-4a40-92f2-eab7deaed993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66189f08-b7e4-4d38-b017-747e99ea62a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c6eff0-e898-4863-9f54-384afb8ebd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec44aecb-1f69-4a84-b04d-7777a2f3c550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03602d90-eb5a-4ddb-9a90-79f490fe5580",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2be4ca5-dbbc-4c8c-8c60-420ae7a8d359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0b7c7c-06fc-479c-ba34-b491e9541375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07975b9b-deba-4367-969c-adab23ccd339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535879a6-f292-483a-a420-6200ae2ad676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9d1d19-bde8-4df2-9239-c7e5b2edf9e9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf37c3a-23e4-4101-8a9d-a8903e64e0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c3f992-0486-4ebc-a702-fff2ba151cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6823be5-3e8a-4c03-9efc-1648527141a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83b65c4-2fcb-409d-ac2f-f4ec835aa1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b3e284-5bed-4a5b-8a33-e8aabead2248",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e8d05-10ca-465b-bb3e-dc60f0526b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb95a0a3-a834-4458-8e13-fe7389e66a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e79fdb5-0dfd-4c48-bec8-d7ad47c83645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530ea04f-4185-49a5-8f77-85e09e11efce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad835533-c417-4a4d-a56b-c2995b067ea9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34640e4-910a-4645-874f-126ce251d403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add54dab-59d8-4cae-8240-fe7f3e821827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22168844-3d7d-4ab1-856c-ee6ee7e90905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e842db79-c425-4512-9063-198cad387efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a596acb4-bf0d-498b-afe6-3f13ff3db185",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1c37b9-ed60-4813-9c82-c1113b093501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05720143-064c-415e-99e3-5ddf3118dc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b040be3f-c732-4229-b058-75864eedba44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0198a06c-19e0-4cee-b983-20da133194da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f30fda4-131c-4de8-9297-f03e594f7338",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b27fa15-7b53-4d2c-98b5-9f8e97401b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efb824a-5f77-48df-a77c-df696009ac90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f183a5f4-6a9f-4407-918f-4d58f346d4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35a70c7-863d-42bf-aeb2-58f9b232175e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6ca015-e229-46ff-8922-7e2f26d4e7cf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843eb611-5d82-47be-806f-37cf11b07c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d378db-1c23-4fcb-b1d8-7be25a9bbc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e8119-3c94-4b05-9a19-ed32785df60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3315b9d1-8ec0-4a22-a6b7-5a568cfd46a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e44bf8b-6039-4aff-809e-7432c7b4f47c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030da3d2-2d24-4550-9b34-1fc5d0b66ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db52ab3-e9f2-4549-9e74-15a421db1074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e154fd83-09ee-4e3b-b1cb-7a04e973f6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa81e85-f022-4316-bc1d-bb8494e6e8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b024f7b-a4dd-41bd-a46d-823f68503b2c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b1f44c-60a9-49fa-b913-745c23061ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885c2488-55da-4875-8af1-dd6644fd520d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52a7ce-05ca-4614-b2e8-08b5e30506b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55421819-c050-4b21-86da-e5a075400847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfb6a54-c562-48b8-b66d-14b45f9aa811",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d7c434-b8e9-47a3-8e5c-b3c599bf6782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dbc2c5-7623-49a1-8ab9-3c99781882d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b40bff2-cb7d-4e6e-9d10-c1b050821efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8decf633-016f-4d71-aaf3-94bd8cce0b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafd9170-26f1-4d4b-b96e-07494ff31c4c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2906f8df-ed91-483e-904c-569bae56fbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77acca20-b006-481d-894a-9d02a3f95162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79ee32a-f99f-430e-b92d-f3bfcee8d698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d11e601-6844-4afc-b267-feb3d11c4dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1885b8-022d-4a13-9894-b678aae5c06e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1e6e36-0d64-485b-9717-70ebb358f1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621422bf-7067-4d1c-a4c5-3a9ce1189c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822f8fb-9d3c-44ba-a35f-9d07fd9fe072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942a0e12-e6e7-4837-9d0a-6b10ec2b589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fac08c-0bb6-4915-beda-83534439ad9e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c295c628-fd74-4f54-a748-c8f88a2740bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40e0aea-36da-4d1d-8e2e-afb3d1d05dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa7900b-045e-436c-968e-d794d26c1df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb916f64-a44b-46d9-9e5f-24e44fb87f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ec30a0-b774-42db-9e26-c6ad33461ce5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d946228-30b5-4054-b9cc-5e67c9b7423e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9306247-591a-43a1-bcc2-467e99232cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35e1432-bd6f-4f39-ba23-a883c6ee2bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558cf402-5284-46da-bb1d-39798963155b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246e73b6-8a77-41a1-8f01-f6ad24b260ae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdabd90-70d7-4768-9145-135e3384080b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec881d8-e27e-460c-a8b8-104cee0977d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8849c178-2a2a-483e-93f8-d42e4bee28bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4335f88c-f1d7-44d8-8098-f7f572160f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20f184f-c13d-49e2-ac1a-4e3e169c7b77",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4080abe7-df3b-40d9-a479-3f1a87de0257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8669c637-1750-4d86-9a0e-d9ae4db52395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2a942c-88cf-41fd-b6c2-26f36177f421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b59c8f3-d3f5-4141-b763-a311f7bebe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34a55c6-e7b1-4ed2-8588-fce53c1fd834",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c669cf1-e7ed-4061-88d9-0bdff5c1cfcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa17ca96-5fbf-483d-b742-42c0740094a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f963f9-9e38-4b1d-b7d4-bf98bebde591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4172ecbc-0fae-43b0-ba23-5fce80da8a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719927fa-4d71-4af5-8753-6c20b400d000",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5258f8d8-ecf9-4518-a193-9d7ac3298eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76da5a8f-bf7d-4507-8a7e-01ae897d23ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7333cb8b-638d-4d53-8fe3-b9834ef8dfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1208020-8e06-4b63-b5a1-6aae754a44ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2857329e-2875-4620-8208-8d41da9c9a9a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83139a31-29b4-4b45-a7e5-ce734b512dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6cb63d-081f-4b54-8c4f-4e21cee2b72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10d958-ad57-4b49-90b5-de5e3550d572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b01b64f-1973-451e-ae5e-4325aa64084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13154c40-ba1e-4fe6-8b52-ec4dbe981f1c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c5490d-1491-4254-97d5-3ec4e8847634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35759acf-705a-4629-b946-4605b1a1de17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3896deb8-73ef-4a08-b049-ff32da68ddca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5244413-a600-4442-a30e-3e1f06a7ff63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8e2425-9d92-4f00-9350-b94721c2baac",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2160b136-4ee0-4a77-ad67-10d4a9aa8e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e396f068-4bbe-44ae-b0d5-0c95214b0a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3412660-e5c1-4f2d-a78a-d39f0e4c8e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c10b3e-6abc-4485-9160-6831079ad10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5047bf8f-8a5f-4665-9e08-050c262a4600",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3310bd8a-624a-4872-84ea-10c3e73c7a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c9152a-a6b5-4438-8487-82c6d7c8258e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836001dc-d65e-4a2a-a025-7557aebc5bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b919d8e0-0c37-48f2-9f26-4811b9c7004c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f440d0-6c10-4b6b-a8ce-1a81d938061d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14500b89-ccf0-4687-a8b6-2828923350cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc2a6e0-fa78-4c1f-9cb2-f75e31da586c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85032417-31dd-4abe-8cc4-82d6d8b246e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449e0541-d201-4e46-ae7e-4ca0b7342f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddd3f36-d9a5-4b58-8fae-e0b8c9ea120f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1cea60-7b4f-4bfa-954b-1d12e19f09e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f068548-2660-46b9-aa1c-1fe9b4f2324c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb09a1f6-9125-40f2-897f-2a31d0a0d626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca11860-2ca5-432c-962e-22a5aadcd648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30356669-8fe1-4c5f-8b39-087b14d8beeb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2eef86-7c88-444a-b34a-0131c494fdcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6b19fe-fecd-4e84-8eab-3dc43b5cc734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b1ebaa-e3b6-4809-ba76-dab33d0f3c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c220a7b3-0562-4faf-9707-80525c659b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5613ca1-3043-4ca7-bb24-05cae7942f73",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccd37d0-e9ec-439f-a45d-c56a03c92e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871078b1-fa21-4d92-b1ce-417f62c02727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f8815f-33d7-4b26-9cdd-338999d3c744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776974d8-6896-4308-847d-9bc70d30e7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f458bede-5d0a-4325-a10b-de9c404ee765",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601d05ba-8354-4525-99d8-a4bd5ed6c2c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e2d426-c6c9-4c3d-9d64-b8ca22f4889c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0436415e-a0a0-4af0-863e-9161e77dbe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84845b14-067b-46cb-ba06-8e3a7db4a753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffcc8c7-79c9-4255-a4cc-1b752d5a310b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a1a07-28ef-4180-8523-29ce3fc08959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6b3726-eaa5-485a-a2cd-fa5ce2e23c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b865f350-671c-4c87-816e-43380c88ea9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866a53d0-1290-4e38-a840-2e1c82a60174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b51c16-7bed-4c03-8ae6-65eed1ccf525",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c2ad7e-ed39-41d2-af18-e3f63151667f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71802a30-a487-4878-859e-6d08979f8b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e54aa06-dd51-4a84-a049-d64d94f589cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bbe280-b319-4486-9104-450f04691892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c35fe3-7235-4652-bd80-8206004f9795",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5217869-c27f-4812-95aa-328e0c270cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33923dd4-9c13-4040-bc9f-9c87c3336bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e7c42c-2c91-4d8e-93a9-c7584d1a4cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb267a83-3f4a-4737-9891-e341a00ab85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69c13b6-063f-4c50-b167-bc1973fd6f9d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19948a82-03bf-419a-9dcf-21ec1d5fb073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca77c993-947a-47fc-b169-aea5fb8b4d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde29736-c905-45f2-af50-6e69e44c4afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff870e3-f740-4728-b686-19c23d18b17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b74dabe-9dd1-4588-abd9-30f54bee9aeb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fe3402-3fc4-4147-a097-705f1fa0b286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a9e2e4-842c-45ff-aa9f-d008d3ff5fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6f0b3-7ae5-41cd-bcb6-aca9a52a3227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a18c9e5-7fa4-4387-9e53-aaa346f5acb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a3ed95-adc7-4f75-a98c-13756a6e1fe7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10e32db-9443-48ec-8df6-99c12af4296f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51261ca2-b428-420a-b37a-ed13e895e4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c792ecb0-6c4b-4e95-beb3-8265422c46be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73f8e80-1629-4b22-926b-02124d467f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4723b04e-6469-4758-bf0a-44f16e6cea6c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75cc6e1-7037-494b-87eb-0e8934a85ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ea0467-dc67-4046-bbf3-77cdc4d7e74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c0d687-63c0-450b-b25d-256188af5b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf24fe5-673e-4bc5-b869-1b7fe857bfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfec4e5d-275b-4234-a039-03801eb13c9f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6e56ae-3153-49af-aea9-7bedf7a9e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c231cf6-503c-45d0-aa66-7fb007b3be8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65127432-2287-4f7f-b576-9c29e57d9898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13879b5-1482-49e2-8f02-53a0bbfd2fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093d0b0f-255d-4636-98a4-408834f72462",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f8fa20-0a08-446c-bb9c-140fe3ebe258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d7f0e3-705c-440e-80ee-de1c32c56683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b4e2b5-c375-4c92-8ecf-a3f9e88cf9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c073750-ccde-48f6-b57b-157f1dd67140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c17633-40d7-4f66-a66e-8f5d7de05298",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9725a2c7-24a9-4a6e-ab11-4f8de43384cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ecae15a-431f-42be-98bc-e8693432681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74bea67-a42c-4483-b575-81c49faa24fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a22092b-5d7a-425f-bb85-43ed31ad0961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce54d40-f3b2-49ec-8797-25dbef4cdb28",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e891f34-48a0-4a49-86a3-3516905d1080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24fa230-de7d-4eb0-8ae6-651ea8bcf7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f923e97-ebfd-4260-96b4-4abd364a6633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67d3797-6e85-4e58-af18-90c4344fb477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb2b2a-6c63-40b0-8f11-f9b730ef726b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3b1382-7c1f-45b3-a356-e79b03a01c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28057dd0-4150-4b4d-8d9c-e65c7a570bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ab6da4-86ef-443b-9e6e-73cad72d2add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81674d67-e0b5-4d96-a73d-8d5f74a4a8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb97df72-a993-4ef0-abf9-60cbfc283256",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ef683b-8e00-4472-b315-d5b1577116f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb6861c-c439-4a0d-8e70-5b81e2c3ef36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1bb98e-6794-4224-befb-4d8ba5e76f99",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef492d5-5d19-4a51-b2b4-eab68d396f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0adece-0e83-4bc2-82d9-bb1d84fb97cb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f4cc94-cf90-4fd1-af46-c615cc6ffd1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457f5106-c92f-466e-ac70-afacd211675a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625d4c92-4dde-4c8e-bab1-87d5e56a80c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9746d787-855c-4e2f-af45-b3ebf29d9643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2696ccd-7207-470f-a12c-40656b072f07",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e207382-6560-4ee6-89b7-c7c6bef435e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fad9137-3a62-4ab3-b906-0855d4693479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e065288-577e-43e9-a898-e55cb22368cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a169ef-81c9-48ad-a77d-ca9117337807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfb155c-3ae5-441a-aab7-738df490386a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46a4c31-15e6-4dfc-af84-29e49ac74a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01358cfe-c185-40c3-b29c-25260b59e03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ea5e4e-272a-4d35-b395-fef531d60cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723b1432-5c79-4c6b-be37-72e4d7d9cf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef20672b-4524-4b33-a2ac-74aa779b5c71",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775d4d19-2afb-4596-8de2-6aed2f6c2e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1367f57-22fe-469c-a2fa-5fe1ab6a8943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770619d-dcc0-4871-8d0e-0f57d3af1299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ae1cb1-5209-4ac9-bc5b-14e7e07929c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d1f771-7665-4b1e-b1e8-519674ac7411",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75addb0e-a1ec-4f2e-8fae-02f28e6a2634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6a6709-44f8-4c60-bfc0-82ae2dda22ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f20da3a-e9b0-4ec4-8349-62d357821d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29acaa9-0e3e-446f-ae19-d6fc882896ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b333d73e-6ed9-4ba0-846a-2b1487077e79",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b49399f-2cc8-4f44-94f5-fb0969d34b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f815d1b6-4e58-43ca-976e-d995a3915394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740bd22b-5419-4059-953a-a8738d39fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771508c3-5f31-47c0-acd3-100f31d28db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b0e41f-636d-4ad0-a6f2-d9e63fba3ddb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1c0e3e-5cea-4a0c-968a-53c68601818b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7a0975-de57-417a-9c1e-e41fa0e98e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ed82ed-aeec-4210-9ab1-465a1ba04892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0b9ab0-c97c-451e-81da-f6d708a5e9a2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8f9d404-1d99-4aad-aff2-b5b1fdbcf8bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3fd49ec-e4b2-4ebf-b391-cd878da00bf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b548844-2208-40e4-9a32-9802996940d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9b02f58-8e39-494f-ae98-8df2740377c7"
                    }
                  }
                ]
              },
              {
                "id": "c23949c7-03a2-4a96-92fd-c203794ccece",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "759cdbb4-f868-418b-bb10-22f09d4011e8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1521a78c-9226-4236-a0af-d89c31e4f544",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "49c60487-6e6c-4a4b-8838-ccb16cb0d903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6453b23-d638-45cd-a8db-56db3eb1c953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "752c9e42-4a88-492f-9b10-9d980a2ecdb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ec5924f-9a4c-4176-ba5d-eb2d7e480a4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71f6b0dc-cdcd-4c10-a074-b278f14db395"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "530e8ace-14e9-4527-9d61-6673a38bc88e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6fb072-1269-4fed-b409-19e5b4c3ce0a"
                    }
                  }
                ]
              },
              {
                "id": "588c3717-ebb5-4e4d-8547-d1589a285f54",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0a426b31-122e-4fbf-82f7-95e062471a01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f70e98-86f2-4cb1-befe-b39481b54760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "898933a4-b303-43e5-9480-a96cdd97531c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a1ae03-b551-4e19-b794-16b4b0e03396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778ce84f-55d8-4898-831b-b43526ad7712"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "828631a7-d487-45c6-9eef-d07f998c62df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8da4080b-db2f-4361-8c10-b4efbd9b4d78",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e81be81-bb5e-46ec-9d66-da17c543575d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fab8dedf-021a-475d-babf-e8340c6a4169"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bea7c6e8-3784-4b7e-9cac-50701de4c8df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e83f96d-51f5-4205-9750-bbc3a41f8253"
                    }
                  }
                ]
              },
              {
                "id": "2a135517-760b-4a91-8d72-660b10230bad",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2acd2bf4-cd50-4e6c-85c1-3f4c992051a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01caee2a-449e-4bd4-82f3-43086e046a77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbf9307d-1c6d-459d-8817-a81bd1447f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffd28279-e11c-4d63-bad8-91f6bd36ba40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6763586b-de50-48e7-b360-0373bd5bc1d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cb519aaa-97b7-4d42-96af-d3cd6a0f02bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05a02b41-493c-4532-ba46-22a38c41c2a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecc8ac84-2422-42a9-9dc2-30ef1fcf9b00"
            }
          }
        ]
      },
      {
        "id": "e8a9eba1-f603-47d6-8a43-001234a57a7a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "34cd6d70-79f8-4515-8022-f728ef903e4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c27e6c0a-52d2-4bc0-a99f-e7ff0fe36fbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13ac15a2-3759-4909-843b-6e8f89657790",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f81514d-81b5-4a3c-9155-a1bca8f7cee8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d60d1ac-6e12-4067-bf32-9abb04c024e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf228f15-0df5-4588-936f-4a1c49b51dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99234123-5638-4e66-854e-abf8b92ec8c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f172cf5b-2422-4460-9a3e-f5555ad7a2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da25df6b-54dc-4dc8-a4d0-ae1678eaf70e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "212ffcb6-6912-43f4-9470-a88f45ff2eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "075e298c-93b5-49ee-87f7-dcf5fa1526a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9d2f1df-d339-4573-8e9e-acfb5973dd8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0b0e646f-984a-41ee-84cf-be35c40b2485"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d8c2d57-a1d0-43ea-85d8-37a5c6daa1bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "355ec1f8-8a59-440b-91b1-f80c035ecaf8"
            }
          }
        ]
      },
      {
        "id": "d16abd81-34c9-4bff-b598-72b8f4595fc7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "db31888d-6eb1-41fb-a873-6ba8b72042f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7486ea9f-2e51-4819-9ea4-a2b0ff880303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d7e8d7e-6b6c-4289-9a7f-843026caa1b1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee31ccb3-c3a5-4bbc-9b5f-36a69c9cdc36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7729e6d1-c697-427e-a469-9901bd0fecd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c9ac45-ad2a-4135-8e35-09d12ab8acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb1de41-9c12-45df-b9ec-304dc6136d4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85247ab9-d702-4ed0-b020-1ae6a5c2d97c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dc6253a-2a76-4d4a-982c-e815e08202e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8ac11fa-e717-46e9-8ae4-6af6af06b3a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef21c620-1b1f-47f1-8192-c58ff225b9c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68772985-79f2-4152-990a-dc86b343ebc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d02f3965-964a-4c7f-ad49-0abd138d82d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c724005-684b-435c-9530-32bf7889aa6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51146d89-795c-4d0d-a5bb-717da425436e"
            }
          }
        ]
      },
      {
        "id": "52b69d38-1c48-4d4b-b17d-208a9b3ffe2b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d4b11536-2c3a-42e6-8642-815a1baeb518",
            "name": "Negative Testing",
            "item": [
              {
                "id": "007b0107-33b0-476e-9302-e1b9e58d4232",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b710f178-603b-4804-8176-c7a8a72e41dc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0276268b-b98c-42e2-843d-5a93a1d186e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4329944e-f42d-4609-959a-3ccefb9e1f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89a750f-e669-4eda-8e17-04efb9fc4619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3696facb-e6d2-4eca-9368-9f1d05f09893"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba9c907f-584c-48ce-909c-26928c56d038",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88b5b123-7569-4355-863b-0b668b5a9dd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f7aea3-3a10-452d-8c1a-31392a761c28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "880b9d8a-60ae-4f2b-ac58-dcc42973fd86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e91247ac-3fbd-499b-9fae-72e8bc36e411",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5cf12d7d-c7c7-43b2-bb6c-61c800b6a12c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12c4bb19-c42e-481e-855e-aa543b4defb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ee7a4aa-0fe2-45db-979d-5b3929801256"
            }
          }
        ]
      },
      {
        "id": "20688cd0-31b3-4bd7-bd20-e67abe1e7ca2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f7e6dfc-f6a6-4819-8f01-92c03caaa33e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "861bb858-8263-482f-b7af-7ccbc0e8b6cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "90150378-31b0-4e6e-8c9d-134957b70345",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5b41ec1-78ec-4682-98fc-d87e7b91ce64",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "789528b5-6b29-4a44-b31d-f80bfc4e80b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 54.8293650793651,
      "responseMin": 21,
      "responseMax": 317,
      "responseSd": 22.243213937368466,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721176811796,
      "completed": 1721176833557
    },
    "executions": [
      {
        "id": "abe134c3-158d-434b-a6bd-55f80dac989a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4841bbe2-e3ec-4bc8-b83a-659c576b8e10",
          "httpRequestId": "b42b1342-3be6-4e98-94af-fcb560facbd7"
        },
        "item": {
          "id": "abe134c3-158d-434b-a6bd-55f80dac989a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "540e5a39-d87f-48bd-8b20-9c6c48bf774b",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "06c9ad4b-2746-4beb-862c-19331b11f623",
        "cursor": {
          "ref": "915999c3-7eca-4131-ba2a-771aa3363340",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7c569486-2d6d-4c52-9b0e-ab6b08c3a965"
        },
        "item": {
          "id": "06c9ad4b-2746-4beb-862c-19331b11f623",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "78340abb-8c18-4c8e-b93b-d529ccb5a5e7",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "a7f8547d-58ba-44db-ae2e-08bfb0a82d82",
        "cursor": {
          "ref": "aa0a2d90-7f2d-4d1a-95ce-78cf68bd9cf2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fde5cbd6-2373-46ea-a124-6813525e8870"
        },
        "item": {
          "id": "a7f8547d-58ba-44db-ae2e-08bfb0a82d82",
          "name": "did_json"
        },
        "response": {
          "id": "be207545-d310-4381-b918-f399642965eb",
          "status": "OK",
          "code": 200,
          "responseTime": 317,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962bc33-479b-4581-834f-4b48804209f7",
        "cursor": {
          "ref": "ecb1e9f2-95d0-43c1-92f7-2691f133d3bc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bbbf3971-1217-403a-af34-8bf3fc9a8b62"
        },
        "item": {
          "id": "7962bc33-479b-4581-834f-4b48804209f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "5753b2f9-847e-4bac-bfc8-973d3aaf1735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962bc33-479b-4581-834f-4b48804209f7",
        "cursor": {
          "ref": "ecb1e9f2-95d0-43c1-92f7-2691f133d3bc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bbbf3971-1217-403a-af34-8bf3fc9a8b62"
        },
        "item": {
          "id": "7962bc33-479b-4581-834f-4b48804209f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "5753b2f9-847e-4bac-bfc8-973d3aaf1735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0e6a97-4668-4e2d-b6f4-5d408cce074d",
        "cursor": {
          "ref": "ba8c1dd6-8141-45e9-b45a-b5f1e027d55c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6557007a-3d60-4f45-b1a1-efe5824798b0"
        },
        "item": {
          "id": "be0e6a97-4668-4e2d-b6f4-5d408cce074d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1859f836-7212-42cf-ad27-d6639d638013",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 166,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c31dac5-7d5c-40c9-b7e4-b1583f20ac0b",
        "cursor": {
          "ref": "f8bcc5b6-e643-4368-acd9-eb574703b02f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "70da0962-65fd-44cc-8161-e9d075343b69"
        },
        "item": {
          "id": "2c31dac5-7d5c-40c9-b7e4-b1583f20ac0b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aed2f591-67be-427b-9546-90f484daacec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50a173e-9f15-491e-9c08-c5f526e94018",
        "cursor": {
          "ref": "de2184eb-8b12-4b6e-bdd5-a526f8c91480",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "32287691-c2c5-440d-b560-83561143f889"
        },
        "item": {
          "id": "a50a173e-9f15-491e-9c08-c5f526e94018",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6c724f0e-dfcd-45fa-88b3-8ccbb2158414",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826df146-f3dd-4588-b664-52bd80a23141",
        "cursor": {
          "ref": "8e8e9162-cdb5-402d-8b35-a263c35268d6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cc89fc15-13c9-4cee-9015-938fb68f37fe"
        },
        "item": {
          "id": "826df146-f3dd-4588-b664-52bd80a23141",
          "name": "identifiers"
        },
        "response": {
          "id": "17d10b4e-1b65-491f-b274-05db85b66418",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4aaac5-ee26-41b2-a3af-7ccc92fed66f",
        "cursor": {
          "ref": "2d23fe26-27ea-4d84-b7a6-d60220792bb1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "39e86399-ddc4-45f9-91e5-342b3b5591b3"
        },
        "item": {
          "id": "ac4aaac5-ee26-41b2-a3af-7ccc92fed66f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "becaad71-fb61-4b3a-bd48-3a2850deff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f7836-b224-49f0-a631-93d465706d80",
        "cursor": {
          "ref": "f486b36c-e83f-47ba-a150-e2055586a32d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "91b9a8b1-5b19-49c2-94c9-91206dfd7ebc"
        },
        "item": {
          "id": "6a9f7836-b224-49f0-a631-93d465706d80",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5f7ee29a-a6db-4c24-9bb4-6b973085dcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d43dd7d-c043-4174-b93b-0465ce4ba937",
        "cursor": {
          "ref": "554df9a4-663c-44f0-9007-bfbe80e2f7dc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a8ba384a-94d3-45b8-82f7-b0e155347a99"
        },
        "item": {
          "id": "5d43dd7d-c043-4174-b93b-0465ce4ba937",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6141f39e-98d3-4db2-aa2b-24d7d125b4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a2c409-fe8f-4fc2-9dd7-ec1715342671",
        "cursor": {
          "ref": "2d962ef4-ed06-4411-a8e6-9ca748eb467c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7395354a-e245-43b8-beca-df29e8531dd7"
        },
        "item": {
          "id": "f0a2c409-fe8f-4fc2-9dd7-ec1715342671",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3d0c4c80-d891-43d9-9cbc-81a0cae5d1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85c58fd-00d3-46cb-8f19-2138d4df9ce1",
        "cursor": {
          "ref": "ad2a150a-c884-42cb-8891-0265d00785ee",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dfa1e7da-ac35-484d-99d7-d67cbed81b5d"
        },
        "item": {
          "id": "b85c58fd-00d3-46cb-8f19-2138d4df9ce1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9be2c270-7dd9-4e53-a84d-a361e4309d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdbcac3-6f4d-423c-a56a-6b943c5925d1",
        "cursor": {
          "ref": "77fcfb7d-eb2f-4b3c-8b16-4d236fbedc3f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "67ed8557-7ebe-4e97-aa49-e58635e4bc68"
        },
        "item": {
          "id": "cfdbcac3-6f4d-423c-a56a-6b943c5925d1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a4a294eb-c299-4937-8dc5-47619abfa4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c026fb83-c702-49f1-aa57-c7c273ee003e",
        "cursor": {
          "ref": "c497c974-bf63-40df-bbe0-50f184f8915b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "870d34dd-de14-4682-bcc5-3e06ba124df0"
        },
        "item": {
          "id": "c026fb83-c702-49f1-aa57-c7c273ee003e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0e7b9b6b-f162-4332-8f10-e7d8bc4478dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1d74b9-c8ec-4af5-8e96-e652adeeec55",
        "cursor": {
          "ref": "5f920ed8-cc0d-45b2-9036-19bea9ddcdcc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7efbdf39-46be-419c-b752-6e8e3683a4c8"
        },
        "item": {
          "id": "be1d74b9-c8ec-4af5-8e96-e652adeeec55",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d8ea67e4-92ca-410d-8096-98c45e4076cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418497d0-46ba-456d-bf9b-8473c511b3f4",
        "cursor": {
          "ref": "2e83cd4b-aa3e-4a8c-927c-3327b0819b59",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4eac396a-b859-41f3-82db-69e46b88a741"
        },
        "item": {
          "id": "418497d0-46ba-456d-bf9b-8473c511b3f4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b428bdeb-6f7b-4e21-aef2-6cba82fb1855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7411edc-0bf7-4e15-a833-be050fa52358",
        "cursor": {
          "ref": "951c86f7-ebdb-472a-b93d-356b29d15b80",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93235450-587d-4290-b27b-7fee8fa58187"
        },
        "item": {
          "id": "c7411edc-0bf7-4e15-a833-be050fa52358",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c49419f-5fbb-43b3-ac1e-dedc10d03019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba08aca0-024f-496e-8bfb-02738c4dc67f",
        "cursor": {
          "ref": "ddb468d4-58ef-4ada-bf9f-c46e96a05072",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "afb93845-0d3b-4158-9600-2074362a0671"
        },
        "item": {
          "id": "ba08aca0-024f-496e-8bfb-02738c4dc67f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "39399f55-af18-4d4f-a8fc-6d86145b52e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4614af2-1f85-484a-adf9-d6d0bcbe1ccf",
        "cursor": {
          "ref": "4bcec725-b6b0-48b2-8d81-a6fe68c6447b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "701b4e41-8aa9-4d1b-8a84-2170433a7b7c"
        },
        "item": {
          "id": "e4614af2-1f85-484a-adf9-d6d0bcbe1ccf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9c091207-969b-4e3e-b247-38858738954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2667d12-a490-49f8-8454-b09ba4738aa9",
        "cursor": {
          "ref": "65b23e7b-5979-44d0-afcf-f4654b95421b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "55618d6a-4792-406e-bff2-7f4ff0b8af88"
        },
        "item": {
          "id": "c2667d12-a490-49f8-8454-b09ba4738aa9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c0117730-ee8e-4e16-9660-38017053c38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d69e3d-4710-40b7-9402-67275de03988",
        "cursor": {
          "ref": "8aa6f198-ed3d-4c31-892a-3c1dfcb50f5d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d2798681-95d8-4910-b9ba-386234280f14"
        },
        "item": {
          "id": "83d69e3d-4710-40b7-9402-67275de03988",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "744823ef-e1d3-4491-923b-1575bb2caa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9dc889-17b7-488c-ac56-b69498f522f7",
        "cursor": {
          "ref": "5b81232b-8126-4a78-b055-dec23d87f6c9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1141e793-84d8-4f9d-975d-5e7820c762b7"
        },
        "item": {
          "id": "7c9dc889-17b7-488c-ac56-b69498f522f7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c213e416-2b1a-41dd-a024-8ef65b2a3a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ada0ee3-b13a-45cf-aea8-dca6ae3e9bea",
        "cursor": {
          "ref": "9aa5df42-cfa2-4893-bcb1-000f6d40f412",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eb2ee38c-2dff-481e-b1a3-a279c39a0b93"
        },
        "item": {
          "id": "7ada0ee3-b13a-45cf-aea8-dca6ae3e9bea",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0bf8b3df-d421-4fbb-a6ad-3e40feefc89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6457227b-85dd-4b00-a12e-f6ff2e44624b",
        "cursor": {
          "ref": "1d0e4985-4281-42ee-82f7-a2c33579f942",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2b5ef034-18b0-46d4-ba43-a69a870c2413"
        },
        "item": {
          "id": "6457227b-85dd-4b00-a12e-f6ff2e44624b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "11a0a0dd-9d7d-42bf-b697-0b9ab034965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00866a14-59d9-441e-8b9c-eea3e32e35ac",
        "cursor": {
          "ref": "377a95a1-1f4c-4b8d-9d9c-8856cab93858",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8e086b1e-5507-43ec-9251-f8eb432b8401"
        },
        "item": {
          "id": "00866a14-59d9-441e-8b9c-eea3e32e35ac",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc39d9a6-aa9f-4d57-8474-0cf82ae0498a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab58d1a-704f-40a9-8641-fdae7c7d8f69",
        "cursor": {
          "ref": "8737fc00-bc88-442c-ad6a-e24a1fd8aab5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "806859d3-4a55-41cd-bebe-e4b263b31784"
        },
        "item": {
          "id": "5ab58d1a-704f-40a9-8641-fdae7c7d8f69",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c013c3ae-6a8e-464a-b15c-216b801b0122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb33dd-c138-487c-afd0-3f56f552e283",
        "cursor": {
          "ref": "6f5ecfe5-a82f-4b41-9c66-f93d1b1b578e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ee9f657d-831a-469a-aa2a-072a35feb10c"
        },
        "item": {
          "id": "4cdb33dd-c138-487c-afd0-3f56f552e283",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e70c5db-c00d-4783-8593-516b90509c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3c6a0b-1ed8-4288-b516-be37a29468d4",
        "cursor": {
          "ref": "82817945-45a5-4ff2-aa64-79c5797e8770",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f64b9f3d-d364-44bc-bed1-fdcc8f9c1a61"
        },
        "item": {
          "id": "6a3c6a0b-1ed8-4288-b516-be37a29468d4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b03cd5e9-859b-4d12-a6f5-2c9dcdb2f3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e883c3-2963-43a8-9bb1-15fec505fb48",
        "cursor": {
          "ref": "087c8d45-1df1-4960-9191-67193ca52ac6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f2e95318-cbe8-499d-b62c-f95612ced0ae"
        },
        "item": {
          "id": "82e883c3-2963-43a8-9bb1-15fec505fb48",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d811cb55-e289-43cc-aaee-1b5d91345176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67f3cda-09a2-4bc5-b6c1-f1036f23ba6d",
        "cursor": {
          "ref": "e0db8a79-1f9b-4f51-b71f-926c7168372e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "79f6a538-e033-498a-856c-5fb3a76f30e1"
        },
        "item": {
          "id": "c67f3cda-09a2-4bc5-b6c1-f1036f23ba6d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "769682bc-7819-4c96-82c6-f5f13e747911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450ca719-fdc9-4b1c-9882-4b54ccc1eded",
        "cursor": {
          "ref": "f6407f10-1ab1-46e6-a88d-8ad91fd99997",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1d0057c5-8410-46a2-9125-640a0890df6f"
        },
        "item": {
          "id": "450ca719-fdc9-4b1c-9882-4b54ccc1eded",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "872e2605-3c45-469e-a928-8e0ead0504ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1832d020-9b15-41cc-bd64-aaeaba169acb",
        "cursor": {
          "ref": "4d338ee3-dfd1-4e15-9ce0-ce45d5042bdb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "14a19eee-d533-4462-bb4f-cd31d59f6347"
        },
        "item": {
          "id": "1832d020-9b15-41cc-bd64-aaeaba169acb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d054778e-26ca-4ba5-a9de-ed7fedf90424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61bcaa5-5fb0-4a48-9842-ef21bb8ce8f5",
        "cursor": {
          "ref": "8587bf8b-21da-4bd3-8433-a0548f4db22c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "91b39962-e8ab-460e-8317-de94efd0c0d7"
        },
        "item": {
          "id": "f61bcaa5-5fb0-4a48-9842-ef21bb8ce8f5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc554002-ca1d-4467-a743-d584aaed1a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f05a6d-b822-44a7-8885-b160b1423855",
        "cursor": {
          "ref": "c3183b06-1b4f-405d-be04-a8d92b30a9fa",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "405f4557-3594-4871-af22-c9114f12d400"
        },
        "item": {
          "id": "58f05a6d-b822-44a7-8885-b160b1423855",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7c564cf6-3667-4af9-9c98-9a965f9b55a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a6e42-c209-40cc-b575-70f92c707595",
        "cursor": {
          "ref": "fab70292-24fb-4432-ada6-ad6766b9de82",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "92e727b3-8bcd-46ad-90dd-6359f2b9d00b"
        },
        "item": {
          "id": "100a6e42-c209-40cc-b575-70f92c707595",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6470300c-d18e-452a-a982-db72dbd055c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0949756a-9623-47fe-a0fe-ed2c3b409905",
        "cursor": {
          "ref": "4c1b46c4-8dac-4472-99e8-70cf13d53110",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ffae98e-ee51-4680-95ae-bad69de23682"
        },
        "item": {
          "id": "0949756a-9623-47fe-a0fe-ed2c3b409905",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c6e0f178-ba70-4427-ba76-6f27bba6dbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96c50d7-d8bc-4b91-9b38-1e453f3531b0",
        "cursor": {
          "ref": "b6c30430-8ee8-46a4-9b7e-40f740785853",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a9e7a880-84f2-4d90-9b04-52d080cad6e9"
        },
        "item": {
          "id": "a96c50d7-d8bc-4b91-9b38-1e453f3531b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5c012e97-0d8b-40c6-af84-83f452d6e7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d903f6b-a27a-4e14-91fb-b9bec5544868",
        "cursor": {
          "ref": "6a0b61a0-014b-4bcb-9940-ef66a2f8387e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b823cf3-d1a1-4cba-b386-6ed16e33c72c"
        },
        "item": {
          "id": "2d903f6b-a27a-4e14-91fb-b9bec5544868",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23049b07-e303-42ef-9934-ac60bb08dc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfdb563-64d5-4eaa-bc24-5554e5866ebf",
        "cursor": {
          "ref": "4cfd5631-8050-47a6-bf3f-d9b7459cf1fe",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "18796378-7dd6-4bf0-8a17-06784694e90a"
        },
        "item": {
          "id": "3bfdb563-64d5-4eaa-bc24-5554e5866ebf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6caea379-d4ae-48ca-96e5-fda47e2c4887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30981e73-34ef-4a6c-8743-f5c98a3b1eb8",
        "cursor": {
          "ref": "2560d377-27a2-40a7-a9e5-2086a735b38e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f90f575d-5829-4d23-8ef1-1b198027e1a1"
        },
        "item": {
          "id": "30981e73-34ef-4a6c-8743-f5c98a3b1eb8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4f0fbcab-00c3-42b5-b251-ff9cf1120c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2401683b-9970-4d76-a32b-49d001c0a6ce",
        "cursor": {
          "ref": "6c3236f3-5b94-4c9c-9e83-d23db30ca268",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a57ad1bc-b196-467c-b3e9-adb0123e79da"
        },
        "item": {
          "id": "2401683b-9970-4d76-a32b-49d001c0a6ce",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f7510b8-7211-4a3f-b5bd-c46a1bd775fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fd7e27-0ce8-412a-8fa3-4e2def7bdd81",
        "cursor": {
          "ref": "e0e4b148-6886-4a2f-ac93-cd3821ff9af1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f61ee6ec-1f97-4974-90ee-d40895306de6"
        },
        "item": {
          "id": "f8fd7e27-0ce8-412a-8fa3-4e2def7bdd81",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7efa3cc5-1407-45b8-8ea3-b7e4eed35c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7db44fa-604a-4550-ac31-f17bea018c1c",
        "cursor": {
          "ref": "502c2038-f7be-4057-afd7-8fc2703594ac",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3a6bb584-9e3e-49dd-9756-1ba4b4abf7ea"
        },
        "item": {
          "id": "a7db44fa-604a-4550-ac31-f17bea018c1c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b9df757a-1b5f-47fd-9afa-225f90497559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e2246-ab34-4dd4-8c4f-8c509abea931",
        "cursor": {
          "ref": "7930cbb8-04ff-4710-ab42-583c31692240",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc2b37af-3c33-4adf-a071-f0809e811bbe"
        },
        "item": {
          "id": "2f4e2246-ab34-4dd4-8c4f-8c509abea931",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e9783672-b739-44d9-a164-ae7035197458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f6ae0a-4739-405d-8da7-466407505d28",
        "cursor": {
          "ref": "1290148d-94dc-4909-b4aa-2e4362a87c1c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1478876-fbfa-46ef-ba09-f30063a4f5af"
        },
        "item": {
          "id": "57f6ae0a-4739-405d-8da7-466407505d28",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "71ca280b-ea81-414c-9ac7-458eee47923d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5e6c4c-7c27-4690-a1b5-67ec049907fc",
        "cursor": {
          "ref": "90363f4d-405c-478e-9c0f-fbf263462f2d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2970ae2d-036d-4fb3-b916-74a808e5d59c"
        },
        "item": {
          "id": "cf5e6c4c-7c27-4690-a1b5-67ec049907fc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a693aca9-8941-496a-843b-8abdabccdede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413e2bdd-535f-4324-a062-64805d857822",
        "cursor": {
          "ref": "191b6dc8-bd67-496f-86c2-b055db39ebd3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ef019567-0a5c-4f2c-8a1c-fbf16204b1a7"
        },
        "item": {
          "id": "413e2bdd-535f-4324-a062-64805d857822",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "71c90154-3993-4128-b749-9933d01c6bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15721a9c-e4f0-4fee-b58f-dc7e5cf81e30",
        "cursor": {
          "ref": "ca04a318-b225-41f3-a5ca-399cf5fe8d6d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a49cfae2-1531-49e7-a7d8-4209d80fb111"
        },
        "item": {
          "id": "15721a9c-e4f0-4fee-b58f-dc7e5cf81e30",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "79ae7be3-e5cb-4117-b6aa-5f97418c1b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13f7ef7-464e-4693-84e1-681119c004f2",
        "cursor": {
          "ref": "ca16b34f-87df-4cb7-a317-4238d4337d87",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dff3c9a9-6fbd-40c8-8afc-e2d5fb85886e"
        },
        "item": {
          "id": "b13f7ef7-464e-4693-84e1-681119c004f2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a0d4b21d-35bd-4dea-896f-d9ea898e9388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bee724-40e2-481d-a316-294baa0572b8",
        "cursor": {
          "ref": "f69d9073-e72d-4ea3-8c0c-8bb066d0cb05",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5ceff5a-993a-4553-9475-7259e0cf03ab"
        },
        "item": {
          "id": "78bee724-40e2-481d-a316-294baa0572b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cc4daf1d-0da5-4af9-9647-b5c06e0caa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de34be-a17d-4c4e-afad-34b51171a358",
        "cursor": {
          "ref": "9d9cf08c-2d78-44ea-a0b1-dc579f71cdd1",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "50b21ccb-11c2-4534-b1a7-7b24f02ae6d7"
        },
        "item": {
          "id": "a9de34be-a17d-4c4e-afad-34b51171a358",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc6136bd-688b-44b7-a9fd-2154a696237e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc4a0a-6296-41ce-a87f-f7489f361f16",
        "cursor": {
          "ref": "84411ca9-5fd2-4494-99f4-a9d11d011ba6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b97aa99d-ac9f-4820-a0a8-f9a6d289af2e"
        },
        "item": {
          "id": "30fc4a0a-6296-41ce-a87f-f7489f361f16",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "03224a53-e65a-4072-9d3c-c14de2085436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056f5c8a-49f0-48e9-95a9-3ecb0d0d76c3",
        "cursor": {
          "ref": "5a89bce1-9721-4f03-81ee-41e4f64f925f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2637e97a-aef5-483f-b9c4-5e3ddd5967da"
        },
        "item": {
          "id": "056f5c8a-49f0-48e9-95a9-3ecb0d0d76c3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "41ddc320-98a0-4069-a356-8c3e93159e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d8cf1-730c-4fe3-ac1a-c3494362ca0d",
        "cursor": {
          "ref": "54246d7e-f9de-4f62-a787-a53e98e7c720",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "02758a68-8f7b-46eb-96b2-52bd050f872b"
        },
        "item": {
          "id": "0e4d8cf1-730c-4fe3-ac1a-c3494362ca0d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5c0c3a54-a3f5-4abd-8f5c-1f96e12911a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bec169-8c3c-483a-96f0-e64a3e06401b",
        "cursor": {
          "ref": "f15e3f22-6019-44b8-b11c-5dee4237e81c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "05cdd942-037f-48c3-a31f-6a3cee6d9e85"
        },
        "item": {
          "id": "58bec169-8c3c-483a-96f0-e64a3e06401b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d2fa82bd-07ab-452c-be97-c9ab33322558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dca898-c3d2-4d8b-9fcf-4a2487520964",
        "cursor": {
          "ref": "da107f6e-b09b-4e7a-9125-e87d437f75dc",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "220af945-6e3c-4c08-9ee1-fece8ca01ec4"
        },
        "item": {
          "id": "11dca898-c3d2-4d8b-9fcf-4a2487520964",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "952d4b65-fae7-40f7-96f6-6e96196a2509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554c5913-2ad1-4222-8d6e-1a849dc0139c",
        "cursor": {
          "ref": "668806e3-6a99-401d-b82b-3192b4282e55",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4239bfd4-a673-4b46-a85b-8d868f2ebc8a"
        },
        "item": {
          "id": "554c5913-2ad1-4222-8d6e-1a849dc0139c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ae5bfd60-dc07-49cf-a585-03de9ce5154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8de25d-5773-4f84-85fb-d9f8a63fc785",
        "cursor": {
          "ref": "8bf06e8b-cc2e-46f7-a14f-41aa3b9f6cd2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2a3766e3-eaff-4835-9bc1-a8ce211ea3f0"
        },
        "item": {
          "id": "2b8de25d-5773-4f84-85fb-d9f8a63fc785",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fa98f0d2-34f1-417a-9bd0-975c80c0f940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf06f5b-1153-4648-bb5b-d6e888b999e6",
        "cursor": {
          "ref": "4cbd5d4a-0386-4104-b915-5f0ac3e01812",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c1887ede-48ab-4baf-acbe-848939b74e19"
        },
        "item": {
          "id": "aaf06f5b-1153-4648-bb5b-d6e888b999e6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f782ef8c-3a8c-4a45-8fc0-09b8edab3cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323cb006-ce43-4827-8d6e-f6a29d83406e",
        "cursor": {
          "ref": "ca21eb15-1f65-441c-8d13-f680270f4e77",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1a39f01d-8874-45c5-8b39-7177efa8a5cc"
        },
        "item": {
          "id": "323cb006-ce43-4827-8d6e-f6a29d83406e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab7a7108-b49c-435b-9efd-7f5cfdeb007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea8a045-d19a-47cb-a9c3-e1be52ba8b84",
        "cursor": {
          "ref": "c29aaca7-1316-4fb5-a3fb-adcf1c99b9a3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b29b3fad-9109-4e2f-9c73-eae388acdffe"
        },
        "item": {
          "id": "dea8a045-d19a-47cb-a9c3-e1be52ba8b84",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b251d068-8d88-4a27-88a5-5f1feb6aefa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af028c33-af42-42f5-b80a-24be14ed3a00",
        "cursor": {
          "ref": "ddb8ed92-0904-46ea-aab2-eb68f940d70f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9b7b245b-a0ea-463f-b96b-c5b26d1235ba"
        },
        "item": {
          "id": "af028c33-af42-42f5-b80a-24be14ed3a00",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "17824230-5c8a-4126-9b33-de4e1c802d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212874db-2d72-4a10-8e9d-699e4f40773c",
        "cursor": {
          "ref": "7923edca-7456-4b2d-882c-6a74de628db6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4ccf4bea-afb3-4e32-b442-48ec00b75763"
        },
        "item": {
          "id": "212874db-2d72-4a10-8e9d-699e4f40773c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c3ea8307-5e36-4aeb-a5bb-b42998c94649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf5f91b-d9af-49d6-9848-0295a621c07e",
        "cursor": {
          "ref": "44a18519-8648-4af3-aa48-fb868395bf6f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7a296d8d-5637-4e0c-946d-479b8acdb162"
        },
        "item": {
          "id": "0cf5f91b-d9af-49d6-9848-0295a621c07e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3a9314c9-c6df-4356-9740-3a69011ddc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf609f35-12aa-42f7-a037-fecd5e385527",
        "cursor": {
          "ref": "92539ea9-a73b-44d5-9c96-db06e2c1bd2c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "feffe339-15bd-4f48-9265-a43931fa5b98"
        },
        "item": {
          "id": "bf609f35-12aa-42f7-a037-fecd5e385527",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2d8c2b92-ca16-4e27-ade5-ff8480e6b5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be50c8e-75e4-4679-968d-1558f5d1ed65",
        "cursor": {
          "ref": "3ef00c9c-5a2b-44f0-84a7-49d60ba737c4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fffd2944-af28-4f31-910c-0eeded83af37"
        },
        "item": {
          "id": "8be50c8e-75e4-4679-968d-1558f5d1ed65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ef923045-dca5-4395-9b28-6a0f1772437e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447ff4c4-cb42-4d49-8133-feee1684a64d",
        "cursor": {
          "ref": "a512eef4-6f6f-416c-818c-31a3f5b47612",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eef8e0b2-a0c9-4bc4-a045-0d918df548a0"
        },
        "item": {
          "id": "447ff4c4-cb42-4d49-8133-feee1684a64d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c842da21-0e4d-46cb-9f61-35e2f8069c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d67553b-cff4-4281-98d6-999ec4364343",
        "cursor": {
          "ref": "b7f408f2-7d2c-45f7-901f-9ce10e0a7b6e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df5cc598-64fa-463d-b93e-4cddc8bf40e3"
        },
        "item": {
          "id": "6d67553b-cff4-4281-98d6-999ec4364343",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "762efc17-0c87-42f0-ada7-47c64cf8088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbb841b-15e2-4b86-a06a-74946276ff7b",
        "cursor": {
          "ref": "6bbda0a6-d08c-45e2-8793-5541841b7a52",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "aff5aba5-c770-40e6-8f85-6592ae23c298"
        },
        "item": {
          "id": "1cbb841b-15e2-4b86-a06a-74946276ff7b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ea25e5b9-08ba-4564-99a1-274d8535d386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ba480b-7685-427d-a280-311a6a75b1b5",
        "cursor": {
          "ref": "08fc7396-75a8-4a87-b20b-f99ad7819093",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92a65445-0a94-41c8-b2c4-b7a0a59e6444"
        },
        "item": {
          "id": "68ba480b-7685-427d-a280-311a6a75b1b5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "da2151b8-5541-4861-9322-62719fbd018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d9ea15-9f40-45e3-bbfb-04603ebcbda9",
        "cursor": {
          "ref": "47ea798d-c1ba-4003-a99e-03eef56744db",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a709f8d5-2ef7-46ad-b602-f9fb0d5443ca"
        },
        "item": {
          "id": "f6d9ea15-9f40-45e3-bbfb-04603ebcbda9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "34822fc6-5a05-4adc-bdc8-f9e4f5c8bef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f103225-7d0d-4c3c-ac36-3f6b000bffe7",
        "cursor": {
          "ref": "7e1f1e61-62f9-4ed1-bef8-ab8fd0d2095a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aae2036b-beb9-4c8d-9ce2-6098d5118fba"
        },
        "item": {
          "id": "8f103225-7d0d-4c3c-ac36-3f6b000bffe7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "33179c6f-b79e-4291-8cd0-d9149b826f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaa617e-6919-4869-b3b4-ad1d523ab5be",
        "cursor": {
          "ref": "4f849725-fc83-4fe8-8b29-258e92dcfd24",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "689ac3c3-e3c1-4844-a907-ae9540ce3c06"
        },
        "item": {
          "id": "daaa617e-6919-4869-b3b4-ad1d523ab5be",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9bceec82-7df4-4c20-be7a-99e173324d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09100f44-c563-401f-9177-24d3af62b363",
        "cursor": {
          "ref": "6dfce549-c273-4efb-84c3-76ea0d14aa9b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8770af65-11d9-4321-b8ab-baa07e66dd65"
        },
        "item": {
          "id": "09100f44-c563-401f-9177-24d3af62b363",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "593d7346-97ca-47b7-8974-6dbf02223e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5690172c-edf1-44c7-bacb-41bdfbcac4fd",
        "cursor": {
          "ref": "a923bfc6-00d8-4deb-85fe-5f88f811f044",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "35f28ef2-a70f-4ace-869e-b0acc31e7971"
        },
        "item": {
          "id": "5690172c-edf1-44c7-bacb-41bdfbcac4fd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "79bdf75d-d533-410d-8f6e-c2c2a5c38e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653abf48-3a48-42b2-8fb6-ea6577904df8",
        "cursor": {
          "ref": "e529bdb4-86a8-471a-bc1e-a8f38daf1de4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e6d67cb5-d43f-47dd-b06d-8cde15841974"
        },
        "item": {
          "id": "653abf48-3a48-42b2-8fb6-ea6577904df8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "436c0d33-8158-483c-879e-ac5bc353e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fac8ca-acef-45a7-8b93-a59ac8e17529",
        "cursor": {
          "ref": "c025098b-6ab1-40ca-9c23-22af6ff334cc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fd3e3ee7-a251-449a-80ce-cd3889b2ff5d"
        },
        "item": {
          "id": "75fac8ca-acef-45a7-8b93-a59ac8e17529",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9261edda-2dd1-46d5-823b-ffa227c5769a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37072e1f-0b97-43c5-80b5-cf8b2d88b77b",
        "cursor": {
          "ref": "786655bc-d3a2-4cbf-b3b2-1793d7bbceea",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3e2d59de-613a-44b2-b3ed-c517f0e4e194"
        },
        "item": {
          "id": "37072e1f-0b97-43c5-80b5-cf8b2d88b77b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "edb0ecd1-9aa5-422e-aa78-889c3af29e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053bbbe2-ad64-4394-9c99-5cf877d47793",
        "cursor": {
          "ref": "085409c9-9047-4208-89ed-2a3829e9bf1e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a19e3e54-fc4e-403b-ac48-b6ba8375ee98"
        },
        "item": {
          "id": "053bbbe2-ad64-4394-9c99-5cf877d47793",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "49c954f8-c141-4628-af6b-a46836243185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ad64b-8c06-44fc-a59e-c2e408e8d1e2",
        "cursor": {
          "ref": "7a5b8a89-092b-444c-a9fd-33dd040a5ff4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1f0aa0c9-1349-4420-8d55-7931d58e09c3"
        },
        "item": {
          "id": "f54ad64b-8c06-44fc-a59e-c2e408e8d1e2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9ce44306-5b33-4dc1-88ef-8958ec9fa608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae98269-fc4e-4ee6-a05b-5bf521401dec",
        "cursor": {
          "ref": "67cf4a96-b308-4af1-b87c-819f77ad90f7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e95385c-c47c-48b8-a5f5-eb9e43134b8e"
        },
        "item": {
          "id": "dae98269-fc4e-4ee6-a05b-5bf521401dec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43f4c55e-186a-4210-be86-a65e47109b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c037f0b-7ac4-446f-9d49-9fc460138e61",
        "cursor": {
          "ref": "13824559-8226-4fa3-85e7-46a10a08e01a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5e26f8f1-892c-4696-9d61-113ccde56f76"
        },
        "item": {
          "id": "6c037f0b-7ac4-446f-9d49-9fc460138e61",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5e631e49-cfe1-46fc-8d16-9c1b922729c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37bf65b-58fd-4fcf-a6c6-4573a85d2ecc",
        "cursor": {
          "ref": "78766ac7-828b-468b-a830-b38b76a123e9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b1050d3e-a1b5-44dd-8d82-4ab56f9a8b80"
        },
        "item": {
          "id": "b37bf65b-58fd-4fcf-a6c6-4573a85d2ecc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9f9a51b0-cad2-4788-bb92-5a5601ea41fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e06913-c430-4043-a2a7-812cc2f7c22c",
        "cursor": {
          "ref": "f6adabde-42bd-4c29-8d16-28ef78c219dd",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b6b36a66-d04d-4025-a35c-0d82363ad338"
        },
        "item": {
          "id": "a0e06913-c430-4043-a2a7-812cc2f7c22c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1cb2ba96-1fb0-43d9-880a-51f0ebd25189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860d6cb8-3e70-4ea3-834c-0bd29ef23667",
        "cursor": {
          "ref": "d1b12bf2-3bda-480f-9248-ef354b536a3e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "52d7b526-fe36-4fd4-8f2d-76263c445ad6"
        },
        "item": {
          "id": "860d6cb8-3e70-4ea3-834c-0bd29ef23667",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7f078d30-358d-4272-87c3-7fac02d64331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e10bd15-11f3-4e86-8ba1-202d84a1db11",
        "cursor": {
          "ref": "0895b87f-e4cd-428d-99c8-97648dae2406",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9ee04695-06b9-42ce-bc15-3842cfcd7850"
        },
        "item": {
          "id": "3e10bd15-11f3-4e86-8ba1-202d84a1db11",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d6371590-3d82-4cee-a7c7-72c51773fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9400b1c3-44cc-4036-87bc-1ec6f3b9dfab",
        "cursor": {
          "ref": "7e1d5f9d-fd0b-4116-a8ed-80dce9b3d4db",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5c37fcf6-284d-40f0-8b20-eb7a4dfd1060"
        },
        "item": {
          "id": "9400b1c3-44cc-4036-87bc-1ec6f3b9dfab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0e921f8-d2b3-47e4-9ae1-f6c218364c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757783e2-39db-4782-8560-1d7e7d3226c6",
        "cursor": {
          "ref": "a8658647-05cf-46c1-8004-9ebc81c51d6b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "16a44fd5-26e5-4963-8b27-e63b407b37c9"
        },
        "item": {
          "id": "757783e2-39db-4782-8560-1d7e7d3226c6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "07c25018-d410-4a6b-82fe-f54bb56eeee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253c747d-4693-4689-84fa-7d0f48bc89b2",
        "cursor": {
          "ref": "87e3d9d3-15d6-4bfd-b20c-8b528de41d2b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0191c051-83ce-4f71-a330-0a05f1aaea80"
        },
        "item": {
          "id": "253c747d-4693-4689-84fa-7d0f48bc89b2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4012e03c-ee06-4fef-a04a-7fdea742c959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bb1996-c59f-428f-88a7-c58c7fb8c70b",
        "cursor": {
          "ref": "898341f9-3ecf-4339-bb83-bb30186e11f1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7ff8250d-0681-43ad-b9b3-08f314ab8714"
        },
        "item": {
          "id": "69bb1996-c59f-428f-88a7-c58c7fb8c70b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b1199338-9352-46cd-91a1-46c91d560260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e09326d-d4ae-4bf6-b3ad-883e8e105685",
        "cursor": {
          "ref": "6c175ef5-8474-47d2-9b5d-8e1b41aaafbb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1d715f3c-ea42-4b09-a19a-20fd05de4648"
        },
        "item": {
          "id": "0e09326d-d4ae-4bf6-b3ad-883e8e105685",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8cb8b21d-bc82-45bc-9075-d7db13501a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d7927e-16d4-4578-8951-ede9aa7ea363",
        "cursor": {
          "ref": "7827a5d4-685d-44d3-9663-392a897e9c3e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0601cbea-d6f9-4ba0-a03c-a607bb942140"
        },
        "item": {
          "id": "05d7927e-16d4-4578-8951-ede9aa7ea363",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e06fd6a9-e251-414e-83a1-efd9952a5047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6377f38a-1c11-4959-9971-c5afb7e3ebe5",
        "cursor": {
          "ref": "2e107427-cf4b-449b-8cea-121d96f1acd3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd7614c9-0c37-463a-96a0-9076fa16062b"
        },
        "item": {
          "id": "6377f38a-1c11-4959-9971-c5afb7e3ebe5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "284e76fe-eb4a-4ea4-a134-2dc59f1d67b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb0cc1d-b8c5-4f5b-8d97-1da7a0de13d9",
        "cursor": {
          "ref": "73856a71-1580-4d9d-9aa6-8604342916de",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6b7580b-37be-47a6-a5ad-4c166ca2eeeb"
        },
        "item": {
          "id": "8fb0cc1d-b8c5-4f5b-8d97-1da7a0de13d9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "906ac2d6-a8d4-4041-b92a-2df88dec1fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0d9ada-e5bf-49db-9452-e080422d10c5",
        "cursor": {
          "ref": "7842a23f-fe9b-4ba2-a48a-f4489dc88a84",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7f55a51f-e087-4c7d-8acb-94d4ae40d893"
        },
        "item": {
          "id": "4a0d9ada-e5bf-49db-9452-e080422d10c5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9a076b10-5257-4978-978d-18ad315f9682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e361498-5223-4575-817e-5dc22b25a0ea",
        "cursor": {
          "ref": "f30aeae3-88e5-43fc-b3fa-710ec211fd51",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ed8c3e36-b298-4a7e-913f-ed7bc08ac721"
        },
        "item": {
          "id": "2e361498-5223-4575-817e-5dc22b25a0ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6b557db4-3328-411f-93e4-c2b98e196d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bf1f2b-c6de-419b-8872-fbc352c1a545",
        "cursor": {
          "ref": "b7478e44-84fa-4173-8406-2993882e0678",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "510d6b04-f93d-4a25-9db4-d6b01d9d5f1c"
        },
        "item": {
          "id": "e8bf1f2b-c6de-419b-8872-fbc352c1a545",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "88884740-0989-4a77-9bbb-ad6044d5f433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d871982-8ab2-4c6b-b12a-27ac831528ca",
        "cursor": {
          "ref": "f48898ac-dd7f-4426-919c-0dc8cf39ebcb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7acbffba-629e-4559-99fe-430aad59210a"
        },
        "item": {
          "id": "2d871982-8ab2-4c6b-b12a-27ac831528ca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e1a2cca-cf2f-4e59-9023-1381dbce89be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dc3ed0-0c1d-4631-9a0c-8856953aa75b",
        "cursor": {
          "ref": "dd54f20d-48d6-43e3-a0b6-4bbf04de205e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "409060a4-1012-4be9-8565-94ea4d6caded"
        },
        "item": {
          "id": "b5dc3ed0-0c1d-4631-9a0c-8856953aa75b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a8e4ce4a-6246-4a1a-8a19-c773cd688f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b98b3e6-f11f-470f-9c70-1c3aeb9ad59c",
        "cursor": {
          "ref": "b3b43bd9-4d74-4226-a683-8f0c5224d47b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f7f3c46a-18f1-4985-ad42-581dade75284"
        },
        "item": {
          "id": "1b98b3e6-f11f-470f-9c70-1c3aeb9ad59c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8cfd4315-d04a-4fec-8abd-a3ed7c14bbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65789211-2964-437e-8441-2fa23908a342",
        "cursor": {
          "ref": "7cbeed0c-ee0f-46de-bcc8-c1babfcc2e93",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "51a06ea5-0c7a-40c2-beea-45315253f197"
        },
        "item": {
          "id": "65789211-2964-437e-8441-2fa23908a342",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dbbb6647-279e-48e6-9a43-f1f16532cc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fd7569d6-08a9-47c4-bd17-fabfffa73fb5",
        "cursor": {
          "ref": "77e2e4f3-edd4-451c-99e4-1d19b9f0c83f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "912fdfbc-4788-4236-9fe1-aa285fb469db"
        },
        "item": {
          "id": "fd7569d6-08a9-47c4-bd17-fabfffa73fb5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa0dae52-bdfc-48f3-b719-42aae51ad391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6211c172-4784-4b66-bcb9-61bf5cae10d1",
        "cursor": {
          "ref": "71c32c23-19af-47f0-ad7a-c33664a5cd6d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "274aba72-d3e4-43ea-9a68-8c21016a4099"
        },
        "item": {
          "id": "6211c172-4784-4b66-bcb9-61bf5cae10d1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "58f1b93b-996f-49e3-851f-4da2b9506af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c9451ffc-1431-4595-a55f-e6ec227f0fab",
        "cursor": {
          "ref": "94b36c49-5968-4368-8f56-14403479220c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c9c7f754-a32b-4ad3-947b-b6d82e9b6820"
        },
        "item": {
          "id": "c9451ffc-1431-4595-a55f-e6ec227f0fab",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "33236da8-782f-47fd-93f6-289e7f6e8650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1c3542da-9427-43b4-b365-50249ca7b8cd",
        "cursor": {
          "ref": "ba0d1715-6411-46c3-97bc-4f678a5bc549",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ec19592e-610f-44d4-a923-b0e346a62808"
        },
        "item": {
          "id": "1c3542da-9427-43b4-b365-50249ca7b8cd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c7d055c0-636b-4266-bc78-afb3593782cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6e05ad0f-7edc-4d5e-b33e-d7f5fc4cf42d",
        "cursor": {
          "ref": "0dfaddf3-6cba-4557-8f0b-df45b29b4ece",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cf2c2bc4-3694-4825-822b-e1321bc7fdb9"
        },
        "item": {
          "id": "6e05ad0f-7edc-4d5e-b33e-d7f5fc4cf42d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "43c381a5-e3fa-4c80-809e-758caf81f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fe64f5ec-198c-4856-89ac-a696bb33f35d",
        "cursor": {
          "ref": "26c78be5-3174-4419-b7fd-5ea8a771ed57",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3f9101ae-2d99-415c-8ad7-6b16798c1e2e"
        },
        "item": {
          "id": "fe64f5ec-198c-4856-89ac-a696bb33f35d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "365fa883-5932-4924-96d7-60a8e219662b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "74e62ced-15e5-4d7e-8a8c-f70c2b5c5f5f",
        "cursor": {
          "ref": "bd789214-af9c-432f-a007-04f7d24760c8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0bf570fc-0816-43cf-b01e-e7553c87453d"
        },
        "item": {
          "id": "74e62ced-15e5-4d7e-8a8c-f70c2b5c5f5f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f86ab1e-fa42-4cf8-aa63-1132f51337d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb4500a-9572-4135-b554-8c76e7ab54a2",
        "cursor": {
          "ref": "52564cec-b4a7-465b-af27-98d2b00f808d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "56d09c3f-cd3a-4200-bc02-c25957509c87"
        },
        "item": {
          "id": "8eb4500a-9572-4135-b554-8c76e7ab54a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dac7e99b-f786-4ec3-bbed-0186b0837bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69223b9-1285-4652-80d0-1bc4f37fafb9",
        "cursor": {
          "ref": "30929beb-ac47-48f9-b046-75147ebb1e93",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4fac96ef-b9fe-4884-a1a8-ed779c156b53"
        },
        "item": {
          "id": "b69223b9-1285-4652-80d0-1bc4f37fafb9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9e54061f-cbee-4d2c-90b2-ac4ef6ee62ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a292f-bff5-453e-b7c3-8431e7fe8995",
        "cursor": {
          "ref": "79e864cc-f666-430b-ade4-44519370dc3d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0914bb68-b13f-4a2c-8251-29da3dd4d487"
        },
        "item": {
          "id": "7f3a292f-bff5-453e-b7c3-8431e7fe8995",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "963fdd67-8321-4fa5-9d63-b2e3dcf82c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637e01af-7dfc-4193-8d3b-30fa318049d9",
        "cursor": {
          "ref": "bee2bd5a-3ffe-433d-9001-c47daabcffe3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "34437cf0-45a7-4737-a785-565b5348c9d1"
        },
        "item": {
          "id": "637e01af-7dfc-4193-8d3b-30fa318049d9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e29291fa-6992-4cb4-b577-e097873b4bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5003bf5-f4f4-4ae7-9811-80e273509276",
        "cursor": {
          "ref": "01893c10-cf13-463f-b3fc-23bca047e27f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7761e9bf-347c-4177-be00-40d5e53dafb9"
        },
        "item": {
          "id": "d5003bf5-f4f4-4ae7-9811-80e273509276",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b4c2fdc0-84e7-4c89-b9ce-3e1b935da357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27cd427-33c1-473e-b914-99bbee1e4998",
        "cursor": {
          "ref": "f5c3d629-23f5-4bd5-afef-b548e2b33e63",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a6473a69-ee20-46c1-9e49-aff72f3008c1"
        },
        "item": {
          "id": "e27cd427-33c1-473e-b914-99bbee1e4998",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c66cc68-3891-42d3-80ec-bfff6a890aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c974e351-ad84-4b6a-9da7-9ceecd2f20db",
        "cursor": {
          "ref": "94c8ceb4-10e8-4a86-aa0c-bddf07199682",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dcc972a8-4c17-4b08-9977-884f2ba37cc2"
        },
        "item": {
          "id": "c974e351-ad84-4b6a-9da7-9ceecd2f20db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e18ecf6b-e4b6-4cf4-9828-c4ab45e78d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3c6c0e-076e-49f7-8f44-1fc2ebd3a9f9",
        "cursor": {
          "ref": "2523922a-61e5-4a61-aec3-d5e00ccf28f7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "44e2e947-2fd9-4322-947f-df0cf6cef85d"
        },
        "item": {
          "id": "4d3c6c0e-076e-49f7-8f44-1fc2ebd3a9f9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16244a6e-af3e-4972-9397-396a15e1dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843ede6e-c6d9-4392-8cce-9baeb5e51e51",
        "cursor": {
          "ref": "5fa9ff61-b7d7-44a6-9b3f-33614b492384",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5024fc06-1aba-4d21-bf7d-08f05b940a9a"
        },
        "item": {
          "id": "843ede6e-c6d9-4392-8cce-9baeb5e51e51",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fbfc1f53-d9f5-4488-87c9-0d769dc2bf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307959c0-a8b8-49e3-b0d9-ca274b534d9e",
        "cursor": {
          "ref": "916eeae9-bbb7-4d60-97dd-0f96a11a4c5e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ddbd382-3182-48cd-af6b-55fca9899f48"
        },
        "item": {
          "id": "307959c0-a8b8-49e3-b0d9-ca274b534d9e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fbc0da22-f6f9-4686-9e69-e848ef5b7835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb13ea70-fbd8-4a51-be01-7c1a572abc4e",
        "cursor": {
          "ref": "7c5d0078-3185-47a5-a123-4be35a6717d0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dfb9bb06-d1ad-4e11-b542-a48b3d3d5e33"
        },
        "item": {
          "id": "bb13ea70-fbd8-4a51-be01-7c1a572abc4e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "882ccf7a-f741-4bc9-9c56-95190099a02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846ccd5f-05dc-4730-83c6-532543c1f76b",
        "cursor": {
          "ref": "2d05b77c-4442-4a25-b8a8-58363e2d6d92",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d8aeddb4-84e9-4295-9b76-ee8944185e67"
        },
        "item": {
          "id": "846ccd5f-05dc-4730-83c6-532543c1f76b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8465afd9-ed41-42e7-9e61-ff90b43592ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb81ce5-1cee-44bc-829b-372eb92d83a9",
        "cursor": {
          "ref": "fe1ea183-9193-44a5-bb5c-a350e6c593ec",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6668a7a8-d259-4d77-a6cd-f7921cbb4da9"
        },
        "item": {
          "id": "eeb81ce5-1cee-44bc-829b-372eb92d83a9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "078af7cc-7db7-4409-b9f6-dfb31fdc4a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feb8796-17f4-4029-9650-c3b67f832323",
        "cursor": {
          "ref": "56b97ed8-bed0-4664-bcc3-d9edf5f61209",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "262a731c-fc7f-4fd9-a269-ebcb1f641565"
        },
        "item": {
          "id": "4feb8796-17f4-4029-9650-c3b67f832323",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "286fa264-bde4-4a14-b541-9303f0706b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3fda1e-5885-45d5-b372-ae3e241fc908",
        "cursor": {
          "ref": "4c5699d2-c29a-495d-9a10-dc6f1ff82f2b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "92972b21-820f-414c-b51a-17b911a11cc2"
        },
        "item": {
          "id": "ad3fda1e-5885-45d5-b372-ae3e241fc908",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "860ec0d2-befd-4529-8b7a-df1be33d7d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942211e5-1298-4a11-aa10-93bcbc4525e7",
        "cursor": {
          "ref": "d183bdf1-df34-4b47-91dd-e61bda969e23",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bcf00acb-f2ea-4903-86aa-05d9e5de88c8"
        },
        "item": {
          "id": "942211e5-1298-4a11-aa10-93bcbc4525e7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fbf03136-d532-4ce2-978c-9dde300e2fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3c280f-48b1-4032-963e-bec2aebd4428",
        "cursor": {
          "ref": "ed424ff6-6990-4c51-9541-d50c3e2a99ac",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1cde3abc-00b2-4ff8-afd0-6648dbf851e5"
        },
        "item": {
          "id": "ff3c280f-48b1-4032-963e-bec2aebd4428",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fdc5e852-90b8-4691-bba3-61f7d9689421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994715ad-bf9a-48d5-9818-aca6a574c774",
        "cursor": {
          "ref": "ad3a09fb-91c4-4730-89b0-75b7fd4bd145",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d92d38a1-c67a-4daa-a1ee-ae8c9ca1ff43"
        },
        "item": {
          "id": "994715ad-bf9a-48d5-9818-aca6a574c774",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07e4bdfc-e02e-43f3-9b12-3617a43eff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be49b34-80b8-4a9e-934d-92d29ae1b2e8",
        "cursor": {
          "ref": "142b2d3c-ef98-4b58-aa26-d9c3beab71d1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "873c0b66-118c-4a4a-b936-e27aba3af579"
        },
        "item": {
          "id": "1be49b34-80b8-4a9e-934d-92d29ae1b2e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a52a91e1-f1e6-4987-8e6b-4681471a2ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd56c27-a6b7-463b-a5e3-5b9b1dd4119e",
        "cursor": {
          "ref": "46271c7e-8e28-4f17-af9e-74b687c8617d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0817c183-e541-49d3-8541-066872cd765a"
        },
        "item": {
          "id": "efd56c27-a6b7-463b-a5e3-5b9b1dd4119e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ae3eb42-9432-455f-bbe5-7134214f10e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c554915-0237-49eb-82be-f84eb1f8e943",
        "cursor": {
          "ref": "70da9e8b-dcf3-45f1-849d-8a0f50a2a3d7",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1d92a371-27f2-4497-9763-9749518c3dd0"
        },
        "item": {
          "id": "2c554915-0237-49eb-82be-f84eb1f8e943",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ac84acd-d10b-46ec-bef0-62dab8c6fb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd026cb-18f8-4b51-a4b7-f3cc2d7515d1",
        "cursor": {
          "ref": "81f9e94a-47e7-42d2-af42-1502428e99b6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23741b7f-d463-4fd8-9709-e00729990bc0"
        },
        "item": {
          "id": "2bd026cb-18f8-4b51-a4b7-f3cc2d7515d1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "705ccddd-8d97-456b-ba86-cd16a6a8d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f4d0d3-8f91-4f4d-bc68-c87474d98ade",
        "cursor": {
          "ref": "8f0bc150-834a-47f5-9175-94cf14645039",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f8d8bfa5-4abe-4986-b177-2ab3fa9ef4d1"
        },
        "item": {
          "id": "86f4d0d3-8f91-4f4d-bc68-c87474d98ade",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fad6ac74-722f-438a-bc6e-cde1bf2e9811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9309fb5b-46ac-4017-b58e-6794817a5e72",
        "cursor": {
          "ref": "ad1ab5d1-9e18-4a01-9534-85f1143ef360",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e3fc7d44-443c-4989-944a-45ebaf631dcb"
        },
        "item": {
          "id": "9309fb5b-46ac-4017-b58e-6794817a5e72",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c4fdfee3-ed93-4e8d-b74b-a6503b2fcef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cdeaea-78f2-4932-93d3-660f9126c754",
        "cursor": {
          "ref": "ea83b8f3-e445-4aa2-9d75-9e84ea1fa3b9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8a6bc6e3-b150-44ba-a0cb-d4f9f53efa3a"
        },
        "item": {
          "id": "40cdeaea-78f2-4932-93d3-660f9126c754",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "842b3370-5641-4256-8f0c-763d85098805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1927237-c6e3-47cb-9eae-8655a462a097",
        "cursor": {
          "ref": "90a59b6c-4abd-479c-b374-291b55aebcdc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fadd2ec9-37c9-4fc6-a181-ffe60bedbf34"
        },
        "item": {
          "id": "a1927237-c6e3-47cb-9eae-8655a462a097",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6135ab6f-c197-4fc8-82c7-176a42057363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3969bd11-75a4-4cbd-aee7-443d4bc616fc",
        "cursor": {
          "ref": "25373132-903f-487e-a3e1-22b5a1e8846c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "087ad018-11d6-468b-95bc-60a00b17d49e"
        },
        "item": {
          "id": "3969bd11-75a4-4cbd-aee7-443d4bc616fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cfa3d0f7-5351-499d-a876-7c8f03944d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1681327-8543-4efc-80a8-3a939896d44c",
        "cursor": {
          "ref": "bb3b534a-9585-4ee4-a5bc-1556450ddda9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6dc55809-4399-43cb-bc82-d8748e0c7adc"
        },
        "item": {
          "id": "f1681327-8543-4efc-80a8-3a939896d44c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b622481-6b1b-48d7-b1cd-aac6353aa7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef043930-14c8-4b9d-9fad-e4ca94225ee8",
        "cursor": {
          "ref": "4fdd1780-8bcb-4e62-bfce-298d2838a33a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f7d4fc02-3817-4990-aa9c-9f8c8c5d37fb"
        },
        "item": {
          "id": "ef043930-14c8-4b9d-9fad-e4ca94225ee8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "918a7158-a155-440c-83ad-c9bc071da49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420bd026-bdd0-4b87-b98d-b3b44338d105",
        "cursor": {
          "ref": "e090f742-6b2f-407e-8d32-75bfa9a7a2cc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a0ed64b-8e74-44c8-89f6-9f0dfde04710"
        },
        "item": {
          "id": "420bd026-bdd0-4b87-b98d-b3b44338d105",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c5e81e6-c2bc-4dec-a959-ad91c4709356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f976455-839d-4037-bdd0-875784661495",
        "cursor": {
          "ref": "83a3fcb1-ed07-434d-9915-55316a019d50",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1450d7a4-48aa-44cd-913a-d2bae58fcb7f"
        },
        "item": {
          "id": "9f976455-839d-4037-bdd0-875784661495",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bf06e2d1-ca7d-400f-b7bf-a82b07305852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eea3a7-96ad-4de6-be91-1e3aff3a5733",
        "cursor": {
          "ref": "305e740c-006b-4640-8b69-67819abecab4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f58a8e59-26a8-419c-b5ae-418742bfcd0b"
        },
        "item": {
          "id": "75eea3a7-96ad-4de6-be91-1e3aff3a5733",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9c7379b1-407f-4eff-b45b-2ceb01dd9d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2c7e4b-6210-465a-a769-fa79ec58733c",
        "cursor": {
          "ref": "a2779106-842e-4d91-ad49-3f59298ccdb3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c012318f-ad29-4a2a-b5fa-dcc1f04ba2c5"
        },
        "item": {
          "id": "3a2c7e4b-6210-465a-a769-fa79ec58733c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d767d772-c24d-4e82-af3c-9be15165b746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ad0ffd-db5d-468e-849e-a225141db5a0",
        "cursor": {
          "ref": "2a51e2f8-9a96-4f25-bf26-f6b44da87989",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "52d37cf4-0525-42d7-8d62-840a4db657d1"
        },
        "item": {
          "id": "c9ad0ffd-db5d-468e-849e-a225141db5a0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c4e62fb5-ced9-4038-8aac-4f4569486769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae89b3-68d4-4551-97ef-92183270611a",
        "cursor": {
          "ref": "9485f1c6-71f8-4fba-88e2-63fa3d29b7b6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eeafde5b-72ac-4700-a2a8-339872ebc718"
        },
        "item": {
          "id": "13ae89b3-68d4-4551-97ef-92183270611a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6ef8c70a-6c0f-43f5-96b8-d5bbc63daf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d1aea1-9265-4cfb-897a-f3bc5d75d8da",
        "cursor": {
          "ref": "b844387a-5afb-4e04-85da-00c897c5ffa1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "99a88f9e-f2f9-47c6-a738-3243f5d7d7c8"
        },
        "item": {
          "id": "06d1aea1-9265-4cfb-897a-f3bc5d75d8da",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3d2dd25e-7fa1-40e8-a95f-8133ecea1b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d752b2-13f1-4b00-b9ae-7d3bb6f22b9c",
        "cursor": {
          "ref": "68759445-5136-40ae-84ba-2e2ca8b0cca9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4be71bd9-fd99-43e1-bac1-7cfea7751777"
        },
        "item": {
          "id": "28d752b2-13f1-4b00-b9ae-7d3bb6f22b9c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "efbee848-79f5-46fb-b5fb-f9960c88a6ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d23b0a-4bfc-441c-945e-6fb8f64e0a8b",
        "cursor": {
          "ref": "860a2f08-b02a-4682-9e91-2cd917a987b2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "86556476-1313-4802-acd9-b425b1e0b776"
        },
        "item": {
          "id": "62d23b0a-4bfc-441c-945e-6fb8f64e0a8b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6eee0529-f270-412f-afc0-467ebd431cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d4b812-5867-44c1-9b8e-553642db5041",
        "cursor": {
          "ref": "50dc301c-a785-462e-9d08-d407dfb6c2b6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb4354ba-fb43-4f43-9d3e-bc227fbad9fc"
        },
        "item": {
          "id": "b3d4b812-5867-44c1-9b8e-553642db5041",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "023213b0-2dda-46c8-a0f5-541a8f713db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e569b2e6-21d0-42d8-a0d7-ef0279876be7",
        "cursor": {
          "ref": "7093ddef-d29e-4454-a4e4-9e056909fc6d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3bc743d6-2e1e-41a5-baa0-e5e5e6c11f77"
        },
        "item": {
          "id": "e569b2e6-21d0-42d8-a0d7-ef0279876be7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fa5b32f0-eaac-4ce9-8f20-36062475e939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be86ba5-daca-402d-8d01-77af1d2f4af6",
        "cursor": {
          "ref": "764c1623-07ac-4696-86ef-dc76346fe913",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f40ac461-2377-4985-ae99-03915f0be817"
        },
        "item": {
          "id": "0be86ba5-daca-402d-8d01-77af1d2f4af6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c949936a-f3c1-4e80-936c-5218835b3522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e3e579-d799-4255-bf0a-c5e2b6e0d997",
        "cursor": {
          "ref": "4f526a64-356d-462e-9058-7af208179332",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b3b969d4-81de-491e-b576-3292dddbf113"
        },
        "item": {
          "id": "a2e3e579-d799-4255-bf0a-c5e2b6e0d997",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3c11b806-3f0e-41e3-98be-d23acd27e3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e03d171-3a83-4f2c-b76e-807d8ba3e182",
        "cursor": {
          "ref": "e95107a3-addf-4062-97db-c692413f654d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "31c43cb3-cab1-4382-87c7-ba445fce2bf9"
        },
        "item": {
          "id": "7e03d171-3a83-4f2c-b76e-807d8ba3e182",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cc355526-8c09-47e3-b2ad-1f91820d94e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2cc1e5-b0db-4498-9061-cf0469437754",
        "cursor": {
          "ref": "4f52a555-7b0e-43fb-9c38-5238e175aca0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "89e3b44c-fc32-4b8c-bc81-ebeb3272f735"
        },
        "item": {
          "id": "bd2cc1e5-b0db-4498-9061-cf0469437754",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e2d685ab-9308-4ba1-9b3f-61ecbfa7e3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43682636-8777-4e43-8d7f-7c72101e3d2f",
        "cursor": {
          "ref": "3cfd94c6-704c-48ea-b41e-3d619603a24f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c15ebeac-8432-48cb-b2fd-a0a74e42715d"
        },
        "item": {
          "id": "43682636-8777-4e43-8d7f-7c72101e3d2f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b3c0771a-5188-4b24-b957-01755d3f040b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769fa194-d5f3-4089-bf5b-0a7b17416858",
        "cursor": {
          "ref": "722250e0-fb9a-4942-8690-036f71b9d6ea",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d840bc2a-61f2-4934-b977-b3b368fd001f"
        },
        "item": {
          "id": "769fa194-d5f3-4089-bf5b-0a7b17416858",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ff695ed6-475b-41fd-8635-a3309781fb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cc41c2-4612-49f8-9fe3-ada049649e7a",
        "cursor": {
          "ref": "49f2b87d-da86-48af-b158-24c17cc97c7e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "547b4ba2-fb65-4136-a0f5-17a10eb917f6"
        },
        "item": {
          "id": "34cc41c2-4612-49f8-9fe3-ada049649e7a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7e60020-8567-4ce5-a4f0-ed600e5f302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018e404c-e748-4211-8ba2-579c5fe3854b",
        "cursor": {
          "ref": "d736c6a2-b839-41e1-8ae2-7611840d8887",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "701f5266-3489-4939-b9af-59cd593924a4"
        },
        "item": {
          "id": "018e404c-e748-4211-8ba2-579c5fe3854b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "25e6694d-c77d-435d-babf-05714162f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a44ea4-bdfd-4af1-a103-b3cbc938bf2d",
        "cursor": {
          "ref": "c1cd2030-938e-42fd-8143-e0a9c883528b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a4285a9-ca60-45f4-a825-d6ac03efaff8"
        },
        "item": {
          "id": "e8a44ea4-bdfd-4af1-a103-b3cbc938bf2d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "136f534d-72ab-4705-b103-a5694bddc297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3a6968-c7cd-4415-bbf3-6b5e466e244f",
        "cursor": {
          "ref": "6be777d2-c006-48eb-904e-98b5beef4c50",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe04bf3a-b42a-44b2-8d37-489b0f4b0607"
        },
        "item": {
          "id": "1a3a6968-c7cd-4415-bbf3-6b5e466e244f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a0cb1d39-189a-4b54-8091-80349d5112c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cef76e-1811-42d9-babc-50d839b3af71",
        "cursor": {
          "ref": "17d28120-7053-43d2-9f66-9a45a04e041e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dc2e86cc-798a-4d2e-9f20-c87a6e4e8de1"
        },
        "item": {
          "id": "58cef76e-1811-42d9-babc-50d839b3af71",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "de57a6a2-f9c5-407c-ba4d-9c5ad74584ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53903115-818d-41e0-8a43-32b547a4dfc6",
        "cursor": {
          "ref": "002c1b7a-edc3-4ded-a3ce-84ba82d23710",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c9cb86df-9ceb-4f07-8f8b-504e4120a967"
        },
        "item": {
          "id": "53903115-818d-41e0-8a43-32b547a4dfc6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6d280bef-ac46-482b-a3e0-9860bb463eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452a9653-a104-4782-b853-b1c5fea3bc50",
        "cursor": {
          "ref": "6b220ad4-5aa7-443b-940f-f77f2e93c044",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0fe095bd-5152-4b9e-badc-69bf70235029"
        },
        "item": {
          "id": "452a9653-a104-4782-b853-b1c5fea3bc50",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2e0a24a-a0ae-43f3-be41-e43ae4edd196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07009de-ad91-4ca7-86f7-aa3106fdf3e9",
        "cursor": {
          "ref": "beeeddbf-c0f0-46d7-8688-2a2168a7d4a3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9fd2528c-5f83-4fbd-8162-f8c3464fd721"
        },
        "item": {
          "id": "f07009de-ad91-4ca7-86f7-aa3106fdf3e9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a29a0355-a09d-4d55-92b1-6c97b3e9773b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfbc330-a69a-4bab-9639-f261f588909f",
        "cursor": {
          "ref": "78bd9cfd-6e9d-480a-9014-bad2ba88caf5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e874bc6f-f345-42d9-8472-aff387ec120c"
        },
        "item": {
          "id": "9dfbc330-a69a-4bab-9639-f261f588909f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d2b30ade-b244-46cb-adb9-24cb9c69d0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bff58f0-cf68-44fb-9560-bb38eb5b6458",
        "cursor": {
          "ref": "c72e0dd8-b457-4c56-840b-684dc54ef959",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6a1046f9-5080-405b-b1d3-bc9dd1027f70"
        },
        "item": {
          "id": "3bff58f0-cf68-44fb-9560-bb38eb5b6458",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "732e8e72-e02b-4bc4-a527-43cd1a8ec931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02e7046-fefa-4401-8205-4b8dde197730",
        "cursor": {
          "ref": "68ae739f-003e-4f07-a4d9-6afd207d0007",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83ccef39-18f3-416a-be98-df16409c8f7b"
        },
        "item": {
          "id": "a02e7046-fefa-4401-8205-4b8dde197730",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "61d3b818-c236-444b-8c48-2760c51df5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8973e0b-e8ce-4f26-a135-8540618457a7",
        "cursor": {
          "ref": "979746bf-42d4-4f16-8447-8838b5abbc9c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "16aee503-7a02-464e-a33e-4d60429a8e45"
        },
        "item": {
          "id": "c8973e0b-e8ce-4f26-a135-8540618457a7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cba035c1-d9dd-4568-92e4-1979fcf9bda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e63c3d-f42c-4d78-b7e7-8880ba3c008b",
        "cursor": {
          "ref": "817a5990-db99-4259-8a67-f6817000d1e8",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5a788f4d-3112-4816-a88b-ad990097534d"
        },
        "item": {
          "id": "c4e63c3d-f42c-4d78-b7e7-8880ba3c008b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a3f69ad-917b-4200-a394-f8dc6779ee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84db20b1-f497-446f-9dc6-498bedbe261f",
        "cursor": {
          "ref": "69ecbfb0-f64a-4328-ab01-689a390af391",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "19940dc9-f4d3-4b7b-88fc-c9df435126c3"
        },
        "item": {
          "id": "84db20b1-f497-446f-9dc6-498bedbe261f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "61c7f283-7977-4af1-9b8b-2c01ac3741a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f147558-6b64-415a-ae47-e3ff831a0850",
        "cursor": {
          "ref": "ee113a86-79f9-4210-a49e-791a42e18594",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "121c7fb2-6abc-4e14-aacd-6b82a928f3ea"
        },
        "item": {
          "id": "9f147558-6b64-415a-ae47-e3ff831a0850",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d102d41b-a8fb-43a9-a5d7-3ce53e58fe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bf5742-3ebf-429e-9ec0-ac9b7225e716",
        "cursor": {
          "ref": "946288ad-d529-4499-bfc5-150647cfd71c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "df4e33bf-a91e-406f-b63b-06288ece002b"
        },
        "item": {
          "id": "e3bf5742-3ebf-429e-9ec0-ac9b7225e716",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d27dd679-ce47-4d6d-9db9-e2bf05920a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf0f8f7-2194-4ad0-94cb-d6ae61f8d7b0",
        "cursor": {
          "ref": "d6a0e8df-cb4f-4b8c-8e89-1e927de1bd9f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3ed57fa5-faaa-4e06-886d-c05709b030cf"
        },
        "item": {
          "id": "4cf0f8f7-2194-4ad0-94cb-d6ae61f8d7b0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "35e3d87a-c78d-4146-9be4-d337239327f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b39b8e-1524-41a4-82c1-e604841c16b5",
        "cursor": {
          "ref": "bb8dfb75-8631-4a70-81c9-fecc26a53cfc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e174064d-0f23-435e-856e-e42faab1167b"
        },
        "item": {
          "id": "56b39b8e-1524-41a4-82c1-e604841c16b5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "951a63c1-7279-4371-a70c-317522c848cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb83660-db7c-4427-b8d0-7e6c9d8b7eda",
        "cursor": {
          "ref": "493c30a5-140d-4247-a498-f4edaaac5271",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9aec5709-c5b8-4cf0-82ea-6ad059b88a23"
        },
        "item": {
          "id": "afb83660-db7c-4427-b8d0-7e6c9d8b7eda",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "332af236-caaf-4953-b7f5-5534773a9350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9520dfd1-3bd2-4838-b1d3-1c9ea11b6819",
        "cursor": {
          "ref": "f508501f-842e-4183-9986-f2a77326798e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f45e85b5-c2e6-4831-8b98-22ad75bfc63b"
        },
        "item": {
          "id": "9520dfd1-3bd2-4838-b1d3-1c9ea11b6819",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "12e2a183-16c3-4984-94ec-808998843814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe5c39f-3612-4432-9af5-e156d58c6a89",
        "cursor": {
          "ref": "e5fb06ac-1044-43a2-a461-998066e9a8a7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "02323ebc-65be-4ddb-8b5a-23a096721796"
        },
        "item": {
          "id": "bbe5c39f-3612-4432-9af5-e156d58c6a89",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b116bcf4-ecaf-4f75-9233-03c9b5f54189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0602eff-c43a-44cd-8480-5f561fef54e6",
        "cursor": {
          "ref": "6be0710a-ff87-4880-bb23-16c5f0df0cdd",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3ef7f9c9-3467-423c-a99f-57b2999d4d05"
        },
        "item": {
          "id": "d0602eff-c43a-44cd-8480-5f561fef54e6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "41717ab2-74aa-483d-ba4f-0cbc230f70da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b540e3b7-a284-449d-9d9f-4af8b630de39",
        "cursor": {
          "ref": "4dfda528-3910-430c-ae88-0225f255c04e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "585c69aa-f1c3-4c31-abb9-08a08ee22883"
        },
        "item": {
          "id": "b540e3b7-a284-449d-9d9f-4af8b630de39",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3ff3bf29-5578-4820-98e2-cfb35d0985df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf08d0-7e8e-40e0-aeb8-026204445d9b",
        "cursor": {
          "ref": "4633ee5b-bf86-488f-93c5-a341a2c154f7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4de47fbc-f7d9-4625-b875-fb08207b2bb0"
        },
        "item": {
          "id": "c1cf08d0-7e8e-40e0-aeb8-026204445d9b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "56bb5b36-7185-4769-921c-b96b918e489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46fc104-b566-4d3c-805f-42bb9e39d2c7",
        "cursor": {
          "ref": "8bacc104-6929-4571-9bf4-32738d074867",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fd17a450-0881-4522-b1c9-a6149e3494f8"
        },
        "item": {
          "id": "d46fc104-b566-4d3c-805f-42bb9e39d2c7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "faaca99f-b232-47c4-9ad2-2fc964f348fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c3d85b-be73-4ae0-8dc6-073da521b96d",
        "cursor": {
          "ref": "8c4b976c-d90d-4d1f-9a8d-e9a1524d4bf9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2320e6b3-367c-45ec-92ab-cfa7afddbd5b"
        },
        "item": {
          "id": "10c3d85b-be73-4ae0-8dc6-073da521b96d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f04efb01-3edd-4a48-9250-84580e264b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd776519-b48b-4478-9151-5cca2deda42c",
        "cursor": {
          "ref": "f18d28aa-d5f5-46fa-bb41-cfd9aa31da4e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c37c899e-d731-4e4e-a0f3-9451d94bfb38"
        },
        "item": {
          "id": "fd776519-b48b-4478-9151-5cca2deda42c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3f6ce22f-754b-49b7-a419-e546073fa212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5ce777-c462-4c8c-842e-4df6b06a0da9",
        "cursor": {
          "ref": "7b6c2613-a27a-4f66-8ff0-2cdbcd5b9ffe",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cdee1de9-acf3-421b-bf1a-0e67baa16404"
        },
        "item": {
          "id": "9a5ce777-c462-4c8c-842e-4df6b06a0da9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "433e91be-913d-4a57-8b0d-fd7205c8b8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331385a-e70b-469a-aa6b-d007bf073174",
        "cursor": {
          "ref": "4e2fa065-1753-4e95-aeca-6887e1f17a52",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0d2b7273-792f-468f-bca9-f06547fec528"
        },
        "item": {
          "id": "6331385a-e70b-469a-aa6b-d007bf073174",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b947a5a3-18b8-4fb8-b835-d1ceea25d5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af168ee2-961c-40a8-8c2f-9693ea82c308",
        "cursor": {
          "ref": "ce74d45c-070d-4cd1-bc9f-6cb881646cb5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f51a145-dead-4282-b141-5164b0e66ca8"
        },
        "item": {
          "id": "af168ee2-961c-40a8-8c2f-9693ea82c308",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b8666065-5712-4f8d-92a9-ffea4ef0d6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7927954d-24e5-4d77-9554-19c91708a8a2",
        "cursor": {
          "ref": "86267120-c3ef-449e-9bf3-0ce0ee5afdf8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b0b907a1-f8d3-40f5-9c8d-09f3cf9f623a"
        },
        "item": {
          "id": "7927954d-24e5-4d77-9554-19c91708a8a2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2033315d-16ef-4dbf-9de6-dd1a7026bf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b555c9d7-b691-4b02-8a1f-60a9cb81165f",
        "cursor": {
          "ref": "0d5e6079-07bd-4cd6-b6b1-d9429f941f33",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5d82d699-4445-4ea9-ba25-6e8db0b3d248"
        },
        "item": {
          "id": "b555c9d7-b691-4b02-8a1f-60a9cb81165f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee694314-94c6-4199-b20e-844573f3272f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb400389-8ced-44fd-9bde-aa65567f8873",
        "cursor": {
          "ref": "19d32fc3-e73e-46b8-ab2b-202c496563de",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3759d547-9dac-465a-b50f-361f8b47354e"
        },
        "item": {
          "id": "eb400389-8ced-44fd-9bde-aa65567f8873",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "75ad1856-b0ff-4507-8b0f-79d75c1c2364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f484e51-ff65-49fc-9765-ddf9708f1465",
        "cursor": {
          "ref": "8fc5bf77-7b9e-4bee-99d4-c09b58cd24a7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0df5f82a-ecb3-4eb7-809b-e88aaa65a376"
        },
        "item": {
          "id": "9f484e51-ff65-49fc-9765-ddf9708f1465",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "890e2a46-b5a3-4ad2-b082-60114d84857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf60d754-dfb3-447b-97b2-43d88624544e",
        "cursor": {
          "ref": "e31c5745-2b05-4a19-ab8c-445d881eb329",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4951c745-c4cf-4f6e-aeda-fffbacc604cc"
        },
        "item": {
          "id": "bf60d754-dfb3-447b-97b2-43d88624544e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "953d7018-3b15-4a68-b689-60015a71de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfa47ae-51af-4efa-9dd4-209b89768b86",
        "cursor": {
          "ref": "8b17cc85-43f0-42ed-a8ce-473691829494",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3e2dd617-6698-493e-a667-0f7ffe9ada62"
        },
        "item": {
          "id": "1dfa47ae-51af-4efa-9dd4-209b89768b86",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "51d7083e-fa8f-404a-ae55-5408e718a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6bb81c-5a1a-4c32-8a43-8e64ec273b7e",
        "cursor": {
          "ref": "5668f005-0c60-466f-9e44-3127171c969e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "342e75b8-4b52-4d34-84f2-221a0100a7be"
        },
        "item": {
          "id": "2c6bb81c-5a1a-4c32-8a43-8e64ec273b7e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "162dbe27-11bd-4af8-a9a2-f183e6aa2e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bf37fe-56d7-4e7c-97fe-3249f86bd4f5",
        "cursor": {
          "ref": "1a82768b-a405-4f86-8e9a-93f9f18de1bc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "08067f3e-492b-434a-8a2a-5311773d43c4"
        },
        "item": {
          "id": "16bf37fe-56d7-4e7c-97fe-3249f86bd4f5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8807029d-9480-4f02-bf50-2142343fe37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea372d0f-172f-49d7-94cb-e9a3c3688821",
        "cursor": {
          "ref": "db9e6353-2451-44fb-a8fb-10ffa2b70571",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cd39a228-01b7-4a8c-97d3-0b92d8459533"
        },
        "item": {
          "id": "ea372d0f-172f-49d7-94cb-e9a3c3688821",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c876b84-b0f2-4117-9aea-5023a509edf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955ff3dc-ced7-4502-bae9-15a5dfa90ebc",
        "cursor": {
          "ref": "65406cc8-1e4a-483a-9e52-39dafef3bd05",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d9da7a5f-7972-40b9-8848-71b7dc31b782"
        },
        "item": {
          "id": "955ff3dc-ced7-4502-bae9-15a5dfa90ebc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b472bff3-4beb-4250-b597-1e563d3a1b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d9e43d-9e15-4e48-b3d1-0adfc25e27c1",
        "cursor": {
          "ref": "c1f8cadb-2628-4886-98b5-a6afd989bf87",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f351c446-f627-4330-82f7-84e98ad4e3f3"
        },
        "item": {
          "id": "26d9e43d-9e15-4e48-b3d1-0adfc25e27c1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5266cfb2-00c9-498d-9740-4969f29a3821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03602d90-eb5a-4ddb-9a90-79f490fe5580",
        "cursor": {
          "ref": "ab161109-8206-4ddb-9646-1c586fa5d388",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "81ce1c57-bafd-4a79-85dd-00e71f37fa05"
        },
        "item": {
          "id": "03602d90-eb5a-4ddb-9a90-79f490fe5580",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4c0d99e0-ae08-4354-ae25-3296437300da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9d1d19-bde8-4df2-9239-c7e5b2edf9e9",
        "cursor": {
          "ref": "ef7c8f3d-a7bb-47c9-ae3e-12a421e96759",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "affecc5b-76e7-4cd5-b52c-369cc6e13418"
        },
        "item": {
          "id": "9f9d1d19-bde8-4df2-9239-c7e5b2edf9e9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "00d0c7af-b6c4-4ea6-83c5-8e4c68560ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b3e284-5bed-4a5b-8a33-e8aabead2248",
        "cursor": {
          "ref": "7e14b2c6-6036-4ad4-8cb3-02077dc4e4cd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ebb94bef-8616-4f7a-b3d4-946655ed2aeb"
        },
        "item": {
          "id": "f5b3e284-5bed-4a5b-8a33-e8aabead2248",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f201e18c-01fd-4e0d-8129-92d921e4e2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad835533-c417-4a4d-a56b-c2995b067ea9",
        "cursor": {
          "ref": "b100acd7-4a0a-4eb8-9ec4-071bf19c02c6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "67a234c5-d676-4d18-950f-419e1b9fbafe"
        },
        "item": {
          "id": "ad835533-c417-4a4d-a56b-c2995b067ea9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f755b8be-6ecc-4c71-957b-0c8b1cd7d8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a596acb4-bf0d-498b-afe6-3f13ff3db185",
        "cursor": {
          "ref": "7ccc1a23-5699-4413-a1d4-69af78520967",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3cbdc0c0-f43a-4662-a98c-f6bfd428fce0"
        },
        "item": {
          "id": "a596acb4-bf0d-498b-afe6-3f13ff3db185",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bd29e3f8-1c70-48fa-b9fa-ee4d621d95ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f30fda4-131c-4de8-9297-f03e594f7338",
        "cursor": {
          "ref": "ddd91fce-5636-4bff-af93-f455b1abd8a5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2de5efc6-e8e0-40ac-ad4e-fbf00a0bf604"
        },
        "item": {
          "id": "8f30fda4-131c-4de8-9297-f03e594f7338",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "512b43cf-1009-4708-9101-e0034bb03739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6ca015-e229-46ff-8922-7e2f26d4e7cf",
        "cursor": {
          "ref": "77a07c54-67fc-4bb3-bab2-6c0d9b6e696a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "46b74159-a480-4e2e-8762-7759946f6f76"
        },
        "item": {
          "id": "4b6ca015-e229-46ff-8922-7e2f26d4e7cf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3e8ee81f-ea36-47c8-a082-57a9374d352d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e44bf8b-6039-4aff-809e-7432c7b4f47c",
        "cursor": {
          "ref": "48082af2-51ce-4f5e-ac03-6fcb42680f74",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "73d495c1-fa4d-4839-bc4d-4fa38c9d7264"
        },
        "item": {
          "id": "5e44bf8b-6039-4aff-809e-7432c7b4f47c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1447d219-e3a5-4fd4-9fc7-a358d0ea054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b024f7b-a4dd-41bd-a46d-823f68503b2c",
        "cursor": {
          "ref": "cf9ec051-3fb2-451c-9d20-e4ffa078e91b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5f577b09-215b-4664-99fc-e3b9a716669d"
        },
        "item": {
          "id": "6b024f7b-a4dd-41bd-a46d-823f68503b2c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "166d03e3-3364-4f96-bbee-871975252851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfb6a54-c562-48b8-b66d-14b45f9aa811",
        "cursor": {
          "ref": "d1f363d8-db6a-41bc-820c-6eff2d62231b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "28934686-4aa8-4b7c-b734-e3bb4f78fb66"
        },
        "item": {
          "id": "dcfb6a54-c562-48b8-b66d-14b45f9aa811",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "13569a05-fded-422f-9b2f-28c70146bb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafd9170-26f1-4d4b-b96e-07494ff31c4c",
        "cursor": {
          "ref": "18a893e9-65f4-4db8-b0c1-571a7c47f240",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6ac9862f-26cc-4420-8f18-56fb04bab285"
        },
        "item": {
          "id": "cafd9170-26f1-4d4b-b96e-07494ff31c4c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a281a811-da1c-45b1-aa7b-4ca861c4b18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1885b8-022d-4a13-9894-b678aae5c06e",
        "cursor": {
          "ref": "24b68f1d-5229-48ad-b85a-34db23eb969c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b4c0cbc4-5a9c-4c62-b48f-b27884b25740"
        },
        "item": {
          "id": "7a1885b8-022d-4a13-9894-b678aae5c06e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8ab70731-5b0a-43e4-b628-276aeafea391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fac08c-0bb6-4915-beda-83534439ad9e",
        "cursor": {
          "ref": "76eb60aa-f807-4fd5-9377-cc64c3d459ea",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6b8b1155-0cf2-4ff1-951a-5125bdfd9d8b"
        },
        "item": {
          "id": "79fac08c-0bb6-4915-beda-83534439ad9e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "162eb344-4b6a-403b-a8d1-be6f187d8bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ec30a0-b774-42db-9e26-c6ad33461ce5",
        "cursor": {
          "ref": "d8511cd7-cac8-496c-b896-ea8b118302ef",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ef21e1c0-d6be-437e-be01-0c6b238fb020"
        },
        "item": {
          "id": "e8ec30a0-b774-42db-9e26-c6ad33461ce5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d42f43a8-27c3-4bb3-89cf-4a322f0f742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246e73b6-8a77-41a1-8f01-f6ad24b260ae",
        "cursor": {
          "ref": "8609b45c-e0ff-46eb-aa37-44a7f4a244a0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "999fef11-46fe-4c1c-844f-8267c5c8404b"
        },
        "item": {
          "id": "246e73b6-8a77-41a1-8f01-f6ad24b260ae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "10c816f4-aaf4-491d-b136-07b1cbfe0576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f184f-c13d-49e2-ac1a-4e3e169c7b77",
        "cursor": {
          "ref": "0924e042-4271-4329-84ae-1d384edd0db5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "42fe2cb0-d583-4d22-8067-d2d397036f7e"
        },
        "item": {
          "id": "b20f184f-c13d-49e2-ac1a-4e3e169c7b77",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5ac1fca9-7a60-4c30-979f-b65a6edcbc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34a55c6-e7b1-4ed2-8588-fce53c1fd834",
        "cursor": {
          "ref": "5784966f-8311-4220-91d4-af99b09040d8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd1e5b67-885d-4564-a2a5-f4e84b81a599"
        },
        "item": {
          "id": "f34a55c6-e7b1-4ed2-8588-fce53c1fd834",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "aa7f4245-7b22-4d5a-b893-af66273dee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719927fa-4d71-4af5-8753-6c20b400d000",
        "cursor": {
          "ref": "4d6cd2cc-f60a-429b-998a-83d9aaf154e4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0caae727-fc31-4ac8-8f76-a017e25899e7"
        },
        "item": {
          "id": "719927fa-4d71-4af5-8753-6c20b400d000",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d7b23360-7c69-4b55-8aea-0933eda4ed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2857329e-2875-4620-8208-8d41da9c9a9a",
        "cursor": {
          "ref": "d9621d22-58b7-4821-bd62-94a0af48f919",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ad815425-2f5c-41b8-88be-c619e627ba20"
        },
        "item": {
          "id": "2857329e-2875-4620-8208-8d41da9c9a9a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "852f0b2d-abea-48ff-8a06-f160acaa61e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13154c40-ba1e-4fe6-8b52-ec4dbe981f1c",
        "cursor": {
          "ref": "650c5ffe-0119-401b-ae37-784093347de2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a550190f-5c4a-440e-a923-ddf9be83a08c"
        },
        "item": {
          "id": "13154c40-ba1e-4fe6-8b52-ec4dbe981f1c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "24cb937b-a636-4c47-8f9c-fcd3b15371bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8e2425-9d92-4f00-9350-b94721c2baac",
        "cursor": {
          "ref": "68062f4f-e725-4075-bed6-c8e2dc223b6d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b2f54078-6506-4f7b-92e3-c257ea3838d1"
        },
        "item": {
          "id": "6f8e2425-9d92-4f00-9350-b94721c2baac",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dc00c61f-aae7-4192-b0df-959d58caa14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5047bf8f-8a5f-4665-9e08-050c262a4600",
        "cursor": {
          "ref": "42cf354c-c5f6-495b-b65d-6ff73f574690",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1a294803-a9cf-4e69-bbaf-ba81499ceaf4"
        },
        "item": {
          "id": "5047bf8f-8a5f-4665-9e08-050c262a4600",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "33476d7f-69ca-4098-87a1-de787ff6f76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f440d0-6c10-4b6b-a8ce-1a81d938061d",
        "cursor": {
          "ref": "f579c369-9071-4bbf-80e8-5660b06eef63",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "92614473-9cf0-4f5a-a780-7f598dfae414"
        },
        "item": {
          "id": "a6f440d0-6c10-4b6b-a8ce-1a81d938061d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f1dd8566-119a-463a-ae05-1d7cbd6b0c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddd3f36-d9a5-4b58-8fae-e0b8c9ea120f",
        "cursor": {
          "ref": "74f7dd99-3ea8-48e0-994e-ac882d7f9d12",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "385b3714-8d83-4f27-aa93-2932cce37278"
        },
        "item": {
          "id": "fddd3f36-d9a5-4b58-8fae-e0b8c9ea120f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2aa5cd59-0bf4-4155-a3c2-f7a31a89024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30356669-8fe1-4c5f-8b39-087b14d8beeb",
        "cursor": {
          "ref": "a20e341d-6420-4044-8ea4-a1acc9a74c56",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "55a60515-b65f-433e-aee9-0ede01364b32"
        },
        "item": {
          "id": "30356669-8fe1-4c5f-8b39-087b14d8beeb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a6497727-b047-49b4-b95b-ef7c247c1f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5613ca1-3043-4ca7-bb24-05cae7942f73",
        "cursor": {
          "ref": "38af2c55-e7d7-43a9-9256-7b83f5e916c5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df32699d-6de0-4418-88d0-c1ee827c20d6"
        },
        "item": {
          "id": "f5613ca1-3043-4ca7-bb24-05cae7942f73",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a3d542b7-a522-463c-a6e1-076559b1f26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f458bede-5d0a-4325-a10b-de9c404ee765",
        "cursor": {
          "ref": "8c4c0411-501d-4051-a642-bf8590dfcc67",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b445ddbd-135b-403f-8495-6c7c91273ca4"
        },
        "item": {
          "id": "f458bede-5d0a-4325-a10b-de9c404ee765",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4eb1f4d4-40a2-41c9-977e-1b3ffcfbbbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffcc8c7-79c9-4255-a4cc-1b752d5a310b",
        "cursor": {
          "ref": "e3bcab50-4c41-456b-9742-312c322eefaf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2c37e669-f321-4f85-a619-b3170da26abc"
        },
        "item": {
          "id": "6ffcc8c7-79c9-4255-a4cc-1b752d5a310b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e3b6a33c-3c25-4622-a7d7-5cf7d792bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b51c16-7bed-4c03-8ae6-65eed1ccf525",
        "cursor": {
          "ref": "8dd4659b-b1f7-453c-84e4-d5d53ddfca61",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ec61dd03-7337-4f0e-9fee-f704bead46c1"
        },
        "item": {
          "id": "40b51c16-7bed-4c03-8ae6-65eed1ccf525",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e098ff20-17d5-4455-b980-e16ac7f114fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c35fe3-7235-4652-bd80-8206004f9795",
        "cursor": {
          "ref": "afb32217-36d5-4e6f-8b9b-b1c3806a086f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "093db25f-1d61-4adf-8398-85ae38b9f5ac"
        },
        "item": {
          "id": "88c35fe3-7235-4652-bd80-8206004f9795",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1f552151-b57a-4a8e-9fbb-0f2bb020e0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69c13b6-063f-4c50-b167-bc1973fd6f9d",
        "cursor": {
          "ref": "ef3a2d14-b91b-41d9-950b-e8a3bd51e170",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a548e757-1205-4c2f-81b3-63bb3231390b"
        },
        "item": {
          "id": "b69c13b6-063f-4c50-b167-bc1973fd6f9d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c7d56d5b-2218-42f0-9183-e03d027b04d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b74dabe-9dd1-4588-abd9-30f54bee9aeb",
        "cursor": {
          "ref": "4a93c271-62c0-40d1-9305-e21c4cc27069",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1dbe3251-3c45-4eba-9be7-de7955b0c316"
        },
        "item": {
          "id": "0b74dabe-9dd1-4588-abd9-30f54bee9aeb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a73b2fc9-7cd1-43da-8c0a-db641c5134fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a3ed95-adc7-4f75-a98c-13756a6e1fe7",
        "cursor": {
          "ref": "bd2115dc-3368-402f-9100-5a5d2ca1c336",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "22b815f3-4a12-4ef0-8d1b-2ccbc6929f36"
        },
        "item": {
          "id": "b2a3ed95-adc7-4f75-a98c-13756a6e1fe7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6783d318-4603-4d59-bb35-2b24f8cdb753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4723b04e-6469-4758-bf0a-44f16e6cea6c",
        "cursor": {
          "ref": "3746663c-56e7-43b9-bc3e-6ebc43902d7f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73e186b6-a039-4b94-8e44-94bdc1426fe6"
        },
        "item": {
          "id": "4723b04e-6469-4758-bf0a-44f16e6cea6c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b2197d94-9717-49ad-b2fb-ccd7ebf4d04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfec4e5d-275b-4234-a039-03801eb13c9f",
        "cursor": {
          "ref": "11a72682-4bcc-4d25-a8db-69e5c3a4a43e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1435d86a-b300-4a7a-888d-a601e15085ef"
        },
        "item": {
          "id": "cfec4e5d-275b-4234-a039-03801eb13c9f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "16565dce-d0a5-44d5-9073-b73e126b979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093d0b0f-255d-4636-98a4-408834f72462",
        "cursor": {
          "ref": "f5702850-b34f-4168-81bb-d041167e2a3d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "154ce14c-2494-411c-9e21-b5308495f79b"
        },
        "item": {
          "id": "093d0b0f-255d-4636-98a4-408834f72462",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "159d7d98-4af1-4052-bcd0-26c97cd916f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c17633-40d7-4f66-a66e-8f5d7de05298",
        "cursor": {
          "ref": "2ffd1d3a-d262-4426-b030-72324b2ce7ee",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ddf1c65a-c895-4253-ba98-f64852a7820b"
        },
        "item": {
          "id": "84c17633-40d7-4f66-a66e-8f5d7de05298",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fe7ace98-dc51-49ce-9391-31a128c66a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce54d40-f3b2-49ec-8797-25dbef4cdb28",
        "cursor": {
          "ref": "66eb2e74-354a-41a6-95df-dd350600e57d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d330af67-afc6-4b01-8341-504b9a0ae8c1"
        },
        "item": {
          "id": "9ce54d40-f3b2-49ec-8797-25dbef4cdb28",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b8fd4297-4591-4d17-99c6-253537775e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb2b2a-6c63-40b0-8f11-f9b730ef726b",
        "cursor": {
          "ref": "58fd6839-ed66-4adc-a635-726549036989",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "450ceb97-6f62-4097-af19-e2e2d17d88d5"
        },
        "item": {
          "id": "72fb2b2a-6c63-40b0-8f11-f9b730ef726b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5bb5a064-aad5-4b77-85a9-65a8a2dc7470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb97df72-a993-4ef0-abf9-60cbfc283256",
        "cursor": {
          "ref": "b4a1ed75-8c62-4725-b234-30d6fbb9416e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b83e336f-b5cb-49c1-92b9-aa5d764b50a4"
        },
        "item": {
          "id": "fb97df72-a993-4ef0-abf9-60cbfc283256",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8a159c06-6bbb-4bbe-bf28-bb523943a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0adece-0e83-4bc2-82d9-bb1d84fb97cb",
        "cursor": {
          "ref": "e7259810-8532-4675-ad75-f5c9a6e7c524",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d95fec5e-668c-4c53-b8ca-ee2e66ec4da8"
        },
        "item": {
          "id": "bd0adece-0e83-4bc2-82d9-bb1d84fb97cb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ebb5858-9322-4479-b9e7-89c9d78e8991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2696ccd-7207-470f-a12c-40656b072f07",
        "cursor": {
          "ref": "0e1fdc4e-b937-4eeb-876c-76311c845a79",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d961c729-675f-4977-b96a-97187a2df8cd"
        },
        "item": {
          "id": "b2696ccd-7207-470f-a12c-40656b072f07",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "acd34ae2-7b54-4d59-b08e-5bddc242af55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfb155c-3ae5-441a-aab7-738df490386a",
        "cursor": {
          "ref": "e2390ee3-9d62-4e64-b590-f16690df852f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c48bb1d7-8b55-455a-a6b9-01b1c4014b60"
        },
        "item": {
          "id": "edfb155c-3ae5-441a-aab7-738df490386a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e483fd78-a873-4cfa-92d6-1cd417ab1a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef20672b-4524-4b33-a2ac-74aa779b5c71",
        "cursor": {
          "ref": "52709097-6195-493e-b978-9459d57070cf",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0401f780-77fc-405e-9ef5-5817bfe68f48"
        },
        "item": {
          "id": "ef20672b-4524-4b33-a2ac-74aa779b5c71",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "18520e54-385a-485b-a5da-a48bed01dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d1f771-7665-4b1e-b1e8-519674ac7411",
        "cursor": {
          "ref": "24b3060d-87de-42e3-a025-8073b7206be0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e8302dab-79a7-474e-90d0-23f8effa05a0"
        },
        "item": {
          "id": "84d1f771-7665-4b1e-b1e8-519674ac7411",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "203a3921-42bc-44f5-a729-aab9dcec13d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b333d73e-6ed9-4ba0-846a-2b1487077e79",
        "cursor": {
          "ref": "e6a954ab-5a82-426b-8e6d-33642d595106",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "93a6fe21-3d76-4f17-90c7-2d45fe37f6e7"
        },
        "item": {
          "id": "b333d73e-6ed9-4ba0-846a-2b1487077e79",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "35cc2f1c-1bd3-4d3d-9324-2f08019b8a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b0e41f-636d-4ad0-a6f2-d9e63fba3ddb",
        "cursor": {
          "ref": "16486b2d-6fe8-4239-aa37-a57fbf030cb8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b1593c6d-ece2-475f-b811-3a909fde252f"
        },
        "item": {
          "id": "63b0e41f-636d-4ad0-a6f2-d9e63fba3ddb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "92d317ec-4908-46aa-a2bf-130a5f126975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759cdbb4-f868-418b-bb10-22f09d4011e8",
        "cursor": {
          "ref": "ff96910c-7801-4608-ba5f-145fcd6ff1ef",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b8e4e3cb-b98c-4362-86fb-26a612601d28"
        },
        "item": {
          "id": "759cdbb4-f868-418b-bb10-22f09d4011e8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "76b383c7-f270-48a5-83a6-806dc9b56ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a426b31-122e-4fbf-82f7-95e062471a01",
        "cursor": {
          "ref": "8a7323e4-1c25-4436-acd4-af59ea940b8b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7245f100-e51b-4a53-a108-2b5ae803869a"
        },
        "item": {
          "id": "0a426b31-122e-4fbf-82f7-95e062471a01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "47489ed7-9f89-4a2f-9eba-cd2442edef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "8da4080b-db2f-4361-8c10-b4efbd9b4d78",
        "cursor": {
          "ref": "2b06d853-4538-4ac4-a9d8-59464395bd41",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bdd9d91a-1a80-47c3-9b18-15412533a3d5"
        },
        "item": {
          "id": "8da4080b-db2f-4361-8c10-b4efbd9b4d78",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f68c115f-434d-4ef1-9dfa-e71d905388e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "2a135517-760b-4a91-8d72-660b10230bad",
        "cursor": {
          "ref": "8b1bbba7-175a-4210-90a5-49a45d38f6f5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "935f1bd0-f2ad-4e70-b915-94e83630a907"
        },
        "item": {
          "id": "2a135517-760b-4a91-8d72-660b10230bad",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "68fb2826-dd73-46a9-b48f-1aa3e828b8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "13ac15a2-3759-4909-843b-6e8f89657790",
        "cursor": {
          "ref": "65b2d5ee-9777-4223-8724-ee0ab282346e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1496acfa-0986-4f06-a81b-54e4018461d2"
        },
        "item": {
          "id": "13ac15a2-3759-4909-843b-6e8f89657790",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f37f787-bbcb-4e10-b02d-c4fa94f4ec88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ac15a2-3759-4909-843b-6e8f89657790",
        "cursor": {
          "ref": "65b2d5ee-9777-4223-8724-ee0ab282346e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1496acfa-0986-4f06-a81b-54e4018461d2"
        },
        "item": {
          "id": "13ac15a2-3759-4909-843b-6e8f89657790",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f37f787-bbcb-4e10-b02d-c4fa94f4ec88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e8d7e-6b6c-4289-9a7f-843026caa1b1",
        "cursor": {
          "ref": "895446d9-de95-4ac0-85a5-64a673bbc88e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9f4e1185-1924-410c-9862-6ccc32bbfcc5"
        },
        "item": {
          "id": "6d7e8d7e-6b6c-4289-9a7f-843026caa1b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8df75fa3-0eab-44cf-8dd0-0cc69aed9647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b710f178-603b-4804-8176-c7a8a72e41dc",
        "cursor": {
          "ref": "3803c194-ea9f-4b05-b319-90bd813937d2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5b4b2d0e-b0b6-4e64-811e-d80261812d8f"
        },
        "item": {
          "id": "b710f178-603b-4804-8176-c7a8a72e41dc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0e7fb457-8e90-48c2-a27f-e5e29998fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}