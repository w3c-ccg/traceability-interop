{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ddaa6fda-fab3-4ca5-af76-46996a64bec2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cf828333-5d4f-4afc-8b47-df9fea29a33f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74cb4908-b845-4321-80ba-5081e6084859",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe73c208-8dbe-4d9f-86d6-af29e4749d77"
                }
              }
            ]
          },
          {
            "id": "2102b62c-65f1-4e71-b303-f947479772d3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d55b5ced-819f-4ac5-b4f3-5eaae3ffe540",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bf1a8632-b078-43d8-b07b-fca6e105504f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2941dafa-7c34-4c08-845b-a939918c552a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7cf6b716-5fe2-45aa-b913-f6ad26bb6812",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca5b8b52-6fac-499d-9df8-7b79b30fff15",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92544b81-923b-4199-be60-a8a41cc8ac37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "265c7bc8-5bb5-455d-a0b0-23acd98f8e5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b9a2b04-6600-4af2-bef6-eef2a3b2f870",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02a6d7ef-4e1c-40f1-b596-b1c61f2ec9bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7474ff74-cbe5-471f-a41d-47d7ed44a7de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb3b33b1-0cdd-4028-9c89-e8f4053a134d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76d4c021-312d-4b65-a04d-e7d3a68a50c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "58bf19d8-ea1a-4127-a1ff-b084a811661c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88be92a6-3722-4a29-8009-fac9a108126d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5641225-b442-4c09-ad86-a3d91736a7dd"
            }
          }
        ]
      },
      {
        "id": "29afc90d-98c0-4009-9395-0d509a868b30",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e0c76d6e-8c4f-4af3-8be5-e667bb111994",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15cc9004-7cce-4256-8644-50013fb57b09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f20d45d-cf50-4a5a-aebc-a4ac15434ac9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12671579-bc4a-4048-899f-6928d1481ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dee142e-2d2a-4bda-917c-680a9492be9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18129145-10b4-4781-956c-4a1c5dea3ecc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828530bb-ffea-4aaf-9212-9a6f5c29ffd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e4d74f4-263d-4e58-9bc9-052db0adbc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e817b548-09e2-4115-9553-b8b0af039935",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a38b8d-681b-48be-8b28-a15c12b0bbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9bd0673-a36b-4778-8d2d-86c73d269db3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23441935-f506-4d7c-a56e-118b7fd1c89e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09d911be-997e-46da-bd26-e9999629de62",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11c8d82-9f2a-4d57-9f21-79255b86a601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a416e970-c0e8-4b40-892b-fbb52e5b79d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8252e1-3e95-4c50-ae1c-fa2e17e5a868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b767d1-1a06-459c-88cd-4cf540998962"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0664ab36-eb84-43c6-8760-c8a33886cc7e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "292b47eb-87fd-43c2-813d-d29454283243",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81d7ca46-d0b7-47a6-b091-2579c66a6bd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aba5e7d0-4c23-43d5-86f1-d4d797ffb955"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdeb636e-72a1-4269-baa7-fd391c0afc29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8668e1e6-6480-4001-98cc-f202a4cd6dba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8e3d3ae-10fd-4bdf-836d-891d87754615",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ffc2da4-8ca1-4b09-b6a8-2827ecfe9f7a"
            }
          }
        ]
      },
      {
        "id": "4c38202d-7f78-40a5-897b-704f45549e2e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3bad7fc4-4f6b-4bce-b57b-7ce9dc9d552c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5978125e-83be-469b-93eb-8430fa7e76c8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0907b478-c293-4d84-b492-5db69772e8a5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39819e2b-70de-41ba-80d3-22d57ec5df30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3135d5-7757-4a0d-a311-52177fd868a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdac5919-823d-4e7c-a45a-2757b0998d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3de141f-7a7a-461e-ae74-b40e02253c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e21378-b35d-4f4b-a1d8-42898b44a011",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146f1583-c9da-4b7f-80b3-fad6eb59e4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067c4c0a-71b5-4588-9a53-4f2afb222d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3466f12-71c3-4b8b-b62a-3c7b709cf66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7613b41-50eb-4e0e-8d59-73af775f711b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74225e76-6f69-40e5-b23a-a124b5a5b06e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a85f271-e8b2-4e2f-ae4b-2f42ad657e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ee0ff9-c655-44d0-87d0-9dfe494cf13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4885dfaa-cd16-42a3-baa3-44d9713d31fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1624b300-dbb2-4fec-8334-62c9f2d624d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db7b875-d7cd-4ca3-b4db-26ce579a2820",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e368f13d-5682-42f6-a40d-b80603fd0d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6b7dc1-1dac-4741-acf1-18fc5a1cd22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71da32-d1e1-4eaf-a5ef-a5921ea04c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5602d357-c476-4c18-8943-684282919374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d640b2b1-795b-4937-9fd7-a51b868c2896",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493dfb59-a8f0-453f-82a0-5c4db2faed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8f821c-89a8-46f0-873e-023e330f809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a857e4a6-a52f-4232-b083-892c203ae754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40fff2b9-ffaa-4a02-827f-4c56198fb67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7598a5-0b1c-4c93-a97d-25d6b0fc1aa9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb224410-e898-48f0-aa7d-fde2910b719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc0a5fd-3f45-447c-8f94-86567a1d031d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc2d188-2625-4026-9a0e-06cb4e12f0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06150892-0b6b-4c47-89e1-54a0dafbabd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac35f98-7dc3-4b3c-928c-b217e6bb3891",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eda6e28-2a7a-4f19-878e-c6ae1ca5dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b83132-cb3d-4f54-aefe-18a9192dfc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709f54f1-a83b-429b-b469-5d431334bd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca4a809-2fdc-433d-813f-7b9452b07d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29756165-3a31-4167-a0c3-5dcc899922c8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fd5e4e-0a0b-4c4b-acbc-b80c5bb50b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e399fd-4184-4085-a2c5-b0534e22e708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4fb5d7-928d-4d71-8f00-2fb285aa4f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2bcd34d-8422-4152-85e7-ce70bd93b16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0356cc0-90c4-40ad-b192-3fd7ae9c5fcc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215e30e-93da-4272-8fb1-ee20ba82ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330cc14f-a107-4efe-ab0f-d04b74d353d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c67a5b3-ff9d-41d8-a50e-6692e95871aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3be2b8e0-643d-42eb-ab8c-7f65d5446ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b345b-7bc3-423c-8049-d234c68ac5ae",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3abcfd-6c81-4c55-a41f-122781d6a8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ecaab3-501e-4e7b-9f20-1d9b39a685ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f704ec-8a1d-4a4f-bc59-07b143770e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba75997a-229a-44af-a979-589a813b8100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a41eaf0-5432-48c8-b1dd-b314e662cf41",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb90b0ab-3758-4f4b-b40c-e8a8f8d0eff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1144eb45-7dbb-4a7a-a5ae-9b46b86dda79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee69cadd-8f3e-43c8-a583-3947e8eb358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf14d132-2b09-402c-9080-7e8f2f9dd452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14574f69-daa0-484e-9ed1-095a229ed6c9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1446dc91-284b-4584-958d-aeed01697cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1771d78c-9f65-46c1-bc1c-9d0ecc5529cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02e7c27-c033-4c6c-bb5c-7342ed2a6d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f898fa9-169f-4968-8cd9-a8598fe46310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43152c23-5398-490c-91a8-115ce5ebdb67",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4646c1b-8057-453c-8e82-e3ee8a457420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61950369-3faa-4d06-a159-415dccf44d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6049d46e-a7c1-4bd3-b577-57669ed040f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c80d8dd4-a89f-4d34-95d0-3a5f85d2498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a06d49-8918-4719-963b-91bedc2b8e61",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34503c56-edeb-4980-9a1f-7d253d03fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0022ed-b0c6-4886-a317-9e4e4cdc609e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fc9dfb-4012-41f0-a08f-462b68c8f6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93114f27-b7c5-4449-99d6-8b09a8c9adef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ae6ab7-d0e5-43e2-a404-9cbea5b61148",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaeb7ee-ed43-4e4a-ba0c-1fbdd86da250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97f9d65-1918-4f92-818b-45a16895e9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd97105-3088-4c95-8730-691c88698e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1f0483c-1921-4690-ae76-c9b2add3e0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f5102-881f-4094-8ef7-5ef2f9beae9e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158d6d73-bf5e-409d-9fd1-9c8e1df52b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580baed1-9587-4386-9410-dc87f056286d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b89514e-7dc2-4944-8856-bd475d6ac9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2272ff31-416c-4972-b612-4629dfdc16ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cb8d36-d9a8-4053-b445-0bdebd60b499",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1453570-0ed8-413b-89dc-5662b05514f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac3bbb7-ef42-4956-9a1a-c8167de8faaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355934a6-c20d-4ec4-b78c-643e3aa2546d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13fabe1c-c44a-46b1-8315-2f25bdcb0437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5908d56-7be7-405e-b8d7-7df108c9074c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c806f90-03a0-4e54-a641-68d4cf882a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936acfe8-e8e2-4ad8-a3e8-13b48ea994c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fac7bc2-cfe2-4a9a-adf1-d0a829387df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2457e25b-04ee-4a4e-a46b-f0c88b3710d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8e5c0b-6c35-4f22-9f96-c269bf989454",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9543bbd-4fe2-4f8f-94e6-b1ec6c766c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad696d73-0fa5-4317-92f4-dc0e89d7a4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981bc5eb-6d3b-4dd2-9b55-d01450346569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2255ab74-9933-40ae-bd52-e2fcc4c6d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d07945-5dd1-43c0-af72-4ef5209d8792",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9b0839-e1d5-4f8e-9f73-27b2ad1524be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cf6af3-0363-4836-aeac-2ba0d1bb72ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fb97b9-d643-424f-94e8-efe528a8dd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7530a04d-57c3-4957-baac-99e72dbf8dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb1c31c-7dab-4e50-9b18-b8913e698fcb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d7868-47ac-4cf4-9e94-cfdc19931854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690a7516-95f1-42c5-a167-d08258d462b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a95f95-b36a-407e-8c83-29932c3a0e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "005efc3b-a598-4e8e-918d-afafc65da1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ac3295-a1bb-4bd7-b249-f9392fa169d0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f9d1f1-4e3f-4416-9d26-f3c14b00e9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc99672-3b3a-464f-ae31-b4a0fad5ba77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d870f95-e27d-45b5-bfb7-a93b9b07a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c25791c-38f7-42a5-a7f7-550937f4775c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8651568c-3de9-439a-ade7-3473128ca004",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f1820-f2e6-48f5-bec1-36ada26e64b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efc2dc1-a8ad-4fd0-b2a7-028873d7760b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2524e8d7-5ac7-462e-8243-136822aa9d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43182a6d-1946-4a41-8ca4-3b97b534c2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bc2d42-bc37-4ea6-a5f8-6acf2ea5f70b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ad627f-558b-4af7-afd0-47d3ad94e317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf576ba6-6d8f-4538-ab7f-7ac17bab2021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dc2890-be20-4ec8-a09f-8ef890362749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c37df4-ee94-42cf-b7a9-84faad174f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a78b1f-f807-4a29-9b0b-019a023116ab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9456b3b-2d44-43f6-afcb-c86e8802a2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80eb165-7586-4b27-abe7-c638b54d5fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5b174c-cbf1-482f-93db-fbf927651f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b3e0d1-2b9e-4dea-82de-dbeff2aada97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546fa79d-b07e-45a6-a736-b5c78599c5a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8046c150-8294-4821-985b-30150281c75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0527444b-99b4-4853-a731-0f7a2246a23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe92be6e-b3e0-4151-8acf-90a4519a404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84122418-7065-4dbe-aed3-fbd5e5280d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b70436-1e88-49f6-98a8-3feacb76dc84",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc30671-fa1d-417e-8017-0835d804e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aedb65d-9492-4a8b-8d0d-dabd9b786713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270b77a8-b4da-4116-ad4a-631be6822160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16f55f6-4e1a-49f6-8fdf-1b5e7320981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1266122-29f6-4519-8c87-b19621eb6b82",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a96129-dcca-42d4-b0dd-3a725572fc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa6b238-5399-449b-bb0e-59e4203ac4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef47812d-60d5-4af2-a812-1d612a88ece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a9446-d93d-4c93-be15-a492c63426e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b505fb-c06e-4db2-86ad-a59297921326",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8ad44-3ea4-4fd6-aba2-cf45b402ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a44fae-1d80-4894-8aff-1b5da5e60b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12eeade-42eb-4780-b767-0f948b9a6038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f906c498-4b9d-4439-b9f2-750cb90b06fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e55af93-27c3-4e50-8879-700bb56d9864",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386a1cbb-8622-446d-8c37-aa7b41d6e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9dc88c-ebaf-4894-b270-f17e3d1fa353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6922ce7c-41f1-4bfd-83c4-cc117cefed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e47dfe-1596-4c67-87e0-8464fcf03bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a41a9c-2273-4b7d-a3a3-63dba94ed62a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53047db5-b4a6-4595-8fe0-bfdbb56f460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c28091-2641-496f-8f8e-4f1fef5c9e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b11e7-2d00-42b5-88b4-22f11749a550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad46cc62-0671-4ecc-8825-0036ba766fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c855f9fe-5219-4e9d-be73-6df682660eb4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e9cb5c-fa2a-45c1-9f9e-078d0c41ddf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef1bd4f-4404-4ec4-bd57-102c6efa8055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f531ace2-7357-436c-abdc-430b4be76a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c84483-b5ff-4bea-9171-17ed45b8dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7446a3fd-0a22-4648-801e-ae9a462eeafd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe1ea1a-030b-4b5b-b2b2-645f5f115584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbfa929-92f1-41d2-b26f-85c65b47621a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4943471e-061e-4af1-86c7-43c3f6eea487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cfa688-6304-4639-a9e9-e9e9bb531d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18910055-c6f3-49f0-bbb0-6217e3c91c2e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fab2bd7-efad-40d0-8795-ecf900e6f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6455ab55-a26b-4836-bbf6-b68ab8c734f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d68b8cc-890b-41a1-bd36-c0a52f72d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13eb1d09-a334-4902-bd69-38db22cb2b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a57ef75-0fca-4f67-bc2d-2acb9545872f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580ec64-4ae2-492c-b1b2-aad53a66c435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f57c2b7-8f8d-430a-a986-2a71903bf885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38bdd70-5e4f-457f-9723-de4f447131c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9bca94e2-fdb2-4373-9b97-d73b853b9569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd42844c-92ce-4020-9dd9-b3c5490a859b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313030c5-1513-4e8e-8d17-2855d390bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d6f351a-13d5-45da-84ac-7e7773737c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e094fba-497e-4960-9c3d-0e543a4e54dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4a465c-e697-4220-9c70-368e4e58594b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94955aea-7e95-4701-9217-62313774e4a0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a918dd-cd83-420c-8dae-f1d5e707754d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c1615e-4eb2-49d6-a9a6-75e5a58cedd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f5a5b3-55b0-4e47-b46b-16d78c552c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb38126-2cdd-4bf2-b999-504762e96bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100433aa-6336-48d5-bec8-0d586a597d8b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085072cb-8ecc-413e-a559-00db1f5eed4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ef5371-dd5b-4578-a0b7-c5efd43a1d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53087580-fb84-479b-bf3a-c790f8b0e9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e72a84-531e-451b-8bff-f55d80cc9afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e167074-ed24-4e30-9428-0f8de2f8fef5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc685fb-6765-44aa-a998-5fe50de84e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d21e35-bafc-4184-8610-accd3deb3d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b91516-4ed8-4b84-9b6d-17aa11a56054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "840c5c24-45c4-4fd3-a18c-fc8814debd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfc235d-ef75-47e4-90d8-f060b70dd96d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32744f1f-b328-4951-a6ff-d01466928d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c6e95e-25da-4d2b-af4c-0641fff10155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5a8c43-cfb4-41b2-8590-5cbca2fab9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2aea9e4-d6d3-49f7-bb2e-7a70bdb1f8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e7968f-fb9e-4e3b-bf80-7be9c18bde76",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369c284c-5d3d-4b06-a280-34ab660e4a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62203902-7975-4197-8a8e-b22651425497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0067557-b0cf-4e6e-bc70-2ac27bd8f1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cecef5a8-d386-46ca-a913-8f070df4cce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b784e7bb-d63a-4e9e-9031-cad18abb4489",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeeab40-4eca-40d8-8ce1-b69b0e307034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c862ff87-6977-485f-8503-973272778ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc96679f-a0a3-4c38-8afa-af2bcf7326af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "269e0273-d474-47cd-81d6-fed6e1dda480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd81492-94f8-4673-8699-cea4c9f3b9c9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c530ed8c-c0c4-4378-b7a9-d486e0b9d5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501b0698-15b1-432e-a97f-f0ff05d2b152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d75c3d-f816-4d8e-833a-33e118b612b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2db8ef-d9af-4ef8-a7f5-2731bf235ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1df0a9-a3ef-408d-bb43-496dea27c01f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40574cc6-b638-4366-aff5-a2c8bcd9a0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40070b52-a51f-4727-b194-a324fa8184ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e581346-08bb-4a3b-aa5d-4c0245b39ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d01420-899c-4b3b-93df-3daa9df28a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b20520-0694-41f7-b11f-dd4710164654",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d4b6b3-0116-45a5-987b-5b850bf1509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a54705-8b11-4a42-9eaa-dbb02aa73cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2056552-d296-48b7-9ad0-1c71f42d1f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff86f4e-8b0a-4dea-9f42-93a2ff9a1032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53754d6-7afe-4bf2-8999-9dfa8c629625",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bc2f90-3c59-484b-9558-80670f8eaa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2a2721-c870-4228-8e6e-d6f958065eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc018a2-8286-49fe-a20e-e9ad1c3e8c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "802313ef-eaeb-43b6-8855-a9f8d7622d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd8e40f-be45-4981-8515-f1e346a2d88f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba8f45c-e89b-42b1-8575-75e012910488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc78be53-7c3c-40eb-a061-ec203309d140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e156600-5227-4541-8346-3670d98132f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3959ef6-2597-4d10-8d5c-87aa1416ba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae67b839-e566-43c0-9d55-e6ba917f7863",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57c0bd2-f4b5-4b4d-b364-c9d4d3f64c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4854d51c-a062-4592-872a-ce84647d8730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17392d4c-7fd8-4382-a328-ba76e19c63f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edafdafc-1f37-4caa-9174-46e6739e15c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55036622-25bf-4b67-9de2-bc1dd7a8b9d7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ca9d9e-d8f9-4261-8f45-8455486d6393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24525994-2593-48e6-ba98-deed88393ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b6843b-e44e-4f14-b127-e514a4f7bad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a28283ce-4d3f-4d42-a67b-c26cdeb38808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9af3e9-1727-46f5-8735-ce4896bfba02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56146418-85a0-47c8-a7a2-831d25c9cd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ee0cf0-2122-41a7-98d9-f8039dc410c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0853f7-502a-4b30-a9c4-d64bc3fab111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcacb52-5f52-49db-8407-e680e08c8ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce7dde8-f4ea-47f6-a914-3d0034726a35",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cff50d-f1ad-4e4b-8ff0-b363c35c0a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b65c978-9b53-4eaf-9050-fdf82f5f0674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6197a25f-ccf8-47d3-9e46-af2f4989d497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04d7e2b-6d36-41c9-8ce5-8df37f46b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65ea9b0-e557-4790-9e03-b2632340fd15",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f110ed4f-af52-4a67-84e2-49f4ec185345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638f20c8-8c99-4f17-a2a6-3eef64be189f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5d11f5-d3ee-4888-974e-d905b6003ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94795cc8-0dad-4572-89c7-b08bcd6e5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ab275f-75ce-4cce-8795-2f98fe992228",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f1d18-d296-4324-a0b1-e828304cf960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d25dae2-9b19-494e-b11f-79c374381bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7b5317-0c0e-49cb-8812-4074fa8a292c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fad101-350b-4e3f-87f8-e171fcba9a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ef9df-33f4-4085-b70f-d3cda2a002f4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffd5fa4-5851-4f0e-bca8-9b33a7af266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2805e8-6eed-408c-b219-6ba0a2da8314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459723a2-2b83-45a1-b49f-b33d11a62430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db54480-9414-4bf5-a31a-6f9e7b732b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ebe45f-afe4-4b6d-a6ab-a046914bb932",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010d2db9-19e4-4b52-9337-a5e70d7027d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd8e15a-dd57-4b6a-98bc-026a3915fcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7434733-a774-4096-9ca2-ddeb9b481e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ca4cf7-5de3-4de6-a609-2f70cc0966c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8158fb-b9e4-4515-bb5d-76c3eb55ab63",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e342d4f-53e0-4cae-b89a-008ac6245f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c064f9-6787-4015-a823-1b2fc99c4f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0a284-65ad-43da-a1d0-10f31ccaf427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc7eeaa-70df-46e8-8ca6-4d2ce529dd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf4b4ab-b35d-43f6-9970-cda31fe848ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf3c9d8-d284-478b-9b61-a5fb599ec64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411deb2a-6f1c-4d50-9306-448fd6643de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd8213-6077-48d6-bbc6-0d45a4d1319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1043dc-a115-4634-8211-1485acac4df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f0dcd9-4063-41a7-b51b-c1781340a51c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b69d2d-4dfd-41fd-a861-17bc5718e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3711107-bd19-4ec9-855e-2a616698fc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacbf4b9-fe97-41b1-b48e-b64f223d1982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da971ffc-6aa1-4a6f-b063-ea0663ac4c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8cfb4c-53f4-4bea-8ed3-7185cbf6ee62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78844013-cac7-452d-9dcb-e981a9c408d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca2a229-1ef6-41e1-b11b-39af9721188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7c891a-488d-46ed-be0f-856e2b225382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e98e35d4-e639-4df9-9da5-3541215aba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c3a734-a35c-4208-9d49-48b3123bb39f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a66e20d-1332-4801-ab69-ef3419841028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80e816f-511a-404d-8339-0ccb788a5aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc544af2-97c3-49b3-9898-bbad728b8a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c59accd9-befb-4824-9d61-50d2f4bc492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449f7919-2587-4c2c-8a22-7fa7dba46dd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aa4353-7471-457b-86c3-9873d404de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc7417e-d28e-4e5a-8eaa-c39a58612563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f157c337-ac09-4cbe-af14-f108d0c0e18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4c5aec-a88c-42c1-9e3d-59e775a8e1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5785fd-06b6-43f9-9f17-762954c9c3c8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddbecd2-bd24-435c-8e7b-f4863799f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843eb66d-4fd8-41eb-b423-08dd5f603185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e99213-a33e-4a95-b8dd-211115aec67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7098e776-5712-4538-9564-c5eed33ec851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eaece0-0c09-4f39-8afe-345a1e2f5f98",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f0430c-98ec-4bde-9c0a-aad3d364788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b247c5-c9e2-47a4-a9f6-b1c6ddbb5e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48233a5-24d6-4658-a3d1-39b5d165731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35301a1-07b3-4bdd-9821-0eb19dc52aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87a1376-b1c0-484f-b620-fc6a79298dc5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f261853d-eee3-4cdf-a561-25d771f9568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978e9786-c6be-453f-bf4e-b2de9106bac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799efd10-9018-4d02-a6f3-fb65b170a9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c21f902-dc39-47ad-ae16-087f4f8c62b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae18971d-e5cd-4296-99a6-face3491fe8a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f249431c-cfb1-4724-9b9c-8cc322b28918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fcb953-519a-42f9-8366-cdcb72dc2d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3f3486-84a7-4e00-b3f8-8ec22ad5ef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eefd318-dd46-4a80-8aaf-05c1f3ed525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1389615-07b1-45bb-a19a-00fb012100d1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf507a2-e8f3-4c58-a46f-37f6550c7ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ba9403-15f1-461b-aa1f-1f65b3e7fcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaedcde4-2865-4894-9c11-215811134733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0238546f-6b5f-43f4-9249-8c6fa08dc211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90415aa6-9d2c-48c0-8d4d-8ae441d2fb4a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad59f8dc-9488-4d61-b9f0-97c6189eaedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db30d21-dab4-4594-8985-375c01269a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5434d5df-30a3-4724-b898-3445170c33c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4eec6770-e5dd-4a31-b5f6-d8faabc65353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af78994-2bde-4a57-96cc-7e2e80a6551c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17407089-6c3d-4739-90f1-c31e7dc7e261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4634c68-be9b-422c-9c2e-14e1880e20ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5b4d40-420a-41e1-8f98-658a7d1d0601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3abb338-d6d1-40ba-955e-e6322d258cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2072a4a-d52a-48a4-b2c8-582afd8ed0a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae091d9-931f-48ae-babb-ab3ea9acd936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5639eb90-e9ea-44da-8f67-ea11afd7e4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfed79d-107b-4f64-aa76-fd612f967f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18203584-e9d8-49d7-a0e0-d3619b7afdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c7cb6-a69c-4945-9641-b76327b6da9e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6380a75f-6942-430b-825c-991d22f4022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b05f8d-d77b-4b1b-b9ae-a48f0a8569fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7cbe41-381c-49b1-81ba-ef4ff5eee54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "106b322b-606c-4bf4-b29f-7079ef7b588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb221aa-bde4-44f7-bd27-a543648c1b63",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2e01e-fd79-4100-b375-65b6b91c0428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d96734-fc28-4fa1-bf58-e7bb9fefc859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1802dc58-f954-4c3d-af3f-16798459a25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2b6def-bd5e-4d8d-9607-a1ac55c40d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7115a33e-9911-44c6-940d-0c485f9084f0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7334ce5-20a2-4e44-8de5-254a1d54ad60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83835b8-7391-4f85-bcdd-2cc6db3dc4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad64a5-4498-48fb-b256-cc32aed775e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1b1130-5ae9-48fd-ab17-f4695fb1e21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbef0ca-a324-467b-8496-b560ff2c40f7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946416fa-e580-41cf-9eb9-a7aa1f7c75b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899836a2-cad2-4609-b08b-1e140251eda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d21a200-8bf2-4b9e-b7d8-60aa5c7abea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "664ba728-ad51-4a9d-9911-54220943dc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e79fe9-2cff-4566-98ac-9f6c3c84ff33",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1847c7-dea1-4a41-b845-a3676e5d48df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d65f48-9434-45e0-bcea-757f242e6df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3417e41-bffd-4588-b1b0-803dc5466903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "448da98d-2cbf-4fe7-91a8-13caa420a2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65c3ab5-da08-45ef-9978-b08ee36188f6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abda02f4-9b59-4fee-943f-44c2c4b5fb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f2cf6a-9b39-420c-9b86-6f1b6039021b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28ad3d2-b64b-4c3d-a32e-39d21629f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "879641bd-ad80-43fb-b8c4-796a59f1a3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12d56a3-df9f-4102-9765-f23f050d67f4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27358670-3feb-4ce1-92e6-831b364ac351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0884aa4f-c85a-4e7f-b0e6-1eec2eeac1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6579eb08-6e14-49f0-8760-107ee414e298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e47701e-f138-43ea-b93f-458770e50d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c60292a-f9c3-4710-a292-1f8d1b9782e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa82d5-eb02-48b1-8012-0accf0b4fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdf0a33-0ce0-43db-9449-9d997f39001f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9701536-0318-4178-88d4-f3cf3f26a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "914f9049-8d84-430c-b39a-2d755bca018d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fa59c5-acc8-4116-b95e-2f3deaa75be5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba3d7a7-e9e9-4dff-bd49-63ee39c9ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae63d38-c188-41a8-9eda-be35e802a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae8b78c-9333-4ca8-8d8c-9526f2683709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f57d377-5dee-4d8e-b145-faf1538cc1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c0565e-e017-4659-ac4e-1e03face0cbc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9677cfd1-fd4f-49f4-a3ac-149927b8afd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edb14b9-1ddb-4d9f-9f7e-34e1346bf1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4b17ce-db8f-4e6d-8c50-aea81e356e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bae11a-1ee0-4662-8827-0d5cff792794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedd9765-46c5-495e-84e8-6d6e638bd2af",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576df9a8-196f-4c72-97ce-e514222c38a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbfba6a-4a85-4507-a4f5-d79acab26a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c2076e-1f76-4a4b-b557-a9d32bf99173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19df1c17-1603-44b6-bca5-8bc6509dd0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655f55fd-b05e-457b-8616-c5597da3b690",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd7eb05-1cd8-46f1-939f-52c4357c4880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e751d22d-aeaf-470b-a3f3-ff30798a7339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d41ac27-fa96-4d16-9dc9-f49f72291ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "586d38b8-6cd9-4c96-83ac-42cce6d3cea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5711c1aa-5915-464f-8be9-bc243ae0b218",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6393340b-68cd-45ba-96bc-dfb4d23a05d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5e4cfb-cb25-4867-963f-6aa9d47c8723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ab83fa-e62b-4c18-a171-9bede6a718b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f7fbea-c3ee-4d39-b1ae-e5f040608ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e638ea-b1dd-428b-865a-0a5d02d6528a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355d2579-38a5-400a-b6e6-4e25b5e0c539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062ed0f1-f742-4c81-9947-71a7ec6494f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d6a26-1401-480f-9ee9-87f167b9e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f80634-b405-47ca-a62e-5b9020cc351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e733db-734e-4597-a146-e1c4c65b5108",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba9ffc7-b9bd-41fa-836b-0ec053e914ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a2bf0a-54f9-4a52-969b-59ee3dcc323c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56288a8-adf5-4ba6-a8ae-dc328c7af32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9953d90-668f-4eec-a4c6-6bd547e66865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d148fdc-db63-41a1-8b69-8ee93863ab0b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc344e2a-f376-46cc-8cd7-6baf29786add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a920162-a6a6-4e35-a493-fff1e68c032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4d01c-807e-46a6-a7fc-6191c769434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c9758d-1f9b-45e5-85a5-1042d0f1e7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c865eecb-0785-49ed-aba5-ec7d74ae617d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d2bdf8-8af7-47ba-a32f-2aa52479cbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd141b1-4b34-451e-8d98-856f83b3e077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726449be-0689-4e3f-bb33-bee3803be682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "267c46ef-514b-4e93-aae5-4a9f7b0a589b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377d6314-0a5d-4a36-bdb3-18aa0dd8fb21",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90aa7a9-acd7-4c3c-9e55-cae01710ecb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300fabbb-be8c-4ffb-8f9d-c6b9b75df189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9666fbe1-6737-4644-ad30-26711879c5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "432cd4bd-0305-431b-b354-e4d96b0b49a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ac5f75-0222-4e2b-bed8-b48786064385",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f26af7-8856-4825-9b80-f90ea847b201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a90f08-7088-43ec-9aa5-94311193c22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f113ce2b-5d68-4fa7-9371-7523f426ad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a97b0e24-2612-452c-a5e2-d2ebdbfaef28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b226bc2-3469-46ca-bc03-a9a1a1527376",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307ff4d3-f867-4a6a-be4a-588ff2afeabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00636f3-4c58-40a8-8538-c9295fe8b6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d358dfde-53c5-40e5-a477-41fb33b64d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13562a4f-92b7-4581-90af-ba1c103613ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097c5973-5f81-45c6-b3cb-2c26a40c77d1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211b8885-6d6a-4857-a4b0-bdad934785bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed77443e-0244-4268-8097-89685d07f135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf7d007-5e3b-4f54-b32e-b21eb7296778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b90880f0-f23d-4517-946a-e227e74f3d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1ceae3-fbf3-4df9-8b80-d38f56627c95",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad01a9c-845c-49c7-805c-5d8f07b9a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9835bf40-4ef9-4e3c-a497-d4fd519ae814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0951bd63-4607-4e21-87c5-aad859e139ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1573c934-cc28-4e8b-a600-9f837d4a8c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc481242-3e31-4505-b01e-6f2aef6c7bc5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ffb2ac-e467-4054-b733-10bbb345ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8099a120-1d7f-4500-a1db-c7a9cfee5bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7673168f-f26e-42b2-9d5f-0860fc6a11ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e94d46b9-d066-4d70-b59d-954015bc78f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58361613-6e8b-4016-8109-576f0dcc55d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efc46019-54dc-4907-9d11-4970f2507b9b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a7bf02-f73d-40e6-96d0-35377666ab8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f43361ff-0243-4ed5-b8d6-fa6eed30d3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94144fc6-9c81-4f98-8702-c82f3dd206db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c002f258-6b9a-4460-bf85-7d77c9532805"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffd7e67f-442b-46db-b6fc-726944eebb1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc7db76e-73fb-41ee-882f-8de94ae6c222"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "551b9a1e-e46c-4c4e-8d04-27481a705c8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23a30d37-0c0f-4b18-8b02-c21094ab298d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17026127-35e5-4942-a50d-b8a042f1cb05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46ddfcb4-8dd9-492a-86b1-a549fc6095c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c3497b6-9e75-4f00-a5a1-c0d0079c71fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b79c8819-a78b-4b45-a7bd-6c7c258d483b"
                }
              }
            ]
          },
          {
            "id": "bae1bc59-6a30-4107-9004-d6b745d9c8a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cde21502-60ed-4e1b-a5dd-a8172e7d7e33",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4b276ec8-e61a-42b8-bbab-9d350cf9f8b2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb4455c-dcc9-4405-9c29-3fc7e1cdd440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9b5bc31b-6ca3-4693-932d-5412d87e90ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c6a6c7-921f-4f87-8670-4f85223ac8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2290e3dd-6ae5-4ad4-8cfd-555e90500991"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f01162eb-9724-410f-b108-7d8591d94d94",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8606c268-6ffa-4f94-b128-dedae01634f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6b0fdc0-0158-45dc-9fc7-559bd0e7e531"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31e5aee8-f8e0-49ef-a23d-0cb8f48df71c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5fd70f2-b8ba-4832-858d-a6188f7c1140"
                    }
                  }
                ]
              },
              {
                "id": "379d5316-1d80-481d-8a3d-46ddeab34eb0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31833c32-509a-46fd-85ad-8bb00e12cb0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "323ce7c1-341f-45ae-aa2b-cb4e553e6c4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ee4e67d-2ae4-4849-ad6f-ce5021c3c8a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1db2e061-5c4e-4a6c-800f-ba9e29d377da"
                    }
                  }
                ]
              },
              {
                "id": "5ffb5638-377e-48d8-9c45-8f53dd0351e1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2a0b5f7-ac93-41a1-918a-86ac159f81b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0d87557-2273-4043-958c-5d130edd42dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3480ac0-2f1b-445d-93b6-bdf77f68130b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30190f66-777b-4fda-a3e3-61f10de57f67"
                    }
                  }
                ]
              },
              {
                "id": "e6efca45-c94e-474f-844e-b5097f279e43",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "359a75bf-6938-4bd1-a8e8-7bf6c89566e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e873993-9fd9-4105-8148-cb995ad74515"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bd67f73-bb70-4b1c-b6fe-7caec71b7036",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7b76b811-c861-49c8-8029-afc6a9711242"
                    }
                  }
                ]
              },
              {
                "id": "d440087b-51ee-419d-a9af-2300364a8ebe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bc00de0-cf31-4ec8-98ee-d1468bb8948f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "165bdf2a-d339-498b-88eb-bca2c9271c4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6284bd3a-2fa7-462d-8ebb-462bd18f5208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bd8afe1c-5d60-48bb-8253-c560c4e7da5c"
                    }
                  }
                ]
              },
              {
                "id": "5237708e-8d42-4a31-8473-8e62c46ac739",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd985ac8-4934-40f0-ac2b-d6751b35f9b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e0a4898-02fa-47e9-8d42-76490a95a50d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dd8a675-c5c8-4463-9669-5d57346a5c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00c5dd4f-e94f-483e-b097-499c0f63c261"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7721bdd7-6f31-48f5-9e9f-3aa9c00f7799",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b08c504d-86fa-475f-8755-837ff205a62d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1042db0b-c041-45fe-9d52-f51e92ff1589",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e4d0290-a34d-488f-9dee-871bade80327"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c28c823-36a3-40a1-99d3-d35561d908e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "964280ed-41de-4720-afab-65ae4a144e5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "893e3cc2-e077-44d2-99ab-8509c40d392a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66aba4d3-346e-4b4d-afa4-82f17b8e874e"
            }
          }
        ]
      },
      {
        "id": "283c70f8-4f6d-4eb5-80fd-3b99928c0db0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f33e7f27-6391-4c31-99fc-7ab42d1474d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b3004d6-3dcd-4b60-b073-12e8d773539a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca27f4e9-a40c-47b3-80d7-3cebab42230b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651639cb-98e8-4d6a-ae47-e4dbc332207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0d3213-756e-4d6f-9786-38f0857a5514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b44b1d-668e-4caa-aad6-f4b86d640c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c6b58a-f7b3-4914-93ef-fb054d4eb30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbe7005-6ccb-4479-bae7-c15ae2870349",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da38aa19-db87-4943-afe8-a23da035db58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaacd32-40b0-424f-bc21-686945d64448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2238b8c5-f4ca-4335-bff3-f4817f16d139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edcfd0ba-090e-4d90-beff-22073ec7ed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135a587a-5185-40cc-b67d-b97e09818cba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9dd518-9c6b-4d22-9bd2-d6a17a019116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dad2f0-affe-4af9-b506-ce91c15e534f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f5541e-369c-4e69-9ccb-064e8753b877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda87e93-b403-4e67-96f9-ec7d2c0cc0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d16a1-c38b-4d3a-88de-b9f5fae8ac92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab7280-2e90-4a6d-b563-c45cf430b0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9720b954-c79a-4636-814b-8ad1daeb5913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86f047c-82da-4714-bcba-8df95d50734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a627141-32a2-4f12-bf04-889ac5a158fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f106902-fcee-4a8c-ad4d-39c5159ac1d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0003a8ee-3c33-49c2-9edb-b8efebe1728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812e1281-2af9-4cdb-98a3-8863d5839896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21512e2-48ad-4d8f-8c4a-53a94c257a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3763c2d9-4007-47eb-baab-64767fb62105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba640d3-4b05-4232-85cd-f375b1290ef3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18638fb1-944d-4bac-8075-1107887c759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff24fd70-dc2d-4243-a12f-41e71f9cf06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33167ebf-6996-4db5-bf8f-396983ff31be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec4f79e-50c0-4370-a25d-c4904c97f624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c9de66-233f-4ce2-b230-593a1d8dd954",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561028c1-af18-4187-80a3-8b7031837b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2df6327-6886-4adf-9a63-d48ef2374282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f3bae3-016b-458e-95ad-b70e4193b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f978a44d-133c-47ab-8ff9-7bd19ed81458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5f30fe-ea28-493f-af12-5427b7d942b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e445a76f-3227-4e7a-b0de-07d5bd614a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2e6a75-4916-4303-8c25-56a841117e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c03c8-5aeb-4247-b028-03b71f5c1d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "929c8fb3-23bc-4996-823c-1690bd3b0152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d4fa7f-cd55-41f4-918c-8678e1d1b975",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fb4cb3-d2aa-495c-84ff-40ff1cbc72b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52940ea8-2a35-4de5-a7ea-158de4fea711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61011c96-11ba-4e91-82ad-a07bce6cc7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95aab930-8505-4f6f-aec8-7d3a4bf4746e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf887b10-9838-4ca2-a1d2-874b1b36e407",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af133623-321c-4d7f-a0be-317647c9346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9beb34d1-afe7-4f72-9f72-599687d1cca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3ab72f-e7b4-44c3-9010-dccde9f23535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7515731c-f7d3-4a24-9826-4a4a62c11800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d066c4-316b-48a1-9978-cb230558a521",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89543917-b70b-4dcb-9900-e3c55ee80fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7afb6d3-b579-4487-8c86-ca6794cf4098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b6cf64-f05d-4ee3-b1d7-98f1e15fdb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "490f468e-8f61-4737-823d-2654c0bd69c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dec4ba-1f2c-4fb4-a94f-1e54af9202a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2de2bd-3fff-4117-b84e-bc4e7124f38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ddf834-85d9-45b5-a1b5-da9460455b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff51ee-5071-4ca5-8f50-6704d07d7b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df8479b4-4abe-4706-9ac4-7855dd9dc551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fa9833-47d1-4585-8e67-68c2398db295",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6161b6cd-54df-4328-ad9a-fa9593291ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b479242f-dc81-4e88-8d07-3a8ffdce625b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c75bb1e-d3d5-4f98-8939-fe47730424a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1975aea1-395a-4ff9-98f8-eb69ad403838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f437a19f-f153-4965-afcb-c15332ea35f0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c03d954-75c2-4910-b4e5-d5147966fda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24919259-7f9e-4916-baa6-67148e29253c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bda41e-27fc-48ae-a444-8589297e90b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c3961d-a72a-4aef-afa8-b4e7d0f9271a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be66e26d-6500-4c6e-b881-f13cd255f34a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21034b3a-f0a8-4f4a-8a44-e48de3f7d52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6da381-8e03-4af7-bf97-6b7a6974b003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f0e0a1-a759-49e9-b34f-158e267807e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a512d4-7a0c-4656-a8e8-10ac184ece2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad23c77d-7d8e-44db-811d-f5f9c29d6a59",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca5609-e729-436b-b6f9-873184235a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8864ce-4cc2-41ea-bf3a-49c9513f3d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60834a4-e1a0-47da-87fe-aff9fa5a44dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea008b5-f242-4e1e-85aa-fe47c0894f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5210f264-0a5d-4e7e-b87f-daf55dae6be6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1c8e5e-a55a-469c-be1a-80e393ca8d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7f0a87-6ed0-4b4c-949d-291c5deaeef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32282a1-2ba1-4e73-ae55-30ba6b6dd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c98c48-f951-43d1-a1c1-6f5141ee319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afa3b5f-455c-41e2-b5a3-d7ba29188ef7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2627ca0e-ae78-44df-9924-93c6d20fbd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa35592-63d8-4b9f-8972-462a1907f150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa7eb10-0e4a-4bec-8276-7618af760a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4001b735-f6a9-43a4-914d-0233c0382680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebea440-d71b-4166-9f8c-b63ccebe749c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212ab16d-2adc-4d70-87e4-b9b34a9d1b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d5e98-4fbe-44fd-9348-2ea133971997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3f7c47-ca4e-446d-ba53-10632714213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fb18c0-1e64-4451-bee7-23c6eee2823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66f8721-8c35-40ae-aea5-f69e3e7ac0e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257f9ea9-60d5-45aa-b047-9c226fee9076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7d2ab4-ec0b-45bb-8854-c728e723a853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37539f62-c2ed-45cb-9f68-6bb52101e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a12591d-c139-4924-b581-03228f609bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35913dd8-c4df-449a-8cc0-ab70513f21dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763e40e2-460d-4dec-97c4-f3aafaf574d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b7de67-c51a-4710-ab0e-dd4bc383c797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e7eeee-a0b1-4816-98ec-4e934a8e743b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61b8db7-7eb4-4ec6-9628-87b32a4da251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35de0060-3d38-4522-80d6-0b5f5b939bcb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185ba1c8-769f-4ad6-8942-3cafb6755526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e31ae93-43f7-4dba-abd9-02e7efe5b60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556019f-3700-46e3-8bec-fe1863a49e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef53285-3a56-44d0-8b92-e6b023341029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e04b6-30bb-43dc-9b8b-e9abebde8d74",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a09fe2-4c39-4a44-9dec-0fd4ced3f222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03ecad3-e0c5-4940-a321-dd0aba8e66d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce2a535-7506-490f-b6d0-a17a0a33915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7aa9ec6-7fee-4753-a863-82f92bf36faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc790455-4bf4-4ecf-8a32-4a3fec9212b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d134ddd8-0009-4331-a95a-f77fc2504900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b64166d-f7d9-478b-ba1a-94720b39ad72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a09043-6f5d-454b-8fa0-e4790a0f4db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04467706-647c-460e-a99e-0e4d120e5bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d5bd4d-be4f-45b6-b34e-f20601f7fdd2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a384503c-458f-4a52-bb72-1bb982f21cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc4eab7-dca6-41cb-9664-c7dd5a1d5e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53249d8b-9f9b-4473-955e-fe0e37091716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a821b244-4940-4f87-b174-0e873fa71da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f87656d-b094-4916-b631-cb0c20e84074",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1366a0aa-5237-4439-a9fc-c4b77c4bd62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e189387-2aba-4bb1-b670-13718237c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de8e4c8-ebb9-481b-bf01-5ab00e0e6552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9b5834-b5b5-49a6-ae7b-f3a1db585e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a06ca4a-a79b-4129-835f-c82df879cc70",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc790ac3-4047-4e76-80bb-356b0053aea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb0f76c-7d46-4df8-ada8-587cc6cc9c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230f219c-cee2-4c03-9a52-c56974f977e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d4b89e-9d24-46b2-9fe0-f8eac8f74d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc83be21-b185-4c48-a1e1-ed28192eb373",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784e0ee7-2077-4a80-a6d3-a3a5f652a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d702efb-b28d-41b0-8801-211d52cfcbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178dfa96-9e14-489b-99a7-f769f35cfcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "568fc1ce-2312-4ab1-b9b4-57a3630f8790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34b3a0b-0a90-4b01-97e6-835354f60749",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b19604-ac92-4120-a0e8-e5d87e2ed72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318c55e5-038b-4786-a61b-32671ffda24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a89e2b-d1d1-456f-8232-b9481103441c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e8df62-8a77-42dc-aa98-c9dcd0e13de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9c29e2-b69f-435c-8e7c-fac7d1ecf29e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e59cc01-8218-4588-aeb7-839b9ecfa759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c15736-f119-4e46-93cb-640bd98ef0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4919ac2e-ecb5-42b9-8575-8887223b9856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41068da5-2b76-433e-b15b-a0ed28781f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49afae6e-f140-49f5-aef8-3f896d23419e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7993f9-edf6-4e58-8e15-bf9b66b0e7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aacae3-1104-44b3-8b19-c695cca79799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ca9e6-1d7f-47e3-8fcc-a6a11dc44dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f53ade33-7e8d-44fa-ac4f-1b720327e160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d0a700-e178-483f-b87d-f699c0873830",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13021718-867b-43ab-86e8-2bf181bf0eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4100a3-88fc-40a0-abc8-a505a6674251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a696fdf-bae0-433c-9ea4-257b78287677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1953cb6-c020-4cc3-b2fe-e2536b5a7cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fb9a60-a604-450a-960c-ab5d453bcf8e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8652b24-2ae9-4dd6-8c6c-22975e288b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d333c19-824f-486a-a894-e125b947616a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814b3a2e-a1ca-451e-8116-fdf26e7e8f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b95be62-f390-4a1d-b0d2-acc44a0f5e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8451637d-3c7e-4d48-9089-4b2a4066a5b8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413dfa21-c516-4f96-8273-236f9f1aea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6d2936-96e0-4661-889d-02fc2dc08bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6965b1e8-4e43-4e1e-98be-b5485c5919fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "896a5466-29cc-474e-8c7d-6bca7ee11b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a39b0e-5832-4585-a307-b43116696e72",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3d20f5-9e04-452e-b4f7-5aa15e95e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020b81e6-4f71-4b1d-a274-9672caf7d417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880e40c8-f783-43a2-a37b-5f8f60aecbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff1b678-c4bf-43e8-97b6-85d3c3cad2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc2a28f-18ff-4468-9ee0-b53383ad005c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1269c6c1-03b5-474c-8708-3560eec3f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c77fd57-c177-4221-9afe-09a5d72ec45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea104188-7e86-4edc-9b8a-9ee358fde1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d697a983-f729-41f0-8ab2-e12a80efe265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cd08ee-8889-42cc-94e7-3308f0b6dbd2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c14d3b-b221-4881-9bb8-fc206356cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e48e8c-f571-4e80-b991-1fd8ba03b427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162a15a7-ece7-413b-8e33-ca8d3414640b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f084e3-076f-41ee-b122-f098d21a179a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e1727d5-83c5-4d89-bba1-ae772aac93a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f8e809f-fb5c-4a80-8f44-9f1e666259ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7d973c-6d98-4acf-bd04-b814cf854981",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "029202d5-e708-4a40-91e1-0e9fa02c678d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b445c-daf6-4cc0-a1fd-b4d8221b1c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4f131e5-794a-4349-b63c-cfcbfe9b8421"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fc1976b-31f5-4c76-9aef-2fd216fe92f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fd3f653-a3ad-48c1-9739-9ba303935f4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0312071f-cfa3-4a8d-85e7-178bd7b3ac73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a48c92-e548-4e3f-9f16-e126f5766579"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d40cdb52-e7c2-4bc0-bf07-6af32ddbc0ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0dee9e10-9603-4acb-b7bb-c75d541214bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9e2a164-6aee-4087-b80e-d39dd577502e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bc68593-e001-43da-8adf-30c6f1bb1280"
            }
          }
        ]
      },
      {
        "id": "9bf5d992-a384-4b01-a4e9-8a9307912990",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a198671d-584b-4de5-85fc-14a66ed1d396",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61ee8ba9-9bab-4408-8fba-2e187bd567e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ab7618d-43f9-4fd2-a186-50218f5a7041",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139235fa-86b8-45c3-8e6e-3e1b90cd0d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edae1502-dae1-4c18-a660-72e066bb5fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8221bca-4d03-4d00-9024-e19e3e153397",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da55af20-d295-4293-9c6e-cb2f81a3141d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a53f78f-7cf2-41fe-970d-def44fb63963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c833be-526f-4fe8-9acc-8a41920d4a8c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a9eff9-288a-4cda-9832-a756165eb184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb27f4d-cddb-4410-b001-54bf428abe9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f48c6-1140-432a-9e16-eec64e756486",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b917a-37c4-4340-a23e-98678f7b140c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c964bf-48c0-478a-8844-9c8f4f2c503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62edef83-607c-4c55-b858-3ca23f7d5da7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecae220-c63b-4d89-8407-04fce5084439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fc8929-dba8-427e-86da-20ce58903bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0d2920-78f7-46cc-8805-699a35ae0fa5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad344ab-7ebc-4a2f-a008-0751602493db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d71b80-f9d4-4bc1-858c-bc0ca8e13358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77f8931-9c70-4677-b566-da9ee78988be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7cdaae-fee5-4e04-b3d8-6e90878ae7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d2aec6-6a6b-409d-863b-01c594340b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6ca400-5e2b-423f-bbeb-22bbcbeafba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81706e3-edba-4f5b-8371-7585e2bc328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1dd0de-1904-4f37-9a67-112e098efaa3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18baa398-d566-49a0-9f85-75cc5c683ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4df0f8-c300-4367-8f13-52e4fc0985b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff613372-3071-4c71-9cf1-99ee4661a93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caaa9c4c-987d-413b-9228-4622eb2cdfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a224c54-b534-4be3-a1b3-5eee48586a3b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb079e52-9378-4883-b4c9-72be1502617c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d14429f-59ea-4026-8301-8a146cde0dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e346c5-d332-4843-b67c-a1f611458ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685caf28-da31-4667-89a7-8e80b7f8cc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f3bb66-5fca-4750-ad00-a9a2bcfee126",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da38638f-b3e8-4179-9df4-67bc27df23f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85eaf846-5829-4504-9235-5f186953bbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb22717-764e-48b5-91e3-f86f73e76321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392bfdfb-7c29-4acc-a270-b86aaf94c024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fed7550-bc4a-4467-a65d-aa73fa1b9799",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c004315-4441-4f37-bd78-fd6c3fa4dfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2fe213-6282-41fe-8639-6c82b13a92a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92ce44a-c6b4-466b-94a0-88632e01ef1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad512de-b934-4d33-8a0b-2d5adb28c0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7ef92e-576a-43ab-8676-a0be3c5d112b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e39e13-ee63-49cb-bdfd-d0bf22e6141d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376a30c7-f88a-4afe-b785-26c804155bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf84ea4-2c84-4c3d-aa01-bf52349209b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc4bcd2-ce81-4ac0-9a2a-542201452bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f093a54-9e94-4bb8-9601-aa8a99f181ec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c13940f-be5a-47dd-9390-17c1ef326df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e2f88a-c2a0-49c9-806b-0ea6f7367632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1020d5-e6cf-445e-88b7-e05120b1d895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bacc19b-f10a-43bd-be34-e77567c71d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca5a59d-0961-47e3-a806-a2daae17718a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bfbb8-ddca-42c7-93df-576e8730e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87cd251-e69b-4f60-991d-ac6742ea1628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2887a2-456e-41c6-9976-31bbb5ec85fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56120005-78a6-4bfd-9cc3-f9a09e6333de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de48e584-d408-4a8b-bdd3-cabc7f05109b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1e8a8a-e0ab-43d1-814b-61f13e20b83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162beda0-1db5-4a21-a608-47edc19fe2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ac3f4f-9fae-477f-a94f-dd5ae0b29ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5556dce-5f6c-40d0-9a9a-0b81bc264146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e155725-a64c-497e-b2ff-f7acb6f7a36e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc64417-7284-45b5-97da-b3bb0496001f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5761cc73-1e4d-4c99-b403-b59d14c47240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8051c9-1670-4e79-8fb1-0e30d2db092b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8de6f0-e35d-44c8-890c-a7e80646b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6c5c16-87ae-41c1-b415-8bef58180b45",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49514a4f-b909-489a-a339-1439e63128cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56ed339-c60b-44c8-a218-7d1d88a5452d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde7eaf6-7fb3-4fb9-b9ee-c37f5c0eb6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79e6832-af29-4e74-8cb0-0065df434a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaadc13b-e1e7-427a-8334-ff5e6038b8e1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00403c65-fd7a-467f-9978-cfa1c54850e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7d2d97-80f5-4860-96bd-aaa01b623d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f27f905-1dde-4d65-8c91-1bbf8bc18dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc3b338-3101-4c25-a368-a752898cddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b02d47-b0db-42a0-9485-2d228fcad545",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41c738-59ea-4c4d-9603-484958861fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44df681-f458-4de0-9f77-9477027cd867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8276a8-ac6d-4dae-9037-57f3da957fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ff9239-21de-4ded-98a3-f0ef9cecba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416104fd-0e14-453a-8571-11a1157ebbe8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718928b9-0988-404c-98ae-8ae181960c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b22689-b605-4c48-ab0a-3a5674af20fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3581b7a5-40b2-47e5-b803-9897a22d53ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a6b501-5ea5-4851-96c7-664e2e027710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1906b8b3-404a-4bd6-b335-87cd3bc8b168",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ece773-b1bb-40ba-9e67-7648732a64c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f199ec78-a8ae-4fb1-8a49-160a87511d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74c5251-3645-4b97-b4dd-54bc9da24f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d703d5a-af4f-4400-87f1-37eeba1934d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dd7c72-a3d3-497a-b67f-f3e7b43e177d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c11df5-94a1-4936-81b5-e4f289276cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced3082a-c5bb-4f39-9ebd-8850957a7534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0083ab72-5961-4181-89d0-2885d9cd49a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f19789-aa68-42b2-9cbe-22c60caae9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9e2dcb-2033-452a-a364-d82ec051b900",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a3fa11-c291-43da-bbef-0fb754f6634f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6565c4d4-6c03-445b-9cb5-cd2c668566cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08410cd-b880-4a42-aff4-ee1866ac292c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6b2242-fed2-4be2-9ed1-71c282bcbe51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1a314c-844f-4ce6-ae0d-3ccb78b86012",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec0272-f61d-42a5-b1b8-b56a2e71ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e038429-2881-4884-9ed9-e00c7f618c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3efa1a1-a45d-494d-b98a-e3bf2fee26d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd705a9-251c-4bab-880d-33f63a2633a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e24f5f-9450-442f-b8fb-3a28e6a0a572",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a06fa01-29ee-4139-be83-6ce02b0de94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f49ca3-bc15-42b7-a9ba-a354c7d0dc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ac2e6-64cd-4c22-8394-5d12861ceb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7dbfaa3-4471-4cca-9fb3-a19a4b67521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c517ec68-7e49-49d6-b1e8-b45a94c9ccc9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8810fb10-12d8-4d4d-bc97-7a69ccbaca44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c135d6b-7bd8-42d6-8ec3-663d4b77d814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6181d3ac-a197-46fd-ada9-1193a880d7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c33c44d-060c-48a6-985a-da9136b5c162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8823e8-ef6c-4b77-95b3-e9127b5abe8f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf00f00-fdaa-420c-9e8e-d5529207c322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0d6fb4-7b8b-498a-ae2f-7b6d58789b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfb081a-d4fc-49c3-a7c6-316932e2095c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ae6580-e19a-4589-bedf-703eca51d5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a01931-48c4-4975-aa8e-26fd65da323c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c8885f-b48d-4302-9b58-3327fca91a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84e55df-cda0-459c-99f6-fbed58f3550d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7e103-0faa-41b1-8fd4-f431da6129a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf8c583-d396-4222-a8b7-e4889b620d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e738ebb-3a87-48da-b72c-4965d9edd1d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54d1179-2bf8-4a04-b41e-2a1df535049c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdaca169-f399-4b5c-a078-6239ce1bd659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3378257-c481-461b-b94b-2cbb28210cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d038c3d-70fc-445c-9469-6309d81d14f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4f0919-cea4-4e00-a63b-d4ddaa82315e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f8c620-0036-4d11-bb32-ee2e369a88f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae82567-b994-4601-bd44-54fb386cdc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2212eedd-414f-4540-b7b8-5140783f6c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be7fb98-19ba-4509-b1d8-4d3b387cb1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b896fd-ccee-4c11-9a1e-ba5f8dfd2867",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93ab74d-766f-4691-876f-6c62039c4d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e129af6-bb0a-46d4-9c25-a8390b266b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6d8aac-0747-43a7-8db8-0763f13672aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ac8808-bb4a-478e-bcfb-acfab1dd1ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9535062-0a09-400f-97b2-62c16e65fbfb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72753786-329d-4106-913a-a84a12cfaad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbfc2d34-ea0a-4c8f-9042-dfc64289ba85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a262ab3-e900-42b6-8867-fd28034d8af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441be9f1-b0b1-4f70-88b3-247687d02690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4b0366-8280-42e7-93e6-8f85af8c0124",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b6a226-80c2-414b-8841-bdbfeb7f689c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d4e7e4-1b19-4745-9a70-a95606460b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8343d38d-d2ce-4679-a0b5-3d65584048d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d023e6f0-c99a-472a-8466-df368bd2ab97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fe23d2-1622-4b7b-ae24-d8f39eb10a15",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2ab1f9-4378-45fb-9d5e-b07c768b117f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b34b62-f537-4197-99c0-cbc1cecfdff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acd2a6d-29e5-4e3f-bbd8-bc572ea8f7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0920c7e4-c9a2-4f44-942a-122c0abc3e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d96cd-ab75-4284-8033-45d120723b1f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437fcbfc-184c-435c-90a4-46ef2adfef45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c277cc91-6a44-438c-a881-82f657192931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a963b1-9cf6-4fbd-a099-136d6750cfce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d74fd9e-f74e-4172-93c0-1ea1e119b393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0e17f2-56a4-46eb-b9ab-1fb6975c60b4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20912e2f-7b61-42e3-8aa7-ac59768eeca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903f4325-2e44-4716-b141-933817616685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83816d69-1ab7-4c3f-8cc9-7dfe75bbee8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaeacd7-1621-41e5-a021-76b1ad751f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0900287e-46ab-4c6b-9889-00366ff05c24",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ec5ee3-03d9-45ef-a907-d5f1e87565c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192c3405-cf20-40bd-a95f-29c044d43ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f26782-f1c5-4482-947b-9a8779e4c181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8ce6c3-88c3-4d57-b9bb-ee0cdb888a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd532b8-1c35-4550-9228-be9e9d2d74de",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2ed774-8449-46f6-a2de-d6bdf0ccf433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf61baee-73fb-4f22-ac1b-b2157ee5b019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e385af84-9a07-45e8-b934-d1cb1566aca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ec065e-d708-4cf4-a9d7-36b241531ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05d63f7-6310-4457-a1d6-6b9812af6f2e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5068f5-5fb1-4251-ad56-124bd3711e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d874095-c812-49bb-8a89-4e38176f77c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b98bfc-4f8f-4d16-ba2f-7f7e55a0c8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6b3081-8f57-487f-b008-16f4ecda8a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887d95ca-3a23-4700-abfb-f5f1fe349630",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c808d63-b81c-4a7e-925e-ad2b1ac10153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a2cfbd-79e2-44c9-9443-8e12c01c6cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca18f73-fc3e-4bd5-b2be-54862ecdfef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5c6bb0-acdc-4e85-b3eb-a099492dda42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a9e685-c43b-487e-bd34-85b91ee194a4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee90f11-f313-49d9-b437-0b0967fd02f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcfc06e-1cff-4521-8894-03df6194a81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1455a4-78b0-41af-b6c8-d5d3078af562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1f4cd4-328f-47c3-acb7-8f355558f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eec84a-aa1f-464e-90e4-2dce9f45d66e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6c62d1-ece3-4d20-8e0b-d4340a48a980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53079f1f-0f0d-42e1-a2af-90116090872b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840b6fdf-fca3-47fe-9194-ab189e766028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb7c1ca-f1cf-4203-a509-7e40172deefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d0217b-3023-4491-b67e-ffe5a8f13839",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995f610a-72de-4606-bfe9-c568f29e03b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e65cc81-84fb-4fd1-8213-870d4806a822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e7e9b-277a-4371-96f1-c39e9eba701b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576a4ab5-18bb-453f-bdda-121e0360add4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b47af06-2c4b-4391-bd47-400d078d9414",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b9a9b4-2e8b-4397-ab39-5e99e4034e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2d131e-4efd-4c07-85a7-351b326a2574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71f0fc7-3eb4-4c8e-a3c7-edbafed7b550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc2ebac-af63-4d42-977d-b612d38a8386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7866e95-42af-48f2-aac1-bc3768586b94",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc58854-3ab0-4ce0-b7a9-2c4374bcea58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f437b8-2548-499d-8e62-97dcf19a850d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13909dbe-374e-4742-b224-2aa5084ac801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deed52fc-f868-411b-a6c1-1e72bef36959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b62b31-5b1c-44ad-be51-d0f0a1165c9f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5368a844-ef39-4955-9eef-7c4c02bb4a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c33b0b3-3123-4923-a71a-f756ff5cce17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d263f0-e1b9-41c9-9d0c-dfcdd7bcafe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b54df8f-4adb-491b-b751-df549d21d0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db6f6f9-2042-4164-a39b-733e0ef8022d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb3ec6b-697c-4cab-a031-efc88fa0eee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d894b83f-c17f-45a3-a49d-8a98607fda4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db66edf-5418-4323-bfea-f8b86e002a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731d22ed-c2a5-4dce-bb21-fd7e5efa8249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3dccfc-caea-4c78-8b5d-bf607932066f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f22bc7-8c6d-47fb-9370-dd3df086c83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32ef8c6-1217-4163-9b34-d6373f1dce67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad95d3a-6a17-411f-8b2e-d9a869ad88f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089873cb-0e6d-4e74-8e86-600c122e9c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f07ee19-9ddd-4d23-8067-342372525d95",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8188855-3fbd-42bf-a339-fdb31cd39f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7bd309-82ce-4e1d-9631-97621c713a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494df372-d3cd-40e2-919e-bd89cdead807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d0ed81-461d-413e-b66f-931e568c085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cec8f0d-4f70-4945-959f-6b96362e465c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9f7214-406a-43a0-ac18-a32df16f8d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc2d935-b014-4df1-99e9-a49b7e728406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b226539-ae7a-4b1a-bd16-0abf79f1de84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473763af-be92-4d0a-bb39-5d606c7fccdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a72897-ad19-49c4-86c7-0b75924b80ae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d9739e-4feb-453a-9c1f-4f65d8e74644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb50359c-9934-48dc-9e1c-788db65e7895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3795d1-8f5f-4940-8865-062b72a18c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1376c741-fdcb-4966-a1bb-d7a2c3608f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7452ce4d-4fef-4190-8fa5-3ef645f5294c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33948a62-4c47-4fe2-997f-909079808f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac866e6-81c0-4507-8980-53dc6f71e404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30df6510-09e1-4059-96a8-d9e2cdae2302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed7f0c7-7a07-4fa9-a022-7f1f516136c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37bced-7624-4f71-9a63-1309153248d8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b82a97-0a57-46e2-be3f-6e73e40727fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a631a4b2-25c6-456b-9b6d-7b3d371dbd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dedb54a-1b75-49ff-84c6-69c211c2f34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428a32b5-9ddf-44c5-97b5-dba04dddcda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced59715-448a-4e6f-baf7-270e2da7dd9e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef685ae-62cd-42fb-8a41-d5f3ef6acf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e7eaed-b66d-418f-b568-83caec2d1663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cee7da-7727-4b4e-8918-ab90239207fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca39425-c70d-4249-aee2-1d2e48246111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea5d4d-833c-4754-9b05-d1ee9a361c91",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8126ca-81b6-4810-bbcd-482409dcaedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cac103-2a2c-471e-aac1-4e013a214784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae91446-6c61-4898-afa5-d2edd83256e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0a5fde-b815-4c24-b34d-4b58c6a1d610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0445901c-3d4a-4621-9104-d6b7020ffc33",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc07920-4e67-4b09-bcdd-2382302e89d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba024b7a-e13a-4847-81f2-8fb82868a920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cea35eb-a605-4f36-9ff0-30aa3deef85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d440183-da17-4db8-9aba-7113a68068e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b403b0-e496-4e84-a7f7-d3c7e6a37868",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e1e9b2-b5ba-405e-bcbb-75cdb49c6ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dfaf7c-c731-4fa4-abd4-1ba8117049a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ef495d-ee20-401d-935f-4648d1415e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f09d8c-4640-435d-8599-f7e162f8307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95925b89-b952-4988-b31e-c79709bb7f89",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644f2bab-fb5a-40ae-a5b5-356854b37a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0130fc39-9d93-4a91-a059-4d98bec330ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97df33e8-36b3-410b-840e-ea9f95f654cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cd65e4-2e35-4474-b0b0-87625eedc57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2407cc0-f2f9-4946-a72a-d79296c5969f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c584834b-12dd-4b6c-90ff-f52eb79a9d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a4f531-efe2-45e9-b2ad-87567b5efb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d418ef5c-0ef9-4141-97de-8a4f69dee960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163c4860-adf8-44b8-8899-53e894a0317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d3d06c-4c1c-4263-a54d-e5f47a7d6d4e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c4f538-59fc-481a-8f26-1cf5bc493102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0828db49-14da-40d2-a864-9411efaa6298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37640a9-a515-46a8-91fd-50a26a0ec237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82ed98e-505c-47a4-9795-4393b3258be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fef1b0a-c8cf-4b67-8657-47b741647050",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21341d2e-3674-4bba-8ce9-6bc4c50c6034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d8c378-6183-470b-9272-7d884b19b58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf4c7f5-f38a-4c03-b28a-8a706d5068ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5132c3c-16b1-4cf0-b164-62dbb216db6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95b8678-f03c-4011-b289-7c04a6418abe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4da13e-cd8a-463c-877a-5b35e523420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd1870c-afcd-4c92-9bf4-ca04bdf8c3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9908ec-a3e6-44b1-a913-89d607b909e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ade7a6-a714-4ec9-82b0-16571a365eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93929421-d4e9-4c9a-ac08-c600e75fbe8b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526ee76c-2d79-4d34-b8f1-d3652a12b68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfacb1d-2d08-477a-aa37-762e90a0f93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3084cc5-9e1c-4abc-8518-f58c76988af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba0b49-3636-49c5-94f4-c613ffce6d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397459f2-5cca-4b4d-a2b8-04b506764f93",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcce021-5b9a-42d7-ae32-7633fb1bcc0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd07b2d-3d64-49d6-8995-5e486f365402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52209f12-1ef4-4474-899f-a6c19c911536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6c9584-ed89-407b-b0bc-b5beaf5ee0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0e001e-d48f-49c0-8434-41aa3c1808ad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914b616c-f845-41c1-87ca-12ba26e0f96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df96917-1c1a-4d55-89fe-3cbd1407eda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4908cb87-61e9-4172-8651-253063a027ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de43f75-0492-4638-b49a-16c17975eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9346381e-068d-484e-968c-b86918fca891",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ff9d07-ba69-4458-a165-43c2237e275c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66a82fe-c695-46c7-a129-37168e06a9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac14fbf0-36be-481b-a3de-beccdf0edb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8102da80-928e-49d7-a76f-4a815e07bdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab66e0a-689b-430b-877c-947d9a908fd1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0059b497-ee14-4bb3-9d16-adf3751e9436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3dfa75-8e6c-4b7e-b5f6-7b73457a2ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cc44e6-610e-4be3-8405-d7c9a0278f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1338b202-d13f-4e6d-9fa7-c61faf1c9532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9a93f8-c91a-4223-b8e2-e7a660836567",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1383068-1e27-4b11-abac-990b5fa28185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073fc87a-55c8-4735-859b-f52d172750d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0585183-e3ff-4c79-a30e-0098b0eb18ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6816d857-b96b-49a1-b676-e5b40681029c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96378380-701c-4ca5-a0c1-fcec75554831",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cd3229-ba00-4b93-93fb-f9bcfc3e8e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c74d4c-c491-4ed8-ab15-6254cb703d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99134cb5-a817-4e71-b79c-692d7db3f417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee081456-e923-4480-89fc-4ef28aa3937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e788edb6-89a7-4bd1-9e2b-616785a71c75",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a95b2c-c131-408c-9b7b-4280107a7409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f16cc5a-3908-44b2-8789-9f2830a0089a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81100f1b-81c2-44f0-b5f0-f9b627b38a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a6fe0c-5227-41a4-9eb7-ae41a3d6d758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc6ae44-cc9b-4530-b483-27df693a5778",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb82cb4-228e-4ccf-82c2-a021e5241bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c473060c-43b6-4be9-93f8-adfacfc4a32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a501afb-0c2c-4dea-848b-c39d35f8ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a54f99-3f0a-4c08-b30f-7373eed36697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b94a79-04b1-4887-9ee4-508df2935dbe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002e0a97-418e-451c-bcb1-96f8cdba3264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9335d5e7-47cd-4e6e-9085-2b3c6c7316a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414e817d-8ad6-4611-922f-ad08d4c6c29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad11566f-3a6e-4029-84ac-6ae6c27322e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fbc70e-4504-40b3-bd7f-9f2de47511f9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ea4681-3f3d-4add-bb19-f49865ac8066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19502151-7bad-48ea-8ab0-fe04db1d4816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cf64a8-d55f-4131-b5c4-ef19d576ec81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16552dfb-d216-4f4a-b02b-ec0bb552e382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7835f4f-21bf-43ef-a67d-190b8a561375",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04dc3a9-ca28-466b-ba03-a5b28a77eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b890b6-a13b-4629-994d-68163204d617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae8cf3f-e193-4a1a-be52-7e5e4f44f094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce0e0e3-060b-44ec-a4a9-35397c8a1cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b98327-6663-410c-ab40-879193e223d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72372bfa-f57e-4f68-90de-0aa969991efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed797c7-3e31-464b-b9a8-f34126784775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6fce5-1e64-42a3-a3b0-574dbd336200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af5bf40-5fbb-48df-b748-83d850f0e83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15030dee-e745-4306-91b9-3715c2ac8ec0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650f3219-f607-4cbf-a704-6df41194c8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10452c20-c91e-4dbd-ba52-e813c00a6c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6097fe69-d9cf-450d-9244-9ae11ae55207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333b41c3-910c-4ba8-be93-b5edcc2e83d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3b6b34-743b-4313-97b1-8f9feacf33a8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6ccfb1-3c98-4a3a-926d-cc7770aeb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9cfc19-e244-4949-b140-c8709de38808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c14420c-600d-4bbe-a25d-ed94c5d76b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90196c6-e1cf-4faa-b464-99322238af7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02446633-fffc-43f6-b474-79edbca59735",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50c2436-ddce-4d41-a1b9-1ae4a6fab92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7447ac-5f18-4f5e-82e9-26f8de52572c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b114d-3264-447d-9091-551ecbfca788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9480bdc2-7805-4a88-867e-ad50b6b0d705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd37a97f-7bd6-44a7-b148-a5c23b0d37bb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bf6778-ebc7-4432-ba29-785e8747c382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4b4fa6-b3fc-4f25-863e-e38e63640492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3212b2-4701-4cf1-9ea5-97f49b0b4106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb7707c-6c37-415d-967c-0583814c241a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631882b8-389b-49cc-beb8-0a824fd8656d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e5b1d6-21f8-4047-969f-60e02fc35bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0902929-bfb8-4326-ab51-890775d09b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e11ea2b-adf0-4edf-8460-9fde353415e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d2d9a8-9e89-4191-85ae-0df529bb53b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f014f567-18e0-4188-8aa5-2fbe08c98776",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2031e4bb-5105-448a-bb70-646301116e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45712f85-db1b-48f1-acfe-aa1daa783ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f9d9c-c864-4c30-b8ec-b639ad06cf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692a8742-0e4a-43aa-9f48-a78c11322cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0465bf02-336e-4f63-8ef8-86c16e0608eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f1a803-e21c-4526-aca3-be94b1c854ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed449723-9b9e-41fc-9301-74dd7081a5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ba3784-0de9-48e4-8611-b739131fd864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c73113f-39e1-4ca0-9c9e-f8ece015f548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2a6e32-5ed3-436f-9d7f-1ce798c6ac17",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed1f7f5-de20-4ed3-82d8-d55988a3bf37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8062ecb5-f80a-4b44-a524-282d34dbb45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb9531a-a92f-4276-9202-db4bac1df6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efe5ade-3233-41c4-b2e8-c391366931c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d67c3e-26e9-4863-b739-4195451fa88c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa91d05-be24-4cf7-a972-76ba29332d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec903d9-485e-4d05-9931-0fe6e5d08dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba05827e-21fa-40de-afc6-9b8f7316467f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9692eec4-a6a3-4805-b6ce-8e85de4a106d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb985b39-525c-41a2-9265-c1d2b5b61165",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c2c94-a0c3-4b9c-9767-36a4c38e8a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5397fd1-f25a-4df1-9a6c-766c34149694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18345fa8-a422-469e-8b03-5beaa1999bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0663a96-8ad5-4a15-9222-acd5c0ddbe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd463fd-d5e9-4528-9b31-6f4db192b6cc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f21277a-db0d-475c-a93e-3898ae02760e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc93e59-97f6-46d9-9b14-c22b6751d26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7b1ff7-cafd-4cb5-9eb7-e71133182276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506bce73-0efe-45b5-8c48-ba2efbbbf1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bed41d-acb2-4d6d-b132-be50f225c8cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3d0187-e7c8-46fc-a3c5-42e5c7532210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bf2abf-d937-40b3-a234-bdf2ea27da8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d11f39-b7cb-4b9c-96a1-adb4414dcd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03290fd-4323-427f-99a5-d585eb2ab3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184efee7-6cb6-41c3-ade0-f86bf52827be",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db937922-7008-4708-90d9-a753ed0a0a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "969ca820-decf-4d59-bc71-5423d5838d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71069e28-1c01-486e-9df2-64501d006bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2be51fe-2175-42eb-9208-b9704e417f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b951984-19fe-4f33-aa2b-c2597ec362ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa791109-0169-48ed-8790-f2dee84aa579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662cb013-fd76-49db-929f-71674dc989c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a483d9-4b65-46ca-9c04-b7105298f359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01068371-e7b0-4ce4-bd7a-25c9c41d7a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c7712f-507e-468b-bc3e-09a30874a7be",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87724d1-7e59-40d6-a00d-5d381062e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04f07724-a008-4bf7-acf7-22959e8a0d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ffe487-4ac6-446e-b1a5-ab3f2987be45",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47571cb0-2b31-4414-8a33-94600bbb6407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efa425a-f743-405c-adc5-46a846b9ee2a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85666685-793d-41cf-99b9-05ab2372ae8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928429dc-da72-4344-b932-99874aea375d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea08d8c-8b65-4f0a-a784-ae0ecab2d209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf787b8-92d4-4c28-b703-c43065da80f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f961c3-410b-4ca5-96f0-c0c9a6f6d499",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d66edd-771d-42b7-aabc-8757b7f84bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096d2c9e-00f6-47a1-9279-59969b326c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c68aa1-5c3a-49fc-8ed1-736a6873eccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6b2042-9f1a-450e-b01f-91052b61812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a9d17f-789f-4124-90ee-0bf64b223816",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6b5534-33ad-4051-bfcb-dcb569999511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1876ad-c19c-40e1-9371-e3bff8b26035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c2cd8e-06ca-4ca5-93aa-8a5f4a1617af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d31aea8-85b1-47d8-988a-3678af411462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f268c86-c674-48f8-8c1c-a40913041953",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fa4745-2d75-4ce3-8c59-8ac6e71332e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e894f4eb-5e95-482b-8937-2ff976382393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbc60e8-e771-4f8f-bf5d-060cc36df68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2610896-56ed-4f70-aabe-33620e8af68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d19f65e-216e-47fb-824e-69762458f1b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a72cba-8d90-40c4-a88a-ba281dcc3cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c591ae0-e7df-4dbb-8058-06bbb844e0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cc15e3-a2f1-4e40-a15c-849b761544b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ff2e54-5391-4600-83b0-52303f5e6015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fb0e2f-84e9-4d4d-b942-fc470b964cbc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514b5922-f177-436f-a42c-898aa6dc1fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f771d1-1b5c-42c1-a8b6-69e9398b2b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745d5c0e-d37b-4bfe-a61a-49db246efbe0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57abb94-ee43-420c-96e1-d6d1c78787f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e6c91a-a513-427a-a8f1-977499d4199e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa1cce6-05e0-4e0d-b4cc-68ff6b595fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfda143-44b2-45f0-b69c-c83e9c4b3a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a369224b-ee51-425f-a58d-399f396e3781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae29f4d-d4f9-4db3-979f-8f35cbf16b7e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d80934f-84ce-493d-a92f-9e35ca16cc8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b68f92b-5c28-4a84-8431-36947f060d19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "423c41e1-5483-42f1-bdde-fb34eaf08237",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa0a093d-55b2-4272-908c-d564f9a9a3ee"
                    }
                  }
                ]
              },
              {
                "id": "fd19587a-700e-4f13-97f6-a396849b31e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "555eae7f-4a6d-41bc-a828-272cba9173d5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6eb8c5-e8a9-4265-83d4-e0ee73135207",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "baacecb3-2546-499a-90d7-2b05987a1896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c53ca01-f268-408c-ac5b-f3b3a68f8014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f56c94e4-8565-4677-80f6-c7fa8c5364e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a028218-68ff-4e7b-b639-3f11b2715868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60ed5f4-39ea-42f2-bc00-a3875a44a7a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33cc793e-15bd-408d-af12-224c6a186b15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af88ebf0-3acd-4eaf-83bb-aecb7c2ee3cd"
                    }
                  }
                ]
              },
              {
                "id": "5fdfcb21-741a-4029-94ec-a9269398d233",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f6093ef-d5cd-44bf-b922-dc0881985ca7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55861c5-cded-478c-9936-514b5dd248ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4d67fa1d-d535-4499-bfff-fd41a0269119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fd53b8-12e2-48eb-8d6a-dcb32f0e08d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ae9aac-aefd-46b7-b2d2-ef93457306cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "738affc6-11aa-44f7-961f-a893f4e2aa3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b958360-8063-4eef-93d8-93ef6d0a4596",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "351b8406-fe85-46c7-9b8c-6b3b712ef6af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7048747c-7ff7-41fe-a361-0b9745bdc243"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "784e1926-27cd-4e00-b553-890c533aaad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69947716-9b7c-4212-bb1d-1045e1c9ee2a"
                    }
                  }
                ]
              },
              {
                "id": "3f275923-0713-42d6-8673-5a1ab0e069fb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f19a3d6-a305-4d5f-91cf-0db9f312c6eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b05d4d78-bf00-4813-82c4-489ffc8785b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b291ea6-fff2-4ebb-b40b-1b4818175766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4456cdb4-8821-494f-aaa3-b4e90779a3eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "967438fd-74e2-4427-86d8-6dca97cd3aea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d5dc50e1-49b2-4af8-8771-55fb7af024ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70ea7c6b-0eeb-417a-9d90-1d83df37c5ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "477dc623-c3e8-4c85-ba59-318400dc427e"
            }
          }
        ]
      },
      {
        "id": "10f04a94-4491-4c93-a082-494d72c65f2d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0845ebd4-54ee-4661-bbdf-c57001dbc440",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e4cf4d3-730d-4907-8b0e-b75aa91bc2fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b836fce-45d9-4f42-bc3a-0f7844586da5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c7873-f3c8-49b6-81d7-9de71fc55ffc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a0fa0dba-af03-47c4-ac2a-0401365f4b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e781c-4982-4ff3-be32-e11cc2ec0b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e55a5e7c-ee10-440a-9a17-2eb9c34927af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7583e71-8b56-4802-8264-eee0b65e9010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58c8b804-0b8c-49c6-97fb-46e0a729079b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e77c8a-8b40-4139-bb39-61ae94233f24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ac335db-1356-43d1-8288-3eeec9c0f53d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8237c0c-93c2-4133-a2f8-400a5698a83c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a677d81e-9f96-4131-bae2-9bb51572808c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85078f2d-9c7c-4db1-a116-2ef516d513db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd12e96a-6bc4-4ea0-bb22-9f78e2a00887"
            }
          }
        ]
      },
      {
        "id": "051dc7df-351d-4a7c-88eb-1e2b926d7fbe",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "06cef2cd-0543-4a92-9dc3-da13f2a02029",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6ece3a3-1ff4-4d52-afc6-b4b8cfbe542f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ef1d411-1f34-40f4-9ad7-484c9c64c974",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c209f71d-0e88-49b8-a0be-2ff9814ef6c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc7169f2-1730-474e-9c0c-9cff3f5feac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b50deb-4153-490f-a0c3-fe5c023580b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aac1a132-7c41-4917-9165-26396776ed03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c5597c5-5e9a-41be-883a-bded7366c42b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "341dced0-4617-43f8-bb34-1e3b1ec563d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc67a901-efe6-4311-b1cf-c1ca60cce621",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e44b9b3b-2c90-4dd2-916d-a71a4346e1cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74f66f3d-801e-4cc9-8508-aacdaf6a69f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "881f5117-30ea-41a7-b055-842be6159bae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb161641-a785-4cbd-98dd-440e6946c86e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9565f507-b807-41df-ac25-42ca2f946468"
            }
          }
        ]
      },
      {
        "id": "f748d39a-6d4d-409a-9dd5-78a3ed58c08d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7b54c1ab-092a-4005-8a35-0db11f4cec77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "510c66d9-a263-44f4-ad6b-51c5c394127c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "919376c0-d2c2-4666-a45f-f6e679f6693d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577e321f-0df7-4574-9fc7-73aeff92c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c86f0b7-4c03-4d61-a185-e77d779be963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d708aec5-5e4e-41a0-8175-c1f4eb829c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46bdfeb7-0406-4957-8876-af720dc1c6be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e577c91-fcb8-4cea-9057-ab4cdd74c5c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fda4780d-36b7-4914-976a-ab086a08fbc9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10a6eb76-0baf-42c5-a802-d115aaf07c6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d59e9e8-07cb-4c93-871a-bf56bcf55c9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3eacc01-ca2a-4abc-99ee-9fd9fb7f0fc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8be4e785-2b19-42d6-b045-05ddc241b7cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3342e521-33af-4ff1-b292-c6619a11468c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f914b1e2-e588-4657-a8d6-bbbb5ee3472a"
            }
          }
        ]
      },
      {
        "id": "c5333316-8bbb-4740-8f6d-3eccf08fb045",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d221ddc-68e4-4765-aff6-9a1a0b5c48fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "262c8506-54a4-424f-9cb8-5428ffd00150",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "20ba2cb7-782a-454c-833a-426b14f0cc0b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "268a5f62-7eac-4935-8728-a370d76b1e94",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05a8c239-c8dc-4e66-9ade-86550f979f42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.99206349206355,
      "responseMin": 4,
      "responseMax": 11613,
      "responseSd": 766.5876459900926,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721176808548,
      "completed": 1721176840724
    },
    "executions": [
      {
        "id": "cf828333-5d4f-4afc-8b47-df9fea29a33f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ecd5c248-fd2e-4155-810c-964d79ebc228",
          "httpRequestId": "95e4b4b2-8061-460e-8255-c5460498c4cf"
        },
        "item": {
          "id": "cf828333-5d4f-4afc-8b47-df9fea29a33f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b7231bfd-9af7-4406-8149-b8901579a2e3",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "2102b62c-65f1-4e71-b303-f947479772d3",
        "cursor": {
          "ref": "424e011b-f8e9-4c64-aece-f4915816fd78",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a579c5d6-de9c-4fba-b68f-a80f6a2862fd"
        },
        "item": {
          "id": "2102b62c-65f1-4e71-b303-f947479772d3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "14fba8e8-8e8d-4ca8-ae56-d41499884200",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "ca5b8b52-6fac-499d-9df8-7b79b30fff15",
        "cursor": {
          "ref": "0139b9cb-a275-4d71-9784-cf6ee541e273",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "90b5bd84-d3cd-4215-a707-d96794848b6e"
        },
        "item": {
          "id": "ca5b8b52-6fac-499d-9df8-7b79b30fff15",
          "name": "did_json"
        },
        "response": {
          "id": "f06ef36d-a81f-4832-ae7d-2ad4076abe15",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f20d45d-cf50-4a5a-aebc-a4ac15434ac9",
        "cursor": {
          "ref": "9160ba95-ab5e-411e-8d63-8e774b443745",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a966a8e8-b6bb-4fb8-9f08-612461eae473"
        },
        "item": {
          "id": "9f20d45d-cf50-4a5a-aebc-a4ac15434ac9",
          "name": "did:invalid"
        },
        "response": {
          "id": "4852c16e-e0b3-4991-b9d4-d83cbdea3458",
          "status": "Not Found",
          "code": 404,
          "responseTime": 832,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f20d45d-cf50-4a5a-aebc-a4ac15434ac9",
        "cursor": {
          "ref": "9160ba95-ab5e-411e-8d63-8e774b443745",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a966a8e8-b6bb-4fb8-9f08-612461eae473"
        },
        "item": {
          "id": "9f20d45d-cf50-4a5a-aebc-a4ac15434ac9",
          "name": "did:invalid"
        },
        "response": {
          "id": "4852c16e-e0b3-4991-b9d4-d83cbdea3458",
          "status": "Not Found",
          "code": 404,
          "responseTime": 832,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18129145-10b4-4781-956c-4a1c5dea3ecc",
        "cursor": {
          "ref": "a5aa57f6-d3f2-4892-85ed-eaec2041e71b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "94f419c2-170c-469c-8079-3a50f85ee832"
        },
        "item": {
          "id": "18129145-10b4-4781-956c-4a1c5dea3ecc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "138b063d-9a6b-41ba-9798-1d0051cf1af5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e817b548-09e2-4115-9553-b8b0af039935",
        "cursor": {
          "ref": "06ac6984-486c-4e69-b977-80b1c6374eea",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ddd9fe34-791a-42ad-88f8-ab23cd085ce0"
        },
        "item": {
          "id": "e817b548-09e2-4115-9553-b8b0af039935",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "88da986a-7561-468f-a602-a4835c74577a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d911be-997e-46da-bd26-e9999629de62",
        "cursor": {
          "ref": "7864309b-2184-4297-afae-ba91904ee3ad",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "12ff2bda-646d-4716-8ff1-c44c911c5653"
        },
        "item": {
          "id": "09d911be-997e-46da-bd26-e9999629de62",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1bdb80f2-b7e1-4ffa-afa3-7c42a8c38bb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292b47eb-87fd-43c2-813d-d29454283243",
        "cursor": {
          "ref": "eeb6f76d-3359-4ba2-86c7-8af58d1ac8de",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4d86eec-15ce-4e68-ac91-635d8869f298"
        },
        "item": {
          "id": "292b47eb-87fd-43c2-813d-d29454283243",
          "name": "identifiers"
        },
        "response": {
          "id": "2a0353ae-d9ec-4580-a753-dfa857ceb6a5",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0907b478-c293-4d84-b492-5db69772e8a5",
        "cursor": {
          "ref": "20a1aa48-99ac-4984-951c-f04781926aea",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "49f97607-3f00-443b-9fa3-37f35b444aa0"
        },
        "item": {
          "id": "0907b478-c293-4d84-b492-5db69772e8a5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dc2e21a6-13ce-4d44-96bc-a555ba447c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e21378-b35d-4f4b-a1d8-42898b44a011",
        "cursor": {
          "ref": "fca58627-8197-433a-aac3-ba5d2799653a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1e56d2f3-e6e0-4088-b19c-7cef35fc2f92"
        },
        "item": {
          "id": "80e21378-b35d-4f4b-a1d8-42898b44a011",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "363decd6-822b-411e-9695-fb83eaa796a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74225e76-6f69-40e5-b23a-a124b5a5b06e",
        "cursor": {
          "ref": "a0d2ea9e-c330-4950-8250-974e967923e5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "828cb698-f51e-46d0-b4ae-c4012f2e6348"
        },
        "item": {
          "id": "74225e76-6f69-40e5-b23a-a124b5a5b06e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c0b306c6-643e-456d-a465-46d7faf09d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db7b875-d7cd-4ca3-b4db-26ce579a2820",
        "cursor": {
          "ref": "50fafd2f-dc44-463b-83fa-fba6f214baa3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "aad680ee-3880-408b-b6b7-bce4208e5f78"
        },
        "item": {
          "id": "3db7b875-d7cd-4ca3-b4db-26ce579a2820",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0337e95e-1812-4ae0-8a99-b27cad16867e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d640b2b1-795b-4937-9fd7-a51b868c2896",
        "cursor": {
          "ref": "539c375c-96f8-41ee-8904-7f5afcfca5dd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e9cca9f6-a7e6-4727-909d-0ac01d3f56a2"
        },
        "item": {
          "id": "d640b2b1-795b-4937-9fd7-a51b868c2896",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bb128f47-3f9a-4640-a123-fae4f1827775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7598a5-0b1c-4c93-a97d-25d6b0fc1aa9",
        "cursor": {
          "ref": "5321d4f7-f247-497f-8dfe-9e6612249207",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2806c09-e62e-43ac-86b5-465bb7440f35"
        },
        "item": {
          "id": "4e7598a5-0b1c-4c93-a97d-25d6b0fc1aa9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b69f0553-1bbd-4411-8ba9-af0526aa7a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac35f98-7dc3-4b3c-928c-b217e6bb3891",
        "cursor": {
          "ref": "ea1175f9-5d34-4207-90d8-ed2b2de15d24",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "42726978-0f5c-4ee0-94df-2ba1f8609e75"
        },
        "item": {
          "id": "5ac35f98-7dc3-4b3c-928c-b217e6bb3891",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d8963bfb-138d-48c1-86a9-b9152f87a48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29756165-3a31-4167-a0c3-5dcc899922c8",
        "cursor": {
          "ref": "522f1afc-f5be-40ab-8223-a32acef877b8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c85ed65a-a61b-4d2c-b919-4c8416792d99"
        },
        "item": {
          "id": "29756165-3a31-4167-a0c3-5dcc899922c8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8c721eae-50b4-4a9a-a406-189438c433eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0356cc0-90c4-40ad-b192-3fd7ae9c5fcc",
        "cursor": {
          "ref": "e6f4a521-7f2f-4dcd-a18e-be9a3e0b1176",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "49779aef-d7af-4b8d-8b3c-5ed61c754496"
        },
        "item": {
          "id": "c0356cc0-90c4-40ad-b192-3fd7ae9c5fcc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "51695de1-202d-4ae7-bc41-780289ad274e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b345b-7bc3-423c-8049-d234c68ac5ae",
        "cursor": {
          "ref": "a4508738-a90e-462e-a591-eb888c8f004b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "96f4f6ed-266a-4ec8-84ff-e9ef11130d88"
        },
        "item": {
          "id": "844b345b-7bc3-423c-8049-d234c68ac5ae",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "058625b2-62e8-44db-82bd-e8af1c4cc0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a41eaf0-5432-48c8-b1dd-b314e662cf41",
        "cursor": {
          "ref": "77845ff7-8c7f-47c9-9dd6-e529929b0f19",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d17472e-89c1-4413-87af-e4c6cf54f610"
        },
        "item": {
          "id": "5a41eaf0-5432-48c8-b1dd-b314e662cf41",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5e393893-337c-4ef1-a00f-b972057243e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14574f69-daa0-484e-9ed1-095a229ed6c9",
        "cursor": {
          "ref": "6b817d52-7c25-4a1a-8de6-4051f93e9f1c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c9261158-40db-4566-8cb4-233ab1317d49"
        },
        "item": {
          "id": "14574f69-daa0-484e-9ed1-095a229ed6c9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4ab65265-09db-475a-8ee1-ba1eea56c71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43152c23-5398-490c-91a8-115ce5ebdb67",
        "cursor": {
          "ref": "cbcd7647-1f17-46a0-84bb-8b96eaf5fcee",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1dc337f9-036e-4580-ae75-31ade2aed167"
        },
        "item": {
          "id": "43152c23-5398-490c-91a8-115ce5ebdb67",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e96df04b-cd67-45e8-b66b-aeeef6fe4fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a06d49-8918-4719-963b-91bedc2b8e61",
        "cursor": {
          "ref": "2fc40387-02a2-4c3d-ae94-799f2231860a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "83d390a1-e3ee-402a-8795-4319d1e29a0b"
        },
        "item": {
          "id": "c9a06d49-8918-4719-963b-91bedc2b8e61",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f88c6748-5957-4521-87fa-6a7c7361a919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ae6ab7-d0e5-43e2-a404-9cbea5b61148",
        "cursor": {
          "ref": "13fb2be5-4ca7-4836-8ff5-ff4d135315dc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "379e543a-f06d-4a2b-9e27-99789fe8680b"
        },
        "item": {
          "id": "68ae6ab7-d0e5-43e2-a404-9cbea5b61148",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f8bbc72d-d00f-4b33-84d5-8efb9932e97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f5102-881f-4094-8ef7-5ef2f9beae9e",
        "cursor": {
          "ref": "1e66b204-e6f6-4c91-8b48-901c125d5e96",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "48d7dc58-57b0-4d56-acb1-9faa55059c19"
        },
        "item": {
          "id": "ec1f5102-881f-4094-8ef7-5ef2f9beae9e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3786dd47-5246-4814-8a71-6b5455b21684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cb8d36-d9a8-4053-b445-0bdebd60b499",
        "cursor": {
          "ref": "11ab4c09-13f7-4749-aac8-a9c2c56e720a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "756ac63e-46e6-4bf2-af45-6f714e5b5899"
        },
        "item": {
          "id": "d7cb8d36-d9a8-4053-b445-0bdebd60b499",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c167a271-d0f1-45ed-bf30-477fc08de9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5908d56-7be7-405e-b8d7-7df108c9074c",
        "cursor": {
          "ref": "65b26b7e-e30e-4957-b099-6e43b1a12c5a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c0753d9c-d4eb-4ef3-9605-5f7837d3185c"
        },
        "item": {
          "id": "f5908d56-7be7-405e-b8d7-7df108c9074c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32da627f-a9d6-4d79-8a62-217e3a4a1c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8e5c0b-6c35-4f22-9f96-c269bf989454",
        "cursor": {
          "ref": "4496eb62-0d55-422b-bdf9-65e7290a07e6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9ef29b67-685f-4b83-9630-5f2dc75dae53"
        },
        "item": {
          "id": "fb8e5c0b-6c35-4f22-9f96-c269bf989454",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a2acbaca-7657-4958-a3ca-8c471d9de235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d07945-5dd1-43c0-af72-4ef5209d8792",
        "cursor": {
          "ref": "4ece50d9-b486-48a9-9780-bf9aecdef86f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa248399-5755-41e9-b12c-9b5f04ee8c28"
        },
        "item": {
          "id": "56d07945-5dd1-43c0-af72-4ef5209d8792",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e936cf2e-acec-48ed-9fc4-adcecb8be022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb1c31c-7dab-4e50-9b18-b8913e698fcb",
        "cursor": {
          "ref": "f35fdfac-55c9-401b-ac9c-71c9a4579670",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "511215ea-b8b5-45c1-9817-f457455f46eb"
        },
        "item": {
          "id": "3eb1c31c-7dab-4e50-9b18-b8913e698fcb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f4492da-d144-49f8-9d28-98f52a3245ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ac3295-a1bb-4bd7-b249-f9392fa169d0",
        "cursor": {
          "ref": "1831a752-91f7-4a07-a791-2b0daa7dea83",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "196f6bed-b4b3-4ea0-8db3-0a66c4cde96a"
        },
        "item": {
          "id": "53ac3295-a1bb-4bd7-b249-f9392fa169d0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "62ebf7dc-80f4-4ba4-b1a0-ef101d5b8dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8651568c-3de9-439a-ade7-3473128ca004",
        "cursor": {
          "ref": "86477f9d-1002-4ddb-ac7b-410e5f91224e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "29fb3e83-fd5f-449c-9925-bfb02a7b1619"
        },
        "item": {
          "id": "8651568c-3de9-439a-ade7-3473128ca004",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "804a1460-49ce-4188-86af-5a86ee13f86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bc2d42-bc37-4ea6-a5f8-6acf2ea5f70b",
        "cursor": {
          "ref": "bd45bc25-22cf-4f5c-a2a8-15a80ff39ef3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "23ad9873-bcc7-4b5d-acf3-292d98cc8aa3"
        },
        "item": {
          "id": "e6bc2d42-bc37-4ea6-a5f8-6acf2ea5f70b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3d445a0b-aa31-4d15-9259-2fb1f59a0dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a78b1f-f807-4a29-9b0b-019a023116ab",
        "cursor": {
          "ref": "659f8e80-f731-4603-b50e-86daa74744af",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "27a4377c-35e1-41dd-8cd8-5d92c5328948"
        },
        "item": {
          "id": "84a78b1f-f807-4a29-9b0b-019a023116ab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e1253851-7955-42ca-9f7c-d16d0eeb432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546fa79d-b07e-45a6-a736-b5c78599c5a5",
        "cursor": {
          "ref": "9fe21c84-48fc-4926-829f-ecf113c1b5d1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "95621226-3f1e-493d-9e93-f9d88cc83999"
        },
        "item": {
          "id": "546fa79d-b07e-45a6-a736-b5c78599c5a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ca13377c-f4f2-48b3-b4ed-976f8e4569f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b70436-1e88-49f6-98a8-3feacb76dc84",
        "cursor": {
          "ref": "c88c8344-0655-4205-b0db-0615f3afe94c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "be7e92ef-bb91-4b50-9418-bd3b4456eb53"
        },
        "item": {
          "id": "06b70436-1e88-49f6-98a8-3feacb76dc84",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "985107d6-733f-4e22-8032-0839dfdcafef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1266122-29f6-4519-8c87-b19621eb6b82",
        "cursor": {
          "ref": "8991a2f8-f33b-485c-97eb-918961da18ec",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "978c6efa-f121-4182-9226-c46aa9d2c7f5"
        },
        "item": {
          "id": "e1266122-29f6-4519-8c87-b19621eb6b82",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "364bd5cc-cede-46ce-8544-47528a4098f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b505fb-c06e-4db2-86ad-a59297921326",
        "cursor": {
          "ref": "dcf7990a-1bf7-4572-b12d-5b2c6208db84",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a0445817-8835-4af9-bc06-46cd63423d78"
        },
        "item": {
          "id": "b9b505fb-c06e-4db2-86ad-a59297921326",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "09deadd4-4e32-4312-9043-2706978682e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e55af93-27c3-4e50-8879-700bb56d9864",
        "cursor": {
          "ref": "650c4adc-65a4-41c4-9093-c45ddbee19ff",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30a2372d-1ebc-4c1c-9776-83d5e7f1e58d"
        },
        "item": {
          "id": "3e55af93-27c3-4e50-8879-700bb56d9864",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d346c5d-22a3-4455-b7d4-19671bab7b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a41a9c-2273-4b7d-a3a3-63dba94ed62a",
        "cursor": {
          "ref": "1b75b260-a128-4cfb-aaf3-708171961228",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e3db02a3-8187-42f0-bfd9-9d615e3731da"
        },
        "item": {
          "id": "10a41a9c-2273-4b7d-a3a3-63dba94ed62a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f6f51d16-be3d-4c95-85a1-2ce3790f1d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c855f9fe-5219-4e9d-be73-6df682660eb4",
        "cursor": {
          "ref": "1a9faf16-feb1-431b-83e6-3ce542ad7e02",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3e5fda7-8219-489b-9d48-5368620af203"
        },
        "item": {
          "id": "c855f9fe-5219-4e9d-be73-6df682660eb4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a421c1b5-ae4c-4f8e-bc14-9a21bbdfa983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7446a3fd-0a22-4648-801e-ae9a462eeafd",
        "cursor": {
          "ref": "949068e5-2331-4e06-9d99-fbd71e94e22c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "59f804eb-8981-48c2-80c7-f7fa0521e901"
        },
        "item": {
          "id": "7446a3fd-0a22-4648-801e-ae9a462eeafd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "77fde6c9-12d7-42a1-b8a9-419e39b89901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18910055-c6f3-49f0-bbb0-6217e3c91c2e",
        "cursor": {
          "ref": "9965d3aa-5edb-4e34-ad1b-4367645cef9f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "013184d8-e79c-474d-aa0d-990980a4bd02"
        },
        "item": {
          "id": "18910055-c6f3-49f0-bbb0-6217e3c91c2e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d9cced80-c8dd-4fbc-89ba-b1f43335858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a57ef75-0fca-4f67-bc2d-2acb9545872f",
        "cursor": {
          "ref": "61e072e7-77ec-49ca-8b0f-c871f3c19ac0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eeefa020-136a-4340-9540-d09239524a0e"
        },
        "item": {
          "id": "1a57ef75-0fca-4f67-bc2d-2acb9545872f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "94c49134-3706-407b-94ca-84d46586cc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd42844c-92ce-4020-9dd9-b3c5490a859b",
        "cursor": {
          "ref": "2c4fb5f8-47f6-4ef5-b9b0-936460133769",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9ab676ef-5c93-461f-87fc-bc874d25d11e"
        },
        "item": {
          "id": "fd42844c-92ce-4020-9dd9-b3c5490a859b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5ba8bdef-64cb-4081-a58f-af3fc4454e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94955aea-7e95-4701-9217-62313774e4a0",
        "cursor": {
          "ref": "e08d01af-59a0-4dd8-998f-904e24359edf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fd7c0174-1a42-42d6-94b2-b90f8a813efa"
        },
        "item": {
          "id": "94955aea-7e95-4701-9217-62313774e4a0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9119bba5-d46e-4378-bbe5-55601b38d06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100433aa-6336-48d5-bec8-0d586a597d8b",
        "cursor": {
          "ref": "f27b99da-734f-469f-861b-614b9841f2ce",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "39225c26-88d7-4f27-b95e-6e8bd36a21f9"
        },
        "item": {
          "id": "100433aa-6336-48d5-bec8-0d586a597d8b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e090e1e8-84e5-4573-ad00-3e9e2c16cb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e167074-ed24-4e30-9428-0f8de2f8fef5",
        "cursor": {
          "ref": "baf9650a-7806-4b27-9360-568e9ee0151d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1191330c-f953-4599-a03e-af2dfa1e70e1"
        },
        "item": {
          "id": "2e167074-ed24-4e30-9428-0f8de2f8fef5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "72709f03-4a71-4396-b523-35ac2c1c43bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfc235d-ef75-47e4-90d8-f060b70dd96d",
        "cursor": {
          "ref": "b9510eff-d3ea-4e47-a323-e4e36ea0d2c3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e0e11129-57d0-4f31-a4a8-0faa0eb023be"
        },
        "item": {
          "id": "2cfc235d-ef75-47e4-90d8-f060b70dd96d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "96c13f7f-8557-4bcb-bf77-1ef44bcfe91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e7968f-fb9e-4e3b-bf80-7be9c18bde76",
        "cursor": {
          "ref": "1f4ac8e6-bf89-47ea-b5ba-98ba2624e8b2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "69000f5c-9904-4541-a4a8-afa2d729764f"
        },
        "item": {
          "id": "f7e7968f-fb9e-4e3b-bf80-7be9c18bde76",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "efe97a2f-f1ea-466b-b27a-0a4c6c2971d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b784e7bb-d63a-4e9e-9031-cad18abb4489",
        "cursor": {
          "ref": "45e21bab-27e5-4e53-8635-0f6159183609",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3858b57e-c431-469c-8f4c-a14e8b3769d9"
        },
        "item": {
          "id": "b784e7bb-d63a-4e9e-9031-cad18abb4489",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7ecfccbb-b1da-47c0-99c4-75d7c1342814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd81492-94f8-4673-8699-cea4c9f3b9c9",
        "cursor": {
          "ref": "27c50699-59b9-47f0-9772-4d5841c7cfe6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7234180f-836e-41fc-bf73-b1596f2cf4d4"
        },
        "item": {
          "id": "4dd81492-94f8-4673-8699-cea4c9f3b9c9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "364b2a48-e751-40af-b348-1c041065318e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1df0a9-a3ef-408d-bb43-496dea27c01f",
        "cursor": {
          "ref": "440c0fa4-d2eb-47d9-9914-46cc68219ede",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "74f7ebbb-7ad3-4006-82e1-07225bc75132"
        },
        "item": {
          "id": "ca1df0a9-a3ef-408d-bb43-496dea27c01f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "801de661-611d-4bcd-9711-1177541837e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b20520-0694-41f7-b11f-dd4710164654",
        "cursor": {
          "ref": "96676894-63ab-4ee5-8c67-c25974cd137b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ee04681d-2912-4914-8397-5a9ac48e23a0"
        },
        "item": {
          "id": "92b20520-0694-41f7-b11f-dd4710164654",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "efc94831-75c6-48a8-bb88-23fc538ea964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53754d6-7afe-4bf2-8999-9dfa8c629625",
        "cursor": {
          "ref": "024e4ed1-661a-488f-9d18-a38b46528c29",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7fb0e243-edf4-4442-a8ba-8cbd1a7872ad"
        },
        "item": {
          "id": "f53754d6-7afe-4bf2-8999-9dfa8c629625",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7b17d5c2-c280-4672-92ac-1921cc278f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd8e40f-be45-4981-8515-f1e346a2d88f",
        "cursor": {
          "ref": "5a6a72ef-d123-4def-b81a-e974730e0d9b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c1c79c73-6310-435a-913c-b19c58563465"
        },
        "item": {
          "id": "3fd8e40f-be45-4981-8515-f1e346a2d88f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bfe5b515-c9a5-4e9e-92b4-c504edbd3485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae67b839-e566-43c0-9d55-e6ba917f7863",
        "cursor": {
          "ref": "f4a74393-ac86-4e8d-8f49-4059a4c5bba4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ded59b45-1883-4fbb-ae3a-48ba4fd64a94"
        },
        "item": {
          "id": "ae67b839-e566-43c0-9d55-e6ba917f7863",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aaae96a9-712a-45e0-ad89-811a070cc30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55036622-25bf-4b67-9de2-bc1dd7a8b9d7",
        "cursor": {
          "ref": "04a8a497-2d96-42d0-a647-5c5695671f60",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c0f9d145-9289-4cd2-b93f-24b5b65921a4"
        },
        "item": {
          "id": "55036622-25bf-4b67-9de2-bc1dd7a8b9d7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f98aaa55-ff9a-4c19-bab5-99391e4e1388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9af3e9-1727-46f5-8735-ce4896bfba02",
        "cursor": {
          "ref": "f881ae42-4e20-401d-be00-e49cf3030d0b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eee5fee8-47cf-4512-a4c8-a30ac9b2f443"
        },
        "item": {
          "id": "6a9af3e9-1727-46f5-8735-ce4896bfba02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4f7d0e84-4322-4636-ba16-0abd8db1cedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce7dde8-f4ea-47f6-a914-3d0034726a35",
        "cursor": {
          "ref": "517840a6-2d44-48d7-b55c-005c84a1c92f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6ce98358-294b-4ebb-bdef-c8d56e156884"
        },
        "item": {
          "id": "cce7dde8-f4ea-47f6-a914-3d0034726a35",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3902c085-9aa6-4244-9f0c-b9889bae3a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65ea9b0-e557-4790-9e03-b2632340fd15",
        "cursor": {
          "ref": "c16ca6e0-93f4-4dca-bc02-e4bd149a2ed2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "32fec02d-f1e3-49b4-a102-1f1b663da590"
        },
        "item": {
          "id": "a65ea9b0-e557-4790-9e03-b2632340fd15",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9331127b-b17c-4fa9-94ee-718982dd993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ab275f-75ce-4cce-8795-2f98fe992228",
        "cursor": {
          "ref": "fa05cb78-5a5d-4f49-ab44-6fce66628a86",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "78afbf75-55b6-4a14-92a1-501f4682fd8b"
        },
        "item": {
          "id": "49ab275f-75ce-4cce-8795-2f98fe992228",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "79a3f39b-1ed7-43cf-8b05-8c32c7dc9114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ef9df-33f4-4085-b70f-d3cda2a002f4",
        "cursor": {
          "ref": "c12665f7-ae24-481b-a276-42b6900d5a5c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "99df01ce-5b5c-4a27-afc0-b58df802aca2"
        },
        "item": {
          "id": "c66ef9df-33f4-4085-b70f-d3cda2a002f4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb8d96a6-0e56-4785-bfc9-49758598afaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ebe45f-afe4-4b6d-a6ab-a046914bb932",
        "cursor": {
          "ref": "6dfebad0-2193-4e49-bc87-092b67d2c109",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a39ec17f-0fb2-4004-9ec4-9e934e10fb5b"
        },
        "item": {
          "id": "61ebe45f-afe4-4b6d-a6ab-a046914bb932",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0b6c7358-1f48-48c5-8c97-72d4707a9abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8158fb-b9e4-4515-bb5d-76c3eb55ab63",
        "cursor": {
          "ref": "a6aff687-df11-4cc6-af13-5b2eff9fec07",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2ad32b30-afd0-4a38-95da-200a4ac3c1b8"
        },
        "item": {
          "id": "ee8158fb-b9e4-4515-bb5d-76c3eb55ab63",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d3b2072f-6705-49f9-b19d-f16db060276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf4b4ab-b35d-43f6-9970-cda31fe848ee",
        "cursor": {
          "ref": "c6ce3f38-3861-4a8e-8645-a6e1b3822124",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f2d2d6ec-00d7-44e6-a1a7-d0b1490664bf"
        },
        "item": {
          "id": "1bf4b4ab-b35d-43f6-9970-cda31fe848ee",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fad78622-0500-4cb3-8237-28cbe52536ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f0dcd9-4063-41a7-b51b-c1781340a51c",
        "cursor": {
          "ref": "5e3686c3-b8d5-4219-8692-9c7f7684a9fc",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a0733a9-762b-4f49-b05f-4371c7a39d72"
        },
        "item": {
          "id": "60f0dcd9-4063-41a7-b51b-c1781340a51c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "83492d1a-9081-4992-9e06-69736d3f943c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8cfb4c-53f4-4bea-8ed3-7185cbf6ee62",
        "cursor": {
          "ref": "852a4101-f863-4273-8936-72c9698a8a5e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9d6863af-bbbd-417f-bbc6-ba97890a6388"
        },
        "item": {
          "id": "3d8cfb4c-53f4-4bea-8ed3-7185cbf6ee62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d091c42d-1b62-41e2-853e-a3221b87c091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c3a734-a35c-4208-9d49-48b3123bb39f",
        "cursor": {
          "ref": "65a841f2-25b8-46ed-86d0-b2bf855ac1c9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4d7ecc43-1e3b-4444-b3b1-a35dadec174a"
        },
        "item": {
          "id": "87c3a734-a35c-4208-9d49-48b3123bb39f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "39818d9f-3e1d-4886-97d8-3a0ea55fbc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449f7919-2587-4c2c-8a22-7fa7dba46dd8",
        "cursor": {
          "ref": "10e3a474-5079-448e-8f38-5cc6e544694e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bc184751-e412-4028-96f6-d9d164c45d1a"
        },
        "item": {
          "id": "449f7919-2587-4c2c-8a22-7fa7dba46dd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e4a3871e-2bf7-4b70-ad62-cdc7284762c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5785fd-06b6-43f9-9f17-762954c9c3c8",
        "cursor": {
          "ref": "58040a3d-a097-4d70-ade9-0ef9f8874984",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2fe01f23-2b09-4bf5-a17f-03ad2c635060"
        },
        "item": {
          "id": "6f5785fd-06b6-43f9-9f17-762954c9c3c8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "94043fc8-8770-4837-a41d-9feb42bec1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eaece0-0c09-4f39-8afe-345a1e2f5f98",
        "cursor": {
          "ref": "842b2a7e-ae60-43ce-bf69-a3554fa9dc32",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ce2f15cc-14a2-4fc9-9185-9d6c7278ed77"
        },
        "item": {
          "id": "16eaece0-0c09-4f39-8afe-345a1e2f5f98",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "51bc56eb-6a6c-4b86-b333-b47a356e1fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87a1376-b1c0-484f-b620-fc6a79298dc5",
        "cursor": {
          "ref": "2ceba9f9-74d3-4820-abd6-30f8228afe2c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c0795370-bfdd-4e57-892a-d598da9698a3"
        },
        "item": {
          "id": "c87a1376-b1c0-484f-b620-fc6a79298dc5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "50100f82-e44d-40fa-9249-edd63d5c5276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae18971d-e5cd-4296-99a6-face3491fe8a",
        "cursor": {
          "ref": "60d56b23-200d-4615-8d6f-e1b215790a42",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aef18a7b-4e48-4952-b699-8432a8fd33da"
        },
        "item": {
          "id": "ae18971d-e5cd-4296-99a6-face3491fe8a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "73838a26-deac-4209-920f-e86e060ea316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1389615-07b1-45bb-a19a-00fb012100d1",
        "cursor": {
          "ref": "7a6c83fe-583d-4ec3-b7c9-3f2b3052cace",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2fca1c7c-f369-4715-a67d-45bf44e9422c"
        },
        "item": {
          "id": "c1389615-07b1-45bb-a19a-00fb012100d1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "97ab1da4-f2be-417f-9ac7-37d0f5ed087b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90415aa6-9d2c-48c0-8d4d-8ae441d2fb4a",
        "cursor": {
          "ref": "77366246-d9a6-4663-9144-8c305efd2684",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1c12c04b-7412-4d2f-b023-eb50cc58db3f"
        },
        "item": {
          "id": "90415aa6-9d2c-48c0-8d4d-8ae441d2fb4a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "35db5bfa-d997-496d-802f-5acbaf7a52c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af78994-2bde-4a57-96cc-7e2e80a6551c",
        "cursor": {
          "ref": "672db8c5-119e-4d48-863a-034251f8988e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "70a6a1b4-d193-4e20-ae24-fdc547d56b57"
        },
        "item": {
          "id": "1af78994-2bde-4a57-96cc-7e2e80a6551c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d0bc55ea-b804-4612-9bff-193dacbe6f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2072a4a-d52a-48a4-b2c8-582afd8ed0a1",
        "cursor": {
          "ref": "f9ca9583-7429-42c5-8cc1-a6ffc8f1ff51",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "90cc8e29-c014-41ae-a884-98e1bbd380bb"
        },
        "item": {
          "id": "c2072a4a-d52a-48a4-b2c8-582afd8ed0a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "de05e8eb-2e45-4202-9c4c-f721f8e454ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c7cb6-a69c-4945-9641-b76327b6da9e",
        "cursor": {
          "ref": "2dd684c9-d5e9-4930-abd1-f4fa962e5b21",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4e6a386b-c378-42ae-9667-431aba82b676"
        },
        "item": {
          "id": "978c7cb6-a69c-4945-9641-b76327b6da9e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "13472edd-d1ae-4036-b8f4-4a9f8403f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb221aa-bde4-44f7-bd27-a543648c1b63",
        "cursor": {
          "ref": "fd4d610d-6a8f-45c4-911e-46d7005d7275",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24c2998b-255e-4400-8120-1f358a46e3eb"
        },
        "item": {
          "id": "bbb221aa-bde4-44f7-bd27-a543648c1b63",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8b899ef1-ea0c-440a-9db0-f29e3c859c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7115a33e-9911-44c6-940d-0c485f9084f0",
        "cursor": {
          "ref": "c7ce1764-98da-4f78-a2ee-e0e9d218c929",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b63582ad-af29-4cda-87ee-6434489878b4"
        },
        "item": {
          "id": "7115a33e-9911-44c6-940d-0c485f9084f0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6266461a-828a-4ccb-ae6c-d179af7b7e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbef0ca-a324-467b-8496-b560ff2c40f7",
        "cursor": {
          "ref": "9e2124c3-2230-4025-bb94-f36530ef17a3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5bb151c-ef37-4331-baba-707430bdea27"
        },
        "item": {
          "id": "7cbef0ca-a324-467b-8496-b560ff2c40f7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f8b365a7-760e-4c3f-9b58-05915a06d637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e79fe9-2cff-4566-98ac-9f6c3c84ff33",
        "cursor": {
          "ref": "ba8efb01-4866-408c-b976-3bed9ab6aba3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f4e9e73c-a2f0-46a8-8583-122f4e46137a"
        },
        "item": {
          "id": "95e79fe9-2cff-4566-98ac-9f6c3c84ff33",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4a6dec8b-b48e-4472-87c2-64830cc6e1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65c3ab5-da08-45ef-9978-b08ee36188f6",
        "cursor": {
          "ref": "aa839580-1d89-497e-b28a-a5af68ed0ac7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1eed8f6b-1e47-46fd-ba89-c5cebeed9762"
        },
        "item": {
          "id": "f65c3ab5-da08-45ef-9978-b08ee36188f6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ae61f70-2ade-4f18-8e4c-8101f772bf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12d56a3-df9f-4102-9765-f23f050d67f4",
        "cursor": {
          "ref": "c4049657-e77f-4fe7-a930-5e443414d7a9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7afc2ac2-6627-404b-b764-4194da4d90f5"
        },
        "item": {
          "id": "a12d56a3-df9f-4102-9765-f23f050d67f4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f9f8ed55-2c3c-4144-8368-f78db22bb6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c60292a-f9c3-4710-a292-1f8d1b9782e1",
        "cursor": {
          "ref": "4314a10b-b64c-4658-be67-e4602c597ff9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "304cb07c-ad61-4db1-9f03-fa24e3bb9216"
        },
        "item": {
          "id": "2c60292a-f9c3-4710-a292-1f8d1b9782e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9b126faf-8281-4539-8ade-fd55034a7efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fa59c5-acc8-4116-b95e-2f3deaa75be5",
        "cursor": {
          "ref": "663c40f2-1849-4e3d-8876-d1a73a5f12cd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d6e743ba-6773-4d0a-9cf8-c48794838502"
        },
        "item": {
          "id": "c4fa59c5-acc8-4116-b95e-2f3deaa75be5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5a7e715e-f854-4fbc-bdee-1dd3e2a4ed70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c0565e-e017-4659-ac4e-1e03face0cbc",
        "cursor": {
          "ref": "4f6cc7df-33b4-4ed6-b5f4-9627e962bd3c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "03b9ff3e-4e32-4d73-a821-60c130fde84f"
        },
        "item": {
          "id": "98c0565e-e017-4659-ac4e-1e03face0cbc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3498af24-f9d9-4644-9fa8-92dd758e7761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedd9765-46c5-495e-84e8-6d6e638bd2af",
        "cursor": {
          "ref": "7336854a-1685-4c50-beca-ee62bac78b68",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c996d1f0-6f0b-4a99-b19f-8715c73cae44"
        },
        "item": {
          "id": "cedd9765-46c5-495e-84e8-6d6e638bd2af",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "997c4cf3-de0e-47dd-bb92-c1c361aa50d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655f55fd-b05e-457b-8616-c5597da3b690",
        "cursor": {
          "ref": "d2933413-e8b2-4032-bc91-9f3bd9c5f5fa",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a835f4cb-3126-43f7-87db-77fcb402f180"
        },
        "item": {
          "id": "655f55fd-b05e-457b-8616-c5597da3b690",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9c54b6d3-d85c-4896-8316-8869f6425e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5711c1aa-5915-464f-8be9-bc243ae0b218",
        "cursor": {
          "ref": "f712e234-f876-4853-93a3-7f86a406d561",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8446edd8-d40a-433e-b339-a3affa1bc79d"
        },
        "item": {
          "id": "5711c1aa-5915-464f-8be9-bc243ae0b218",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7978bafb-1a90-4a14-af7b-72a10d8875f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e638ea-b1dd-428b-865a-0a5d02d6528a",
        "cursor": {
          "ref": "486e7fdc-d018-4686-8145-2088d6223bc5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e997dfd3-6c9a-41fc-9e1a-df8b8b998b34"
        },
        "item": {
          "id": "71e638ea-b1dd-428b-865a-0a5d02d6528a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3b1d74ae-d0f4-4f1a-8aa6-a4faac5647fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e733db-734e-4597-a146-e1c4c65b5108",
        "cursor": {
          "ref": "2a6579fa-bba7-4175-b7c9-2f538d6ec699",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43e54019-ced1-403f-b6f4-f8a9ecfbd7da"
        },
        "item": {
          "id": "d0e733db-734e-4597-a146-e1c4c65b5108",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "986d05b8-96e8-4c2f-8b5d-556e7bb78349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d148fdc-db63-41a1-8b69-8ee93863ab0b",
        "cursor": {
          "ref": "db3a46da-0258-423c-96d1-d05f90bebc6c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aee78d25-b08b-4f95-81c1-91fb933e0aa2"
        },
        "item": {
          "id": "8d148fdc-db63-41a1-8b69-8ee93863ab0b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "77575abd-6229-41b9-b902-7bfba16d7700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c865eecb-0785-49ed-aba5-ec7d74ae617d",
        "cursor": {
          "ref": "5c659f82-0cfb-44ad-b3bc-4555137d0891",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "24804da7-ddea-47f8-be0c-217f1e4f8457"
        },
        "item": {
          "id": "c865eecb-0785-49ed-aba5-ec7d74ae617d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eee79cef-019b-44cc-946f-7e2bdb8ee1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377d6314-0a5d-4a36-bdb3-18aa0dd8fb21",
        "cursor": {
          "ref": "042f4f77-b3b6-4b11-9ee3-549f12cd2ef9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c17b76ed-03b0-471d-8ccd-b4277c25abaa"
        },
        "item": {
          "id": "377d6314-0a5d-4a36-bdb3-18aa0dd8fb21",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ed458f0d-6e2a-4bef-9369-0f7a1ff7bade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ac5f75-0222-4e2b-bed8-b48786064385",
        "cursor": {
          "ref": "5006655b-47a5-490f-a91a-a52d1030911e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7dc45f29-5649-4da0-96a8-fa408104888c"
        },
        "item": {
          "id": "f1ac5f75-0222-4e2b-bed8-b48786064385",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ce0493a9-7b39-41dd-882c-b40072a3f85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b226bc2-3469-46ca-bc03-a9a1a1527376",
        "cursor": {
          "ref": "33e735b4-11e8-4986-904c-b31b69a20e2d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ae5f974a-10c4-4c0e-abef-d3a36c2537a8"
        },
        "item": {
          "id": "0b226bc2-3469-46ca-bc03-a9a1a1527376",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d04bfb2d-3b4d-48f6-8a08-0f83d63979ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097c5973-5f81-45c6-b3cb-2c26a40c77d1",
        "cursor": {
          "ref": "a4b3fedf-7f3a-47e3-95bf-46b223fc5504",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "21a7db8d-56b4-4403-b6ba-57d875a9b2a9"
        },
        "item": {
          "id": "097c5973-5f81-45c6-b3cb-2c26a40c77d1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7771b5c6-b1fd-4deb-8b36-0260914cd57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1ceae3-fbf3-4df9-8b80-d38f56627c95",
        "cursor": {
          "ref": "d948416d-11e3-44e2-a4a2-41f3633ba6ca",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f005c114-21e3-4288-a956-7eaa88916077"
        },
        "item": {
          "id": "af1ceae3-fbf3-4df9-8b80-d38f56627c95",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "39aebceb-a805-493d-8d30-2f8890227f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc481242-3e31-4505-b01e-6f2aef6c7bc5",
        "cursor": {
          "ref": "cfc4318f-d759-4acd-a682-c0d3fb2948fd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "41e130db-f607-46d0-9e53-301bdd7bd9a1"
        },
        "item": {
          "id": "cc481242-3e31-4505-b01e-6f2aef6c7bc5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "971243b0-4338-41bf-a14e-04748b62441d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc46019-54dc-4907-9d11-4970f2507b9b",
        "cursor": {
          "ref": "286f00d5-336c-4bc4-b626-f7eb2aa443cf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90f78ecc-dab7-48e5-9f3e-4ad4ea374f9b"
        },
        "item": {
          "id": "efc46019-54dc-4907-9d11-4970f2507b9b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "533396ec-2682-4cd5-aea8-5a99464ec37b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b276ec8-e61a-42b8-bbab-9d350cf9f8b2",
        "cursor": {
          "ref": "756406c3-ab50-438a-89f7-fa740f8b7d9d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1c4e04a4-7263-477f-affe-1f7212620e48"
        },
        "item": {
          "id": "4b276ec8-e61a-42b8-bbab-9d350cf9f8b2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f3418d42-ffc9-4a1c-8014-948c99dc2f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f01162eb-9724-410f-b108-7d8591d94d94",
        "cursor": {
          "ref": "4f66b24e-e20d-415e-a75a-904fc2b46da7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fb936885-a894-48c4-bfdb-e018bb36a165"
        },
        "item": {
          "id": "f01162eb-9724-410f-b108-7d8591d94d94",
          "name": "credentials_issue"
        },
        "response": {
          "id": "38b139b0-5748-4cbe-9a90-8690acb6af8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "379d5316-1d80-481d-8a3d-46ddeab34eb0",
        "cursor": {
          "ref": "0d2f81bb-bafa-455a-9923-fb80e450990d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "374165e7-2926-4bd1-aa19-e44b59b68a8e"
        },
        "item": {
          "id": "379d5316-1d80-481d-8a3d-46ddeab34eb0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "18b3c7af-4f73-48cb-a0f7-c0d37e656ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5ffb5638-377e-48d8-9c45-8f53dd0351e1",
        "cursor": {
          "ref": "33ef9ad7-ec9c-4b89-a0bb-67d203c76772",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "20859747-eb8c-4d39-8d75-396c8f520a71"
        },
        "item": {
          "id": "5ffb5638-377e-48d8-9c45-8f53dd0351e1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7edb4ab1-c930-4f01-a5cb-0b4c5984738d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e6efca45-c94e-474f-844e-b5097f279e43",
        "cursor": {
          "ref": "8a2c8a3a-7544-46c1-9ee8-dbabbba93442",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2ddc1741-2e45-4657-80d0-56b71fb9b329"
        },
        "item": {
          "id": "e6efca45-c94e-474f-844e-b5097f279e43",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a059db7d-7520-4773-a11f-7964dde09c5a",
          "status": "Created",
          "code": 201,
          "responseTime": 11613,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d440087b-51ee-419d-a9af-2300364a8ebe",
        "cursor": {
          "ref": "b11ca95c-17e7-4950-af1b-7d2679dd4297",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bd3c972a-6aeb-43a4-8553-c1f8e537581c"
        },
        "item": {
          "id": "d440087b-51ee-419d-a9af-2300364a8ebe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b87cf2e0-289c-4056-9f86-31592c3b3c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5237708e-8d42-4a31-8473-8e62c46ac739",
        "cursor": {
          "ref": "33df9219-d5f2-4e42-9156-0ada91960c08",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "02049511-289e-4e7c-8735-6eede1656278"
        },
        "item": {
          "id": "5237708e-8d42-4a31-8473-8e62c46ac739",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cd4098b6-cab0-4c46-9060-13fb5ea840e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ca27f4e9-a40c-47b3-80d7-3cebab42230b",
        "cursor": {
          "ref": "f5925a24-c8f8-48ff-aefa-76d740c84591",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64930e6f-9503-4b1b-bc81-5821d2b6e1da"
        },
        "item": {
          "id": "ca27f4e9-a40c-47b3-80d7-3cebab42230b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "264af8b4-f5f7-40b4-9517-6b10bb9fa32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbe7005-6ccb-4479-bae7-c15ae2870349",
        "cursor": {
          "ref": "b7a046f6-b5ec-432f-86fe-f3130d84fb59",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "03ac1a20-6e81-4ad2-9d99-651c2698bd23"
        },
        "item": {
          "id": "3dbe7005-6ccb-4479-bae7-c15ae2870349",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03ca955c-0a4b-4c3d-b2c9-509b54f807c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135a587a-5185-40cc-b67d-b97e09818cba",
        "cursor": {
          "ref": "d40f9af8-003d-42d9-acf4-aa7d66f470e2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "82cecbe5-e95b-4f20-9f7e-61b711ce7512"
        },
        "item": {
          "id": "135a587a-5185-40cc-b67d-b97e09818cba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f5efd09-fd78-4d7d-a4b3-e2f77ff148ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d16a1-c38b-4d3a-88de-b9f5fae8ac92",
        "cursor": {
          "ref": "e42fa991-9382-4092-adaf-6dcafd8ac96b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b0d55a7c-a6f0-48c3-b9c4-1ee4317fb5c6"
        },
        "item": {
          "id": "003d16a1-c38b-4d3a-88de-b9f5fae8ac92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3cbeb8e8-019b-4709-a5a4-f64417fb5b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f106902-fcee-4a8c-ad4d-39c5159ac1d1",
        "cursor": {
          "ref": "22bdf6dc-15fb-4b52-9e40-75543a2fda88",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c3123097-746e-4074-82bc-ee4898c57c53"
        },
        "item": {
          "id": "4f106902-fcee-4a8c-ad4d-39c5159ac1d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "18b5df24-f037-4cce-b719-8040de230a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba640d3-4b05-4232-85cd-f375b1290ef3",
        "cursor": {
          "ref": "258ab786-dfe0-4be8-a59c-fc9849cf4ee1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "08c3400c-4362-4afd-9877-67a5bc01041d"
        },
        "item": {
          "id": "7ba640d3-4b05-4232-85cd-f375b1290ef3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "88c7f718-702a-4820-a1e0-efb8d089832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c9de66-233f-4ce2-b230-593a1d8dd954",
        "cursor": {
          "ref": "daa3739d-a15a-437c-93a7-ba23b1bb9a6b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dc27e7b7-6817-4c60-8b76-d227ca5f0835"
        },
        "item": {
          "id": "18c9de66-233f-4ce2-b230-593a1d8dd954",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96364a87-9d6d-4f64-87a4-a1cfa50d54ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5f30fe-ea28-493f-af12-5427b7d942b0",
        "cursor": {
          "ref": "2ca92084-43e7-462c-a8d9-acd383afe1a5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "89f77c30-25c1-4aa3-882c-54b5c4688da9"
        },
        "item": {
          "id": "df5f30fe-ea28-493f-af12-5427b7d942b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2900a06-8c8a-42a7-9a07-93f6abece9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d4fa7f-cd55-41f4-918c-8678e1d1b975",
        "cursor": {
          "ref": "6027acd1-150d-40d5-b654-f8ee57d26214",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3bcfb14f-5cd7-442b-a337-47589c692193"
        },
        "item": {
          "id": "63d4fa7f-cd55-41f4-918c-8678e1d1b975",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8cd57818-e02f-4612-9815-faa23b140a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf887b10-9838-4ca2-a1d2-874b1b36e407",
        "cursor": {
          "ref": "6b7173ba-79d8-4a65-8f6d-d53e1a78fa96",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "41916a81-1480-43a9-825f-993d3f1597e3"
        },
        "item": {
          "id": "cf887b10-9838-4ca2-a1d2-874b1b36e407",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b2a3ddaf-764e-4887-8209-bcc65f2c4b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d066c4-316b-48a1-9978-cb230558a521",
        "cursor": {
          "ref": "b8a4eba4-d5d7-43bd-b497-56ff043ddbcb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f01764fb-f252-4eb8-b2f3-ec77b6b4f04b"
        },
        "item": {
          "id": "96d066c4-316b-48a1-9978-cb230558a521",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dd1ab9ec-301e-41ab-ad5a-643f86600a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dec4ba-1f2c-4fb4-a94f-1e54af9202a9",
        "cursor": {
          "ref": "44c0656f-2907-4942-ad4f-68028dde5259",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af7aa965-a819-4463-8548-c4dcb52b774c"
        },
        "item": {
          "id": "e6dec4ba-1f2c-4fb4-a94f-1e54af9202a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b990953-db7d-48ef-afe1-02d3189cabba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fa9833-47d1-4585-8e67-68c2398db295",
        "cursor": {
          "ref": "ffc3b405-1b2f-4239-9bac-4e478ec53a27",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0c6723a3-593e-40a0-beb6-ee447813137a"
        },
        "item": {
          "id": "26fa9833-47d1-4585-8e67-68c2398db295",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1195e308-fcf1-4698-984f-59b27eadb6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f437a19f-f153-4965-afcb-c15332ea35f0",
        "cursor": {
          "ref": "811b98d1-0ab7-4f2f-b183-3a536b6860cd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8f579f33-a03a-41c6-85c7-66cd8264b457"
        },
        "item": {
          "id": "f437a19f-f153-4965-afcb-c15332ea35f0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d5880e65-0440-450d-b920-1797dd453f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be66e26d-6500-4c6e-b881-f13cd255f34a",
        "cursor": {
          "ref": "bfb2d342-a371-46e0-894a-a2a7aed96d68",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c4779c23-db77-42c6-bd44-019ab3fc0d04"
        },
        "item": {
          "id": "be66e26d-6500-4c6e-b881-f13cd255f34a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a45992a8-d965-4c20-840c-f5e581857ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad23c77d-7d8e-44db-811d-f5f9c29d6a59",
        "cursor": {
          "ref": "15dbce6f-5996-4012-a568-cdfda25df372",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "160cbf18-652f-4db5-b67f-5d1a354398ba"
        },
        "item": {
          "id": "ad23c77d-7d8e-44db-811d-f5f9c29d6a59",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "468c0393-f9d2-4825-944b-e39f7fba0e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5210f264-0a5d-4e7e-b87f-daf55dae6be6",
        "cursor": {
          "ref": "b0653b11-1f34-4a80-8ef9-ae9c73da6154",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "969157c9-198b-4df5-b667-71a7c4a1bfbc"
        },
        "item": {
          "id": "5210f264-0a5d-4e7e-b87f-daf55dae6be6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fac2b412-602c-4129-b0ff-c5df70c76435",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0afa3b5f-455c-41e2-b5a3-d7ba29188ef7",
        "cursor": {
          "ref": "63168859-bd49-4d38-b3f2-a4ab345a4577",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bd08c091-3591-457e-9af8-8ce06d81c324"
        },
        "item": {
          "id": "0afa3b5f-455c-41e2-b5a3-d7ba29188ef7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "75c958b3-cc59-4daf-b479-f58d82d3b19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebea440-d71b-4166-9f8c-b63ccebe749c",
        "cursor": {
          "ref": "0e5a04d8-0086-41f0-b2dd-003744a719e3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a3503d44-f714-4731-9dd6-86985606a735"
        },
        "item": {
          "id": "5ebea440-d71b-4166-9f8c-b63ccebe749c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fe0d9088-666f-44e6-b06f-c019c1d625a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66f8721-8c35-40ae-aea5-f69e3e7ac0e9",
        "cursor": {
          "ref": "aa650b0a-f82b-4967-8896-716cf23198b7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "42993de2-90b6-41b2-8148-7e16c84df70e"
        },
        "item": {
          "id": "a66f8721-8c35-40ae-aea5-f69e3e7ac0e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b72bace9-6650-4dab-95bf-a197306d1e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35913dd8-c4df-449a-8cc0-ab70513f21dd",
        "cursor": {
          "ref": "bf46d9e5-13bf-432a-acf7-21b34d060640",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fa7f892d-5081-4c6c-b262-e0844570988d"
        },
        "item": {
          "id": "35913dd8-c4df-449a-8cc0-ab70513f21dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "32b19c96-49bd-44a2-bedc-53d91c711e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35de0060-3d38-4522-80d6-0b5f5b939bcb",
        "cursor": {
          "ref": "bad735e7-973e-445e-a526-0f890d4787b9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "62b5af1e-5704-4662-899c-b8f3144c1cd0"
        },
        "item": {
          "id": "35de0060-3d38-4522-80d6-0b5f5b939bcb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c79e2f1-2355-4a61-b52f-02133b725e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e04b6-30bb-43dc-9b8b-e9abebde8d74",
        "cursor": {
          "ref": "a3bb9da6-d47a-4de4-8da3-6fb82bcc9119",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "50ecdb51-6507-49bb-87a6-6cc4c5437df3"
        },
        "item": {
          "id": "600e04b6-30bb-43dc-9b8b-e9abebde8d74",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cb7aae3-9141-4628-ad12-bf71defd3dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc790455-4bf4-4ecf-8a32-4a3fec9212b3",
        "cursor": {
          "ref": "f2ced4b8-b938-4661-9330-5488b432536c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c5b536a7-4a9b-4aa8-9d3d-8cb27e8658c2"
        },
        "item": {
          "id": "fc790455-4bf4-4ecf-8a32-4a3fec9212b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "112fcb22-3a5c-46bd-8bf7-b2a32129460a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d5bd4d-be4f-45b6-b34e-f20601f7fdd2",
        "cursor": {
          "ref": "890a6b5d-7a5a-4f1b-a4bc-71136ee22651",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "54d3a1dc-c412-4456-a6a7-c91c424aebca"
        },
        "item": {
          "id": "92d5bd4d-be4f-45b6-b34e-f20601f7fdd2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d6a929cc-66f7-416c-a91e-efc1ccd4a314",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4f87656d-b094-4916-b631-cb0c20e84074",
        "cursor": {
          "ref": "28048323-d3d1-4e87-ab57-a812cc16befe",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "737ba950-258e-4d79-ac5b-872187b623e7"
        },
        "item": {
          "id": "4f87656d-b094-4916-b631-cb0c20e84074",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "798f31f5-9be3-47e1-b958-44a46c82513b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a06ca4a-a79b-4129-835f-c82df879cc70",
        "cursor": {
          "ref": "bdc0dfc2-5bce-4f73-a2f1-b96fa66593ea",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9b69f76c-762b-4a14-93e9-9122443a9b3f"
        },
        "item": {
          "id": "9a06ca4a-a79b-4129-835f-c82df879cc70",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "465be359-6e79-49f3-b6a6-6932c754121c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc83be21-b185-4c48-a1e1-ed28192eb373",
        "cursor": {
          "ref": "f50940c1-59fa-4846-b27d-e68f7a763aa6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c5ce5d95-923f-4ffa-9de9-5b5253ffccd6"
        },
        "item": {
          "id": "bc83be21-b185-4c48-a1e1-ed28192eb373",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a8b2b4b2-2d52-4a0c-9427-2050ba79e865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34b3a0b-0a90-4b01-97e6-835354f60749",
        "cursor": {
          "ref": "d3905fe5-ab3c-4ff7-b6a2-89ef162401dc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9dcaab3b-e145-4bbb-969e-5e8e3e5000dc"
        },
        "item": {
          "id": "b34b3a0b-0a90-4b01-97e6-835354f60749",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22c7d2e7-1c65-4f7f-aa6e-599dda9caeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9c29e2-b69f-435c-8e7c-fac7d1ecf29e",
        "cursor": {
          "ref": "78282973-8a89-42b9-92b6-05d194222765",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8cf161a1-ae57-455f-a819-0238a299e7dc"
        },
        "item": {
          "id": "3d9c29e2-b69f-435c-8e7c-fac7d1ecf29e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3476d71a-e283-4e80-8098-d62f09f02fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49afae6e-f140-49f5-aef8-3f896d23419e",
        "cursor": {
          "ref": "0f5e6848-135f-4db8-a08f-1514e1515b7a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "415448fd-164a-4be3-87f3-86e0b3fd556b"
        },
        "item": {
          "id": "49afae6e-f140-49f5-aef8-3f896d23419e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5bae05f5-ab7c-4826-9683-dabfa6db1ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d0a700-e178-483f-b87d-f699c0873830",
        "cursor": {
          "ref": "5041ab20-6dfa-445c-93aa-3e6dd8f6d8f9",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6c963db3-2800-4d29-b5d1-58df75f89109"
        },
        "item": {
          "id": "42d0a700-e178-483f-b87d-f699c0873830",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "451b9e50-ef49-430c-9867-4f5642ced03c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "29fb9a60-a604-450a-960c-ab5d453bcf8e",
        "cursor": {
          "ref": "b645befa-3efe-4c2c-8f92-3027d6b8caad",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "50581a10-1118-401e-a38a-9994b030ed41"
        },
        "item": {
          "id": "29fb9a60-a604-450a-960c-ab5d453bcf8e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9365fa77-39fa-4210-b890-26f849473b0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "8451637d-3c7e-4d48-9089-4b2a4066a5b8",
        "cursor": {
          "ref": "c7398b07-0d65-4d0a-bc5b-9447ef1b2eba",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "82ea2389-4f63-418c-a680-a2febdc3f492"
        },
        "item": {
          "id": "8451637d-3c7e-4d48-9089-4b2a4066a5b8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2359cb84-2c04-4a7b-bfc6-10760159e376",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "c1a39b0e-5832-4585-a307-b43116696e72",
        "cursor": {
          "ref": "dd21aeef-2807-4163-893d-09304e98f36f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "69151439-2484-4363-ad67-cae5b026dd4e"
        },
        "item": {
          "id": "c1a39b0e-5832-4585-a307-b43116696e72",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8e7b60a4-a7a4-4a70-b991-f3b77aa4abff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "9bc2a28f-18ff-4468-9ee0-b53383ad005c",
        "cursor": {
          "ref": "89d4ffc5-760f-4acb-ab51-1464473f523e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2188f01a-a086-4289-b1cc-a4e32ec0bb74"
        },
        "item": {
          "id": "9bc2a28f-18ff-4468-9ee0-b53383ad005c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e8eaa991-b5da-4a60-afe0-e4428d3fd970",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d0cd08ee-8889-42cc-94e7-3308f0b6dbd2",
        "cursor": {
          "ref": "4fa74971-e3f2-4f30-afae-44b77e186cb7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f453b5bc-aa6e-4838-90be-545149efcc35"
        },
        "item": {
          "id": "d0cd08ee-8889-42cc-94e7-3308f0b6dbd2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0b985a45-cba6-4e83-ae3e-06480dc2cf63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5f8e809f-fb5c-4a80-8f44-9f1e666259ff",
        "cursor": {
          "ref": "15f91f6f-5500-494f-ad22-d88e96bddc50",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b229e3ad-6fed-4a65-97b0-6415cf359cd3"
        },
        "item": {
          "id": "5f8e809f-fb5c-4a80-8f44-9f1e666259ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "581d6e3a-b7b9-432f-ae63-f3ab8f34de82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab7618d-43f9-4fd2-a186-50218f5a7041",
        "cursor": {
          "ref": "a93add57-62e6-4e6c-822b-d6e275ff18fd",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "31be3967-484b-45c3-b3fa-a47c00634ae8"
        },
        "item": {
          "id": "1ab7618d-43f9-4fd2-a186-50218f5a7041",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7e0a0bd5-feee-47bd-a8f8-32b735363d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8221bca-4d03-4d00-9024-e19e3e153397",
        "cursor": {
          "ref": "1ba7b912-9778-4538-a31d-e26bfcb5c8f3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eea00202-d40d-4f26-972a-f0de29fe0275"
        },
        "item": {
          "id": "d8221bca-4d03-4d00-9024-e19e3e153397",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2e6af319-5a87-47a8-a9a1-ea729f7498f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c833be-526f-4fe8-9acc-8a41920d4a8c",
        "cursor": {
          "ref": "4381a25a-c896-4e4d-b66c-9fff40233093",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "71c6a6cf-a9bb-46d2-ac3b-1cb227afd857"
        },
        "item": {
          "id": "57c833be-526f-4fe8-9acc-8a41920d4a8c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1cc7efd9-7087-4d3c-9011-885bacc1375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f48c6-1140-432a-9e16-eec64e756486",
        "cursor": {
          "ref": "260ede51-bfe1-4828-9da9-c829c6cb9cfb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b6d91281-d23d-4a8a-bd19-e36b92e7bd18"
        },
        "item": {
          "id": "b34f48c6-1140-432a-9e16-eec64e756486",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "31f2bd7e-9cef-4172-90ed-376dd3aef614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62edef83-607c-4c55-b858-3ca23f7d5da7",
        "cursor": {
          "ref": "5f9d7fb6-36dc-4f64-a93d-2d8048a3163a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "88d4334f-d824-4f75-ae06-97af2d975c7b"
        },
        "item": {
          "id": "62edef83-607c-4c55-b858-3ca23f7d5da7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c60f5797-9105-4f0f-90d3-d17bfccfe685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0d2920-78f7-46cc-8805-699a35ae0fa5",
        "cursor": {
          "ref": "67fc89a6-a952-4aa5-acfe-f5dc8bf41c86",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "234a5dd8-7933-4ec1-9cf1-fec7818553b5"
        },
        "item": {
          "id": "ff0d2920-78f7-46cc-8805-699a35ae0fa5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "35b3ff3b-ee57-4aea-b1b9-81f978595012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77f8931-9c70-4677-b566-da9ee78988be",
        "cursor": {
          "ref": "1ad68e49-bb59-4e4c-afc7-963098506c98",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "85a9d8ef-ffb5-424e-9c97-528416bc2334"
        },
        "item": {
          "id": "a77f8931-9c70-4677-b566-da9ee78988be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6ab4104e-70ee-47a0-bb7f-7b10cf1aa10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1dd0de-1904-4f37-9a67-112e098efaa3",
        "cursor": {
          "ref": "8e5b0fa7-4c63-46d9-81f8-302e4231207e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "59dd7eaa-4c9a-4aa8-8724-ccfb496256b5"
        },
        "item": {
          "id": "7d1dd0de-1904-4f37-9a67-112e098efaa3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "60d0cfd6-f191-444d-ab1d-6f5016e80a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a224c54-b534-4be3-a1b3-5eee48586a3b",
        "cursor": {
          "ref": "a03caa2f-822b-4d5b-b5b1-9847cf62c54b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f1ce42f6-0bb1-4627-af06-2922f1a5899c"
        },
        "item": {
          "id": "3a224c54-b534-4be3-a1b3-5eee48586a3b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e9aa8268-ed19-413f-abe0-bebe90f59df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f3bb66-5fca-4750-ad00-a9a2bcfee126",
        "cursor": {
          "ref": "945fe62b-e1ee-466b-b9a9-b8a230c17a50",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5e4a1685-23d8-461a-ad89-617b7382efda"
        },
        "item": {
          "id": "b9f3bb66-5fca-4750-ad00-a9a2bcfee126",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fa5722e0-59db-44fe-a8d0-abac3260ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fed7550-bc4a-4467-a65d-aa73fa1b9799",
        "cursor": {
          "ref": "bc1c33f6-5311-4b4a-a8d2-1cb430feb388",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cae2a221-8eb0-4544-9a97-de2635872467"
        },
        "item": {
          "id": "0fed7550-bc4a-4467-a65d-aa73fa1b9799",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7c5f474e-66b8-4cb0-b0b3-945850808a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7ef92e-576a-43ab-8676-a0be3c5d112b",
        "cursor": {
          "ref": "8c7f4dcb-1efc-4de5-822c-9cc9a9297f7d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "022b56d2-5128-479b-a76a-3f17fd49b529"
        },
        "item": {
          "id": "4b7ef92e-576a-43ab-8676-a0be3c5d112b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b05889be-5cea-4c9a-bbd1-622e6d565d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f093a54-9e94-4bb8-9601-aa8a99f181ec",
        "cursor": {
          "ref": "df168197-3069-42a8-a82a-b05859466c7e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "224b1084-db9f-4f64-80df-b980ea6db6d9"
        },
        "item": {
          "id": "2f093a54-9e94-4bb8-9601-aa8a99f181ec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "35a27d10-be8f-4f4d-b87b-3067a1d9f540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca5a59d-0961-47e3-a806-a2daae17718a",
        "cursor": {
          "ref": "4aa7c9aa-d5c9-4b64-aafe-42feec61ba0a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "17e9a867-ec98-4680-b617-be4bba66b4f7"
        },
        "item": {
          "id": "4ca5a59d-0961-47e3-a806-a2daae17718a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e9fd7f80-062b-40d3-be02-6fe82ccf9a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de48e584-d408-4a8b-bdd3-cabc7f05109b",
        "cursor": {
          "ref": "05378e79-16a8-4b9a-b6c4-2167a161f770",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3ff2b969-c1ef-4341-970b-5ff745305897"
        },
        "item": {
          "id": "de48e584-d408-4a8b-bdd3-cabc7f05109b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "98b22090-1e4b-4d00-9a37-536cd48b44f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e155725-a64c-497e-b2ff-f7acb6f7a36e",
        "cursor": {
          "ref": "c6888414-bde9-458a-9eba-ee1c83e4fe38",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "423b6e4f-da6d-4e40-ad2c-3597af0c0cff"
        },
        "item": {
          "id": "7e155725-a64c-497e-b2ff-f7acb6f7a36e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "07583e15-c61b-4be6-8cf9-bc8f94c708bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6c5c16-87ae-41c1-b415-8bef58180b45",
        "cursor": {
          "ref": "096b9dec-4e71-4888-9342-a53c339e6404",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6c71581c-1f82-4176-9020-6a9f2d76720c"
        },
        "item": {
          "id": "8e6c5c16-87ae-41c1-b415-8bef58180b45",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f0aa6b53-df77-4dad-b74f-ed76cacf5d27",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "eaadc13b-e1e7-427a-8334-ff5e6038b8e1",
        "cursor": {
          "ref": "ea268318-1a19-4f20-ab54-2d048da1da6e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "735541b2-e1a1-45e2-84bf-cd300c0e880b"
        },
        "item": {
          "id": "eaadc13b-e1e7-427a-8334-ff5e6038b8e1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "15641b6b-a9f1-4d5c-92bf-a04c64b4890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b02d47-b0db-42a0-9485-2d228fcad545",
        "cursor": {
          "ref": "6be90b6d-3e2a-431d-a280-556783d3a19f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8f7e62d5-cab4-437e-ba7c-0f9936bc42db"
        },
        "item": {
          "id": "d5b02d47-b0db-42a0-9485-2d228fcad545",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ed946066-1f2f-4016-98b8-79b9c3330c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416104fd-0e14-453a-8571-11a1157ebbe8",
        "cursor": {
          "ref": "c7e40a24-b2a6-460c-a340-24b3b433aeb9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b35b7f6c-8f28-4299-a131-50839df96fa5"
        },
        "item": {
          "id": "416104fd-0e14-453a-8571-11a1157ebbe8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4c67ff1b-25c9-4467-9166-5bd446106b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1906b8b3-404a-4bd6-b335-87cd3bc8b168",
        "cursor": {
          "ref": "2376ee63-4fde-480b-a6b4-8c7d207d2641",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f8df7c5a-7c0a-4c20-80f4-c8a5adc1a54a"
        },
        "item": {
          "id": "1906b8b3-404a-4bd6-b335-87cd3bc8b168",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b80b2074-f271-4f6a-aea1-d38883bad4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dd7c72-a3d3-497a-b67f-f3e7b43e177d",
        "cursor": {
          "ref": "23e567c9-a414-4e84-9f87-2c90ccb0a4b4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e7e2ed6-021c-4bbb-84a0-ff0a78469bcd"
        },
        "item": {
          "id": "b1dd7c72-a3d3-497a-b67f-f3e7b43e177d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bd57dc09-1483-4acb-8bd0-8d214707e7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9e2dcb-2033-452a-a364-d82ec051b900",
        "cursor": {
          "ref": "28733a37-ce27-4cc8-a297-8cdfcd936fd8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4325af64-ccdc-41f3-a7b9-f34b68c29d56"
        },
        "item": {
          "id": "bb9e2dcb-2033-452a-a364-d82ec051b900",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "aa7fe97b-7503-4560-824b-ff0ad51b43a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1a314c-844f-4ce6-ae0d-3ccb78b86012",
        "cursor": {
          "ref": "d8dae76b-2f1e-42a4-9ee4-e3aa4a86072b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25b9c1c8-d491-4002-8c63-e17f3fdff2f2"
        },
        "item": {
          "id": "ba1a314c-844f-4ce6-ae0d-3ccb78b86012",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "61e533bc-efb4-4237-adaf-d31cc1439ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e24f5f-9450-442f-b8fb-3a28e6a0a572",
        "cursor": {
          "ref": "964f8565-d3ec-4bfd-b686-da97c777a1ff",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "149cad0f-a44b-45ca-ba57-4336b66f73da"
        },
        "item": {
          "id": "95e24f5f-9450-442f-b8fb-3a28e6a0a572",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "467fc58b-bc3b-4dc6-9e78-53fc08d41767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c517ec68-7e49-49d6-b1e8-b45a94c9ccc9",
        "cursor": {
          "ref": "b88e6607-411c-4ce1-a650-3114cf8f0c46",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ed3bc8bf-eb52-4196-8896-05ac3d893841"
        },
        "item": {
          "id": "c517ec68-7e49-49d6-b1e8-b45a94c9ccc9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5048f30d-30a5-4fa7-9f3f-f4dfdfb3400a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8823e8-ef6c-4b77-95b3-e9127b5abe8f",
        "cursor": {
          "ref": "97a1aba9-264a-4759-8675-7f575b4ff437",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "94bd9766-a194-48cf-8a3f-6044841eb2e3"
        },
        "item": {
          "id": "4b8823e8-ef6c-4b77-95b3-e9127b5abe8f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8ebc17d4-c3fe-41c6-a498-ba9eb3f9526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a01931-48c4-4975-aa8e-26fd65da323c",
        "cursor": {
          "ref": "7220483f-7249-4370-ba9a-24965938aa40",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4267c4f6-578a-48c2-b312-1ad02f04dcbf"
        },
        "item": {
          "id": "f8a01931-48c4-4975-aa8e-26fd65da323c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0c29f40a-41a6-4d6e-ab8e-2a14b978b11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e738ebb-3a87-48da-b72c-4965d9edd1d4",
        "cursor": {
          "ref": "baf36924-be57-4b5c-8d1b-4486818f972c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b4952c90-88ea-4cc7-a8b1-54776f76b02b"
        },
        "item": {
          "id": "7e738ebb-3a87-48da-b72c-4965d9edd1d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "29e2bc3c-35f5-4f55-a517-09f31983b213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4f0919-cea4-4e00-a63b-d4ddaa82315e",
        "cursor": {
          "ref": "2b076efa-f136-4afc-9d6d-eba7d936910b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3371e22d-3df1-4efd-9fdc-bb7b0dfc9680"
        },
        "item": {
          "id": "aa4f0919-cea4-4e00-a63b-d4ddaa82315e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3abcec3f-51e0-44aa-9b4d-5a8e1f0ec0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b896fd-ccee-4c11-9a1e-ba5f8dfd2867",
        "cursor": {
          "ref": "0c7cad21-3268-4452-9134-fdc2c69fbde4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "097ecc04-f5b0-45d4-98fe-c4a359fb2776"
        },
        "item": {
          "id": "05b896fd-ccee-4c11-9a1e-ba5f8dfd2867",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2cd2f6b4-185c-46f7-ac54-358f31cdc398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9535062-0a09-400f-97b2-62c16e65fbfb",
        "cursor": {
          "ref": "2cb0bb56-067b-49b8-85d2-e9694d80e0e6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7d43e39a-c353-447a-a011-b61efabe66ce"
        },
        "item": {
          "id": "c9535062-0a09-400f-97b2-62c16e65fbfb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ab5a653-0342-4600-8314-0ff1918d1b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4b0366-8280-42e7-93e6-8f85af8c0124",
        "cursor": {
          "ref": "d05cdec6-1dae-47a3-930e-03a118654ab5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ac042360-7cd6-4cff-b5ed-0c06d7add4f6"
        },
        "item": {
          "id": "aa4b0366-8280-42e7-93e6-8f85af8c0124",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d8e8ab94-16be-4647-ab56-73d8b9ca797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fe23d2-1622-4b7b-ae24-d8f39eb10a15",
        "cursor": {
          "ref": "4ab38d71-b496-4cfa-ae8a-5c6eb73178d4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "22ee1252-2985-42ee-8a7f-c59faf14e503"
        },
        "item": {
          "id": "f4fe23d2-1622-4b7b-ae24-d8f39eb10a15",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20f90e46-c2b7-4e43-ae3b-5134980f549e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d96cd-ab75-4284-8033-45d120723b1f",
        "cursor": {
          "ref": "a0547f8e-36c9-42eb-b03c-04fc65b7f983",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "024d7cb2-b955-42c5-9e2e-dd4437de6f97"
        },
        "item": {
          "id": "b00d96cd-ab75-4284-8033-45d120723b1f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9cbe375d-e5be-4141-9521-e429f2f300d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0e17f2-56a4-46eb-b9ab-1fb6975c60b4",
        "cursor": {
          "ref": "ec301c8e-5665-41e4-b205-e7e50c349589",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4764cb1c-8597-4c82-8dba-4128afad573b"
        },
        "item": {
          "id": "0c0e17f2-56a4-46eb-b9ab-1fb6975c60b4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3ae2525e-6f15-4ce3-877d-f031fd62b601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0900287e-46ab-4c6b-9889-00366ff05c24",
        "cursor": {
          "ref": "35efa7d9-927a-4bc5-9a63-95b8e6175b61",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4741f087-4b2f-45cd-acb5-c2cfa2ee0db3"
        },
        "item": {
          "id": "0900287e-46ab-4c6b-9889-00366ff05c24",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "14a46ebd-59c4-4962-8186-003b9d0779a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd532b8-1c35-4550-9228-be9e9d2d74de",
        "cursor": {
          "ref": "5cfe8c37-1f8e-4bde-9d5a-b078c86adbb1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "08940f10-57b0-4a7b-bac6-bec4176265b9"
        },
        "item": {
          "id": "2fd532b8-1c35-4550-9228-be9e9d2d74de",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2083e215-a26f-424c-b6a1-c9264fd6af33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05d63f7-6310-4457-a1d6-6b9812af6f2e",
        "cursor": {
          "ref": "aee0d2d6-4ef8-4958-a785-773ec6676d86",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "05718b76-0abd-40ec-b52c-c72c562d85a8"
        },
        "item": {
          "id": "d05d63f7-6310-4457-a1d6-6b9812af6f2e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "19ee8654-5be4-4d4f-aa58-55605552ecb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887d95ca-3a23-4700-abfb-f5f1fe349630",
        "cursor": {
          "ref": "f5d8b953-259e-4eb8-8d54-dc4e33ba485e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9573b61b-e3e6-41b2-b559-8f470c33a14d"
        },
        "item": {
          "id": "887d95ca-3a23-4700-abfb-f5f1fe349630",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ed82b392-6d03-4f3f-8b7e-7f3f25217b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a9e685-c43b-487e-bd34-85b91ee194a4",
        "cursor": {
          "ref": "7906eb5a-9a9d-4d31-9df4-af53049ce19f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "522808bd-ee4a-4fbb-915d-7c00f22a2d61"
        },
        "item": {
          "id": "92a9e685-c43b-487e-bd34-85b91ee194a4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6673e2b0-f857-41ba-9407-826e7fc8b2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eec84a-aa1f-464e-90e4-2dce9f45d66e",
        "cursor": {
          "ref": "541058ad-bf8b-4164-92e5-a432e96cdb99",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "16325a2b-7108-42e6-ab71-d8c462c25c86"
        },
        "item": {
          "id": "90eec84a-aa1f-464e-90e4-2dce9f45d66e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a7daf699-8c25-4f51-8ce6-1bc7123f388b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d0217b-3023-4491-b67e-ffe5a8f13839",
        "cursor": {
          "ref": "70960015-bedc-4ebb-a7b7-1bc60f29f845",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "35bbf3d9-f2d9-4cf7-be40-53f474f0902a"
        },
        "item": {
          "id": "42d0217b-3023-4491-b67e-ffe5a8f13839",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "63636809-2c53-46a6-9d29-8fb79e538bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b47af06-2c4b-4391-bd47-400d078d9414",
        "cursor": {
          "ref": "957bc7c2-2f16-48fe-943b-09daea851e48",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c1b0beb3-8011-4561-8c87-7b169e7f413a"
        },
        "item": {
          "id": "7b47af06-2c4b-4391-bd47-400d078d9414",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f6e89c6e-a9b8-4c38-83a3-265ee876ef31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7866e95-42af-48f2-aac1-bc3768586b94",
        "cursor": {
          "ref": "9fd0d16c-25c9-41e1-866f-03c3498af762",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1de5956f-ebfc-4426-ab85-94e4aea0e5c6"
        },
        "item": {
          "id": "a7866e95-42af-48f2-aac1-bc3768586b94",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7e6ee5a1-ac13-4343-8580-53e14560c035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b62b31-5b1c-44ad-be51-d0f0a1165c9f",
        "cursor": {
          "ref": "c9959b09-6c46-4802-89f7-bf5a3be883d1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1fa07527-0dd3-452c-a30b-3a02a68878ec"
        },
        "item": {
          "id": "12b62b31-5b1c-44ad-be51-d0f0a1165c9f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c5fb21e1-b7b6-4a55-99ff-a911212ffd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db6f6f9-2042-4164-a39b-733e0ef8022d",
        "cursor": {
          "ref": "e5621f18-7d00-4654-98fc-3125d49460c5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff316370-3a5c-4a3e-bdf3-5f87c96c892f"
        },
        "item": {
          "id": "7db6f6f9-2042-4164-a39b-733e0ef8022d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6a974838-4a8b-4c2a-a616-30369b4ae93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3dccfc-caea-4c78-8b5d-bf607932066f",
        "cursor": {
          "ref": "6cdf19df-3e06-4c72-9593-97b340d2e104",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b422d6a8-540b-455d-b37a-dc623dec4096"
        },
        "item": {
          "id": "5f3dccfc-caea-4c78-8b5d-bf607932066f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3236f79e-a104-40a2-8b68-de119dc510bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f07ee19-9ddd-4d23-8067-342372525d95",
        "cursor": {
          "ref": "f1db8c9f-79f3-4d10-a361-c34d155f89d2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35c47fe8-fa0e-41c7-9ab0-a63e7385df5c"
        },
        "item": {
          "id": "6f07ee19-9ddd-4d23-8067-342372525d95",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fcbe5e3e-e163-4503-9b2e-f5aa72dd6943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cec8f0d-4f70-4945-959f-6b96362e465c",
        "cursor": {
          "ref": "0c53b208-d883-4696-862f-a374ffeb9d84",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dc059306-8264-4c4e-a6b7-41c0d08b7bbf"
        },
        "item": {
          "id": "7cec8f0d-4f70-4945-959f-6b96362e465c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6d22ffca-d632-4510-b3d1-df817f3875a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a72897-ad19-49c4-86c7-0b75924b80ae",
        "cursor": {
          "ref": "7e400cc2-ea42-4584-a92d-d4004234fa84",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1b3ada23-30d7-4404-93f2-82099f03110d"
        },
        "item": {
          "id": "81a72897-ad19-49c4-86c7-0b75924b80ae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "09a04d74-e78e-4f95-9962-2e2746fd8379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7452ce4d-4fef-4190-8fa5-3ef645f5294c",
        "cursor": {
          "ref": "4c9ab5d5-653a-4564-b1ad-d0629ca5cb60",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a8589a71-85b0-4315-b20a-37d9cefb448d"
        },
        "item": {
          "id": "7452ce4d-4fef-4190-8fa5-3ef645f5294c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f5f8aca3-7ab8-4334-b431-9781cee7d40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37bced-7624-4f71-9a63-1309153248d8",
        "cursor": {
          "ref": "b7ae5a9c-978f-4d5e-9884-c27ee3f85741",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "495db032-3cb7-4614-8843-b87134a62d4e"
        },
        "item": {
          "id": "ef37bced-7624-4f71-9a63-1309153248d8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "daeab897-dd44-459f-ad72-cc9dfda96f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced59715-448a-4e6f-baf7-270e2da7dd9e",
        "cursor": {
          "ref": "6979675f-3fe2-42d7-bc1c-a1cce40f349d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e77984a5-e498-48bd-bef4-47eef794d22c"
        },
        "item": {
          "id": "ced59715-448a-4e6f-baf7-270e2da7dd9e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e5ab69cf-e670-4ff0-a1b4-8cf67578bf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea5d4d-833c-4754-9b05-d1ee9a361c91",
        "cursor": {
          "ref": "5ef5ae37-e106-423c-91a4-82a4daf5607e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4186cdfe-c5ab-495a-b170-3e9408710ae6"
        },
        "item": {
          "id": "1bea5d4d-833c-4754-9b05-d1ee9a361c91",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "85367feb-ed09-406c-bca6-25445e6465e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445901c-3d4a-4621-9104-d6b7020ffc33",
        "cursor": {
          "ref": "904b84c6-3594-4e43-9097-d159f3077fc4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "317f14a3-bb66-464d-8db5-906a5334d61d"
        },
        "item": {
          "id": "0445901c-3d4a-4621-9104-d6b7020ffc33",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d10b7fdf-92e7-43a3-b353-081f4aca29c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b403b0-e496-4e84-a7f7-d3c7e6a37868",
        "cursor": {
          "ref": "3cc286a5-85d8-4f94-a143-fedf11786206",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d8a01480-5fbf-47c6-9b25-6c718683c4f6"
        },
        "item": {
          "id": "70b403b0-e496-4e84-a7f7-d3c7e6a37868",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4cc84086-3858-4086-9670-b80dfa89245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95925b89-b952-4988-b31e-c79709bb7f89",
        "cursor": {
          "ref": "5799861d-a71d-45cd-b09a-a0be2ed096aa",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8103fdc5-1876-415e-a5bc-539a38e8a401"
        },
        "item": {
          "id": "95925b89-b952-4988-b31e-c79709bb7f89",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4915cc85-de0c-4ea8-a241-62b2e15bcf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2407cc0-f2f9-4946-a72a-d79296c5969f",
        "cursor": {
          "ref": "7c3cc62e-bd56-4abd-89f2-85c42629bbbb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2cf35a30-4384-4516-801d-889614523091"
        },
        "item": {
          "id": "e2407cc0-f2f9-4946-a72a-d79296c5969f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e4d5c8b8-a9d5-4ff3-922f-049d51e1dc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d3d06c-4c1c-4263-a54d-e5f47a7d6d4e",
        "cursor": {
          "ref": "bf8aa717-d6e3-4d30-97a1-2aff73bdcf13",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "84684c88-9ca1-45a6-bac1-553d69e627f8"
        },
        "item": {
          "id": "83d3d06c-4c1c-4263-a54d-e5f47a7d6d4e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e4fa381e-7242-45bb-8fb5-a341e3339368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fef1b0a-c8cf-4b67-8657-47b741647050",
        "cursor": {
          "ref": "7baf6702-95b4-482e-a659-b7993d7c2361",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fcce8153-d984-46e5-898d-82aa8ba4b85f"
        },
        "item": {
          "id": "2fef1b0a-c8cf-4b67-8657-47b741647050",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b464d6f6-d0a9-4d20-82f9-d72cc563c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95b8678-f03c-4011-b289-7c04a6418abe",
        "cursor": {
          "ref": "7358da30-4aae-4693-bd30-6b9144af8f95",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7f9d536f-891f-46ed-a7ad-44215e3438e7"
        },
        "item": {
          "id": "b95b8678-f03c-4011-b289-7c04a6418abe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b924d91c-0fe3-481a-beef-f33bc65b5f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93929421-d4e9-4c9a-ac08-c600e75fbe8b",
        "cursor": {
          "ref": "cd03b478-1c41-440b-9583-4fca544d7f5e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8f462d06-237b-4925-98b1-5aff1976cbef"
        },
        "item": {
          "id": "93929421-d4e9-4c9a-ac08-c600e75fbe8b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8375f935-ae7e-4a24-b9fc-3c7353d23005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397459f2-5cca-4b4d-a2b8-04b506764f93",
        "cursor": {
          "ref": "aea869f1-bfea-4e42-bb72-a7e942b82dc5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6810d0ee-a521-48f4-8eba-e665760d1903"
        },
        "item": {
          "id": "397459f2-5cca-4b4d-a2b8-04b506764f93",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e5c3585b-b29d-4868-83d6-166bcdcd29a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0e001e-d48f-49c0-8434-41aa3c1808ad",
        "cursor": {
          "ref": "23e36d3a-c7b3-4974-98b3-4a100334a54f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "93bb08be-67cb-4897-95f2-f4925ef40d8c"
        },
        "item": {
          "id": "de0e001e-d48f-49c0-8434-41aa3c1808ad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0c669eba-9903-4248-84b9-c661e73403a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9346381e-068d-484e-968c-b86918fca891",
        "cursor": {
          "ref": "d79e6301-f2f7-4e89-b3ab-8e58960716a6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6c23f8dd-12c5-43e0-8424-8106d3a3da12"
        },
        "item": {
          "id": "9346381e-068d-484e-968c-b86918fca891",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6b1ade02-8eee-4e0b-999a-278e3e9352ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab66e0a-689b-430b-877c-947d9a908fd1",
        "cursor": {
          "ref": "7be9e03e-e97a-4c62-865d-92b1a3bff2f7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "eeb759ae-a5f9-44cc-856a-da3402abcfa8"
        },
        "item": {
          "id": "bab66e0a-689b-430b-877c-947d9a908fd1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f4bc4f76-8d8a-46a6-8cc6-b71a0925103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9a93f8-c91a-4223-b8e2-e7a660836567",
        "cursor": {
          "ref": "8af6fa6a-8726-4ee8-8f78-7c9bd4bad9e2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6c91490d-2a46-4cda-bd47-bcf6e0c02c33"
        },
        "item": {
          "id": "3a9a93f8-c91a-4223-b8e2-e7a660836567",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fca6c7aa-6102-497f-b828-161ff03ba0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96378380-701c-4ca5-a0c1-fcec75554831",
        "cursor": {
          "ref": "9e83e8ac-4846-4aa6-960c-07ff21d80b72",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "647e5ddd-0150-479e-8077-526adda5d909"
        },
        "item": {
          "id": "96378380-701c-4ca5-a0c1-fcec75554831",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a5a56ed1-d4a7-458e-ba36-24ee95d754c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e788edb6-89a7-4bd1-9e2b-616785a71c75",
        "cursor": {
          "ref": "4778b5d5-fae1-48cc-9c6d-f49bba6d077d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7f6dd326-5baa-4ee6-89e0-c9d927981e51"
        },
        "item": {
          "id": "e788edb6-89a7-4bd1-9e2b-616785a71c75",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf902a77-0ed9-4bac-b6ca-1004449db90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc6ae44-cc9b-4530-b483-27df693a5778",
        "cursor": {
          "ref": "a221fe8d-a994-4f49-b966-a19ade72fe8a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ea19cbfb-9231-4640-9049-ce64056a7873"
        },
        "item": {
          "id": "9dc6ae44-cc9b-4530-b483-27df693a5778",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0fc82602-eea1-45c4-abe6-882785179c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b94a79-04b1-4887-9ee4-508df2935dbe",
        "cursor": {
          "ref": "04bdf96f-36bb-4423-84f0-c8afefc5532e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3734cf9a-010d-4589-ac94-38595789c71d"
        },
        "item": {
          "id": "91b94a79-04b1-4887-9ee4-508df2935dbe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f5bca1f3-8e0b-4ed9-95ca-221b3e75b410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fbc70e-4504-40b3-bd7f-9f2de47511f9",
        "cursor": {
          "ref": "c5d00e36-99df-4642-b79e-a45aec584853",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5dad2548-47be-47d1-a609-876d2f5549dc"
        },
        "item": {
          "id": "a9fbc70e-4504-40b3-bd7f-9f2de47511f9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c06a44af-ebee-4fd4-8f95-0840d2bdc1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7835f4f-21bf-43ef-a67d-190b8a561375",
        "cursor": {
          "ref": "14119935-72bb-49d0-9c2a-af5bec0527db",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b9d9f68-a592-4598-8021-59c69396189c"
        },
        "item": {
          "id": "b7835f4f-21bf-43ef-a67d-190b8a561375",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e99c6c4d-31a2-4853-aa10-d5d7b6d985c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b98327-6663-410c-ab40-879193e223d9",
        "cursor": {
          "ref": "f4592046-0ce3-491a-bb0f-b804ccda28ee",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "accfe479-1b73-488e-9b1e-33e9f0789585"
        },
        "item": {
          "id": "90b98327-6663-410c-ab40-879193e223d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "814ee43b-ec68-4f83-9f5a-e2b644d8461b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15030dee-e745-4306-91b9-3715c2ac8ec0",
        "cursor": {
          "ref": "b1b991a8-51d4-4abd-a6dc-fda3adcba8cf",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f5d41e1-3d67-4448-9edd-15afb0f84ddc"
        },
        "item": {
          "id": "15030dee-e745-4306-91b9-3715c2ac8ec0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ad2bea5b-dc80-46a6-a442-2191b15b0e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3b6b34-743b-4313-97b1-8f9feacf33a8",
        "cursor": {
          "ref": "8b14bea1-1121-4bdf-8538-c7349809e5cb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5965c663-c2c1-46bf-8448-f98b4e1f32b3"
        },
        "item": {
          "id": "2b3b6b34-743b-4313-97b1-8f9feacf33a8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e6a22887-dd2c-426b-b122-13339664cfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02446633-fffc-43f6-b474-79edbca59735",
        "cursor": {
          "ref": "8ece0cff-31eb-4b58-b4cb-e5848646b984",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0666750a-b6f7-4b0a-bbf7-c635af5493e3"
        },
        "item": {
          "id": "02446633-fffc-43f6-b474-79edbca59735",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "677ece72-9285-444f-82b9-b12f828c854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd37a97f-7bd6-44a7-b148-a5c23b0d37bb",
        "cursor": {
          "ref": "9c6121d7-f12f-4a39-b8ca-deedea84abd3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e9aeb486-76ad-4a0e-b0d8-4ea0fe56f9e1"
        },
        "item": {
          "id": "bd37a97f-7bd6-44a7-b148-a5c23b0d37bb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ac08f3a0-d124-44bd-9133-3703d7208315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631882b8-389b-49cc-beb8-0a824fd8656d",
        "cursor": {
          "ref": "ea1a5fa9-4e4b-48bd-9ca6-9a4eec94e996",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "654801f4-9063-48e6-a1bc-a06ef5f3cb07"
        },
        "item": {
          "id": "631882b8-389b-49cc-beb8-0a824fd8656d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dc4a5c05-ed61-42dd-b407-44a2d7c6ad00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f014f567-18e0-4188-8aa5-2fbe08c98776",
        "cursor": {
          "ref": "77658997-b82b-4e76-9c3a-315d4daa0322",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ccb76ffc-5d92-4154-81ce-74c518dd9956"
        },
        "item": {
          "id": "f014f567-18e0-4188-8aa5-2fbe08c98776",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ae98ef77-bd88-480c-a063-3894fe8d8158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0465bf02-336e-4f63-8ef8-86c16e0608eb",
        "cursor": {
          "ref": "4ca02549-0413-4a80-a160-050b845a353d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dccea450-fae3-4c3b-91f2-3592954bbdf8"
        },
        "item": {
          "id": "0465bf02-336e-4f63-8ef8-86c16e0608eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e3891f9c-8914-40ad-b030-6048b6e440d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2a6e32-5ed3-436f-9d7f-1ce798c6ac17",
        "cursor": {
          "ref": "7f9ddf90-d387-4c1e-bfdd-1f8088aa770c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "28138c08-9249-491c-b8b7-8d915eb946e5"
        },
        "item": {
          "id": "ec2a6e32-5ed3-436f-9d7f-1ce798c6ac17",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f88b3cd3-8c56-4dde-bd95-be0b44f5935d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d67c3e-26e9-4863-b739-4195451fa88c",
        "cursor": {
          "ref": "75a0438f-6b4f-4937-b2cd-acfded93c09e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cc49aab1-5551-4b2c-a105-c51559dc7084"
        },
        "item": {
          "id": "a7d67c3e-26e9-4863-b739-4195451fa88c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c237d35a-c6bb-4dab-8e83-b81716ea4e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb985b39-525c-41a2-9265-c1d2b5b61165",
        "cursor": {
          "ref": "b3ee1e5c-72f2-4fcd-8b12-3cbadb1bc370",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e202b23-a6df-47e4-aaec-ed88b2fe4308"
        },
        "item": {
          "id": "eb985b39-525c-41a2-9265-c1d2b5b61165",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "067be2d2-d5bf-4e56-a827-b31116e168ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd463fd-d5e9-4528-9b31-6f4db192b6cc",
        "cursor": {
          "ref": "0bf38e24-8e85-420d-9f94-bd29036d01c6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c3ba8cdf-9a24-4baa-9e29-1c8f6edba6d0"
        },
        "item": {
          "id": "2dd463fd-d5e9-4528-9b31-6f4db192b6cc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "72bb4a66-b6e9-40e7-8fe4-0724dbe47d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bed41d-acb2-4d6d-b132-be50f225c8cf",
        "cursor": {
          "ref": "ca6b3234-c712-4492-b837-628dc6d27604",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "38a6ea18-f517-459d-a939-d2b1496ca206"
        },
        "item": {
          "id": "b8bed41d-acb2-4d6d-b132-be50f225c8cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cf4821b1-4791-485b-a1e2-ca03f0e4b60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184efee7-6cb6-41c3-ade0-f86bf52827be",
        "cursor": {
          "ref": "c0fbb79b-0d16-480e-a196-33124245427f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2c056805-0dd8-433c-b8ee-ed07348622c0"
        },
        "item": {
          "id": "184efee7-6cb6-41c3-ade0-f86bf52827be",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9e48e5bd-aecc-472e-b0fd-d502a17c439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b951984-19fe-4f33-aa2b-c2597ec362ed",
        "cursor": {
          "ref": "787f716a-d135-43b6-b117-0e16dacfdfec",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9cfb2b71-fc7b-43e7-bf1a-0dac854fe8a7"
        },
        "item": {
          "id": "8b951984-19fe-4f33-aa2b-c2597ec362ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8e10f9f9-1ca1-43c4-8105-aedfb158dc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c7712f-507e-468b-bc3e-09a30874a7be",
        "cursor": {
          "ref": "b9240418-71fc-4366-8a07-d99d93ff347b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3afd065a-67fe-4040-819d-9a80359eb732"
        },
        "item": {
          "id": "f2c7712f-507e-468b-bc3e-09a30874a7be",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c54386b6-8619-42fe-a634-3b6e3de25dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efa425a-f743-405c-adc5-46a846b9ee2a",
        "cursor": {
          "ref": "b842661e-dd5f-4c06-8733-9fa631faadd0",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2ba6bc52-5219-4e58-92a4-bdb2c5cb0033"
        },
        "item": {
          "id": "6efa425a-f743-405c-adc5-46a846b9ee2a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a06a877b-cc46-4c8d-8963-6bde2811d65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f961c3-410b-4ca5-96f0-c0c9a6f6d499",
        "cursor": {
          "ref": "c268cb43-46fc-4a51-b1e4-877d10848449",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bb5e2a01-7258-4a60-96f6-8f40e92abd8e"
        },
        "item": {
          "id": "26f961c3-410b-4ca5-96f0-c0c9a6f6d499",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "852a55a9-7a3e-47ea-afdc-7cdb9d70180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a9d17f-789f-4124-90ee-0bf64b223816",
        "cursor": {
          "ref": "4a8d90cf-d9fd-4483-a72b-5b77ee9d2c25",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "99bef7b2-62e4-43c6-be34-00ab695e342b"
        },
        "item": {
          "id": "74a9d17f-789f-4124-90ee-0bf64b223816",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c38988cd-a564-4e72-8804-2098b132c903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f268c86-c674-48f8-8c1c-a40913041953",
        "cursor": {
          "ref": "d6772ebb-1243-46a5-a5cc-97f5f185a244",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9c4c22a4-589b-49ba-8c8c-b25340e527f9"
        },
        "item": {
          "id": "5f268c86-c674-48f8-8c1c-a40913041953",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "13267cb3-c5c8-4832-bcc1-6aa2ae162003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d19f65e-216e-47fb-824e-69762458f1b5",
        "cursor": {
          "ref": "16115e74-f073-4cba-a354-7a7f52a91930",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "554c8ba3-15c2-4832-9c11-b75935912c2d"
        },
        "item": {
          "id": "2d19f65e-216e-47fb-824e-69762458f1b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d540728d-fda8-4e06-9542-746c4deadcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fb0e2f-84e9-4d4d-b942-fc470b964cbc",
        "cursor": {
          "ref": "740230bd-23b3-41b8-999b-d0805ab20784",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f2ebe993-150e-4adb-9dad-3a763a86866d"
        },
        "item": {
          "id": "e7fb0e2f-84e9-4d4d-b942-fc470b964cbc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b3dbd5bc-c00a-4f8a-9337-c5ee5642f300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e6c91a-a513-427a-a8f1-977499d4199e",
        "cursor": {
          "ref": "832a812b-441c-49df-a07b-a1bcef6cbaf3",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dc630081-90f0-4d36-a79e-5e5fb887eab6"
        },
        "item": {
          "id": "d0e6c91a-a513-427a-a8f1-977499d4199e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d200d2b8-f5f2-48a1-9236-2467803afc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555eae7f-4a6d-41bc-a828-272cba9173d5",
        "cursor": {
          "ref": "992d0ef7-93d6-438d-bdef-cc5a1793e8a0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "72fb3b6b-9783-4cff-a078-cbf8aa88f2ba"
        },
        "item": {
          "id": "555eae7f-4a6d-41bc-a828-272cba9173d5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "68ba9960-4983-4d21-8a58-fa5959870143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6093ef-d5cd-44bf-b922-dc0881985ca7",
        "cursor": {
          "ref": "81cc0bb6-d3ad-4f48-a55d-01015aa3538b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1bb6e1b8-8c8d-4af2-a25c-13fd445c727f"
        },
        "item": {
          "id": "0f6093ef-d5cd-44bf-b922-dc0881985ca7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6903445b-a609-4f11-9745-21c88c49e2bf",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b958360-8063-4eef-93d8-93ef6d0a4596",
        "cursor": {
          "ref": "ffe4587e-c262-462d-a28a-5c89259bd723",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5020d5a2-2758-49d6-a651-4221cf6317e2"
        },
        "item": {
          "id": "8b958360-8063-4eef-93d8-93ef6d0a4596",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cf6da2b7-0d18-4a21-86de-71c603d18467",
          "status": "OK",
          "code": 200,
          "responseTime": 2324,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f275923-0713-42d6-8673-5a1ab0e069fb",
        "cursor": {
          "ref": "366554d7-2939-4f41-ace2-97d9627bab7b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "be25e44a-9a1b-4f13-94ee-85c0ef03fced"
        },
        "item": {
          "id": "3f275923-0713-42d6-8673-5a1ab0e069fb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "061943a6-74a9-4540-aace-5c6ed7a01d17",
          "status": "OK",
          "code": 200,
          "responseTime": 2797,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b836fce-45d9-4f42-bc3a-0f7844586da5",
        "cursor": {
          "ref": "afaf91d5-16e6-4c64-a059-1f9633acccb6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8487933b-ab8b-4576-afa7-4d13baae7f2c"
        },
        "item": {
          "id": "9b836fce-45d9-4f42-bc3a-0f7844586da5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f8463499-7641-48e5-93e2-0f90810bc57f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b836fce-45d9-4f42-bc3a-0f7844586da5",
        "cursor": {
          "ref": "afaf91d5-16e6-4c64-a059-1f9633acccb6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8487933b-ab8b-4576-afa7-4d13baae7f2c"
        },
        "item": {
          "id": "9b836fce-45d9-4f42-bc3a-0f7844586da5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f8463499-7641-48e5-93e2-0f90810bc57f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef1d411-1f34-40f4-9ad7-484c9c64c974",
        "cursor": {
          "ref": "0bd46009-4729-465d-98c7-fc2f65443af9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "113a760f-7464-48f9-8ccd-83cacff5f1b2"
        },
        "item": {
          "id": "4ef1d411-1f34-40f4-9ad7-484c9c64c974",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "210aa72e-aeb1-45eb-a236-225f738b5d4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919376c0-d2c2-4666-a45f-f6e679f6693d",
        "cursor": {
          "ref": "48682ab9-c65a-4665-8b81-5099bafe8106",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87f07a49-5372-4356-ac6e-e113f104e49e"
        },
        "item": {
          "id": "919376c0-d2c2-4666-a45f-f6e679f6693d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3d7e40dc-7663-49d2-875a-23ee5db81678",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}