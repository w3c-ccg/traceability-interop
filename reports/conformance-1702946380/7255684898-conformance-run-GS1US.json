{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2813872d-4e70-42e4-a364-66502889448c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5dac387a-8574-4234-8199-a7b5f8f01287",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05b41cc3-64be-4dd4-8eb9-c5869f3b4505",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78ab970c-b0e4-4f1e-89e8-09dd29681c32"
                }
              }
            ]
          },
          {
            "id": "29841637-14ff-4896-a950-7e87367fb5d0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96a4119b-8f31-4b54-aef3-10331af49221",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75ffc138-848a-486b-9f85-617e3592159c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3db6ff28-a5f5-4c79-bf71-7d042f1afea9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "51ef3f04-b11e-4c41-b3e3-1839bda54fa0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fc663c0-b5db-4f07-89f8-b8c3fe4c4907",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80583f41-312b-49ad-a9af-3e36c25ebe7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "190f2351-b46b-482e-bae4-0a20924d1dba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "945b1449-08bf-44db-b0ff-416d4f91efed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11bd70ec-503a-4c5b-b6a0-c0705cf00e71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee2aef29-ff8f-4e50-912a-45d3e44a1fe1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3e1b50f-86f8-4da2-ab7f-7a7b08d8e262"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b297cec5-42c9-44f2-ab80-a62274746bae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d8a685dd-6d4f-4cc7-bf5f-4786fdbb1e9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8c74203-9cb0-4d9d-900d-78a11e6cead0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a04aebb-2e02-4ebe-9b4a-5fa4f157d718"
            }
          }
        ]
      },
      {
        "id": "d8727565-e13c-4541-8f59-2cb836304170",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "90b9016d-6026-4dfc-84f1-aab51ee63198",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3befd970-860b-462c-a6cd-3c8860c42e2a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f399befb-65fb-4463-9965-8da510a19ce8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6784f8bb-baef-4813-9a13-9154ef1fb16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3de0cac-49ff-460d-b72a-911c0bbcb6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7a1e01-b070-4b07-9186-79dd85bc0830",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29465852-c1ac-4a00-a92b-1d4aab19182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ae5d5b4-05fb-4b6c-9b37-9adc621f173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c8e223-17c7-4501-8490-427fdbc0c7b3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8b3ada-7bb1-4427-b83c-0c5a00100680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b463b0b9-4979-4c78-a016-49158299fd8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71120ff9-5878-4ec8-9fa8-501cc28e086b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffc0e2cd-877d-432c-9cdf-d796e7b7b584",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2974cb04-1fb4-409d-9fe9-d85d0f95255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5a79dda-5669-4489-a777-6aac90f26e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a990540c-e191-4660-8619-5d6f9259b33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182700af-00f7-426a-915d-cb48341c4b74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e5a92c9-3316-4fe5-8aab-1f9a6ba6674c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a607a9b5-e7da-4ddc-bb8e-b768089937b7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55ce181f-09fa-42fc-892a-1765a7ec60db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "777e0bd3-a797-4c44-b2cc-6efa39a6d053"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f70833a-087d-4ebf-927d-da0fdc220e04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cf4a7f70-170b-4cb6-8da1-c5b78e8907e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7e73f33-21b3-49a8-b532-fa0dfb0af33d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6790f7b-046e-4a23-aab8-24c993975c4c"
            }
          }
        ]
      },
      {
        "id": "8c457b8d-91ac-40ef-b89a-05c5f5219c1e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9696f9cb-eae3-4231-9ce6-d21daa323bfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e583bdc8-f4e3-4b9e-8ce7-56f9b45d72f8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "83892f5c-633b-4bc1-9405-5dfcf7c90bdb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38157681-aa0e-4519-bfe9-48f4c8fc73e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccbe7a5-c8b3-450f-bd02-fa9e462cdb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd726c2b-286e-4ad0-91a5-c62e4d1783f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82e59b01-0e99-4509-86f5-a811c26ef32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24650d8c-4203-45a8-aa94-abd15ec0ea0a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f461a8-072f-4c89-9b83-eaa5e5e44149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774682d3-3025-4568-af23-2b6301800e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890088a1-3529-463c-af50-ad546bc9c57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30f934da-e1e6-4900-a82f-9c247d91299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304b707f-3fb6-4b15-93dd-d2d1ae995071",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73fd052-e7d3-4327-bd0d-f9e7a0f7769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61bd0f6-30a6-429f-8b3e-0fbe5f6021d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2654ee6a-a9b6-4a2b-be39-42da343fb18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39fd57dd-1fad-445f-8254-733521e05333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3cae6-00ba-4361-9723-d7963e9ec271",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b324e8e1-e18d-4717-9677-e9f43a7acda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab3a8d9-bbfc-45ea-93a0-46ada2cbba00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72382e59-9ec3-4a26-b110-f90d3a9476a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "147b6b99-8fcf-4703-8f0e-d75f41aa54e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e992a3c4-b24c-4869-8a13-a3199dc6b6a3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5f4e84-344f-4381-bb9d-fbcca0fc7bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe056367-9197-4101-8139-b9253b52cd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c747b9a-002d-4df6-a427-48fe98ab24b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b71510e-0c24-443e-8ec1-6755f3941fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294104be-ed3e-412d-a2ed-c38168921848",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4441a041-cda9-45a5-ae69-5f3f95953fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cad2f4-d09b-424e-a354-2435b3522f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5b3c36-400f-421c-b3b4-d6518c435c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5567798c-edec-4bee-be0f-26cc325acded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084e0462-ff97-4ff5-bcb0-dc6ec5e7c387",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87815a87-950b-4a13-9bd9-208fbe490b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31920f9e-d5f5-4d57-872e-9ab50cab527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6e235c-2cc7-448f-9674-9ca8f82ce1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26c7e0a2-2c87-4f44-9785-fdce5225e9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e10d9f4-0f34-499d-850d-5c3325d68974",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845db29c-9f93-41a9-b16d-388fd7e44cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a00355b-656d-4f77-8779-24a762172692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7dcae1-6ce2-4252-bff8-aee6a3c9e109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f62bc8-9cd7-473e-bf2e-817e4a5fca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1b32d6-1f57-4f12-b378-f535bcc7d25a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0cf9e2-319f-4ef0-9192-7d1b23bf9c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e205f0a-7a28-4016-945d-f5d1b88e48d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6bde2d-f893-4289-946e-3ee0c4058745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af115152-d600-45ae-a06f-7a8efce34568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5483aa8d-ee8a-47ee-9472-18d872836574",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4981465f-ae5d-4685-b20b-d67e4677515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b853124-3e7b-48d6-8195-b1f5936b73f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa8fd4f-5df6-4201-b0bd-08de07383852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a87238d2-d139-49c6-beff-345d382cf503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aff762-c9ca-485e-b335-4867e8042d24",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac3490b-d676-4c1e-af9b-71bb02d540ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de00d3c-ce60-4ec9-bdba-b5d4199cda6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32456819-8349-4259-a93f-535869a33f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37eee2af-ed19-4211-aea1-46c05e436a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f98fefb-d109-430a-abca-35ff002824e4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c805530-62b5-4e37-b31f-68283ff59003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2fb4cc-899c-42ef-ae85-4c08b4e881c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb29ffe-ff86-45f3-ace6-18774d501986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58dd4cbe-ff59-457b-aa4f-9d890499cec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b590881-98fd-4c4b-b738-67266aee6b1f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db20199e-b057-4811-b05e-e4154a4a84d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e57c5cf-330d-41ba-b329-2593380af468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7266223-cc06-4dfb-a03a-e9815b01f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "277c8210-ac55-4af2-872b-77aed75d700d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021db56-a024-4610-84a9-eebeb9a9f798",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742a2534-67a3-42a4-a594-7d6f4df0692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3727e5-f234-4d51-b7a9-43462f925d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9acf5c-5cc0-4e58-a679-62be7c46c963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec657ac6-132f-4b75-9d22-1bc370ab6820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad382f2-86fb-4618-8024-4d00310578f3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8f7dee-fae5-4c39-aa3f-36012e559081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140bee81-6c56-4445-b93b-efa8854e775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3066b2b5-159e-4462-ab09-089d7111e13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d9854a-17a5-41f8-9e0f-8e5c81fc8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7427c165-997c-443a-9f18-957bdc039fa1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd774f2c-3541-4c7a-8b00-e9a31da356e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e902239-3c00-471c-8a37-709f58c3ed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059b6de1-3c88-433f-8d5d-89151c856692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26e9bb8a-fda5-4069-8dd7-e878a19c646b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab63f51-5fd5-4eb7-9e4a-9fe036d8d416",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0bdd2d-be72-4a9d-8840-f97b2b6ae4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9520ca-571e-467f-8110-41149d62bdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c653cffe-e29d-4a7b-9a83-0f7d33e334a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca3405f8-5278-4b96-9e4b-9a12a846220c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af82d49-8fac-4061-8e18-c51a2f2e8a75",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e2bc66-b2e5-4a2d-8ecb-728731c2cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e5db5e-415b-4413-8529-4098e80f4517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fe6c5e-5473-4cc3-9193-88f5f207ee2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f092bf3-8ba0-45bc-af72-045190842901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8df1a0-5098-4ddc-991a-70865fa7b113",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8accdc-95f3-4246-acc2-7236114c4098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e34087d-5e45-4b6e-9413-4e6d41591d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80fc378-179c-4dbd-8130-de771593eef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48589bc4-8b9b-48a5-9a38-1a8db9959f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd33e00-bea6-40b5-b7c6-d165ded5625e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e24573-285e-42f8-bcdc-13d2ae0145a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bea9fa-7b32-4a3f-b5e6-32b422596ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796d8cc3-3425-42bd-b37c-3191ca588041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b4b70c-a478-4228-b1bb-3469120adc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9701d37c-975d-4af3-beba-369a2af2fb4a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145da747-69c0-4e41-bc00-25f9ab4b295e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9776aab-6f91-49de-b69c-55e33b3a420f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34b1d74-a90d-4368-82f9-0945e9768366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e048bfa-f9db-4560-aefb-e249007c8547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0312bc0c-eb96-43f7-a300-0182dfe4bc14",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85333480-90a5-4c02-af89-a43dd3300921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6b707b-faca-4fe7-a937-6579858d4b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f8c567-2b8e-4353-8d2f-7cd75bfa5247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0001c7-0ac3-4962-9287-e996a5fb2bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b7cf0c-1f04-4a47-9957-74bcfe410526",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e97b30-f3d2-417f-b547-ac1fd4934de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e025327-f8a2-410f-a9f7-fbd36288bd6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cddcbe-9cff-4f87-bc71-35ba31704168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b911aa7-7a60-44be-93b4-e408a2a635be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5377a2-6263-4aed-8a22-e9afc5a83d78",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5acbda-2eb6-453b-b255-4d75a6315cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b8dc71-0945-44da-86af-5a158ce12028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0564c941-9a1b-4c38-9063-9faa1ef7cb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc74588-3de3-4de6-a866-2c0240248691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff997a-be5a-4db1-988c-3e88d475c75b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eb490f-f2a8-4041-9eb2-fdda29d09b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102df359-efa7-4527-887b-581a424e2c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cf7608-6a44-4a02-8303-7991a024eafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23497e31-f4b4-4e5f-b4a0-ffbb5d474da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267184b7-631c-4bc9-906d-a80310510b1b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b6167-965b-4e97-9607-3c3e8732f78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9456c1-53ba-4fb8-8a89-27dbaa7584a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1a0e79-b2eb-4c3c-9ca1-a61d92a0a4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b557d3-79ef-4120-97e2-ff627c8ac581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c418341-b2dd-409f-bd41-7326333ab61e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d75e3c-44a5-4aee-b66b-d5f60620b7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc983546-c213-4993-b5f0-97c0f1ad6eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821489f6-8968-42ef-8567-2835f6c360f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e15833-ead2-4db6-97ef-c9e58504dd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2114baa-cf77-425a-8eca-d0431286500d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24701a86-e53d-4486-a4bb-624fecd49744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78932cf-fb1a-42c1-8b58-cf5bfacaa910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99378735-20d0-4144-9f49-cb2fc49be415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0de054d-ad79-4adc-9905-f1fa569dabd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e625db1-e810-4db0-93a0-70da179cff75",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54daa35f-43ac-487d-b667-d04d9a9334fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c686c1b6-aa6e-4033-b4e5-522fb960daaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2230f-2983-4a17-9647-659c15660144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84a8ae9-8b85-46f8-94c1-bd33a0f5d6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ece9bf-7696-4ca8-a665-077f2b7c63a8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c772c621-6b5c-4cbb-b195-41ef1136eae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2643fa91-b26c-44c6-92d8-a81316d772bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d0821c-a345-44b4-b681-8a31ebab579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9a31d1-8043-4d7a-aca0-54a479416ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6cfb98-7220-4491-83fc-5812534b4c60",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb109ea1-51d8-4d77-a721-00fcd2339859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8c3434-7a8a-429b-ad53-f0b5748c7131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72cf00b-7beb-4875-84fb-1032410e6340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07807e7-b0b3-4bf5-948a-30f64d2a8222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3d31d0-1372-406c-a00e-cde02d5856a3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5918b357-ec09-4d29-8e35-fa27d53dce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4810876e-bb53-43e6-8208-2751627bfd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a09788f-be39-4047-8730-60825536679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac255ad-66d2-4b97-9621-5cd02bd6c90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2226810c-8ec3-48eb-834f-f16f09862fe2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ccb6cc-3196-42db-a2f5-3b37133dff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e71e02-ded1-46e5-9ff3-a06213b75748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5b8c7-ed44-439f-9b91-30398a5e5c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a57d7f94-82a1-4c5d-bafd-fb2b4b5aa92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc33418e-6844-424e-975a-ba61a19c6f18",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c482604-39ea-4588-8bc8-d387bb6e7c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7928479-c11f-486d-9081-da7682df9c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43719751-ac8d-4511-89cf-4e2b9974d559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9ed632-82ea-4080-95df-ddb5aaea99d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642478fc-ef4e-4548-9ecd-e109d40e1442",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9361493f-d7f5-4694-a80f-35356d1aa469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9592d269-0598-4217-9635-cf6cb3099067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5048dce5-a217-4f85-9f0f-46067042f160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "617e8d64-3460-4c84-bd2b-df37cab60d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da99dee-3ee4-4651-a2ef-2ca8573af526",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae5e230-ec87-4ce1-8c97-16053d708508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0148b5c4-a8d5-4387-bd05-a036f445ec32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27b1ed0-d89c-4ff0-86f4-7cb3603c1f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06415948-2c09-4412-9472-5e0af85cf58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec92c4b-84d3-43ac-a7e6-dc6d25bb6290",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7b067f-cc23-46a3-8064-57759ca8bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2957b83b-7fb9-473a-a20d-7e03b0060a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213f09e0-5ac0-4ed7-b1f0-249cddc824ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8e1353-1b38-47f9-bd0f-43328487c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1ecf59-7511-4435-82d0-93e6572e56d1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12547b97-9120-4ead-926f-a973547dec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a50e43-86f0-432b-a5b2-3ae4a7a953bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdcda5b-3359-46eb-9d19-983823c449d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "394bf038-4c67-4253-af2f-5d82c638e26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0642fcb1-17bc-4bab-b53b-1d6a51eb9f05",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b2809b-a299-4b19-a28d-1a0f275a1104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4595a467-95d4-46e8-a086-ab09e1a42e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53301444-07b3-44f4-812d-173774521661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd314601-fef4-4d34-abce-3a38ac82ff96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307cb99e-d4cc-4045-9b23-2adf5bf2ffa9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c018fb-e359-4277-9a6f-a631db77f7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb674b6-96d6-4c79-98d3-e7f0cc6965eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fb01a5-f757-44dc-91eb-f7e15746c31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1dd8ac-3930-4f82-8618-54379962825b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b78294-e6f7-4d0c-8a0e-b52b55a89517",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8c119d-4d9c-4a10-9121-26d33ea88b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db14321f-382b-47d4-b4a1-a3fe8ec12329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2efa613-e0e4-407d-9a6b-a9d80c4802c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a4938d-9174-4a30-a0f9-7666e6e6b613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9050c184-c5cd-4695-9523-85c501f3d48d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a12ca81-9fa4-47e7-b132-db962baa2c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995566f7-d893-45a1-9398-d537a5280670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65f446c-4f7e-478a-b752-c31800aa452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "77473662-a711-490c-a2d7-930850e08c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8de1b03-a2e9-4e3a-a90f-cff3bd8ffbf9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6a6ae4-0a9e-4a53-ad4f-c15aab87ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941d5a88-662d-406c-981f-3da1cbda9f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82cf71b-40fa-4e79-ad7e-454f08eeaf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfa0681-d3d8-459a-9f59-698e8f90dc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5611eff7-d92e-4052-813a-2e73758c8487",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3494a8a-702e-4b8e-8ffa-4f27e38981e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ec193b-2786-46b9-89e1-47717b56a925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbcb4fa-9f13-4117-8acb-dc384301627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7976ae45-2d63-4ae2-bbe2-d88264e1686b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970ccd60-57dd-42e9-b93a-5f2ca60e9556",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5de00cb-0e1e-468e-91bd-626130310574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b6e5e0-8247-4fd7-a6fc-e813387386da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5c2870-eb91-4542-a436-d7a82eb5d399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5156efd7-7fb5-423f-9195-ed812a0a971c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35834287-239d-4187-99bd-ded7aab4f8f8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10f1c84-d589-4d5c-8841-ee95871e3917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377507ac-2ebe-4d17-b172-d9d56663b4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4fc2e6-cf68-4324-abe3-a6f3772ba9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd655ca-950b-4a8a-a3c9-d0adde8899e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce78aa41-c3ab-4818-9fa6-61e9ce1d9a63",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964463c7-5fca-4f2c-a9f9-972a29a4d57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75635e34-2c13-4e1d-8c56-5df84362d9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74235750-97b5-4773-8aed-1bb86d55b8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05beaf42-55ad-4ad1-97ae-3a8c983d417e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1562db-2333-42ea-9e75-83b86a749da0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a198548-3cbb-4053-976b-3b6a4f4b3da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9052ba9-943c-46ea-8981-764fb8d9ac34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd3d18d-f9ce-4f34-b358-451cf2ce5680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "994239cf-6f1c-4f69-b234-4aafe4ae7a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea6d2c3-8724-4795-9030-fd5420277bfa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cb7743-3dfe-4fdc-b117-e844cfd4a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4edd70a-7b1e-4c28-b4d9-e414d21e0b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721d7330-9eb4-4d60-ae0c-c8d4be6db51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc3554e-af98-4953-9c07-bfea94978820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6d6b0a-fd09-4af5-8a07-24b45fc753ab",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e9e8c6-2ccb-47eb-abdc-5739c65951ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946f3d34-8436-4ac2-b0a0-26b012d51065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdfaf21-880e-48e2-b4ef-bbb264112c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcef8bb-d2cb-4761-8f53-db705f91a17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fb70c6-43b8-45e2-ad8e-5df870ca941f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511856a5-a2aa-40ae-aac1-73d0dff9294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e244f94f-dbae-4c93-937d-a0749576151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abcbcee-629c-4b4f-9b73-bf0bc68ea1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c6787e-726f-4978-82e4-2fe89da55ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b9902b-ee99-4bf8-a1d8-788ff8f45c31",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da7a5d2-fb1b-4ed6-92d0-bc7f374d8bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b2642f-97a7-4794-8680-7bf2d7d5fa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cda1c4-10cc-4bc1-8e05-abf1e3fbdcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f145206-f36e-48a7-bab1-b80b8dc38d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588a4a97-018b-4c80-9a4c-04d8e26f021a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c28615-c61d-4a74-8cd9-d3ef06cdcacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c16e09-de76-405f-af85-0a58280b66e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6969f785-d021-4ebd-a90e-bcbfcd038275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b207c4-606c-440d-b175-8b31c03e67b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3c4c64-b65d-4317-8513-2f9bb714c9d5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a42b428-2b3f-4389-9a32-2937e380e94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5d0654-d244-4d31-ac63-235b006dda34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea11d14c-6602-4239-8208-c6a59cb657ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3204ff31-d198-4e16-a62a-699f175a80d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24f5840-da23-4b9b-8457-99b5d721195d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768613b7-e568-4f02-a52e-2921045c1b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b73e740-dcbd-4e49-9a8d-d2d8115b937a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95628b0c-4a5b-48a3-b1d8-d00482488371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd46f34-0ca3-4848-b9e9-db882e37212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1e6c72-24b2-4d38-ade4-ee97c3d0e7b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71e90a8-9ef5-43ec-a789-643daa2ce4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd20ecf-e3a8-447b-8291-cf4559bdb015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e386e709-a121-47b3-97e6-6b286297f99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "88c3e23f-4dc1-4840-9da8-811b956ba699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9258f95a-4955-4de7-9534-7951e9923206",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b2c21a-f913-42cc-b615-a5660243861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3da80a-d6d2-470c-857c-9477543ca7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df0f69a-acf5-432b-a143-89b418f5235b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fe1aa9-5169-417e-a6c4-19dffc6c7e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642bcf3b-9a27-4aef-ae6a-8c2ef1d90cd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c449f86-3b20-4fd8-8ad3-479d28c1cb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b547ccd2-11e9-4302-8705-8297141d9c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6d3655-5cb4-4528-9021-2e1f2aaff6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "521acc49-22bc-4f02-aa87-11458b02e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8581955f-16bd-4021-96bc-d1d1855cb69f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901cc6d1-5853-4f59-8c91-2e3f6d7e60ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d17bd6-f53c-4ea2-a498-1c01581d4058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d902ae66-6471-49dc-bf4f-77ea3918ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe73dc3-83a9-4660-9c77-548716d96c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560aa9f2-3293-4848-b042-860cdb338423",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c10424-4f70-492f-b08c-28ef07b4b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfa8569-a0fd-4b18-ab3c-8ac6db14ade6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25343839-36dd-41a4-af2d-0b4807554eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd72069-c694-4c7f-9905-73251aa2b6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74810e97-45f7-4d22-8d7a-c804f670c3fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e193df77-fc72-4c10-8d47-29f8f87b6d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a9a11a-8a4e-41d1-83d7-890d488148b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f00b12c-c475-480e-9e33-a02d7780432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3805cec2-0372-4d2b-a7d5-96b5a5fc51c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a22f15-dc81-40e2-b875-6ae6f78dfbe3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9b488d-1f02-47d0-b574-ba2213ba42d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5707bb3-edea-4ac2-91c4-c2210fa55e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7519f86-d1b2-4546-b2bc-c58ec79973b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e93b44c-7bf2-4fc0-8c40-27241b7ba024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21c40e1-65e3-438e-8b53-ae40765d7aa1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa970f2-0fb5-46d7-9616-808b1965c563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22c2f18-5293-40b4-8454-a1a004b397b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bee8de5-632d-4ba9-925e-032fc7c4bef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "383fe08b-18e5-4c00-a9ca-88223afb3a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bf62af-0ecb-4ab4-992b-93d3efe57304",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c029113c-7fff-48c9-b8a7-fd604c214089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8242cf-274c-40ad-bb9c-db20388ae374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7193a4-0bc2-4e1c-9f93-b827f1609e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9235b5bb-7d8e-430c-ba7b-83dfc76c6d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c953f-9244-4ae4-818c-b84464b87ae8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c645e5-0ae1-4872-8ba5-e13b84339861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437979ae-9da2-401b-809d-060258c5eddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67140871-3090-4705-a229-c96e2e11d1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "648a533e-78be-4f42-9b97-65665da1854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5af773-7f9d-4105-9b87-405a60f8ac39",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8677fd-2a46-4300-8313-35790e5715b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ff1f55-8436-45e4-b516-ebf1667e2cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917dc44f-04d8-4dda-8440-de7578786483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e28f08cb-98e5-424d-89b2-47b5cbd67390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283c84b0-5554-42ce-ad5f-9b8a967135bf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e389b02e-a9f4-4512-b95a-f05badd98ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d416024-4dac-466b-8b08-c92e4ee3e30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cb2684-fc1d-4ed8-8c63-85274f398996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac65ac8-efd5-4965-9f4f-ffe77feb6886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aa7a65-f1de-44df-ab46-00b96cb43dbe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71db2f-1288-4308-9fe3-beaed4713fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e987ce11-f92e-4c32-8190-2124efee9ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a15430-af02-426e-9c52-a0f803d936aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de48cf86-4cc9-4e72-a10d-3cccd9e85381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae1f331-4b24-42af-bd82-2d7141f8e494",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b5b7d-0e1b-42b8-ba3a-9886131728d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3344e47-923b-4420-8354-f139d6ee58e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be9682c-bcf0-4aa9-8631-01f25c1341ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ab6699-3c9e-4762-9599-64cc1a548bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff215e4-5f21-469a-bfff-58243e7ddf5a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f51f8d8-b7e3-43b5-95ae-cef520dcea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e4188e-f537-4137-b022-7df2a4535bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae6f73c-9763-4c30-97e6-f859f02063c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6584c9c-c5d3-40fd-8b10-f2496aced647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49111955-a396-419d-b77e-d35c81fe0098",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda86d5e-339d-426f-a199-44e78fa011bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd2f2ab-1d5c-48de-b311-6cc5ba340aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0a10b-74de-4c68-9c03-0761e2afc80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a512620-dc3b-42cf-bb54-5b57851e3eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d71d1a-a81c-4909-ae31-3a9b6c5a8fa5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14808064-42a9-4217-b41c-97802b6bf7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850bdc18-25d9-4be1-9c41-3fda80189923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4986247f-a1bb-488f-b5f6-e8a3aa271f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "790114d6-4c3c-460a-8d52-bf969180af62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a29449d-6c5d-458f-a16d-be0b3355c02c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896bedf9-98b1-4a0e-95ae-b023e451020c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d1cb3f-390b-47e1-8721-fce02ebb33b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621a174f-22e3-4e9a-b397-b5699bdc6eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9628b05-6313-4669-8a9b-f711cf4dcba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7a6fcc-86c0-45b1-b2ce-be529fd54256",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2467a155-be2c-4090-8575-aef8501949bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2350a7b-d328-40d9-8d54-7675423228f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfb41d7-085b-4d0c-b3ff-12db7c9cd2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "810b1301-e7bd-4f96-a028-acc1a7505264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb47ddd-61e1-4c47-ab41-c12f3bed024c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef7b062-23c7-404e-952f-efddf47fc5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ca36b0-39e1-44b0-a279-75c8e85d3a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f00943-510b-49e6-846c-61ec12c723ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa7bc16-5ba6-4f40-b6ab-09232980da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ec843c-b223-43c4-9fd8-c9fe20f3390d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4b7149-5b7b-4250-8bf0-ceb50fbcb1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd685746-5efc-4403-b506-2c01eb713caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c4aeb9-0de0-455b-a29c-08751b147e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f964f0c-ed4e-4ed0-a978-7d90c4e6ef27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705f7af8-8fb6-4165-bb20-44d7eccf602e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53255ae9-7718-441b-8214-34304cdd443e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87983ec1-0ab4-419e-a380-aa5f2dc94425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d9ed39-4e16-441c-9bec-3b8a45399c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "224afc27-5a12-4c39-a03a-742bf8c6b1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d76d186-ca7c-457c-a00d-bcca354fc8a8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b72eab-89b8-4148-8521-dc53560d590f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981efcc4-015d-4a44-ade2-576dc305f9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98952fa4-79f0-4340-93ce-addc1b8ae543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ba3ef4-85db-4bb3-b62d-77c021ecdf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a63b9a-d2b8-4fdd-baac-d2eb62e0ee4b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d119340f-0c4a-4d98-a36f-0cea4fbd4f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4a0a54-3ffa-48b6-86a7-a2b74bd8fa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ce128e-eda4-4e43-a6ba-811f0cbc5df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f94dcf0-1269-41b8-abb9-ba16a99db04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ab77d-9f8a-420e-a8be-2d83dc0231e0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b2dce4-8708-4cb0-8c35-4ef4f405745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b63ca4-4a38-4cfb-938c-613fc97271fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30464e29-9d7d-4883-8730-98bb73f4d6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20ef8629-8d76-4cfc-8438-bb306e1c814d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c27f00-9023-47da-ab02-e8c3dbb220c3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1fb994-a8a9-4085-9045-5078cf8f3414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbd8506-cc1a-4c72-b2a3-530163d50879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a828f1-2b03-4718-a1b0-6bbadd1dc6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87796ce8-1826-426f-8753-f98e393108d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6bd339-8ea6-40bc-8e24-d8b9375f30d1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86b0493-1556-4782-9e09-5f6c0c246192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0489681b-1144-46ba-9bb6-59799437df47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09464d-02df-429e-9c98-6677894f7910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69974615-0e3e-4324-8a5c-187b4d6e4ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeacc637-7f2e-4c09-9ee1-6d5ed94082b6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26ea22a-2db3-4817-ae53-6b82b9a540e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76c164a-c353-4673-b39b-d3a217a49295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92043ef9-5d19-41eb-8a0e-756e5436738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d5d39f-d310-4935-b848-4bb1e0a150e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3ee543-16c5-425d-a62e-14fee464bde9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c26f385-ba57-4ebb-ab32-f5167a8b1369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c685042-748e-4841-9845-1708cdd30c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c914d1-9ee6-4c3e-a6b0-89fa6a4f6a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "370080c7-c48b-434f-bdc7-3b33c2caa7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73027a51-0d04-4cc4-8312-4e64abe377d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7f2291-d2be-4058-9256-485a0f8410b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d366f41-1f26-4575-9a0e-97128cb84d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f871e55-36be-4cb8-bdbb-3f098db8a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81911380-f531-4b70-8525-0b6d33bda227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94106f3-3384-41d3-8318-1f3bc4c86f96",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29bcb84-1ee4-40e1-b706-f043db24542f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b337127-bd61-4fc4-b41a-f57d45ef261d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7262ad0f-d276-46fa-8f26-344c32d9de06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d04b55b9-daf6-4837-adca-35c9fcf44a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e38612-8513-4be2-8460-ae5f61dc4e44",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d85ab31-5199-4deb-8c02-61e0a2034b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6bbc87-f0ba-4b6a-8822-2fcbd79cbd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ad9cb3-b78d-49d4-943a-443a4f6399d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9be64d-51b2-4f88-a35a-2fbedf207481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c834bf35-817b-41c9-8e0e-1fb2d963ad76",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c8452d-1367-4ee7-b74f-567ae4f0d735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566cbe5e-4449-4c49-a309-46ee2ed9df17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea42c79-6252-435d-803f-c8898288efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e8064a-6608-4b1a-a83e-0db4294f3f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0952dcd8-b68b-49c9-acbe-1b0916b4f93c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480fd57c-a872-4595-8883-4bcdef561b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2057e367-b4fa-432c-8a3a-2151e13651aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db0c7cc-224d-4a44-b9b1-91109ea22c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbac814-27ba-4568-8f3a-6576872cf05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5e7c39-496f-4f26-b5cb-670c4a7c4b9b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04004caa-e04d-4ac0-99c6-c92f9dba6bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5420e9-f247-4f7b-b87b-ef5755089775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775c37d-de26-4398-a0a0-9d77167d5c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "273c38c5-fe54-445c-9368-4e274ab735fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27869d3-ba8e-4f0a-ac17-37a06aaaa0e0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6aab2f-9ab4-4df7-8db9-deb5d1579554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb38600-200b-4bd9-b4a4-c1a9534bf269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ede05f2-159f-4805-90c9-7609da7b0349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c9dabe-c2eb-48e6-ba4a-1028495f18da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e45b938-6f36-4fc7-a56e-73e88d6183e4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd7aa5b-4f51-40c3-b039-c94ccd0a0646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b66c4c26-ca29-4e6b-aa9a-b47bb6669a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463ae9fc-ce94-4882-9d67-1866c9c84a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab8e8c-bd07-4f2a-a2db-069723e304e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91e3e6b6-52b0-4b9f-a4e8-8154912341f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c5fd4a5-6623-44a1-994b-5f595dd19e89",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7542c6f6-419d-487c-b42d-2d08473b35e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d6d1a65-ce10-4b92-97f0-eeda2e1cb5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226b7a71-7ee0-4e80-938d-4597b7bacb0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a86648b-5236-4f47-b562-736cae2a53bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3da18e2d-d91d-4cd7-9e8f-055bea13ad75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff92c91a-55c3-4637-8a6b-525f16a5afc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f04bed40-b20e-4bc1-8f42-931d6306f921",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b96e8cb-7e8d-4ea6-b1a3-156abfab82bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "104dfb4f-ca75-45e7-9e99-8ba841bf73c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dece8ed-71a8-4965-810a-b7621c8d415f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9b824f3-8c53-49d3-8fef-9d09ffc159f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59e061fc-c1f3-46e7-b123-e666c550b2f3"
                }
              }
            ]
          },
          {
            "id": "4927b22a-d53d-4d0e-9aba-24e1e708012a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbea6d4a-fe53-4785-bffe-80860a917ae1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4b89eb98-4e0c-4971-84d9-edbe6c5ddced",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8c5a2d-62b2-4044-92f7-6d6961f51534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6cd572e9-f71f-4403-93bc-2a8d3574ad84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab994f8a-9103-4ac6-80aa-cbf4a33e8c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51260ea6-6436-4798-90f4-01487453c5c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "235dfb16-fabb-488c-8f09-a70d5bc45231",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34d176da-5374-4e0b-aacb-dc1a3719905c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7986f471-9312-4e88-9ff2-a96b34010031"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd651e5c-06b0-4732-ac28-b8f342bb8551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d55287c3-94d6-4db7-aaa9-3a6978e4138d"
                    }
                  }
                ]
              },
              {
                "id": "b013cb72-c014-4e26-b5f1-90aee40e8d8f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5d89933-e64c-47ba-95fe-4d8117a99dde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b5c87aa-a6ac-4f29-a682-fffcb7524963"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa01ca30-f8ef-4100-9616-287ba0edb0db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de6c9b47-d63d-4a38-a8ef-12bfa2b1dc73"
                    }
                  }
                ]
              },
              {
                "id": "4a74efac-63eb-48d5-b5e3-89e5e93fc4d1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7d8dbbb-d45a-4236-adf5-c719c524027f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31d45dda-44c6-4b33-b6eb-9861a1285290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bebd6f-57ee-4091-b418-96926a89eceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1216d6b-ee0a-476b-8d00-c379a0713050"
                    }
                  }
                ]
              },
              {
                "id": "a713924e-1f0f-4511-a535-c93a37ba9ab8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c7a8495-4a37-4f1c-b4b6-5b9a06c3286b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ccc5aad-77b8-47ae-96e4-ad574a9974bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f70f64b-3d1c-4c20-8b8c-7c6f6a6e08ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7195048c-8dfe-4979-ba95-2b1a104eb702"
                    }
                  }
                ]
              },
              {
                "id": "0fe8cbb4-e67a-433e-8e8c-c7e0451cf341",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6a4ce69-c827-4803-9513-1f61572418a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79136958-5d1b-4b94-b5a4-58bff81e32af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7518df29-971a-4667-a3ad-616f7d80df3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a02a1eb9-e730-40ce-92f6-6a5c110b09d6"
                    }
                  }
                ]
              },
              {
                "id": "3a0905f6-1044-43a2-bb62-70f23356f3ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81c914a0-ddd4-4f35-baa7-8c4cd36f4231",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc125125-2f0d-460c-9535-dccf741966c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f03b6287-2e8f-4b65-9b78-a53ec6592ad2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c4b23bf-17b5-4139-a0cb-736bbf67f8ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b47c2388-0950-412a-8280-ed5f70b4d473",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09afd587-d5ae-4638-b46b-f7af115f5f58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66e5ad41-715f-4450-9195-0ed3044a2723",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75ff6f27-4c55-4584-a297-8f46fb5f6f6c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53769532-8056-4c89-a03c-f38b831a6756",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f48919d-51c7-4e48-9b8d-dddc7182d9c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b0c1603-e6f4-4995-9895-96489ab5a1e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63e912e1-b62a-49e2-851e-25cf2c32d42b"
            }
          }
        ]
      },
      {
        "id": "0b5155b6-5112-4de6-bd3e-a33349fc21e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a39af66-dc5b-4935-863c-bceaa8e38d73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10e48a9e-4c82-427a-8eb8-401afbd0942c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bd4315f-d534-4e79-ba5c-b5483e92d61d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6ab37d-38f5-4016-acb9-7accb319d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d9e7c9-c9ef-4222-803d-19913bd4d015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f913104f-7aa9-44bf-ab91-8abbab25f14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "921fa7e6-5184-46c9-a1d1-64f4fae5ba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71f0e95-6ae3-4f48-91ba-7453bbc15bd4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df14c9f-7587-4e49-a362-dbd9ea4b3eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399bda69-2e3e-40e6-8aa0-e487a1d80ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa8d38f-e17b-4334-8d4f-ac94e50bedd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b618b2b5-7a15-4205-83a3-4e3b55065817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441a988-66bb-4b2e-add5-ca8f9e118b67",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d29f639-c609-4652-b45f-f9a86fe7a26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79172215-ea75-465b-82c8-c92de611222a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd901cb5-8946-4c25-a1a5-ae59bbf0965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0ae157-2013-4dcd-86bf-04b2b626e633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766b82b6-de07-4e9d-9f84-b02b972252c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69f82f4-191f-430c-818a-8ebb6d527c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd945afc-ea4b-471f-aace-568362a12ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c350659e-5d50-494d-81a2-4bef7dab385b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7637e05-0ea0-4fbd-98b6-f6d36b569e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f95c5-5665-4345-87fd-b24a00a790cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bfa488-4a3c-4d5e-ae47-828c3bf7962d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07df8cd9-cb76-493d-8770-3190324ab152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80588a1-5c11-49de-a449-3f1e280567ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "637eba95-880c-4043-bd95-49a10bd9e668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0730fe-ba3d-4cca-8acf-a7903e085535",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30d5a1-001b-4486-860f-02b327c8705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77abea27-8530-4764-b1a1-78477496d41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86434168-9dfe-4cca-a9aa-58351088cf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe337f20-da2e-4aa5-94d3-8758f5821023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61766098-5853-4643-a526-e26f86795436",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30608aa7-5e5e-47aa-bf3d-f7dead540fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465f00be-1468-47a4-9a95-1a690a33df4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be5a371-827d-4afd-9fec-b01f510df63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89dcc3e2-da82-4e4f-a479-578d80705c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522686b4-f0a1-481a-9b18-64c50c1b24af",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b0b43f-d1ac-47ba-89ee-6b3c53f73641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce09c92-38da-43b9-86fb-cdd3ea9d2427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99a4001-afd7-4a32-a93e-6661c738fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adbd7d7b-b057-4e2b-b2a3-e9b096a983d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f2361-542f-4c00-b588-11ecc7d250ef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eada06c9-bfd1-459a-b40f-2774828dab8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebab2d6-12e8-4fbc-9d61-a6b2fb53762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9efa66-93fd-4bd2-9391-620c184440c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4770e810-202f-4026-a913-9b2bdcf7da65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a82bd34-2caa-4cd1-bc6d-9684b5c2a985",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e50dd8-5ea3-4548-ac74-cbbbc8469a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1444324-6930-4a07-bb42-2e86a557724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d08e4e-9764-4daa-b4ad-a8710cab14cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "835a540c-677e-462a-9a17-7bea0f39707f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3a917a-c74d-41c7-b021-50d66e4cd60f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63b5840-330f-4fbf-84bf-11cafcf64ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc303ebb-bf93-4737-8e16-06f357132e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b1c386-d981-4190-9194-f2a9b2a9c3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5e07a1b5-2ea9-4bb6-a597-26f5e2ff6eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c23a1a2-ff23-444e-83f0-3edf1e2bd566",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f4baa1-7e19-4b3e-89ca-cd15d7ffad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7e47b9-b340-40fa-8f92-3b1dc9a07fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f151b29b-a310-4c26-b731-6bdf76822231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "848090ab-1f32-420e-9456-22d465781722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698b3294-a87b-4e4b-ad3f-967fdf0b5025",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468e6e10-62a8-4297-ac38-64897fe7e892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dbeaae-0216-464e-8204-62ae62c994a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f1ec64-b5d7-43f2-b255-9f3a6f5c4977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec113ef9-4ac7-4f98-8f85-2ac3a4e4c473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c21423-f2b5-4413-b550-4ffa958d35ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7a8cb5-8388-4843-ae17-9f0259d81245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772a5b6b-c420-42d1-8f11-503cfcfb7e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edd1898-a618-4bd7-bafe-8d1d8786e82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9e2033-bba3-40a1-b34d-53a8b5a5ccb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66935851-2114-446c-b88e-3a2666e0ed7f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff45d032-691c-4eee-be3f-8d26af1b78b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d597634-79e7-4473-bb63-45b8ca773fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e90fc3-4465-43ac-84c1-4cd254eb3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21e7d6f-2f55-45f2-9c00-d0c75c619018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c2d63a-b77e-44c5-a1aa-dd67cc062483",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79525e6f-d73f-4a4d-bb5d-f2f467a28959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c81754b-2e74-48bb-b404-2f86036510ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19081c7-8366-48ec-a149-3f1f9b0c9687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39070ef0-dd2e-4370-bacd-8fb8bfbd7b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d2ea5a-6989-42f2-beb6-5a460c6a2ea8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea57d3b1-5a3c-4537-a542-5c0cc6d1cf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a7e827-342c-4f90-ae09-12f2c1ac1895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f8686a-49e3-4c64-9d39-c4fd90a12e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ca96c9-e4b5-4cf5-a956-9e7825afc498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21a8491-8873-4dab-911e-fbc9c185504e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3a8623-2f3a-4c41-8f5b-0b1d11941eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908798a3-7cc9-4638-b54c-4320b85e9719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64300a85-8ed2-4f2d-b9f8-abde3d68dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd538e94-ad06-4ded-a0d3-a241ad3fa46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e8ced-cb71-4d84-a027-471106371871",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea3ac77-90a6-494f-97b6-94709794088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2509b122-0551-4828-8417-d66a3aaacf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a6c586-0d69-4106-8aa8-96d8628535ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2df2f3-0bf9-4794-bd5a-f167234fd4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38945dae-074a-4c83-973a-1249b970a0e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f1f0ac-01b6-40e6-8b58-ad03053cdd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e31b3b-31d6-4cdf-b34c-523f81620b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd41bb93-0e0a-4b49-ad72-a439b6ad1b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a07b988-fdeb-49fc-b92e-e5c6e16fdd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857c8b22-0ca5-42e8-b66f-4b1ecc6c52ed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a631c1-7372-4a97-8de8-781c5eedf498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3328f2bf-d80c-4d12-9caf-d02780d95aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f174874-b068-478d-9d96-d176301ec0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef91b29-5bc2-4c98-9a3d-1186722a58b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeffdeb-0266-4b2a-a31e-dac8b3aa1795",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d918b2-8766-4db6-863a-d2620700ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d98de8-bd68-4e64-bb56-7374ad919529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1ecd2e-2839-4576-a4c0-5f8f9a857a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb0430f-f043-48a5-b4e3-dd30c73596cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a0db6-8bde-4baf-a3aa-e94516729750",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7bc13a-157a-4d5b-98fb-7f6751c9110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066f7bfb-294b-40f9-a509-36c9569bbdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363672e8-571f-4eb1-8156-c2d1034003cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d90153-db3f-47f7-8355-4b2f8cc139f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f55226f-e851-4817-9f19-c486b42bbb7c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd59bd0-d6ef-46be-a901-05e02b929ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105b2720-ae09-4995-8dab-b512b903c4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ab0ec4-beb7-4daf-8924-225cccba0ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b86bc86-9d98-49d2-831a-9b3dd51e6687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eba2bd5-909e-486d-b94a-09b85e1def86",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a74e75-4ca4-48bf-8b16-9177276c5697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d028e10d-96e1-477b-a3c6-f94c4ea23e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b56b29-9837-427b-bbc4-f626430f757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09a0cfe-9e42-4b68-95da-60da19a95668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e987b5-9e5b-4c2f-a8f5-aa86af9860da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a4caa4-1b52-4c80-a8d2-b162f1161251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bd7369-2438-4c22-83c5-b3c1421eb211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45ae354-0d70-4710-a89a-26a05d0e7d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29f6d3b-5d5f-4138-a534-dcb60efe1dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ec5d8a-e583-40a1-9c98-3042bab14cb8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a2913d-3c12-434a-afc8-b8395b5f5440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff446002-ab00-4a16-8dcc-0d122f7cb458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4becb202-ea0c-426c-b4f4-a51206a94f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd63d316-931d-4e0a-afa9-14132131d9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520bf8f9-4c4a-4228-a4f1-0a2f386cbf8c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea1aedc-0447-43d7-9319-7920ddd01c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6098ecc3-d072-421e-aa26-bf8588507b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed11c5df-4b13-454e-bc9e-a4f4afe5d7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67cd03d-30c8-40d4-9589-68f370ce89b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1949e125-867f-49a6-83dc-73f46a303981",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388a209b-a7f3-401a-a99e-742fd68774f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5113c15-b2d2-4a47-9d11-736df317f565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f7beb0-7a41-4426-b934-aa062601733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3893f5bb-dc92-4fdc-9cfa-2ca9f7668c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd9849-6f96-4ce6-a428-8c6589921015",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358f3db7-e6b4-4f64-9127-993ef4d06456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349f5283-df92-46b8-ad25-c8bdc0190ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa0f451-1936-4c7a-827d-288a34d964e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "493254b0-007b-4376-a013-5409f99077a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da033642-8d58-4f0b-83af-31719b692faa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdd096c-66eb-433e-9145-599f5d8dae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0912d0-9b8d-46a2-adbf-15313231bf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcf4357-70c5-434d-bc72-889219325a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b83ab22-30b6-4e76-ab74-0f6d3279103d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdfd587-b5dc-407f-8497-2dcbf5bd7a03",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aad1bb-6065-45fd-9dfe-47a6bc92a949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fe60ed-85f3-402f-a074-124817d85b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93b3ed3-8391-4520-a992-f5261fe7c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e6c2a2-7f76-4779-a18c-12901c5f4677"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c465567-1ab9-4bc6-9bb6-281ef11e8593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab890955-f5c4-4810-ae3a-ee0b8a151fa8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060d97a5-41cf-4a3f-a86e-dd597dd83e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "88ee5c8a-116a-472a-9025-e085e0fe6f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ab88db-3c46-4aeb-99d6-e737391b85ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c9bb184-0e8b-4842-9e51-cc7536d7678e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a53471a4-0f6c-43b5-8c80-9cf6cf7af6f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "986b9ebf-2f3c-4a22-af63-f93de3e011be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d648fed-7631-409b-92d2-6faa69c47f70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64d266cb-7370-407f-bb84-d2148ae45e4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53520cac-df38-4ba2-b975-460525edd2eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af0bae6f-b743-4239-8981-14b1cf0fcd52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46fea7fc-cbea-4f6f-84dd-d4c58699931c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3778526a-3164-46a3-84c1-2275c42dda6b"
            }
          }
        ]
      },
      {
        "id": "6715f235-b172-4f72-99cc-cb3039eff6f8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "06762c46-e810-4895-a3ed-7ce3f5ae6a0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f532503f-895d-4a06-88de-1e9899c55963",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d6ccbff-343a-41a3-bc89-05384123fa61",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3781bf5-1bb9-4ee4-977e-99bf23ea31d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51bb9de-560c-4e3b-8c4b-27a5f3ca664c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaeade8-2aa4-4b77-aedb-92bef72c7287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b94973-13bf-42f5-bf1e-a4fc5a2a15cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e64c235-135f-407a-a03c-d38829007ad2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4f6912-340e-46a5-a4f5-b77d9883ec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027caa67-b075-4775-8541-9baf31c5ff81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b47e9d-d26c-4bb7-92b9-49201329e8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21fbcd3a-f27f-4eb5-b33f-5699af1d8e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a79a4ed-ade4-4892-b2ce-4156eeb3d7e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dfac35-b65b-40f6-a95a-6f149deca61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04de19bf-83f5-4ad4-94d3-c9123e913453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd565e3b-0134-4879-94ae-aea2a2151d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "947ebe2d-1be2-4c70-a8eb-143e641fe077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235dd7cf-7e08-4e21-828d-d1c90fac3d31",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae1aff3-b38c-41eb-b744-78fdbfff6963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aac7fa-c1a9-465d-adf1-2f544c48fdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22627fa0-de81-4d74-944d-b3ed0c6cca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02f8332-df86-4c44-9638-a101b7376049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd09f1c-4e1c-4f9d-a258-77c0c6164ac8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f66415-cad5-46fa-9264-f11ffd08aca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b25146e-cc4e-4415-92ee-8adfa48816ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6af856e-0f90-47bd-9154-bed8b731dd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee053abc-e172-4d7d-b6b2-61b0c5604176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e36c32-bbf5-4dbb-9857-59def2e09629",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe5444c-c2b2-48ed-afd3-1e8a58477fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb3e778-d061-4f90-8577-21bd66cc992d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc167ad-f6ca-4c49-8cdc-35ceb3287874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd2e167-9feb-49c7-962c-0229e5adc7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a02910-9872-42ec-8485-3104a8ffb25d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed54604-98d9-4c30-aa66-23d7ad85de13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9fa1a0-e7b7-4b87-abb8-95c86f9c59d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66a5122-8d43-4568-9297-758493cba946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f43573-9742-40fc-8441-1e58a5bd7192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f340c9a7-5c0d-4285-9d13-ec596c213fbb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cd7ee9-cd66-44f9-9509-c0b57dec2698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f52b28e-9764-43e1-8775-118bf7055653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac4e8e7-0459-42dc-91ac-e388635741ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9141cbef-312d-4c48-b05a-66b6995ca081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35456852-15c8-4331-9583-fde8b1f8ef95",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66185b96-0b8d-4eea-b0b4-fc218ac43f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4be2c68-0388-4072-8c72-6b29e4136477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c16399-3fc6-48ef-8a98-650f2fab1b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a06208-b00d-45f9-93dd-810f22674989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a3e548-acbd-45b5-97a3-aba0a24f1c2e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151af5e4-1c51-4043-b17b-25e1fa6ce038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512f216a-f0b8-46aa-afe7-c88e055c073b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26efcd74-b2b2-4b25-911f-5183b588a945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a335c908-9a15-426f-bc2e-67848b494fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97abb99d-f823-4fe7-92eb-b667a34b26a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39543345-f35a-4ac5-b753-32a9d77d07f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0994474d-150c-45fe-9082-4426f21b344d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c04906-c30e-48d5-8f57-ba6d746b3267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "94f5f89d-dc36-4ec9-9074-f78c864238ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2453431f-86e0-4033-8a3a-6237fab028d5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbb25f1-9da0-46d5-9295-5868c462c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d219800f-559d-4bdf-8212-a37c62e9d7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870033d-785b-4170-9831-b3ca25f02514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49f45dda-f5d0-47d8-8eea-833510de8416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c926e8a7-88f9-48db-9076-61597e363b69",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a93ca4-1ffc-433a-ae50-fab71bf35a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cba369-d41d-4207-b560-8685b3156e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520585d0-3a88-411d-b06c-05813cc01afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a2a344-9589-438b-ba98-e22bd1b3f878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52fe40c-7dce-434d-ba59-250b2064c992",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440ad195-a2c5-4e84-8cb2-5a8673691069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9c59f7-1892-40f7-97ee-ee086c7f9bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef86444-49db-4214-8915-a0a55307b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6adb8888-1351-46de-8a46-c05c3a99b07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf67d49-1708-4960-b104-51e174fe2a2e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2b9b0d-303d-418c-93c2-363e770b15f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6a8284-be22-4c55-b353-007da65cb618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5199315-8f7c-4b6c-89dc-dd8f51195690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a3d70f-fd65-4aee-8c6e-0881a18954eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c580ca93-a850-4ad1-9056-135e2492ac3e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35be6524-8913-4cd0-8878-c3c135387de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82cbec9-ecca-4089-9be6-5d6c6dff891e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3baa7e-78e2-4df2-85af-900b7d7deb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceed6cae-20eb-4b26-9262-8760bb01fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4c0817-cf80-4999-b5aa-f0ea8fa555b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fd0a19-5fde-4af2-b88e-67464a77b8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40eed29-035b-470a-978b-02a50d304029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaac2309-f890-4e57-85b5-e08b40a38c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1cc929-5dc3-4257-a8d6-a1dc76b099b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b718dc7c-655b-4d83-bf48-fa624e4f0fe2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45190fe8-14cd-46de-9ec1-bd07198130de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6d64a6-e134-473d-ac94-a816e4fce186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737b9a9a-685e-4bb0-876f-58b83ba4d1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aba3751-1c19-4ecc-9c43-675a48817803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e71d6c-9e5b-4ce0-bb3c-4d84c62c60a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888d3ba4-8413-4ff5-b188-9cdcf7221014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d1af56-e0d2-4754-9cc5-beddcd484d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d585502f-e3cd-4e0f-be61-9c6d8b25e314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd46fa1-df2a-43e1-a511-41ea629437e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8418fa-06f4-4bce-8d24-7953fd0b2bcf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff00b31-7d4a-42c2-804f-87d76e40cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eda17f-4977-4cee-b22d-403fd5147df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47368202-f1db-40f2-9947-60c6ac9c13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b88b7e-83e0-4c8a-acff-8ea86d4de81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d288d0-1f25-4efb-a36a-b278aa137dd4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a437a3c7-3f2a-44b0-bcc6-75bcf7dfb54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a9097c-e83d-4e80-847d-cfdb55ffd56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def60ed3-6d29-47d4-bb6e-e404d953c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d628e862-6815-44ad-9947-6d782bad3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cebe1d8-b420-4be6-b58a-a8f50f1a1dd6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ee4f4f-e66d-4b06-bfd3-0bf9eaaf5c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ed66b8-2ffc-4b11-bbf8-47989f0e17a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadaccfa-222c-4ed5-beea-94c24d36b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "781b3528-e01e-4b0a-a238-fd2edc911e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201fc048-051d-46fd-96c2-cc7b5006828f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace9342f-b498-428c-8413-9588b5519559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21d50e0-3324-4f55-a852-3bf7effe0c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c74755a-d8a2-452e-8985-b9e2797d77e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c6be02-28c1-4210-b3a1-9a9f868eea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ee0ff3-01a1-4766-ba9f-0954f8586bf7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0936b60-8d07-4500-a137-8cc1cc7eb07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a178ea6a-acf9-4d84-9d79-e5f016c77b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068b47ec-f5dd-45fe-bd56-ad6465bd16a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f9bec5-5bc5-4cad-ae71-54656045b06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9693b0b-3447-4074-b800-daf5b20a7277",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91197ac5-e3de-404d-9b7f-945648a88b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab12b7b-6f5c-4f31-9e03-7d423b0686ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c0b585-9ae0-4e30-ab70-9bf5c60ef160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f7ee59-e46a-4b29-96d6-59845fe7e10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8848ee8-5c25-44c8-b646-b09a305eae2c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48185426-88cc-4173-80f1-5faa548fb95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bc8bb8-aed5-4762-b091-5a565c66b751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb58e80d-61d9-45ef-a174-2c8466ebc684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3366713-2720-42cc-bb04-f427fd0b8ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e42c51f-16aa-40f6-8f03-fe0c8827823e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d951c5-0153-45f1-88b6-820a2429ae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d35596-7ea5-48ca-a169-a19a9d9955fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249506d5-a5e4-4826-a025-5d9a0ff3971c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aff131e-8b77-425e-874e-9b0dd2c95953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919ae806-5850-4e35-955d-1967bae3cb3c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3813bd8-4793-4310-89de-4c097b81e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdf726a-bf2d-4d6a-8653-b979a3ff7e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450c23e7-8d38-4681-b401-9d791316155c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd63070-0396-4a08-83e7-a374ed7779f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7a284d-1c81-4be7-ace6-74d145cb2ce8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193918ef-f654-4435-96a2-045b6dbe78f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091a9c5a-ade6-45f2-8d53-c508f4270df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07993cb2-fd2d-4307-a62c-93fba45fa58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2cfdcb-7109-40c2-8fa2-e5cb06a29758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6f7d8d-289c-4112-a76a-756d65f89b21",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c7386-f72c-43c4-a358-a0dc6ad205b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c530435-42d6-47a7-9fb1-9f430d09f7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e632fa7-b000-4e73-8527-8f8c267f5ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d212ab-0863-4788-bee9-aca9442dc374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff90594-cc06-4ce3-86ef-b5556a402137",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc298f3-d0e0-48f1-b723-44306790ef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6083d8d-1ac5-44d5-9092-cd8838b0d7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729576f3-735c-467c-8911-5b9b16c5bc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91dc8512-3eb3-47fd-8c3a-d79fd82bb00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825068bc-b33b-4eb5-96bd-79aa42973369",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4375d5e4-c38c-4c0f-8120-05a2917435cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94563ded-accb-4f26-9f66-0e85802c2a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adb9f72-73c0-4fbe-9f8f-00ece94cd1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40baa8e-6875-477a-814e-be2635cb8c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ae29b-0291-40df-95e7-872c97ee8d30",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dc5d4b-7a12-462d-bd52-5772fc733509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ee3e51-783a-4c1a-b089-94e26c799b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55de1655-4988-4531-b47c-ee726dc026da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08397712-badf-4d84-806c-67addc67bcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dba1604-6c01-45be-956f-b43468d17e08",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36565ac-9bc8-432c-b34f-0d0c2ae1c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60508b27-bbe7-423a-a08d-71cf90e5d29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b1d98d-22cc-43d0-a453-a453b5b17a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9787148b-a202-412c-a7c1-c23cb97e3ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f176c2e7-1e63-4bbe-b924-f04ffccf7785",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce9265c-908b-48cf-880f-8166f9c7eecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd3a463-5839-43bc-8b66-d302fbfc6ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac9fbd9-f222-494b-92f4-87a523637f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "977b10c4-44df-43b5-9a0e-078341eedaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1d378f-77a4-43ca-bf8f-8e51e7cf7dc6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fff478-ca84-429a-95da-fadee4468e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87fc779-15b4-4bb1-9407-195956404faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27520b93-a986-4407-a513-e71161c26f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10639ddb-c6a8-49b0-8d48-4ca495ec76fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54617c3b-7da5-47fa-b5cc-2d7f4a01dcb1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdef747-806f-402f-81e3-0aa97dd420e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479d5ce2-067a-46d9-849f-d553ae7f4826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44a841c-01f6-4fb2-b6ba-beab9c8dbc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2809d189-c336-4934-b3e0-0d7094131215"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "080840c7-3f3c-43b4-b063-a1dda25491a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4586cdcf-79ea-4d0f-88fc-8b112fbdcc46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd458c6b-91f5-44d7-98c5-7788ef34c292",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "794b93cf-ce3a-4c3a-9870-9ee1ed764993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0674828c-2ae3-4fe0-9a4c-a892640dcae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f497f23-5dc7-4457-8230-48e836b74cf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61f902ae-0a55-4bc0-a080-4f0095f0f8a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3b3d63b-e678-4864-925d-ff45a5a7dab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b250e614-e8b4-4913-9ce5-4cb64bd38625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd075a51-1a4d-4c7a-8ab4-9208887e0061"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f5651af-0cfa-48ad-96a2-2814444160cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46486247-0b17-428e-af55-68235672e601"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7111fa3-b497-45fd-a306-0787b3eb5374",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "203c9072-07fa-403b-9e9b-c2cf35a69d46"
            }
          }
        ]
      },
      {
        "id": "152242c1-1c32-4d4a-9246-748852545e85",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc78bf8f-fba1-42ea-9955-2b8a3ae95e41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88d56168-2840-4547-989e-53daca9f3ef2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58f7ddcb-412f-484f-ab79-24b2fc3c4855",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1ddf5b-852b-405c-8222-531cf913c525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23283299-7047-4c00-88de-de12af2f26a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48d51ce-6e0f-4f24-a9c4-1ba7e543a918",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1c5075-dd5b-4eea-8868-734c7a2e3db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d358738-7650-4f7c-9b06-6467b095f04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7634e711-cd45-46a4-a93c-6482ec4b2bab",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dc69e2-7229-4d9f-ae93-8fbb67efdda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656bc973-ecdb-4c33-ab8b-793f0ba8c164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb876901-c785-4ac7-9a98-811b5b09c209",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca5759-0925-42c1-a452-0f68c8a19d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38053212-fdd4-4663-8030-99f5895fbbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f67d68a-e4a9-4f96-a14c-1226ae71961b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ac1d78-b03c-4b1e-a0e9-da6376f9d1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b43eed6-c7c8-403f-ac69-799b59972997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e502b3a-69ec-4212-9eef-62fb831ed98f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d7445-01ca-46d1-9513-682d2c9bf97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc3c976-1e7b-4f70-8560-ce26d953ebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf2dfe-e598-4f79-af5c-1c5433e4f86c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef7d43d-4f48-4560-9cf6-d00e3400f752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4102988f-2bc0-4491-8760-6d6cad6b9e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223a9032-c88f-4dc1-ae54-9760268fe16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7faa8663-b74a-4cde-b04c-bddb07d202b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d892dd9c-d6ee-48cb-90b2-50a48e793824",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367bb57a-9538-4fa4-a7f1-1fc145394e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0868e9-c055-4b1e-b2ff-165d5c7c5612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13626212-9623-40a8-b81e-7ed569396d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6616b3ba-640e-4634-93fe-ef23e686ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673de7ca-3236-4973-9a66-545433b2c176",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e27a21-3f3f-4ac7-9ac9-8207c4ff50e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcbae0e-accf-407a-8944-7878c0657d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14198035-8ea9-4c7d-9a80-7470f6f5d2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e58f3d-3157-4687-bd42-2b0db31b854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95160974-7a18-4685-9a97-5f78f12b2906",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523fa71c-d493-4a0a-bc70-f6e9f82e32e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c5f292-a03c-49b8-be43-f5c4be285057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edce79d7-7c9d-4353-879c-06f7735da602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89e0952-5f25-4866-bcc7-99044fc4815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11bc9f6-8906-4a8d-a53d-c1ea4ced3f15",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175b9294-39f7-4f37-b89a-8b9068415c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534c9dc9-3e91-4bee-b72f-ad5edac8348b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5644d6-4eb0-49c5-ad70-859c23dfbf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c69695-6583-41d8-8ce3-21ac265325a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271495c3-3740-480f-9c3f-b49876075229",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e000ff-9c3d-46a6-9dc0-110d30a750d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ffe4bb-4aed-4b80-8c62-ca29984d4c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edbb501-ade8-4607-8643-e120647aa5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267f34c9-1689-4ccc-af94-e4b88132438f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bee636-a4f2-4552-9136-8ae06a4b4303",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d19e02-2980-4bfc-ac25-1a4c7f1b0768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb86070-e235-4aae-b79e-94f4a77f87a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d82c56-01eb-4f25-951c-1e678d56726a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035fa531-1b1a-4567-ba37-26c925a8b906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf3d75e-e342-459b-be6c-2b79faa033ef",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13142d74-46ef-4d34-89e3-8ceeeebc9974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718e54ef-65d4-47db-b040-333bffa4b321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a713421-0315-4139-ac48-04f7dcc829e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7641ba2-37bd-49e4-a558-49ecddd9d4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727a2080-b1f7-4a8c-a122-a8f5cf6c8027",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df10ede3-01d2-4369-afe7-3d3c70ceb936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4907e418-872a-4d6d-ae6f-c25391734b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0df9ab-5ccc-4b19-87c4-cf05191c55a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47e5145-ef08-405e-8e2f-e7e453063682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2016ea2-a171-4ad8-b396-f397ebd735d6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701559cf-c308-4a13-8622-e3e5b0545d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496fc1eb-7cc0-42a0-9d32-ac0eed69bdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be94867-37f3-4a74-9865-31ad106fce1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a6484f-ebc4-4745-91a6-3cd361f23a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa4ed7-0a05-4e10-aab2-fb21049d052d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455be630-a216-4bf4-ac30-c6492be34cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0fa2a9-d25c-47e4-938f-d0726f298b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4b9059-d94d-45b6-9701-869009e5b565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a404d4e7-d1bc-4384-bd40-8ca01de559a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509cd35d-680e-452e-8956-5f8ca7cd71c3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec15909-98f5-41c8-85e0-de76fb12e22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe86acdf-6a21-42f8-8336-f64fad268269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd99ff4-86d4-474a-ade0-5edf79242f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa35473d-4363-40f0-8e20-4c7e4249dc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875e63ef-b5ae-46fc-be67-0e6a06ef88d2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5220d7c-a39b-4331-8092-ffb022845bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb668268-59c1-452e-82b6-afc19c6811a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ce23b2-f546-4a26-9dbc-1a83be5387be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdb7836-bad5-45ff-9fcd-9d0719bd038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c95c10-65a7-4d08-8fe0-91a98a264b50",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3fbb3b-893d-4e1d-a334-e7152042255d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78a279f-5703-4917-8690-6cc6cdfb3ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db567d77-5bb5-4d71-b6b6-7c77b94afc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3be844-de00-4be5-83d1-9c5ffd4865fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63bc558-446b-4900-af7f-cb11a089e1ae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c2446c-17f6-40c8-b9d3-b8ddb894a78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e393df-1204-4f03-85a9-8c42b8a23e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71801b7-ba03-483e-9e67-a2c5d3803104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e69ffad-5f6a-415a-add4-35f6626676fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550f2d1-1056-438b-984c-34c6d3a182f4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bf6a24-a163-447e-b317-6c666506eddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1ee201-7679-4676-aa37-bba6959c6e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8721791b-84c6-4cf2-b37a-aa77228c5883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751ce47b-9a4a-4e4b-b34b-0041da0d005f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe98d991-b766-4a2b-8367-256d7531d78a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a245e470-b6c4-4c3a-a48d-c8fe06a4042e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eff8fcc-787a-49a6-86bd-20f4a1cd0c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b2120a-a0ea-4f35-9f04-a33b6055704c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d30870-d785-4c02-8d74-529dd7b15beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d94e123-8548-40df-a4d8-4c8ae1884060",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739f0b50-7e35-4172-b1c1-1d3f31ce7133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b922e067-27fb-4aa1-bcf3-b570efc9ec92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89ccc5a-6892-469d-9cc0-2fd0d9797992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b124f466-f4d8-431f-a9c4-b980ee31fb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47fa37a-faef-4963-97fc-a2606805034a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a782a-6584-4dd7-86a8-501d3cf2fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbf3cff-47d4-4557-bb43-75c8b04a4721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80570bff-2209-42e0-b1d8-7a312cf953be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b85b6a-de90-4cb1-a902-b96f4f9e0cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92724a7d-c790-4c09-8565-7e0dd7be8d6d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329967dd-4d71-441a-9533-2d2a946a1a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a766ac3b-0996-49f8-bd0a-ff5cfd387888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24d8a39-39b0-4cd5-8a9c-3b799dd52b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc5fc7a-a72e-490d-8f80-2acb91f6c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf89e5-f154-4ef3-a929-f4ed33b876f7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5b0b4d-a70d-4cb2-a6c0-306f91b91e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "401ee725-3990-478e-b998-2bbe4fd3ac5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b5c531-846c-4408-95b9-f1325622b6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed57b9b1-c35b-40dc-92e9-d1c1c5e1714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c325d475-8bc7-4983-9184-28e52f497faa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659e9567-7361-4dd0-a294-ccbb66122096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c2a806-47e4-4697-bebb-fdb5b9b567aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba007645-5798-47d0-8148-89fa7209118a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1225e04b-51a5-41f0-b813-345d48a2398d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61429d7-2b77-450e-a3b6-e405d42b5a62",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb3fb82-4079-407b-bdde-903104e62c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eb2b42e-9c11-4888-9d3a-08f54e185a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c371952-0ccc-4e8b-b69e-5bd9194d4a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c85742-5caf-40ac-8a5c-08153bf35acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea163d87-6bc6-4877-a40f-be4f2782710e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b68695-f262-4f42-914b-46262ae67563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc22cf03-a20b-4a49-a960-bc2645337e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7da035-1f5f-47fe-a50a-7e9377587a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa537fd2-e99d-41cd-b209-9fe8b896c819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c835a0b-1617-4320-83c6-5e2c343ce5ac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22f1e2d-ac8b-45a0-9a46-b22d77aa340a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b656f03-5a3c-471d-a9c6-aeaeb047ff68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcba015a-aea5-4162-a3f8-87d24ca594b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db575d75-e23c-400a-9758-54dab2423092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8911fe-45a4-4265-9c0a-c6768b18b460",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e6f1fe-4457-4f38-a69d-fe903dda53ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91413e21-6b5e-426d-b208-d687ca43f3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c601ce-7f90-4107-8cb5-02eb638247df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaf67fd-a2a9-47da-a2aa-1c7668cfe05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e11906-19fe-4041-8f4d-2410b937217a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e053c232-0cb0-4a54-81d1-618b64934de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0952fe3a-7b99-4190-84f8-4b227c83f73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46a5d7e-f52b-4de2-91e2-d21632bed34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a948e6a-4368-4447-98f6-47f622a886e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d0e8e9-53c5-4e73-ac70-5511504839a0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bf93cc-a6aa-4f7f-a948-918fdf6d33c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad66f748-f258-45e8-9590-44c675ce0980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17fc002-b460-4cf7-93b4-b1d3b8f4f9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d8f583-2c22-44bc-96e9-48c829a86446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e8131c-e385-47a7-8fdf-35a7d9020e62",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09e7631-9744-48fd-9c94-b7aa87294020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c93e9ac-0683-4603-a491-32e041820cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56395b6-09b0-40d9-9393-a259ceabd948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef09b414-90c8-41aa-b113-353647ea76ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1573bae7-2a96-441c-8d38-eb7f6bcb28a3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4892bc8a-c771-4962-af3c-be656f6086c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1655d2-0ed9-4e66-9619-6a9332eaf39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b43f8b-92c8-42e1-aec5-b6e4035f202e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411fa888-d565-4776-8b67-4f7aecec3f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b116f9-6e3f-40a3-bbb5-90aa186232d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebad5f2-c3fa-4283-98e7-ce76434a0350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0064bb22-28de-4b7b-8d3e-8c1903691776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1334f6-7757-48d2-9e9f-cda11c6dd51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ccd913-3570-4f8b-80cf-d5631bd3b4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e06426-2dbc-4139-aff4-fe4cfd57092c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8963a861-ed3b-40c9-927b-cf8d643e7095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0159c0-f4aa-484b-8dcc-b6dfc7567483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aca335-4260-4b6a-81db-1fb87cf97628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af885777-82ce-4026-bbb7-b8d0e8087f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea6c4a4-e541-4be1-8d7a-9d6cdcc1812c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b596a09-f3fb-46c2-97b1-95d26a6fca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c28971-63cb-447c-b299-bac446b8c79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a175ed9-a0df-4f54-b0b4-e8a04b48f3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e1b026-aae8-469b-9b61-f3fbbce1aea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114bf0c7-14e3-4695-b3f0-ba66cefd9837",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209594d0-1079-4b20-b547-4011759f3cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758f737c-972e-431d-8497-933ca20b2ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335eaa31-2e40-4ea3-991c-df0abd82c428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009b7fee-6c23-47b6-b5f6-f91ba3037261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03912b79-76dd-4306-a53c-973477463cc3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1a1f59-7b8a-4a79-ac42-51760d8ab0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8642fad-16ad-4bf7-8b7f-ec2277b4b2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63708dd6-9f4c-4697-a28f-b8db43fc87a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82f6d84-c8ff-4e74-99b4-b1bad78cf762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9bf6f1-3f47-406e-bd18-a30eae3a3bed",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9be7f9-9fff-4b2a-9e22-7b8785bdb36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8411149-6136-4cad-b0d1-7fa1b18b3b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849acdcf-631a-43d4-aabf-300e145fe46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f978fb-d350-4c78-9c28-a97182b620bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1927fbee-0e91-4791-9990-81cc899d3c01",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57467f8f-bcd9-480a-b318-69dc186d4c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcac1c9-8ee5-49e4-ab9d-e49e35c60fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7abc4b-e7ee-4357-bd94-3a5b0df859ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95431e31-7dd2-48e1-960b-f129be31f9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50db9a80-2d0b-4105-9b9c-7ed937aba413",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ec4ef-a040-4414-ac3b-f51df17d83c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d620f5c-6694-4fac-bff2-60b0e9c2ed38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2cecfa-4224-4a35-aa99-da00b0c68f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2bceee-d3a1-496b-9963-173477b6ff08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ad3d2a-24e7-4619-b8a9-395c8ea99006",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad5d841-83f0-4fc8-9f39-92c10201a27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8170743c-9fa9-48d9-b6ec-82309856f228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc4342a-7763-4885-9871-ad2a0e78d7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdddac55-6f49-4079-b070-b858c7ad9047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8ce298-0a88-4b71-9a93-bb8180b919e3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5723c2f-0a54-480c-8391-64d470889e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00569964-bb86-48c5-b3f1-afc220b9ed79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82613ebc-d807-4800-be6e-fa8be871f936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0813ec-86f6-4ae0-ae8d-d1807d1097af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5afbf1-c7e0-48c5-a0cb-532e3adece68",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcc0158-1476-4bb9-8708-1925453c98cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1b10cb-3f38-4a1e-9981-534d677ee6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc8bd8-841f-43be-a1dd-29e00ad201be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19a9bcc-77df-4cf4-8855-2e061cf49d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bdf7b5-52ca-4f55-b356-930ca808ceb2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b2509b-0400-4410-85c7-a1f5e671363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3a5ec9-264c-4e71-a716-b1589c87b012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e19ff2-1646-4e29-9412-8f51dd48458d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61785bb7-79d1-44c8-a8ec-8e50de581a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07a8330-d474-4c52-beba-9ca9b9b5212d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e100f7-b85a-4fa1-ad49-2595c05bc508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e9e74e-bfe4-4d79-b93b-c19c4d6a0c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a4ed0e-c0f5-4d6c-8314-9ff8133c9797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adda8653-f857-412f-b61e-be7b5d7fb453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b38ff85-a293-4f3e-b040-0efb141889ea",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533c1fbc-acee-4c9b-a4c9-da004d06c4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4fec6b-4e4a-4b2c-8862-ffc5babb5121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c260dc99-9425-4d2b-936b-3e12d94570d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e4770f-fce3-4f28-8c12-63c3d7aa8f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f668b3b2-c733-4bfe-a997-f00b8d15a7fc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1cfc94-0a61-4d42-80b5-dc88d77fcfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac783134-43f5-4a8c-9726-8f35cec42af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aeea2c-0c8b-4f4a-9c61-5a84f816fbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50528374-6b37-4715-92a3-d26052dfe09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79393dc7-6236-490f-b756-3dbbe47917fe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10d31ba-7275-445e-8128-bc6912c27a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7060a08e-8986-4af9-80d9-add9b3093b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e845fa3-2124-4dc7-9d8e-bd9d27bae278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6be1362-bd2e-441e-abf7-83c887e2c14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aa0d9c-34c5-4e65-afb3-ded42688bef5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988abb03-d5e8-45f5-8a05-b55d6cf5291a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1252aa-6843-49f5-b84f-593d29458cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e83279-d654-4818-bff0-f8779dec5773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4ef198-a788-4bfa-bb3d-763d429dfe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b746c37-020a-4ef5-ae9b-263409d3dc4e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd4f2e7-e9e3-4030-b0c9-30b1edf4780d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11edeed0-dcd6-4ef4-90b6-02a066234d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b85b12c-7372-49d0-8823-c4a8ac39071b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cc9561-e3b8-42e9-a42f-f9d0fa96357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c50c47-3696-4ef2-a690-3273b8a53015",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3228803-f468-4721-8df8-bd8c3333cb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc786ff-82cb-4a10-82fb-e306f6f2fcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2688691-3847-4b3c-a783-c01d45b11948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc586b5-aa88-469c-ba1e-884a97c346cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bc26e0-028b-4191-91a4-4375b59b8484",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8924e5c9-3f99-450c-9b84-75e67d70000e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73aafb30-d22b-4268-b1be-ba25e0886d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9c2316-2bb3-471c-bb8f-bb354a315c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d163aca-a022-4c9f-93e4-14c5d42b7241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e71a097-0f14-4202-9c02-0f4627f7ad4f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b2e41a-66bc-44e2-9dbc-a504d0768b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1c1d01-46a6-461a-98e7-f02deab33dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b020f75-cc6f-44e2-bcd7-15e9e5b9a114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ad65cd-fed3-421b-8128-4534780947c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a5dc15-1331-4c45-87f1-c206106768be",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff47f59e-a4f5-41dc-a3a0-414ee25883ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb0f574-fd02-488d-98da-6d6846aa0134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ca3d81-7689-408c-9acd-10a57c524230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff0a6f4-8453-474d-aaf2-ab994f157ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80627ccd-bd98-42ea-a794-cb8b70d1be2f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b468ef3-fd14-4fdc-9ef9-68a7d56830fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907475bc-b96f-46a2-9192-06b516f82cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035ec482-e1b8-440d-b627-46227cf912d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d3fdd3-7a06-4753-873a-1dd133e40e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3542d60b-76f9-4be9-824d-d92a7def34a2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae532ba9-739b-4bc0-80a7-395f390abfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9111db09-aa42-4529-8bcb-5993b4c52c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4ae3f9-110b-4fd3-89dc-164f22e942c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f602cd99-9995-4c75-a2d9-db49c06432df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a49536-92a3-4190-bcd4-d5940212d5eb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cdd144-059f-4ee1-a6a8-1e583b1946fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ec0b96-942e-4a45-93b1-cbad38bec503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e180ff-8516-423f-8194-a71c563e3813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6058676-593f-4487-b5bf-e0a874a6a802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9c57aa-a218-4030-bc81-edb490546359",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637723d6-712e-4c7f-bc4d-b11bbaec9e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe3bb3a-2bc8-45e0-b645-1b19212fb8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc258db-e3ce-4bea-b4c7-d04d80698058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3125d3c9-48c4-44f9-b64f-a7c99fd5332a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cf2950-4585-49ad-bb67-80c30db968f7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedd1c3c-b019-482f-b3d3-622fa04d185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc54bac-253d-4564-8328-b9813064542d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce23da18-8a8b-498d-82b2-c7580102e112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc86dc40-d0d1-4a8d-8d16-de1c60e51e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343258a4-45d5-4709-a964-4be27441e1d1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b740c95b-41ac-43f5-9502-063fce97eef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0628d3d3-661f-4ad5-8e85-84643586ee17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7a6340-2c4b-40a9-bf4d-12d137a691f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da19357e-c46d-4354-8e9c-9fe1ddb1970e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f815d2c-d5f1-40ee-af7f-5ce0e6de6945",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824a5c8f-a3a9-44bc-9617-9003ff6a9b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1157a95-e65a-4889-94ac-db7412348a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19343848-a8fc-4645-92cc-97d284525041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ece286-4b90-40e4-8853-c16fdf3ee682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7dddab-d03a-438e-b0f7-6335860a9f2c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac32ea-298a-4e7d-80ac-de933786e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c9e8190-fea7-4f31-80f0-56885be4118f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a978db-de6e-4f45-bd4d-ebcd352a466f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9826732-44e0-4700-ae2b-cb81eee2575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f58076-4ebd-4dc6-88aa-dcc268fe4d80",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1c70eb-bccc-4230-86d8-63e7b5521eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd479a1-f8e8-431c-9997-d1a5fc722690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306aedcc-a8b1-4572-b7f8-008efaadfcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1487b2e4-6127-4b95-8a48-ae78c9945a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9c5328-501f-46a4-bdd8-b0f622fac707",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929d052c-7e17-42a1-bca8-b9cf9e1e7845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1e8aa0-5a3c-4eea-acd1-9bd165106ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fbbad8-134c-4f26-96a1-b054419d6374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0ede31-e331-4e3d-8b70-0a5337e218e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851766cd-f02a-48b0-bd2c-71fe087286ae",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a395a-9cc8-427e-b350-410c4590db79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9b7aa0-42e0-4df9-a8ab-451a1fc0dfc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1972081f-17a3-463a-9dd5-6d6dd59d3a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0556c0-a48c-4071-85f7-00ca50541ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd9f436-910f-407c-8195-2eb9ca4c1aed",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce969b5b-9865-4584-a374-93e4858d1e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20d4733-209a-4f7b-ae1d-d541fda865d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d8a142-dc5e-4b1f-8cad-59047075bd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87abdf69-1ad4-4f23-b2e1-ba67317e9cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6870c4a8-c774-4add-9bd5-4e7020c658eb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4507a0-5996-43ed-87be-90c6942dda29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a290c17-cc2d-4ad2-9ac3-c3c7a97e8b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91119e7-f3fa-425d-8ed2-0899c03cc5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54db527-7564-4fb7-8a7f-cc51b949cc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20552fd-49d5-45e9-b6d3-bd4f1530c647",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec025d9e-42e4-4ac1-9edd-8940a2bef06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3a084b-02bf-4ad4-a6a4-8f6bd091831f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1e60c9-f53d-4fcd-bea3-aa46dac0b83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5834d8af-89e1-4ed0-8bd1-b7f92510ee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468d3594-d7bb-40c0-8adf-d52b369c9546",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7989a75a-230e-459c-9a6e-5ad0f60fdbde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad53a94-de4d-472c-880d-d7dc4ae0037a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74017f0e-f7c1-4b4e-b983-7a67392afd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2a6270-d917-46fd-9766-35ed6e33898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579dad37-f766-42a2-816b-82099ac99a2f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cb6b1e-2d2b-4032-bbcd-37d1a4d66e21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a20516-0954-418f-9387-a645877cc481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6d25c1-53de-4a39-976b-7ac327f76602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412ff8c2-3455-48fe-b738-0db74ec95e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee2df3a-ce11-4da8-b6cb-0c088f8f6573",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b42912-1aa4-4963-bb3c-caee5aae7b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa84219-1737-4e7f-a7e9-aa055137d379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c1354b-951d-47f6-853c-b75bb5aa2218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee09237-1c13-4409-b015-1eb4ba85b026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6499921e-4570-4774-aad8-e157fd7ab703",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0cbe8d-59d4-4859-bb06-90009bafd741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba1817b-8e15-4664-80be-013e35d4518b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efe96a5-deb8-4623-8fd4-b39c790c5eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab654762-a24a-488a-b558-102b908ac47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45551bde-b2f2-4e3f-b134-008b130cddc9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b5f6bf-2878-4014-972b-77869612b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f17c47-49d2-4ea6-ac2e-cbfccaa652fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459a97e5-78b0-403e-9677-2687438e284d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc0982c-aca9-4cd4-a6bc-051503ec13eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70034fc1-d434-48dc-aaf3-8179fa97da4f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8ed3c4-05df-42e9-bd14-bf105b6fac12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754f04f1-5ebe-43a1-93b6-cfd1f70981e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36eb072-9fdd-4bc5-b7b2-bc79d423d608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd763918-107a-4d42-8835-8346d9c0557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5510210c-61b0-470d-b2c0-114634d56897",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e96cc5-ba88-4dcc-92f3-80ddb1909a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f956e06b-b2ef-4fe7-9a36-9b5af19670e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d91191-5637-4c33-bf36-4c3f56c40e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46271e0-f3a7-407d-b696-3d1556deaac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f28d7cf-2d8a-4e32-8c18-e042423d9fa0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aa01ff-d452-4302-949f-ff755e18aaaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6046a11e-4bee-42cf-bdda-4f925d409d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4db5066-388a-4b29-8f4e-453398637cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f33464-9f3a-44cd-b090-1f937aabd61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beadd324-480b-4733-9030-04db59dfc2d2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa2fba2-18f3-4a28-8e1c-3422de1cfb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3ae1a7-e761-4f65-8283-5ece15d9ff05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03119417-dabb-46e2-9658-f86cdf726de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7ba1a3-65d2-45ed-af51-d99c034939e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30398153-5cd8-444a-834c-0e1fee98ba87",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6066bb-c705-46f7-aa1b-1d4df429f0d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97238749-f335-48d0-83e1-c7ebae5208bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3edf8a-717e-4d35-b8d0-00c20f3ab831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf3048e-6202-4996-94f4-38b33e76808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b20675-182e-4d6d-a8fe-98b207b26d8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5cf636-1529-48d1-a2b2-8e0566907487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddde137d-b993-42e6-b44d-33f4ac71480f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c80a81a-8163-4758-a0a4-3b903ca6b1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847f9801-8021-49ce-80dc-dc79127bf75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832594a5-7a09-435a-8c20-038185a22869",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0990cd45-8c7f-4b20-a69f-49820011a197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0809d416-c6f3-4ff1-9e34-f6f818faa621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfde045-382f-452b-b59e-b0bb220a0b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abb6b13-9866-456d-928b-6982464e6c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18969bad-603d-4cd6-b54d-8cdda41e9830",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d1ca5d-f8b4-40c0-845d-7d1ab3ebf703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b436bbb7-ddd2-42b5-9dda-4d56b18a92ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64a33d-6ad6-4550-8479-05b41a8894c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6c87e3-8bba-47fa-904e-520d4d1e357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c50fe96-174e-44ca-9107-919ee5f2a316",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5f0e6f-bae1-48d7-8f1e-3933b1fc7965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cfab97-7c3f-42cb-898a-e937079db586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566e74f7-754e-46a4-8717-b065c838a40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a74583-95af-49fd-85e4-3d9147fba557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d84c96f-6205-45d6-b5a7-f057059e066e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed78b19-871a-4f5d-8ea6-983ed9033304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105d2bde-2685-479b-b277-470cc04d6292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06049811-945f-465d-908d-b6724cca7320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2695dc-559a-4d50-a579-80e0877450ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0aac32-e7bf-4db6-9076-512d1a1cee10",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d638416-63f4-4149-870c-945484fcadb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65092b8d-6714-4e3c-ae98-54ca692c3eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f12adb-9a6f-4f25-8cc4-cd38a21ce944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9775030c-b336-463d-81fe-9c1a85b7abac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d979b2-3012-4df9-b730-b15a85546921",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923cfb5f-faa9-47c2-a023-b1fd5b06e473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc069f8-8839-44f1-b2d6-d55a38f3a6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88c2bb2-06c6-4807-90c1-64aedc9a4ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8d2bbc-32e0-49b4-945c-0f68470690ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1835b933-b5a7-4f7f-a385-1d7a9686a4e1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef342886-191c-46b9-926b-8e5e066c2cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead4ef5a-18ef-4eb9-80e8-d492e1a41233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86237f11-bec6-4d2f-b1c2-b93d22a8b207",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec6b190-d488-4604-9375-c5e11452348f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e0a917-c09c-4b65-be52-e4182306db98",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4335cf7c-d803-4816-aa38-18dec3b4a80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f427c4-635a-47e1-a29a-a74bad2001a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967b816d-bacc-48fc-b723-442afea6fca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1a672d-2a81-41ef-a678-f893e6b14096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06cef08-0b0d-4f02-a77d-4ff234366baa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d40638-4b97-47a2-b1b6-441f031a5d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba0b3ef-c126-436b-a4f6-e5d6cc7e3d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e2b3b-60fb-416d-b141-06c5b6cd6232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfe05ad-58e3-43c1-b55e-ca6970798d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bb6ed7-3ac5-4e40-a4e9-cfc08acd25d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c486dbc-a100-43d6-a1b7-872716218dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c927a4c0-5da8-4eb5-84d3-b8162dba23c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6db436-d4bf-4b37-a478-bf661bf4885d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ec8212-7c5d-4f4e-8288-c7e2eca22773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9106f9-bd5b-457b-bfbe-96ed1faa85cb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24ef86e-e611-4d63-9394-4c4e95776c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f857a1e9-d7e1-4bb7-9b53-89fb8cd171ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d53303-5082-411a-8de7-69db0954fcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cca86fb-d4e7-46a3-a553-0ec3233283a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139ca220-dcab-4953-afac-c0ad8fe93852",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80f659d-bc11-45fc-b5a1-d462c565f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85864993-b552-4180-8d70-5416ece63532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d6a4a-6d1a-431c-a10b-0a97c60061ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c97fa68-5b7a-48d7-8ac3-052adf662991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507cc27c-b051-4fbe-96bc-af23fb6eb872",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9885028-85f9-4c6b-b7ac-5f8fcded44d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e060a1e1-a027-4306-b4d6-b8a37b1f6120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52895f4-b125-44b4-aaa4-3d520345d18f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcee1be8-705d-4d61-abe2-a4adea73c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5512a80-9e9e-4518-9ac0-136d674f65ad",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779eb06-59c0-428e-b1a7-8ebd053f89f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a345c1c1-c488-49ee-baa0-9e8932edfa63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df4e00f-81ad-4426-bd3d-1be4ea4772fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e2b267-8dd9-4fe5-9607-3d2936f3e062"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f811f3df-947c-4bde-8e9d-15902378fee9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96fa2ca8-0e5f-4c4a-ac17-85af70338c6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e54a913-4a20-4115-be2d-4f7255492437",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d465604-85e6-402c-a0c0-299da6421e75"
                    }
                  }
                ]
              },
              {
                "id": "194b8eba-eba3-4445-b8af-c49429759a8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6419009-596c-4da8-aff2-36b5c6b2ff57",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a523c5-fc68-477c-a3fb-b9f82f8d7ade",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2bf2446a-f5a2-4392-9e54-d2fb870d8d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93576039-0c89-451b-8c26-f258c61a7b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c9c0fd9-2595-44d1-b611-12df13ad058c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7a5ccff-ed72-4a2c-9195-66611d555dc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "108311ae-90ca-466a-821b-a1e5d955ac4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b956571-07c9-4532-bf2f-c1a3fb5a2599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff4f7cdf-0cba-48df-9d64-d052c615e2b8"
                    }
                  }
                ]
              },
              {
                "id": "4cea8fcf-5ec6-42b1-9901-eb5d0d7b99fa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f9211ed-9b9d-4ce8-b136-1dd90be2c839",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e45d2bc-e307-4cf3-b7c6-3840646fba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "045d994c-b8d2-43fa-b0bf-9a7567b508ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388854ec-a8ef-4d55-acdc-df36ac6fdee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88917c1-30f1-47a8-ae41-88f8b47a3505"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a45b2faf-7a3f-4ae5-b10f-018e80daee5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c1bc1f8-5a56-4881-98ea-b14e59ab067f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff15c9ff-f1d6-4003-9fbd-d7c375dea1b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "15cae623-b88a-4756-848b-7d4da6d6b8eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1e6e591-2ca7-484d-b361-43f0ea46445f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab5212ac-2d02-495e-8cc5-1ab0b5736a37"
                    }
                  }
                ]
              },
              {
                "id": "c88447d1-194c-46c8-94b8-b2551c2915f7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b68dbb0f-32a5-497c-a560-1ebc9e8f0de9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a5216ff-4b15-4c4a-bf72-aedddb434c47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "046c5236-04b1-4e1f-93ae-03ba04aea0cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b577ba8b-a151-4b68-b04a-05e1297881b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1d51236-a5d2-4588-baaa-a369d5483619",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0b33c23c-5338-454a-a4fd-62fed9b1938b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e7c3cf5-1b75-4925-a2af-dbcb2d12252c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "334c7713-7059-45a5-a133-4bd04ddbdbcf"
            }
          }
        ]
      },
      {
        "id": "8e1c3f21-00b4-401d-bad5-a0b8a8d0ac0d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c94d8522-813b-4191-952e-1e66170b5a8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b75ecc9-154d-4618-b1d4-b34e8a41f365",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c7714a6-1768-47d8-ad1a-e841ff6d306b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7492f424-718f-48da-93e0-6f7527d1f389",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8ef961e7-3c61-46f5-9f44-b59d02f5ba3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad195b5-f86b-4f8a-a139-54a9385b8e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1ce9b46-89e1-43b7-b57c-c6bf3ad72747"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1ffbde0-b941-4b59-aa18-da5cd5f5469e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e7541db-555d-4fc3-bd25-7a995a1eac7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44574af5-97f4-47c5-ab12-fafed3ddfc74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6274bcf-d7b6-4ab7-9a77-01b29c0e1a06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56a5a79e-4c12-4fcc-94c3-d7921d02e4a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab267614-10a7-4e97-a590-05e6cc7c911a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e80e364-849a-4b7f-a438-0aa952ab8f9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4edc53c-8d1a-4bc5-bc32-4e7511cea59d"
            }
          }
        ]
      },
      {
        "id": "a2f6428c-b991-4347-8458-328e8206e722",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e887a32d-1eb7-4964-b18e-a5844c6678a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3821794-d348-405d-89e1-3235f3ac9f95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59f5b843-e1b4-430f-82ca-da40b1c8066a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b397f0-5a2b-41f4-86bd-ad07527fa712",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b951e9b-968c-4bf3-bb20-27c5b31183ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd653c3b-345c-46fc-9891-e8645094e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "077efdbf-560c-4a2d-8746-96f710b34dd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6967ef11-bd71-4be2-a12f-562c1d4fd721",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75cbb6a9-db97-4583-b4f5-e1636e6b1153"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "175bfe09-1989-4847-9d7b-015509452f21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "469bc8c7-8be3-41e3-b74f-e669ff9ff30c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a08653e-f35d-41ef-9108-482ec73f1d9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "177e18cf-fdeb-4ac8-a644-ff9722bf84b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73a4614c-a87a-479d-bf6a-ff3e213daade",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "038df6eb-8edf-41f9-9863-e86764f78996"
            }
          }
        ]
      },
      {
        "id": "2775b5fa-f392-4bc1-bee5-59396d23f2c7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8eede6fa-99b6-4b2f-9190-dda0c26f059c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31740b0e-a8fa-4afc-94eb-dd9cdbec8d61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee2a174f-fdac-4f2d-970f-350d1b25e5ce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1311841f-141b-43d0-b343-ae668ec2ddde",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79b35e72-f53a-4f2f-9a5e-248feb915644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef10d763-0809-4c7c-8a35-b51fedf5e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "723871a2-8325-40dd-b38c-aa1d6f632365"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "838787a2-10d7-4db6-a780-9de87a565cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d203f7-7ac6-4279-99c5-2c11969f01b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "460c0fdd-5c54-4cef-873f-e1b33efc2ec4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0488457f-3751-4fd2-8361-6b0f7be4e61c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc9d9c17-7b15-482a-a227-7da56c6f9b73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd298a1a-537b-4d08-91be-f07536e87186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1323deb-bf21-4609-bb9e-41f24fb13f6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9b9eeec-f8aa-4dfc-8af8-ae0c7b4f07c1"
            }
          }
        ]
      },
      {
        "id": "9c90e3c1-3252-4f09-99ac-9e80c70263f9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d603964-9d03-4c5c-8832-528355356787",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad436154-6568-4321-a516-e48f4a0c6604",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dbf6d5c8-c142-4c28-ad22-ecdf25240d19",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e93a6aa-9721-466b-bcc2-197eb810b65f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7847348-d57f-4af6-9253-19e748eff689",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.15789473684205,
      "responseMin": 6,
      "responseMax": 6785,
      "responseSd": 501.2240452036438,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702946169920,
      "completed": 1702946214737
    },
    "executions": [
      {
        "id": "5dac387a-8574-4234-8199-a7b5f8f01287",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a6c03fa6-7f87-40e9-8006-74e9e449cb1f",
          "httpRequestId": "df518f8f-f358-499c-8ad4-103dbeb2ebb7"
        },
        "item": {
          "id": "5dac387a-8574-4234-8199-a7b5f8f01287",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1c4f15cf-2d9e-414b-9c1e-214e64aebb17",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "29841637-14ff-4896-a950-7e87367fb5d0",
        "cursor": {
          "ref": "6e62a1f9-e4e4-473b-9f7e-5b5082bd23f2",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "480f4107-f878-4f89-a961-0ff6c55c3a96"
        },
        "item": {
          "id": "29841637-14ff-4896-a950-7e87367fb5d0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "beca1bcb-0262-44f2-bed2-b90da358c862",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "4fc663c0-b5db-4f07-89f8-b8c3fe4c4907",
        "cursor": {
          "ref": "e749a7b9-3275-4035-b20c-9064980b5dec",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "14b7020e-e871-4f8a-84b0-f4ee2801643a"
        },
        "item": {
          "id": "4fc663c0-b5db-4f07-89f8-b8c3fe4c4907",
          "name": "did_json"
        },
        "response": {
          "id": "a56c0c91-3312-484e-8095-ee64c68bd656",
          "status": "OK",
          "code": 200,
          "responseTime": 426,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f399befb-65fb-4463-9965-8da510a19ce8",
        "cursor": {
          "ref": "6983d212-0504-4f6a-9137-aaf5f1eeb499",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6e2f627b-c0e5-4932-9f9b-31d79f523d76"
        },
        "item": {
          "id": "f399befb-65fb-4463-9965-8da510a19ce8",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba9a2389-3841-4bb6-bbb9-f4080a70d369",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f399befb-65fb-4463-9965-8da510a19ce8",
        "cursor": {
          "ref": "6983d212-0504-4f6a-9137-aaf5f1eeb499",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6e2f627b-c0e5-4932-9f9b-31d79f523d76"
        },
        "item": {
          "id": "f399befb-65fb-4463-9965-8da510a19ce8",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba9a2389-3841-4bb6-bbb9-f4080a70d369",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7a1e01-b070-4b07-9186-79dd85bc0830",
        "cursor": {
          "ref": "066fe62a-11d6-4527-85cf-cdaab06052de",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d33826b0-99bc-4e55-b5d2-dc4dc3767c2d"
        },
        "item": {
          "id": "4c7a1e01-b070-4b07-9186-79dd85bc0830",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d7f98b3a-3c1d-4f59-8b5d-aada9a650c0f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c8e223-17c7-4501-8490-427fdbc0c7b3",
        "cursor": {
          "ref": "c92bf032-601c-403a-82a7-106b268858b1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0742d9ea-26b2-4ec6-9135-4b92fdefa472"
        },
        "item": {
          "id": "28c8e223-17c7-4501-8490-427fdbc0c7b3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bf972f0b-3d79-4e86-b0c8-0e440c1d1d1a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc0e2cd-877d-432c-9cdf-d796e7b7b584",
        "cursor": {
          "ref": "d5388eb7-487e-4457-866a-8a3a35b341af",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f8f85910-77ad-4b4b-9708-d8560dc63a49"
        },
        "item": {
          "id": "ffc0e2cd-877d-432c-9cdf-d796e7b7b584",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "508d010d-8bc0-4778-810e-529c8819aee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a607a9b5-e7da-4ddc-bb8e-b768089937b7",
        "cursor": {
          "ref": "e3a4a8ea-92dc-4e45-b84b-abc72408e26f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c48600f8-2d95-485c-9ee0-08397e909c29"
        },
        "item": {
          "id": "a607a9b5-e7da-4ddc-bb8e-b768089937b7",
          "name": "identifiers"
        },
        "response": {
          "id": "777db888-ffbf-47fd-9ddf-54a17e88dca5",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83892f5c-633b-4bc1-9405-5dfcf7c90bdb",
        "cursor": {
          "ref": "a449db08-b394-4f93-ba8e-df6e5a672553",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4a6802d9-1714-411c-b019-325d2df86d45"
        },
        "item": {
          "id": "83892f5c-633b-4bc1-9405-5dfcf7c90bdb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "41b78b50-99a5-4553-ab87-c60a9180afde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24650d8c-4203-45a8-aa94-abd15ec0ea0a",
        "cursor": {
          "ref": "332b88f8-a6ef-42fc-821f-99c0531511e6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7bffc9fe-06c8-4054-aa30-01765f391de8"
        },
        "item": {
          "id": "24650d8c-4203-45a8-aa94-abd15ec0ea0a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "526368b6-02d3-4efb-8cec-6c6b6935e3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304b707f-3fb6-4b15-93dd-d2d1ae995071",
        "cursor": {
          "ref": "79284fe9-4a17-49d3-a224-14ac99424081",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bb8e00b0-5e0b-44a4-a3aa-6f0660dfe38d"
        },
        "item": {
          "id": "304b707f-3fb6-4b15-93dd-d2d1ae995071",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0cb815ca-bc25-449b-9ffb-3886b6391490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3cae6-00ba-4361-9723-d7963e9ec271",
        "cursor": {
          "ref": "c6a89fcc-93d2-4b96-90a1-de12e1743d4c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bd476de7-d0be-4716-8267-12cd1770f1cb"
        },
        "item": {
          "id": "b1f3cae6-00ba-4361-9723-d7963e9ec271",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c462fbdd-6cf3-489e-ab8c-72a7874c72ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e992a3c4-b24c-4869-8a13-a3199dc6b6a3",
        "cursor": {
          "ref": "44568ea2-e4e8-47ed-aa42-c5b92f74ac41",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54c45f34-09a5-42c3-9805-d1b4c1c900f5"
        },
        "item": {
          "id": "e992a3c4-b24c-4869-8a13-a3199dc6b6a3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1c897e18-5f53-4caf-9f1b-d1e2526f768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294104be-ed3e-412d-a2ed-c38168921848",
        "cursor": {
          "ref": "2284029c-0db1-4cd5-9f31-5b1bd8153224",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a5f40fd-1476-435f-9136-f9f12b13873e"
        },
        "item": {
          "id": "294104be-ed3e-412d-a2ed-c38168921848",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aa538c7a-caee-4161-be8c-bebdc336f49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084e0462-ff97-4ff5-bcb0-dc6ec5e7c387",
        "cursor": {
          "ref": "7b468726-f167-4de3-a0c2-f10f2be494fb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "508818b7-5148-4a13-b4b1-613d1a72eb51"
        },
        "item": {
          "id": "084e0462-ff97-4ff5-bcb0-dc6ec5e7c387",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "159bfd07-d612-474c-b1c9-fd723fc2e5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e10d9f4-0f34-499d-850d-5c3325d68974",
        "cursor": {
          "ref": "ac7c967d-a0af-4192-9a6d-63bbc6a82782",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d2091349-184a-47a9-bf7e-89723836a38a"
        },
        "item": {
          "id": "0e10d9f4-0f34-499d-850d-5c3325d68974",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5973ce14-42a8-42af-95d7-6406aecd0e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1b32d6-1f57-4f12-b378-f535bcc7d25a",
        "cursor": {
          "ref": "453b37b4-4717-4613-975a-3413326b5e2d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e24b1c71-00f4-4d28-bafb-e2d69710453b"
        },
        "item": {
          "id": "dd1b32d6-1f57-4f12-b378-f535bcc7d25a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "444812e7-1b79-4c5e-8817-760500584c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5483aa8d-ee8a-47ee-9472-18d872836574",
        "cursor": {
          "ref": "6e9b6a30-eaa8-44e6-b632-e4962ab6d1d9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d119061f-7223-4ddc-a894-08d01e870c79"
        },
        "item": {
          "id": "5483aa8d-ee8a-47ee-9472-18d872836574",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "31063e27-c849-47ee-a05e-142d902c09d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aff762-c9ca-485e-b335-4867e8042d24",
        "cursor": {
          "ref": "54d8964f-a115-4893-994a-e55e45e42efa",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "659cfa2e-22cb-4282-add9-b5d54f37d41d"
        },
        "item": {
          "id": "d4aff762-c9ca-485e-b335-4867e8042d24",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d3448ed6-e405-42a5-b9fd-e5eed5c6b2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f98fefb-d109-430a-abca-35ff002824e4",
        "cursor": {
          "ref": "534d709f-cd81-461d-9267-3e127aaf4cba",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e81b3d9b-784a-4137-8435-d920670f2177"
        },
        "item": {
          "id": "8f98fefb-d109-430a-abca-35ff002824e4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "97ae2af1-5060-4633-902f-1240eedae7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b590881-98fd-4c4b-b738-67266aee6b1f",
        "cursor": {
          "ref": "a8017792-2daa-4302-bf33-4267a88cb7a1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5b801773-6e69-4216-a15a-8fa0b6237bb9"
        },
        "item": {
          "id": "2b590881-98fd-4c4b-b738-67266aee6b1f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cdd6e094-7417-4b59-902b-b43f24293e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021db56-a024-4610-84a9-eebeb9a9f798",
        "cursor": {
          "ref": "9799c104-37ff-47f7-88ea-4e53bb9f4cdc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae47155d-471d-4350-b014-78e05679ef4c"
        },
        "item": {
          "id": "1021db56-a024-4610-84a9-eebeb9a9f798",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cc6da5be-2afd-49e8-8056-109231b44dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad382f2-86fb-4618-8024-4d00310578f3",
        "cursor": {
          "ref": "b73b752e-f302-4aa7-8cb6-85e7a83c3075",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "29280faa-744d-4703-aebb-7ae359a329e0"
        },
        "item": {
          "id": "7ad382f2-86fb-4618-8024-4d00310578f3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d74950c6-6da8-440e-895e-35b6289cea31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7427c165-997c-443a-9f18-957bdc039fa1",
        "cursor": {
          "ref": "958fd9ff-4643-4477-ba3e-02911e350c11",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "24462bdd-a0d6-423d-93be-2c4ed3e61ae0"
        },
        "item": {
          "id": "7427c165-997c-443a-9f18-957bdc039fa1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6a1b2540-3ca9-4b5a-b6c9-909521eef96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab63f51-5fd5-4eb7-9e4a-9fe036d8d416",
        "cursor": {
          "ref": "f924ef12-ec26-43f1-ab75-966f9b92b1d7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2aa1179c-f568-48b2-8c8c-4f23afa89c76"
        },
        "item": {
          "id": "2ab63f51-5fd5-4eb7-9e4a-9fe036d8d416",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "20059d00-2d04-46c7-b7f9-1fa6596f1c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af82d49-8fac-4061-8e18-c51a2f2e8a75",
        "cursor": {
          "ref": "ce042e23-2d96-4d4f-9ac1-52ff2a58207e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ee0f5093-fe82-4bf6-a0cf-1735eaa37e21"
        },
        "item": {
          "id": "8af82d49-8fac-4061-8e18-c51a2f2e8a75",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "37fe82b0-a0db-4096-a00d-51831d8d3cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8df1a0-5098-4ddc-991a-70865fa7b113",
        "cursor": {
          "ref": "9cd82bd3-d936-43b5-b948-73459191efb9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9c447476-1d27-4058-b2fa-255b11bce212"
        },
        "item": {
          "id": "aa8df1a0-5098-4ddc-991a-70865fa7b113",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2ad28c8a-43ef-4dd0-a1c2-31bb7a84d926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd33e00-bea6-40b5-b7c6-d165ded5625e",
        "cursor": {
          "ref": "0fd848f7-512d-47ad-9d4a-0277169fa809",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eaa84cd5-87d4-4c0e-8496-5e01cfcc9e5b"
        },
        "item": {
          "id": "9dd33e00-bea6-40b5-b7c6-d165ded5625e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d181ed86-6a0e-42fe-90d8-5e2bcc03853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9701d37c-975d-4af3-beba-369a2af2fb4a",
        "cursor": {
          "ref": "3f03d929-7ea9-47bc-9017-e8928c1cf227",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a4177a1e-91f5-4f07-86e7-e19a89eaf0f3"
        },
        "item": {
          "id": "9701d37c-975d-4af3-beba-369a2af2fb4a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c20f06b-826c-4f96-ad23-310949ec3de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0312bc0c-eb96-43f7-a300-0182dfe4bc14",
        "cursor": {
          "ref": "e1f8b63a-7848-4b30-a376-a727fdb26ee7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f8fc4f2c-cb17-437d-8cd4-9d9a2ec0f460"
        },
        "item": {
          "id": "0312bc0c-eb96-43f7-a300-0182dfe4bc14",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8913ee34-aca3-45ab-8fcc-6d67aa33126d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b7cf0c-1f04-4a47-9957-74bcfe410526",
        "cursor": {
          "ref": "04ce0497-3540-48b5-bc4f-3e35af7b689d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "42caed2b-f2b4-4c36-948a-f850013c98b5"
        },
        "item": {
          "id": "70b7cf0c-1f04-4a47-9957-74bcfe410526",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b8d986ca-f05f-4636-b9fa-771cd2313adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5377a2-6263-4aed-8a22-e9afc5a83d78",
        "cursor": {
          "ref": "cf10b4a7-f30a-42f0-908b-21ccb2ef8ac7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "25e275eb-d05d-41e3-a4fc-8dedb603f36f"
        },
        "item": {
          "id": "5a5377a2-6263-4aed-8a22-e9afc5a83d78",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d63ec467-bec5-4904-b686-c5f09ebb396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff997a-be5a-4db1-988c-3e88d475c75b",
        "cursor": {
          "ref": "92a3bc01-d7af-4b90-90b7-0f38b6cb685b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "da537501-cbe9-4a81-9e8d-7a8cb7bb8500"
        },
        "item": {
          "id": "95ff997a-be5a-4db1-988c-3e88d475c75b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "705f02fc-2625-4594-8d00-cb038388573d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267184b7-631c-4bc9-906d-a80310510b1b",
        "cursor": {
          "ref": "cfac56ba-d15d-4b76-a9c1-59897e0dc7f5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac0782f0-04b1-4097-baf2-e1f51599ad9d"
        },
        "item": {
          "id": "267184b7-631c-4bc9-906d-a80310510b1b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "546f7c62-699d-474c-a134-369f7fff6357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c418341-b2dd-409f-bd41-7326333ab61e",
        "cursor": {
          "ref": "8542db74-a00f-46b9-b75c-bd5bdc939c65",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ccca55f5-06f6-4850-a877-dda59fc27e58"
        },
        "item": {
          "id": "0c418341-b2dd-409f-bd41-7326333ab61e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "431d5444-6550-4a80-96c1-edc99add509e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2114baa-cf77-425a-8eca-d0431286500d",
        "cursor": {
          "ref": "78ace094-674f-4729-8e9f-44b07353d87e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1e392bd1-66ae-4d53-8ba9-f4c20045dc55"
        },
        "item": {
          "id": "a2114baa-cf77-425a-8eca-d0431286500d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3af1cc6e-7fd6-43d4-a7fc-dec474962622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e625db1-e810-4db0-93a0-70da179cff75",
        "cursor": {
          "ref": "6050dd66-c436-40bd-8a3f-a8c5a88e338f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "39b9c032-d507-444f-8698-42b3d9da632f"
        },
        "item": {
          "id": "3e625db1-e810-4db0-93a0-70da179cff75",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9c5a3199-30fc-485d-89c3-66b0c7651117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ece9bf-7696-4ca8-a665-077f2b7c63a8",
        "cursor": {
          "ref": "85fc36ad-aee8-488d-81d0-527e537b396a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a6547216-c01c-4225-91b3-1ad0491d9e27"
        },
        "item": {
          "id": "40ece9bf-7696-4ca8-a665-077f2b7c63a8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1040caa8-f175-422c-aed4-70cc792a48ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6cfb98-7220-4491-83fc-5812534b4c60",
        "cursor": {
          "ref": "65a695cb-269b-4664-a8b0-d52c533cf6dc",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "041d2173-9532-4efb-aa76-1041462cd173"
        },
        "item": {
          "id": "bc6cfb98-7220-4491-83fc-5812534b4c60",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6b33be93-71eb-4c55-bb15-ccbb8347b3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3d31d0-1372-406c-a00e-cde02d5856a3",
        "cursor": {
          "ref": "3230ee4b-8ad2-4e24-aff8-a3907089fac2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bcb81ea3-6bf9-42bc-9cd8-1e84dad15370"
        },
        "item": {
          "id": "df3d31d0-1372-406c-a00e-cde02d5856a3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d9b76b3d-73a5-4a13-96c4-e557aec8f0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2226810c-8ec3-48eb-834f-f16f09862fe2",
        "cursor": {
          "ref": "8cabcd8f-d703-4865-9e49-9b80979637e0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4d6301f-4d83-439b-8863-96bbf3c0e352"
        },
        "item": {
          "id": "2226810c-8ec3-48eb-834f-f16f09862fe2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0b86d248-5202-4046-8604-c0fdaf767353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc33418e-6844-424e-975a-ba61a19c6f18",
        "cursor": {
          "ref": "75d1853e-7867-4068-b655-5496bfe52924",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "68a3986f-7ef0-4ab7-8f71-2b77c015f89c"
        },
        "item": {
          "id": "dc33418e-6844-424e-975a-ba61a19c6f18",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8a67c540-c424-4f4b-be44-82a4ebf648fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642478fc-ef4e-4548-9ecd-e109d40e1442",
        "cursor": {
          "ref": "1f41570c-433b-45f6-9336-e0ed0fd3bbc4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2b7ee221-fa65-495a-ada2-6b2413fe53e0"
        },
        "item": {
          "id": "642478fc-ef4e-4548-9ecd-e109d40e1442",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0336797c-51d2-4d3f-894f-096f3415933b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da99dee-3ee4-4651-a2ef-2ca8573af526",
        "cursor": {
          "ref": "34bfde97-b9a0-45ff-8ba6-659f54f5e6fc",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ebe96b9-a4d7-4fe7-91e8-20e0112d4bd2"
        },
        "item": {
          "id": "5da99dee-3ee4-4651-a2ef-2ca8573af526",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bd5648c3-e058-44b3-9a40-9a16083b1bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec92c4b-84d3-43ac-a7e6-dc6d25bb6290",
        "cursor": {
          "ref": "0dc0d1f2-f390-4924-b333-aefb338120e5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "982473b2-bc18-4595-b479-6858db348296"
        },
        "item": {
          "id": "0ec92c4b-84d3-43ac-a7e6-dc6d25bb6290",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "16575303-72c0-423d-8c6a-fe8bb6558771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1ecf59-7511-4435-82d0-93e6572e56d1",
        "cursor": {
          "ref": "49ff931e-7823-4ccd-95fa-8e1ab2df97da",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ae0d3903-7b02-43c7-a965-ded33b2956c8"
        },
        "item": {
          "id": "5c1ecf59-7511-4435-82d0-93e6572e56d1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f247a290-18be-4f34-88ff-2dd417ee8ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0642fcb1-17bc-4bab-b53b-1d6a51eb9f05",
        "cursor": {
          "ref": "846f77fe-5cd2-4689-9615-35f4861dcbf3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cd321dae-9dba-42aa-aaf2-3d257be24142"
        },
        "item": {
          "id": "0642fcb1-17bc-4bab-b53b-1d6a51eb9f05",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "80a36a22-4d44-4bc9-b62d-9ecacb04e574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307cb99e-d4cc-4045-9b23-2adf5bf2ffa9",
        "cursor": {
          "ref": "12873aaa-5488-4647-af4e-cb8e07028a12",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f6d9b601-8983-411e-8d8f-6ff97f8f6205"
        },
        "item": {
          "id": "307cb99e-d4cc-4045-9b23-2adf5bf2ffa9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1253e53f-9c5a-4d1b-9e4b-47d9297f81ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b78294-e6f7-4d0c-8a0e-b52b55a89517",
        "cursor": {
          "ref": "434d74e7-913e-495b-b1a4-0ad3b36554c7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "06c1a17b-597c-4f6e-a3a5-61935f263ce5"
        },
        "item": {
          "id": "c5b78294-e6f7-4d0c-8a0e-b52b55a89517",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6246ab29-a43d-4dc7-9d0f-79f9280b5c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9050c184-c5cd-4695-9523-85c501f3d48d",
        "cursor": {
          "ref": "14284ae8-9030-4a2f-92cd-53d874ca07bd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "01646082-8863-46b6-add6-8f154efc2b25"
        },
        "item": {
          "id": "9050c184-c5cd-4695-9523-85c501f3d48d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ae9e67b-1ff0-4fe8-8779-65ede065367f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8de1b03-a2e9-4e3a-a90f-cff3bd8ffbf9",
        "cursor": {
          "ref": "3b3ab39d-487e-4d4f-8488-48ccaf70b046",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c4f54b77-a9e7-4b03-bfa7-a78ebe690219"
        },
        "item": {
          "id": "d8de1b03-a2e9-4e3a-a90f-cff3bd8ffbf9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5a655b61-9ba1-4a48-b1c4-7ce8b16d8634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5611eff7-d92e-4052-813a-2e73758c8487",
        "cursor": {
          "ref": "a5643a70-de99-4fa9-a639-c2fe2729bdaf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c39edfbf-dd6b-432b-b0e6-cc897fe30412"
        },
        "item": {
          "id": "5611eff7-d92e-4052-813a-2e73758c8487",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3a8438ed-a235-406f-be2c-82eafb020bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970ccd60-57dd-42e9-b93a-5f2ca60e9556",
        "cursor": {
          "ref": "2d9440c3-73da-490d-9397-6b7e9350b4f3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ac91a426-e328-4d8f-8f4f-0c87d6fa8965"
        },
        "item": {
          "id": "970ccd60-57dd-42e9-b93a-5f2ca60e9556",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0443b3a3-fb7a-4e2a-9ff8-d6cde98e5a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35834287-239d-4187-99bd-ded7aab4f8f8",
        "cursor": {
          "ref": "91cc3b91-5b25-4d39-a066-ae97776ef7a0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "683fad61-f9a8-4d3c-a73b-e94a91f6e0ee"
        },
        "item": {
          "id": "35834287-239d-4187-99bd-ded7aab4f8f8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b708035e-9cfc-4a5e-902c-7efa9f6d580d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce78aa41-c3ab-4818-9fa6-61e9ce1d9a63",
        "cursor": {
          "ref": "ef503c7f-496f-472a-8184-b6760987ec9c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c7394275-af48-41ee-9382-975422befecb"
        },
        "item": {
          "id": "ce78aa41-c3ab-4818-9fa6-61e9ce1d9a63",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5f38e727-e687-4e47-8b0c-00d9bd60ad21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1562db-2333-42ea-9e75-83b86a749da0",
        "cursor": {
          "ref": "07d17f7d-7428-42bf-a84b-7fc023bf433e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "66d8cf81-1b63-44e0-8387-0b30be02c097"
        },
        "item": {
          "id": "dd1562db-2333-42ea-9e75-83b86a749da0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0adcb450-c092-49d5-b333-8675a8fe07d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea6d2c3-8724-4795-9030-fd5420277bfa",
        "cursor": {
          "ref": "acabdd1b-a58a-4a91-9c5b-2f6a42f62822",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42ad669a-f64e-47ae-a8d8-6671b4099673"
        },
        "item": {
          "id": "dea6d2c3-8724-4795-9030-fd5420277bfa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a42c2afb-606c-425a-be8d-c9c2cb6c3d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6d6b0a-fd09-4af5-8a07-24b45fc753ab",
        "cursor": {
          "ref": "753d5c0d-0d2e-407e-a6c3-327b583400bb",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "11835dac-6a28-4034-b196-97e03a1c0645"
        },
        "item": {
          "id": "ef6d6b0a-fd09-4af5-8a07-24b45fc753ab",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4b287ceb-518f-4602-86e9-a77ef89adb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fb70c6-43b8-45e2-ad8e-5df870ca941f",
        "cursor": {
          "ref": "bc8d9d4e-afcc-4b01-a7eb-dafedf832f96",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "00669c2b-ae63-4d61-a959-819b21a5a8e6"
        },
        "item": {
          "id": "a3fb70c6-43b8-45e2-ad8e-5df870ca941f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7f765a9f-0dac-4967-b0e7-ce53d81aa1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b9902b-ee99-4bf8-a1d8-788ff8f45c31",
        "cursor": {
          "ref": "4f4f8df7-f510-48bf-8517-5c4739272464",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef962cd5-c666-4d4d-8bf2-5d2e868d7332"
        },
        "item": {
          "id": "64b9902b-ee99-4bf8-a1d8-788ff8f45c31",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c8b47853-7088-461a-abc0-013f173b90ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588a4a97-018b-4c80-9a4c-04d8e26f021a",
        "cursor": {
          "ref": "faec61b6-4fcb-4e2e-ae13-6a5df2aa3cf7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8a45e6a7-a02b-4c09-aac9-39db3ddd491d"
        },
        "item": {
          "id": "588a4a97-018b-4c80-9a4c-04d8e26f021a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "46e2591a-8671-4b65-ae31-e4c4bd791a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3c4c64-b65d-4317-8513-2f9bb714c9d5",
        "cursor": {
          "ref": "e3c8d015-f42f-4e52-9569-5dd1c7d435ac",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1d43052-0140-46e1-83ca-89b2e2c38eff"
        },
        "item": {
          "id": "1a3c4c64-b65d-4317-8513-2f9bb714c9d5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a06e3a2b-3f1f-40bd-830d-74fc2b33f454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24f5840-da23-4b9b-8457-99b5d721195d",
        "cursor": {
          "ref": "3335c32f-e98f-4c22-be1f-4d836df0f707",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bef717d6-a4fb-412a-a9b0-ae4faeb7462d"
        },
        "item": {
          "id": "b24f5840-da23-4b9b-8457-99b5d721195d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "77c883cc-f6f8-4b05-ac0c-44ad750ef873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1e6c72-24b2-4d38-ade4-ee97c3d0e7b6",
        "cursor": {
          "ref": "d19fd45d-5f1e-4688-a401-011088b00771",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f227f5d5-0ead-40da-95d9-13bdf2d85c12"
        },
        "item": {
          "id": "ef1e6c72-24b2-4d38-ade4-ee97c3d0e7b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "39e8d871-5e11-4ea2-b66e-47c555bb33ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9258f95a-4955-4de7-9534-7951e9923206",
        "cursor": {
          "ref": "8cdf6bfe-b79a-4bcd-b77e-003630a5726f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f318db1e-f121-44ae-8332-01652ae95752"
        },
        "item": {
          "id": "9258f95a-4955-4de7-9534-7951e9923206",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7487b04a-b0f8-4b2a-8b1a-ac2ed3d5170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642bcf3b-9a27-4aef-ae6a-8c2ef1d90cd8",
        "cursor": {
          "ref": "06f2e96a-dd95-481c-954d-694e9407e376",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e615116c-bf77-4bde-91d9-7c24f39fc220"
        },
        "item": {
          "id": "642bcf3b-9a27-4aef-ae6a-8c2ef1d90cd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ccbdf7c-24ad-4bf2-af56-26e40c0b9659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8581955f-16bd-4021-96bc-d1d1855cb69f",
        "cursor": {
          "ref": "57a24956-dc20-4e55-8d12-38202650f7f4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e21a32f5-ab40-4ce9-9d32-a11c09c0ebf8"
        },
        "item": {
          "id": "8581955f-16bd-4021-96bc-d1d1855cb69f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "923b6c12-fbb1-4bac-895f-100322bfc0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560aa9f2-3293-4848-b042-860cdb338423",
        "cursor": {
          "ref": "d6c0c4b6-a8d2-4c7b-a4cb-acf70673eee8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f35877b8-4261-4f19-a8c2-36eb13db9735"
        },
        "item": {
          "id": "560aa9f2-3293-4848-b042-860cdb338423",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d653b271-5dd8-4bac-964a-709120bf656e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74810e97-45f7-4d22-8d7a-c804f670c3fa",
        "cursor": {
          "ref": "0ca2313b-ba92-4d42-826b-13ca5e4ab285",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9a80e916-62d6-4cce-b5ed-b6395bb1fd83"
        },
        "item": {
          "id": "74810e97-45f7-4d22-8d7a-c804f670c3fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c30c4232-729c-4127-a493-b25dec120e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a22f15-dc81-40e2-b875-6ae6f78dfbe3",
        "cursor": {
          "ref": "214c843d-27e7-4fe2-8fa9-8f522d09d886",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7d8ffe16-40fd-4231-9d47-d90baae2a6d5"
        },
        "item": {
          "id": "28a22f15-dc81-40e2-b875-6ae6f78dfbe3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "95d67491-2fec-4b56-b4aa-c282b3fce0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21c40e1-65e3-438e-8b53-ae40765d7aa1",
        "cursor": {
          "ref": "0fa07db9-b470-43ea-ae90-4e31cab9ffac",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a6a195af-9012-429a-9eef-16ed5d472784"
        },
        "item": {
          "id": "a21c40e1-65e3-438e-8b53-ae40765d7aa1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8f31400c-a246-4d82-af25-240c9c25966e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bf62af-0ecb-4ab4-992b-93d3efe57304",
        "cursor": {
          "ref": "50f1c179-cb1c-4d2e-8e86-da1db7560a9c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0d75fcb5-3786-45c1-b97a-05304505eb31"
        },
        "item": {
          "id": "a8bf62af-0ecb-4ab4-992b-93d3efe57304",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8c85984e-7d73-49ad-937f-0252b1d6b6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c953f-9244-4ae4-818c-b84464b87ae8",
        "cursor": {
          "ref": "8f8ad6df-798c-4bc1-8a40-67f4ae003a8b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "266a8227-6e95-4c30-811c-b6b5c1824745"
        },
        "item": {
          "id": "729c953f-9244-4ae4-818c-b84464b87ae8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d5bc156-3e63-41fc-aad0-d6da2861cb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5af773-7f9d-4105-9b87-405a60f8ac39",
        "cursor": {
          "ref": "ab31a017-721b-458d-90fb-d8313bc9607c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8083f5a-eea4-4764-bb23-06a2ad85f7bc"
        },
        "item": {
          "id": "4a5af773-7f9d-4105-9b87-405a60f8ac39",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9630a498-53f8-4388-922e-66d3f5674931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283c84b0-5554-42ce-ad5f-9b8a967135bf",
        "cursor": {
          "ref": "d194dc76-066f-4f54-ae15-e047b1a7db10",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3473f9db-769f-485e-9709-198d987f8904"
        },
        "item": {
          "id": "283c84b0-5554-42ce-ad5f-9b8a967135bf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bdf9e2e3-480a-470b-9851-b3d0c59062cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aa7a65-f1de-44df-ab46-00b96cb43dbe",
        "cursor": {
          "ref": "a1ffa05a-d3a3-41f2-8b9c-978886034a15",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b792751f-d49b-4f81-9dc0-d2f5423c6f66"
        },
        "item": {
          "id": "f2aa7a65-f1de-44df-ab46-00b96cb43dbe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "45b970f2-5f35-4169-8ee6-1d29cb31525f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae1f331-4b24-42af-bd82-2d7141f8e494",
        "cursor": {
          "ref": "e2ef06d5-7fbf-45d8-9bdf-d7412be41fc3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66e59eba-5ad1-4d00-8148-ee5c2e4c37b3"
        },
        "item": {
          "id": "3ae1f331-4b24-42af-bd82-2d7141f8e494",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c6f29938-15b5-483c-869e-d626f72c4d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff215e4-5f21-469a-bfff-58243e7ddf5a",
        "cursor": {
          "ref": "d2a6f17b-74d8-49d3-880a-b9dd26b2b564",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c90552a6-b5b7-467d-b581-8254dee17b5d"
        },
        "item": {
          "id": "5ff215e4-5f21-469a-bfff-58243e7ddf5a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ee7d561f-0b41-4543-b549-4152b8815ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49111955-a396-419d-b77e-d35c81fe0098",
        "cursor": {
          "ref": "9f376f02-b98d-4047-9c74-0b143debd0fc",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a2f9123b-88ec-4bde-b036-87e90ce61df9"
        },
        "item": {
          "id": "49111955-a396-419d-b77e-d35c81fe0098",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8454cba1-644e-4650-bc92-5ffda5132045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d71d1a-a81c-4909-ae31-3a9b6c5a8fa5",
        "cursor": {
          "ref": "81d0d5c4-abee-4f35-bb6b-5f57d3dcf58c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c8426d13-c9f3-4c3a-baa3-50339d439a96"
        },
        "item": {
          "id": "87d71d1a-a81c-4909-ae31-3a9b6c5a8fa5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2fd0fd0f-1c08-434c-8a61-0f83caea8e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a29449d-6c5d-458f-a16d-be0b3355c02c",
        "cursor": {
          "ref": "dacb7ada-982c-45f8-b5ff-fa20d66b343d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f31a4765-0dbf-4e04-9a63-d2805d1f57f8"
        },
        "item": {
          "id": "4a29449d-6c5d-458f-a16d-be0b3355c02c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "29387736-727f-4373-8bf3-b2a2822fb7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7a6fcc-86c0-45b1-b2ce-be529fd54256",
        "cursor": {
          "ref": "331a8179-b3d6-4fb3-81c4-55b481c4622c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5fafe596-04a4-4795-85bd-55a16cc00d4d"
        },
        "item": {
          "id": "ec7a6fcc-86c0-45b1-b2ce-be529fd54256",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dc148449-ecff-4966-a728-863c1d3e4638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb47ddd-61e1-4c47-ab41-c12f3bed024c",
        "cursor": {
          "ref": "399143c5-1f56-49b2-8ad2-fe61c93b7077",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "78b1678e-8f26-4f50-b47a-d16801643ab8"
        },
        "item": {
          "id": "deb47ddd-61e1-4c47-ab41-c12f3bed024c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1cb31f3-14ed-4fa4-85a7-bf5035f4a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ec843c-b223-43c4-9fd8-c9fe20f3390d",
        "cursor": {
          "ref": "6e07c415-4976-4bbd-ba99-90215cc17c3e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4c645850-5735-434d-a5b2-70fe630bca9b"
        },
        "item": {
          "id": "95ec843c-b223-43c4-9fd8-c9fe20f3390d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5ce9d791-8585-4f1a-8307-23b3362d4c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705f7af8-8fb6-4165-bb20-44d7eccf602e",
        "cursor": {
          "ref": "64b43294-d3dd-4c36-9a6d-c3ff862c7541",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cad27926-8a2f-40ee-a0ee-3371a5f1a5d9"
        },
        "item": {
          "id": "705f7af8-8fb6-4165-bb20-44d7eccf602e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0527b1bc-d4da-42b9-8f23-b4de4e56623c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d76d186-ca7c-457c-a00d-bcca354fc8a8",
        "cursor": {
          "ref": "0d8ff76e-0d71-46ae-8a91-f89840658071",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8855eb5c-01ae-4053-9b6e-72b1f1fb1512"
        },
        "item": {
          "id": "7d76d186-ca7c-457c-a00d-bcca354fc8a8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a478364b-3f9b-43a2-917c-1d364d3143f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a63b9a-d2b8-4fdd-baac-d2eb62e0ee4b",
        "cursor": {
          "ref": "00bbb8df-e241-4e64-bcfc-6331cf9f4886",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d6c526e-18f8-4849-8e80-d7a852596eff"
        },
        "item": {
          "id": "c4a63b9a-d2b8-4fdd-baac-d2eb62e0ee4b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d7daeee9-102a-436c-9b74-31377e7f0358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ab77d-9f8a-420e-a8be-2d83dc0231e0",
        "cursor": {
          "ref": "45566169-c4a0-4835-9903-f0b1d6650c26",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ed238e7a-b534-4f05-b58d-10f32493ff5c"
        },
        "item": {
          "id": "266ab77d-9f8a-420e-a8be-2d83dc0231e0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3f1d54d8-033a-427c-af3c-f370a5a53375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c27f00-9023-47da-ab02-e8c3dbb220c3",
        "cursor": {
          "ref": "bd0a04d0-012b-41cd-9352-137aba951692",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6801125c-e45b-4e8d-9145-ed505fcba98f"
        },
        "item": {
          "id": "f6c27f00-9023-47da-ab02-e8c3dbb220c3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "68aed7c9-832a-446f-bc71-4512bcfaeb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6bd339-8ea6-40bc-8e24-d8b9375f30d1",
        "cursor": {
          "ref": "bfdaef06-4734-4b99-bde4-b056a208ef0a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "175a3702-830a-4a7d-b9e3-5b4a1c344a61"
        },
        "item": {
          "id": "fa6bd339-8ea6-40bc-8e24-d8b9375f30d1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "23d314ee-df7f-48a0-9199-1e2c09c1c9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeacc637-7f2e-4c09-9ee1-6d5ed94082b6",
        "cursor": {
          "ref": "4edeac70-a3f2-46c8-a2a3-9668ac1a9de7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9d4a0fd5-0ecf-4346-8544-4db684b5d6bf"
        },
        "item": {
          "id": "eeacc637-7f2e-4c09-9ee1-6d5ed94082b6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ea78ffb1-9d44-453e-aca7-cf9a9dbd96e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3ee543-16c5-425d-a62e-14fee464bde9",
        "cursor": {
          "ref": "d52da634-eed2-4688-b8dd-da77c7d81a9d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ec5204bb-f5cd-4f8a-97a8-2222bfc31f35"
        },
        "item": {
          "id": "0e3ee543-16c5-425d-a62e-14fee464bde9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b87b79ec-b6dd-48c4-9be5-f15969d86bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73027a51-0d04-4cc4-8312-4e64abe377d2",
        "cursor": {
          "ref": "fecc4a78-08aa-4250-b32a-f91d585b3d32",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "082a4785-6b7e-414d-9cda-cf6e3b4a6ddf"
        },
        "item": {
          "id": "73027a51-0d04-4cc4-8312-4e64abe377d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4e49714b-efa8-4815-b0e6-6e863cf842a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94106f3-3384-41d3-8318-1f3bc4c86f96",
        "cursor": {
          "ref": "cc2a73b7-37a6-4c12-807c-37913861b272",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dad01c24-4f0f-485a-84da-99518b19ab21"
        },
        "item": {
          "id": "d94106f3-3384-41d3-8318-1f3bc4c86f96",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "79f9e9bd-d6c8-4e68-a87a-ae079aebed80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e38612-8513-4be2-8460-ae5f61dc4e44",
        "cursor": {
          "ref": "f5b45b18-f3df-4a01-a90a-2825fdfcd1e5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "750afc6d-f91a-4221-84a3-7887e62a057c"
        },
        "item": {
          "id": "83e38612-8513-4be2-8460-ae5f61dc4e44",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "06bcc93b-7572-4731-a48f-27ed3f6cc249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c834bf35-817b-41c9-8e0e-1fb2d963ad76",
        "cursor": {
          "ref": "43728b63-9ac4-4f12-8ef1-6a4ccf99fb70",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b4871ea5-06c3-47d5-b466-3948df63774a"
        },
        "item": {
          "id": "c834bf35-817b-41c9-8e0e-1fb2d963ad76",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9e3bfa23-5b3e-4367-bee6-ef9940d9b037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0952dcd8-b68b-49c9-acbe-1b0916b4f93c",
        "cursor": {
          "ref": "09ced20a-8f9f-4d2a-ab5b-16940e4ccb79",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7aa77d52-786e-4458-9da0-77de48baa633"
        },
        "item": {
          "id": "0952dcd8-b68b-49c9-acbe-1b0916b4f93c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e5a629c-ae8f-4dc6-9b9a-6dd240235cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5e7c39-496f-4f26-b5cb-670c4a7c4b9b",
        "cursor": {
          "ref": "81a36dd6-f440-4941-9009-0519e19f87b2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2f504649-6b77-4a63-83a9-dfaae42c9b09"
        },
        "item": {
          "id": "0b5e7c39-496f-4f26-b5cb-670c4a7c4b9b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "72a90513-296e-4685-b14e-08fea7197f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27869d3-ba8e-4f0a-ac17-37a06aaaa0e0",
        "cursor": {
          "ref": "d314d2ad-89f6-4821-afd4-3a7844e0a7e9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7bf93237-07ce-4a25-9aa2-360213f6afdb"
        },
        "item": {
          "id": "e27869d3-ba8e-4f0a-ac17-37a06aaaa0e0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bd80b3d8-a51f-4bf4-a001-1ae01eba4eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e45b938-6f36-4fc7-a56e-73e88d6183e4",
        "cursor": {
          "ref": "0af8eb5b-e5f9-4467-82f3-6e728b0d4008",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "80a2c05e-93ae-43b3-9954-816bad2642a8"
        },
        "item": {
          "id": "7e45b938-6f36-4fc7-a56e-73e88d6183e4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "079002de-18c7-43e7-aa1a-7ce619eb1a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5fd4a5-6623-44a1-994b-5f595dd19e89",
        "cursor": {
          "ref": "bd36b99f-d2f9-4499-918c-11f63010fb74",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "347a9cf7-e3f8-4158-a1c1-eb4b5e8e061d"
        },
        "item": {
          "id": "9c5fd4a5-6623-44a1-994b-5f595dd19e89",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b52f674-f206-4e37-bc37-8d4e86302c6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b89eb98-4e0c-4971-84d9-edbe6c5ddced",
        "cursor": {
          "ref": "acb53b29-4477-481f-8bf3-1bc3399eeb4c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c3785a16-4011-4c2f-b2d3-de42f6d27b3b"
        },
        "item": {
          "id": "4b89eb98-4e0c-4971-84d9-edbe6c5ddced",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3d47cec7-10a8-4c5b-85a1-44490151b011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "235dfb16-fabb-488c-8f09-a70d5bc45231",
        "cursor": {
          "ref": "fdda6fa9-66a2-414a-85fc-cf7426faba5a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "82651ffa-61c8-42a5-82df-8cf9bdf60a05"
        },
        "item": {
          "id": "235dfb16-fabb-488c-8f09-a70d5bc45231",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0a4ee9de-a2ff-4fd8-bda5-1d99c5438533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b013cb72-c014-4e26-b5f1-90aee40e8d8f",
        "cursor": {
          "ref": "c08c28bc-37a5-4e8d-b0f7-3450e00df897",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fb40637c-1579-4bdb-8ae0-4d1836e952ac"
        },
        "item": {
          "id": "b013cb72-c014-4e26-b5f1-90aee40e8d8f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "339b158d-bbf3-4597-93c1-1ff3ddec5675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4a74efac-63eb-48d5-b5e3-89e5e93fc4d1",
        "cursor": {
          "ref": "fe02da07-b570-4eac-8806-c7162b638628",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "eddaa621-37e9-47b4-9162-206d0875afe4"
        },
        "item": {
          "id": "4a74efac-63eb-48d5-b5e3-89e5e93fc4d1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "911db9c1-add4-48c4-af23-14a13dc9ae5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a713924e-1f0f-4511-a535-c93a37ba9ab8",
        "cursor": {
          "ref": "19be5d32-3be5-44aa-ab40-155a4c42c731",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8a24eca8-a949-4af9-9713-ebf7109d1296"
        },
        "item": {
          "id": "a713924e-1f0f-4511-a535-c93a37ba9ab8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "86a5e2a4-0ff0-4414-b7b0-700cd8d6033c",
          "status": "Created",
          "code": 201,
          "responseTime": 6785,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe8cbb4-e67a-433e-8e8c-c7e0451cf341",
        "cursor": {
          "ref": "589c09be-56c5-440d-8999-bb48020b8148",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4fa9d6f1-a426-4ee6-bb4f-88ab25006ed6"
        },
        "item": {
          "id": "0fe8cbb4-e67a-433e-8e8c-c7e0451cf341",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9fa2902e-57dd-4a4b-b531-ae191c6cd502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3a0905f6-1044-43a2-bb62-70f23356f3ec",
        "cursor": {
          "ref": "c9643caf-4804-4c83-9c50-24e06eb5c0b6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c08a3254-f569-4a91-842e-23acbfb7aa85"
        },
        "item": {
          "id": "3a0905f6-1044-43a2-bb62-70f23356f3ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c2dbda30-b61e-410e-85e8-85cb1e5ddf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9bd4315f-d534-4e79-ba5c-b5483e92d61d",
        "cursor": {
          "ref": "de80b7d5-519f-4598-abad-95b0812e3d00",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "87bee4b5-6735-488b-9c62-62c530485378"
        },
        "item": {
          "id": "9bd4315f-d534-4e79-ba5c-b5483e92d61d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "452c5f99-d16d-414c-84da-fe9aa508120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71f0e95-6ae3-4f48-91ba-7453bbc15bd4",
        "cursor": {
          "ref": "9ac6f97d-b5c4-4e6e-be59-1698e79e6f5d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77a95517-ea77-43a8-937c-6f949cbf2750"
        },
        "item": {
          "id": "e71f0e95-6ae3-4f48-91ba-7453bbc15bd4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a63926c-dfc6-41fc-ba7e-8beb16c1b42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441a988-66bb-4b2e-add5-ca8f9e118b67",
        "cursor": {
          "ref": "ea4b0fa6-00ae-4b0e-b765-63df0908d21d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cc6c7a54-aa81-4275-b2ef-a1fc209b43e1"
        },
        "item": {
          "id": "c441a988-66bb-4b2e-add5-ca8f9e118b67",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f956433-9b71-4570-9b81-7cda2881dbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766b82b6-de07-4e9d-9f84-b02b972252c7",
        "cursor": {
          "ref": "ed9254a4-5673-4d03-8bf2-b8e541550ecc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "025a3c7d-f9d3-4854-8a80-750ab25d4450"
        },
        "item": {
          "id": "766b82b6-de07-4e9d-9f84-b02b972252c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87ef1921-e445-4e70-a6ed-cbf0446ba8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f95c5-5665-4345-87fd-b24a00a790cc",
        "cursor": {
          "ref": "b6b013e5-0582-4883-ba37-0a13fe76bf0a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6c6b7be5-083a-468e-b34a-866fd3d6415b"
        },
        "item": {
          "id": "423f95c5-5665-4345-87fd-b24a00a790cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3aae7059-4357-45cb-b7e7-b9da2e99eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0730fe-ba3d-4cca-8acf-a7903e085535",
        "cursor": {
          "ref": "0266583e-d4e4-4465-a849-7856cc66ae43",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1c8af20-0637-4fd7-bb3f-ff023a6b4f46"
        },
        "item": {
          "id": "ff0730fe-ba3d-4cca-8acf-a7903e085535",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc8d2735-312c-47c9-9abf-0b6a53bf5128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61766098-5853-4643-a526-e26f86795436",
        "cursor": {
          "ref": "d98fee03-30a6-4da5-a85e-db04c134c9a0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b7787d6b-d38f-4b34-96b4-3886812e5f3a"
        },
        "item": {
          "id": "61766098-5853-4643-a526-e26f86795436",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "45def663-86d6-4c0a-811d-87b19c4a44a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522686b4-f0a1-481a-9b18-64c50c1b24af",
        "cursor": {
          "ref": "3bf762db-ba9f-4807-a00d-8c3f9915f79b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b782c293-d208-42e5-be8a-239e0a29d5a2"
        },
        "item": {
          "id": "522686b4-f0a1-481a-9b18-64c50c1b24af",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "31feb82a-e406-4a1d-aaa6-83cb3cc29609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f2361-542f-4c00-b588-11ecc7d250ef",
        "cursor": {
          "ref": "00a35708-2f18-4bc0-88fc-c0d5c5d22875",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9b4d3946-12ff-49ac-9930-60d7209134de"
        },
        "item": {
          "id": "331f2361-542f-4c00-b588-11ecc7d250ef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "825cdf9d-9d47-4bf0-9408-49507a3e9422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a82bd34-2caa-4cd1-bc6d-9684b5c2a985",
        "cursor": {
          "ref": "00427a66-d35d-44a2-b9e3-109bb3388581",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9e385ca7-13f3-4734-a842-f6a4e95c21c7"
        },
        "item": {
          "id": "6a82bd34-2caa-4cd1-bc6d-9684b5c2a985",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d7d3629-30fb-4ccd-a7ff-7a355bca5546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3a917a-c74d-41c7-b021-50d66e4cd60f",
        "cursor": {
          "ref": "e76d13ff-5366-4cb7-9232-5213750ef25b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "163c3a12-0e90-4c99-a860-5e79884177aa"
        },
        "item": {
          "id": "fb3a917a-c74d-41c7-b021-50d66e4cd60f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "30dfceba-3e5e-4b05-9e38-71bb6702679a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c23a1a2-ff23-444e-83f0-3edf1e2bd566",
        "cursor": {
          "ref": "9fdb7cd6-ee4e-490f-b209-e34b1f14113d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d5188d5d-a7f4-4c7e-bfb9-fded68ea19be"
        },
        "item": {
          "id": "6c23a1a2-ff23-444e-83f0-3edf1e2bd566",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1dc449a7-7b4e-4f67-b922-02627d5b59af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698b3294-a87b-4e4b-ad3f-967fdf0b5025",
        "cursor": {
          "ref": "0f7197a7-6d0e-4d49-8b0c-a1466a246ac6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce475738-6ade-4a50-a2e8-3c6121f0c65d"
        },
        "item": {
          "id": "698b3294-a87b-4e4b-ad3f-967fdf0b5025",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bcf65c05-e4a9-4ea9-8dd5-baed8da2cdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c21423-f2b5-4413-b550-4ffa958d35ad",
        "cursor": {
          "ref": "79b60229-a55d-4597-a84f-29446337386b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d68a35d8-16f3-473f-93a5-dbfce0a0d9e6"
        },
        "item": {
          "id": "31c21423-f2b5-4413-b550-4ffa958d35ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "619bc28e-9ba7-45e2-af35-61c725a15a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66935851-2114-446c-b88e-3a2666e0ed7f",
        "cursor": {
          "ref": "bd0ef2bf-2a1e-47f8-9c77-1cb6bb49659b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b29b5d83-aa1e-432f-9ce1-1d477daa5bbc"
        },
        "item": {
          "id": "66935851-2114-446c-b88e-3a2666e0ed7f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3daaf82-52da-4245-8086-ccbb5cef99f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c2d63a-b77e-44c5-a1aa-dd67cc062483",
        "cursor": {
          "ref": "554ca192-5e89-40dc-8949-d3e38a673e35",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7daf278a-0a43-45e0-ae89-3888ce1c77c9"
        },
        "item": {
          "id": "98c2d63a-b77e-44c5-a1aa-dd67cc062483",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8d14254b-81a9-4b15-bc19-7880e7a9ee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d2ea5a-6989-42f2-beb6-5a460c6a2ea8",
        "cursor": {
          "ref": "86bb02f9-5450-4579-ace8-9aac063eedf5",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bdd436e2-524a-4d9a-a546-90c9d425c34f"
        },
        "item": {
          "id": "64d2ea5a-6989-42f2-beb6-5a460c6a2ea8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eae4d588-b66d-4ce7-b957-30b3eed74111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21a8491-8873-4dab-911e-fbc9c185504e",
        "cursor": {
          "ref": "10d43037-2e85-4350-a8d0-7341ec7365b4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f1290a85-b40b-401c-8444-f2426caf0f20"
        },
        "item": {
          "id": "e21a8491-8873-4dab-911e-fbc9c185504e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "054042c4-1ea8-4dd1-8caf-1c7698847219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e8ced-cb71-4d84-a027-471106371871",
        "cursor": {
          "ref": "5618e94e-7046-4c6d-9a98-723d32922591",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "af1d2c99-ab18-4491-af33-e5562a05e2ba"
        },
        "item": {
          "id": "af7e8ced-cb71-4d84-a027-471106371871",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "52801263-90dc-4a23-b9b9-84071df6e12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38945dae-074a-4c83-973a-1249b970a0e9",
        "cursor": {
          "ref": "e9f9d9cd-ad78-4c6b-824a-ee4a098f7899",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3d65aa4a-2cd7-4e79-b0c6-13f01338e4ff"
        },
        "item": {
          "id": "38945dae-074a-4c83-973a-1249b970a0e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bf1e975c-162c-491f-9e3d-7d3b524c6521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857c8b22-0ca5-42e8-b66f-4b1ecc6c52ed",
        "cursor": {
          "ref": "6116b8b7-bdb4-46e9-9a03-226e846e2919",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b3a0390c-99c5-4182-bcc4-364b24521c41"
        },
        "item": {
          "id": "857c8b22-0ca5-42e8-b66f-4b1ecc6c52ed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f5ae285e-1c62-4839-b753-7926186909d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeffdeb-0266-4b2a-a31e-dac8b3aa1795",
        "cursor": {
          "ref": "e3b6a7d1-45c5-4edb-a0e6-e448f620b68d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2aa0dc33-7aba-4c4b-b4b7-f8b0f85ac24a"
        },
        "item": {
          "id": "adeffdeb-0266-4b2a-a31e-dac8b3aa1795",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6d4c1504-9d16-4f85-bd67-1f33750332b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a0db6-8bde-4baf-a3aa-e94516729750",
        "cursor": {
          "ref": "8d0f4bd9-b018-49d3-a2cd-19b97b63cea0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "87c6effa-165f-45f7-ad55-91922f40d49e"
        },
        "item": {
          "id": "8a0a0db6-8bde-4baf-a3aa-e94516729750",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f750635-bfd7-4b65-9d21-eb0fa599eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f55226f-e851-4817-9f19-c486b42bbb7c",
        "cursor": {
          "ref": "9400cf79-31a6-4bb4-8323-c6e182466794",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "16f1c36d-c999-42cf-a518-8f901f41c84f"
        },
        "item": {
          "id": "5f55226f-e851-4817-9f19-c486b42bbb7c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d1e8d9ad-3507-44c3-84bc-53419304a790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eba2bd5-909e-486d-b94a-09b85e1def86",
        "cursor": {
          "ref": "77688ea9-b3e5-44bf-97f6-7deb1521cb6b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6852e4ca-f683-4eb2-a973-45d40df472d4"
        },
        "item": {
          "id": "4eba2bd5-909e-486d-b94a-09b85e1def86",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc74a9d1-b4df-4e4a-b1a0-630b737c9cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e987b5-9e5b-4c2f-a8f5-aa86af9860da",
        "cursor": {
          "ref": "e695561e-2030-46b6-983f-96b2b3729b9e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "24309d60-cb7d-4e88-a099-8bddfea8cadf"
        },
        "item": {
          "id": "69e987b5-9e5b-4c2f-a8f5-aa86af9860da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38cc8c4d-5b5d-457c-b174-6a181154ee4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ec5d8a-e583-40a1-9c98-3042bab14cb8",
        "cursor": {
          "ref": "5a857b50-c8c7-4d4f-89e4-809c6b0f7da2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bf2255c6-3411-45db-8283-9f41137b3a28"
        },
        "item": {
          "id": "27ec5d8a-e583-40a1-9c98-3042bab14cb8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0ae2be9d-f2f6-475f-bbf4-578b10b17556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520bf8f9-4c4a-4228-a4f1-0a2f386cbf8c",
        "cursor": {
          "ref": "0a4581fb-cad2-4793-8c67-6b6305a33609",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "33017759-5c37-42cc-a2d2-f75e11c63f3b"
        },
        "item": {
          "id": "520bf8f9-4c4a-4228-a4f1-0a2f386cbf8c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "70f2eb44-5ce2-432d-97f1-67c9694edb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1949e125-867f-49a6-83dc-73f46a303981",
        "cursor": {
          "ref": "10b41d36-39a8-4f55-9678-3b76a78a65cb",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f580bbb5-b6d5-4317-9c6d-f408214187d7"
        },
        "item": {
          "id": "1949e125-867f-49a6-83dc-73f46a303981",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1822d1bf-2b23-44dd-99cc-6b914e6a3763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd9849-6f96-4ce6-a428-8c6589921015",
        "cursor": {
          "ref": "daefb423-c954-4c56-846c-7babc803bb11",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "74194479-ea4a-40c3-9fc8-2f69794d9e55"
        },
        "item": {
          "id": "2fcd9849-6f96-4ce6-a428-8c6589921015",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "467cc5a0-92a7-46be-939b-0ae50a87d4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da033642-8d58-4f0b-83af-31719b692faa",
        "cursor": {
          "ref": "56d37ad9-a8b5-4cb4-bb38-35987ab55bb8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ed49dc0e-7b4f-4364-96c0-755bcd730e53"
        },
        "item": {
          "id": "da033642-8d58-4f0b-83af-31719b692faa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "35e56946-0e02-4928-a793-1b7b8935da2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdfd587-b5dc-407f-8497-2dcbf5bd7a03",
        "cursor": {
          "ref": "2ce734cb-cdee-48b4-9ff0-354978fec709",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b2592ed2-c402-4cd2-bd08-2df97687e843"
        },
        "item": {
          "id": "fcdfd587-b5dc-407f-8497-2dcbf5bd7a03",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3c9ba326-bff8-4f69-a5e5-fa861c73ac67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab890955-f5c4-4810-ae3a-ee0b8a151fa8",
        "cursor": {
          "ref": "a446e189-471d-4b45-80a1-836221dfe745",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "063622b3-ebd7-4cd5-80d6-762987bb2216"
        },
        "item": {
          "id": "ab890955-f5c4-4810-ae3a-ee0b8a151fa8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "07610b3f-d620-48e8-a1e3-e4145fec50fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6ccbff-343a-41a3-bc89-05384123fa61",
        "cursor": {
          "ref": "7c5f7665-fd94-4a0e-a430-603ab66f9353",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "db540e46-1ad6-4d74-b3d4-fd833a9372e1"
        },
        "item": {
          "id": "9d6ccbff-343a-41a3-bc89-05384123fa61",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dfc6d09e-7736-40c4-9321-b6f517c085c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e64c235-135f-407a-a03c-d38829007ad2",
        "cursor": {
          "ref": "129c047a-94e9-4215-abec-e6779264148a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5d5d2192-979b-4c3f-9c2f-9a620408253a"
        },
        "item": {
          "id": "6e64c235-135f-407a-a03c-d38829007ad2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe09a2a3-39c5-4dc8-afcc-78f8cedda804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a79a4ed-ade4-4892-b2ce-4156eeb3d7e6",
        "cursor": {
          "ref": "18cddb1a-e133-4736-8d73-df553c5364c3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8adc91bd-bf47-47a1-8241-473a74c86399"
        },
        "item": {
          "id": "7a79a4ed-ade4-4892-b2ce-4156eeb3d7e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4133a3e1-6cb3-4f2d-904c-02349d5ba18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235dd7cf-7e08-4e21-828d-d1c90fac3d31",
        "cursor": {
          "ref": "d659172d-ff81-45b4-94bf-da00107723e4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4aeddfa1-ade1-42ad-941b-ccb10c3e1a30"
        },
        "item": {
          "id": "235dd7cf-7e08-4e21-828d-d1c90fac3d31",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eed73c81-400f-42c1-b832-fd86caaf8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd09f1c-4e1c-4f9d-a258-77c0c6164ac8",
        "cursor": {
          "ref": "89028a2a-d295-4934-9810-b8da589c2a75",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "84610872-b5a1-4de1-a106-781123b4eb7e"
        },
        "item": {
          "id": "4cd09f1c-4e1c-4f9d-a258-77c0c6164ac8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb154e06-7e70-47ed-832f-d88e38ab63e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e36c32-bbf5-4dbb-9857-59def2e09629",
        "cursor": {
          "ref": "45171007-da8a-4bb0-9c0c-6093e62a621e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eaa89db9-577a-4604-89aa-ef0123ca2fd6"
        },
        "item": {
          "id": "56e36c32-bbf5-4dbb-9857-59def2e09629",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ab2cf50-ccfd-43d7-b8fe-799dee9bd185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a02910-9872-42ec-8485-3104a8ffb25d",
        "cursor": {
          "ref": "0d5c1edb-c7af-41a5-9eb9-ae5bb32f5f3d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "64ca9025-099e-47ce-989b-91c741921071"
        },
        "item": {
          "id": "73a02910-9872-42ec-8485-3104a8ffb25d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "22943cf3-d98f-438a-be58-a2c79c48e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f340c9a7-5c0d-4285-9d13-ec596c213fbb",
        "cursor": {
          "ref": "519665ac-0d12-4239-a020-00d97da25cea",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "142e0919-1ab2-4da6-aa85-248fcfa1c744"
        },
        "item": {
          "id": "f340c9a7-5c0d-4285-9d13-ec596c213fbb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26c44942-107b-4712-a57f-bddd210df3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35456852-15c8-4331-9583-fde8b1f8ef95",
        "cursor": {
          "ref": "89feaf14-4deb-4a93-a213-4a631795eb4c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6fcbbec0-f849-412a-8020-7a66536390c1"
        },
        "item": {
          "id": "35456852-15c8-4331-9583-fde8b1f8ef95",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88d441de-7aa1-4b26-91db-36c9bcbd429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a3e548-acbd-45b5-97a3-aba0a24f1c2e",
        "cursor": {
          "ref": "daee3e28-52dd-4453-8f90-4717d907800e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f6b81906-6a9f-475a-8dc7-ac5573d28f6d"
        },
        "item": {
          "id": "18a3e548-acbd-45b5-97a3-aba0a24f1c2e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9b716824-277e-4875-a155-7d907088c581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97abb99d-f823-4fe7-92eb-b667a34b26a9",
        "cursor": {
          "ref": "2c4d2e06-2e41-4f2b-a7b6-df62cd41c543",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1ced6467-5b1d-4ced-a3e7-bb19109a36d9"
        },
        "item": {
          "id": "97abb99d-f823-4fe7-92eb-b667a34b26a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "621be163-809d-46ed-9ff8-3c289eed2711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2453431f-86e0-4033-8a3a-6237fab028d5",
        "cursor": {
          "ref": "a74e1ebf-bbca-4546-96c6-c2baf0b9f45e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "daee89af-9cd8-4e89-a788-79b9d81172b5"
        },
        "item": {
          "id": "2453431f-86e0-4033-8a3a-6237fab028d5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6caeb677-9ae4-4b4b-b592-cab04afb1389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c926e8a7-88f9-48db-9076-61597e363b69",
        "cursor": {
          "ref": "96ab4312-8a69-40a8-88a0-5196cb97a9fe",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a86d5f37-bd75-4406-bb14-edbafb4ddf31"
        },
        "item": {
          "id": "c926e8a7-88f9-48db-9076-61597e363b69",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a1e230c-ef95-40d3-8166-0ea7a2f8194f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52fe40c-7dce-434d-ba59-250b2064c992",
        "cursor": {
          "ref": "7f8b3a88-5177-49ec-899c-ae64103a6073",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b64c10c9-5341-466a-92dd-10ae2a363051"
        },
        "item": {
          "id": "b52fe40c-7dce-434d-ba59-250b2064c992",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "16aca746-b40d-4216-a472-1d53d1c87600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf67d49-1708-4960-b104-51e174fe2a2e",
        "cursor": {
          "ref": "00b2493d-aca1-4d57-aa2a-60d3a2ba20f6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f9777a2b-4aee-4d9d-93bb-8d2cd3b717d0"
        },
        "item": {
          "id": "0cf67d49-1708-4960-b104-51e174fe2a2e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d4a03c8-fc02-42b6-9174-5ce2035fa7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c580ca93-a850-4ad1-9056-135e2492ac3e",
        "cursor": {
          "ref": "94c43c15-7096-447c-a0c7-9ccceac640b0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4a69b521-3037-4ed5-8caf-cae77b50c0fa"
        },
        "item": {
          "id": "c580ca93-a850-4ad1-9056-135e2492ac3e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c44be14f-ec91-4f28-a828-c7948ad522d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4c0817-cf80-4999-b5aa-f0ea8fa555b2",
        "cursor": {
          "ref": "4fc0ba12-654c-4c01-a651-0b7cfd91475e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a093e81f-be31-4634-9c81-ba4620904db2"
        },
        "item": {
          "id": "fb4c0817-cf80-4999-b5aa-f0ea8fa555b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "108657ec-65d5-468f-a48d-1159dba43ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b718dc7c-655b-4d83-bf48-fa624e4f0fe2",
        "cursor": {
          "ref": "80a92a81-18b9-43fc-9d68-ad43f393bf58",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "40a5e449-f641-4633-8618-b7fa6865c609"
        },
        "item": {
          "id": "b718dc7c-655b-4d83-bf48-fa624e4f0fe2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b240251d-dd46-4919-9c2e-6dbd2d0adb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e71d6c-9e5b-4ce0-bb3c-4d84c62c60a3",
        "cursor": {
          "ref": "879b84b5-ab31-44f1-9101-aefd0330c790",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6afeee0c-1cee-4427-9d41-ceb9aa3be0d3"
        },
        "item": {
          "id": "60e71d6c-9e5b-4ce0-bb3c-4d84c62c60a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1e34055e-3b87-45bb-b0cc-8feb45b6802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8418fa-06f4-4bce-8d24-7953fd0b2bcf",
        "cursor": {
          "ref": "bf5fdf8d-6099-4fe5-91d4-48b414b2487a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8b9a8d0e-c6a7-4239-bf65-fa9a7177dee5"
        },
        "item": {
          "id": "af8418fa-06f4-4bce-8d24-7953fd0b2bcf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b9909d1a-9c83-4a77-bf69-d9dcd2ba8640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d288d0-1f25-4efb-a36a-b278aa137dd4",
        "cursor": {
          "ref": "6958f3cd-b8af-45c7-80a7-e94ee4864534",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8166977c-f855-49d4-8ebc-0dac49beacb5"
        },
        "item": {
          "id": "e7d288d0-1f25-4efb-a36a-b278aa137dd4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f381ec65-59e3-4da1-baba-8be74d68bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cebe1d8-b420-4be6-b58a-a8f50f1a1dd6",
        "cursor": {
          "ref": "97e81bb3-7852-4600-82f0-bd4ea6551a65",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a9bba87-e43a-4ce8-818a-176ffab69098"
        },
        "item": {
          "id": "8cebe1d8-b420-4be6-b58a-a8f50f1a1dd6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1900bda3-fb1e-423f-a7ef-05861ccfb785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201fc048-051d-46fd-96c2-cc7b5006828f",
        "cursor": {
          "ref": "1f2fed8f-dc0d-490b-8a83-52128d9157f5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58b51625-8196-4809-8edf-237677b4528f"
        },
        "item": {
          "id": "201fc048-051d-46fd-96c2-cc7b5006828f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d08f151b-8615-4e2d-8389-4d15909e5e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ee0ff3-01a1-4766-ba9f-0954f8586bf7",
        "cursor": {
          "ref": "780f6e6e-49c7-47d5-b898-0cd697aa8ed5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a515fc88-4de3-4a8f-87c5-aa33f44c4850"
        },
        "item": {
          "id": "a9ee0ff3-01a1-4766-ba9f-0954f8586bf7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "33b66351-daba-45e1-81e3-8a2760445416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9693b0b-3447-4074-b800-daf5b20a7277",
        "cursor": {
          "ref": "77a7b27d-38ba-4b3a-b950-a6ea8322cd39",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9780ed17-dc6f-4123-9f24-a2f61958fcf5"
        },
        "item": {
          "id": "c9693b0b-3447-4074-b800-daf5b20a7277",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ef2fe44f-0069-4d7a-8631-5cf50f314ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8848ee8-5c25-44c8-b646-b09a305eae2c",
        "cursor": {
          "ref": "a06c120d-631e-4cb8-9d00-7b858721b17b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1b543349-fa2f-47cc-917b-c9256a6db1fb"
        },
        "item": {
          "id": "e8848ee8-5c25-44c8-b646-b09a305eae2c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bd46b39-75f4-4552-9a33-48c5f2c3c95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42c51f-16aa-40f6-8f03-fe0c8827823e",
        "cursor": {
          "ref": "5d57f41a-1d4e-4e5f-bb11-1764ccc4daa9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2f580d8-8745-4709-ab06-c2695e15a73d"
        },
        "item": {
          "id": "2e42c51f-16aa-40f6-8f03-fe0c8827823e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d98cd318-e4db-4542-932c-1ae8e68e4529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919ae806-5850-4e35-955d-1967bae3cb3c",
        "cursor": {
          "ref": "b3498fdc-f331-4f86-95cc-374000d25782",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3210902b-2ad4-4462-bad0-9ff8f9801da3"
        },
        "item": {
          "id": "919ae806-5850-4e35-955d-1967bae3cb3c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "073a6859-8690-4338-93e0-96aa0a492487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7a284d-1c81-4be7-ace6-74d145cb2ce8",
        "cursor": {
          "ref": "1797616a-e9cd-4bd0-bddf-1aff97a4f114",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c526b508-e701-4d10-93e1-d4aa77a9dbd5"
        },
        "item": {
          "id": "fa7a284d-1c81-4be7-ace6-74d145cb2ce8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1edeef11-9fd0-44f2-8cbb-e9653ae22d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6f7d8d-289c-4112-a76a-756d65f89b21",
        "cursor": {
          "ref": "187d8380-0377-4dc3-9977-03888fa4f026",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e036e4c3-52ab-4118-b76e-e51d2be506ed"
        },
        "item": {
          "id": "9d6f7d8d-289c-4112-a76a-756d65f89b21",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "89344920-455a-48f5-bab7-5741dde48077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff90594-cc06-4ce3-86ef-b5556a402137",
        "cursor": {
          "ref": "a78970be-95e4-491d-9bf6-07681a41907f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "60e26576-9e9c-4ad9-b5d9-7c2b608df375"
        },
        "item": {
          "id": "aff90594-cc06-4ce3-86ef-b5556a402137",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9130473-0d2d-4d87-ba44-0ece23283aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825068bc-b33b-4eb5-96bd-79aa42973369",
        "cursor": {
          "ref": "749d4132-6d62-4351-b20f-33168171a77a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ebdf3140-2c5b-4cf1-b5e8-44f1d8576aa7"
        },
        "item": {
          "id": "825068bc-b33b-4eb5-96bd-79aa42973369",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0ba4f3f4-2506-4821-b5f2-b6b35b3f6d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ae29b-0291-40df-95e7-872c97ee8d30",
        "cursor": {
          "ref": "b66a4715-d4f7-4736-8206-57364ecd9f44",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8e6e826f-b24f-4a99-a7de-254e7b811125"
        },
        "item": {
          "id": "6e0ae29b-0291-40df-95e7-872c97ee8d30",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "37514450-b2df-4fc6-a1a9-2e72f3f54edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dba1604-6c01-45be-956f-b43468d17e08",
        "cursor": {
          "ref": "223d26c3-6ad6-4227-a736-6fe3467e7872",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ea622569-10e1-40d5-994b-8e343600ef8c"
        },
        "item": {
          "id": "9dba1604-6c01-45be-956f-b43468d17e08",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "536f541b-3251-449e-86dd-45754766380d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f176c2e7-1e63-4bbe-b924-f04ffccf7785",
        "cursor": {
          "ref": "22b898dd-d184-48e7-bdf4-402109515a4a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e4703d3b-166f-4f07-8cb5-86595be850ff"
        },
        "item": {
          "id": "f176c2e7-1e63-4bbe-b924-f04ffccf7785",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3228256e-0402-48f8-bd3c-2a388b9f722e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1d378f-77a4-43ca-bf8f-8e51e7cf7dc6",
        "cursor": {
          "ref": "b35f3bbb-dbb6-487a-acf2-c27a1fc0fe40",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35b92421-0da8-43b5-a90e-a087cbe6aab1"
        },
        "item": {
          "id": "5f1d378f-77a4-43ca-bf8f-8e51e7cf7dc6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d7bf0ace-2e7a-459f-8648-cbfc05027665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54617c3b-7da5-47fa-b5cc-2d7f4a01dcb1",
        "cursor": {
          "ref": "1c99e080-8d82-426d-89b0-2e6d3b656b56",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fcdb5acd-576f-456b-9470-5cbf70c2b64d"
        },
        "item": {
          "id": "54617c3b-7da5-47fa-b5cc-2d7f4a01dcb1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "880b11a9-1a21-436c-bf1b-b39ddc7f1e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4586cdcf-79ea-4d0f-88fc-8b112fbdcc46",
        "cursor": {
          "ref": "481efd71-9caf-46e3-bcc1-ad49fc3aebbf",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f58b987d-be5d-48ec-907b-ebcc853a4389"
        },
        "item": {
          "id": "4586cdcf-79ea-4d0f-88fc-8b112fbdcc46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "82e09128-e254-418d-928b-880cc2b5fc83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f7ddcb-412f-484f-ab79-24b2fc3c4855",
        "cursor": {
          "ref": "0aff45b2-1a83-4a8e-a7fe-4c88876b85a5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "37bd69e6-21d0-4d29-a17c-61e39252d52c"
        },
        "item": {
          "id": "58f7ddcb-412f-484f-ab79-24b2fc3c4855",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6cf82c0c-69da-4f5d-b66a-01e5571d10c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48d51ce-6e0f-4f24-a9c4-1ba7e543a918",
        "cursor": {
          "ref": "560eec1c-6db8-4b16-a8f6-12228d55b479",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a4db1d20-ff36-4dd8-83cf-f02655bcb6ce"
        },
        "item": {
          "id": "f48d51ce-6e0f-4f24-a9c4-1ba7e543a918",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ffb817cb-ac06-4678-aa39-47dce64eb3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7634e711-cd45-46a4-a93c-6482ec4b2bab",
        "cursor": {
          "ref": "a6c7707c-c223-4d74-a5ab-c8c469248c5b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "89aeb656-91d9-4709-bbee-b793aafba2d3"
        },
        "item": {
          "id": "7634e711-cd45-46a4-a93c-6482ec4b2bab",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dd3bcbf8-917b-42f3-b847-220468ca4f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb876901-c785-4ac7-9a98-811b5b09c209",
        "cursor": {
          "ref": "0930af33-d6b5-4988-b777-8489ea0b5faa",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "10b1d253-b646-4265-a426-06ce4b6d2766"
        },
        "item": {
          "id": "bb876901-c785-4ac7-9a98-811b5b09c209",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "02ed90c3-3eed-4fb7-8c04-61ee14ad3939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f67d68a-e4a9-4f96-a14c-1226ae71961b",
        "cursor": {
          "ref": "5b124ba7-d6eb-48dd-8a1d-0e99b8edf6c8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "53395229-a3fb-498d-94a3-cbbe50cdf57c"
        },
        "item": {
          "id": "3f67d68a-e4a9-4f96-a14c-1226ae71961b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "55015e8f-18dd-4f9f-865a-f7fcee3ba2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e502b3a-69ec-4212-9eef-62fb831ed98f",
        "cursor": {
          "ref": "9041861f-6137-491e-a595-01af2f7d322b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8b899ba9-2bf6-44a9-8d8d-9fe5f622c17c"
        },
        "item": {
          "id": "5e502b3a-69ec-4212-9eef-62fb831ed98f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "af17b834-61bc-485c-9f9f-97ba186d609f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf2dfe-e598-4f79-af5c-1c5433e4f86c",
        "cursor": {
          "ref": "71dfdad9-5ff1-4e51-9c52-8b68a02cb6ae",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "630b4407-c650-4e88-8233-00e4a44b4739"
        },
        "item": {
          "id": "90cf2dfe-e598-4f79-af5c-1c5433e4f86c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d1eab150-e7e3-4bee-8270-bf21d1722f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d892dd9c-d6ee-48cb-90b2-50a48e793824",
        "cursor": {
          "ref": "dbf25ba7-11b0-4337-b999-f5310302a125",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f578598d-640b-4ce2-8e3c-cef1744a2da5"
        },
        "item": {
          "id": "d892dd9c-d6ee-48cb-90b2-50a48e793824",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "82799e43-d921-478d-9416-701929c55928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673de7ca-3236-4973-9a66-545433b2c176",
        "cursor": {
          "ref": "033a2a34-e91a-424f-9175-19835a5208e2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "09b5c382-cbc7-449b-99ed-9e28eb7139ed"
        },
        "item": {
          "id": "673de7ca-3236-4973-9a66-545433b2c176",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "45cd8204-61a8-48df-a2b5-c2f75a5a4def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95160974-7a18-4685-9a97-5f78f12b2906",
        "cursor": {
          "ref": "f5181341-a0b1-429c-8663-31f18539dacf",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2b6eaa68-f2b1-4380-ab2c-bb60b0a24432"
        },
        "item": {
          "id": "95160974-7a18-4685-9a97-5f78f12b2906",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f0a4da8e-d852-4a37-8252-57cfde8386e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11bc9f6-8906-4a8d-a53d-c1ea4ced3f15",
        "cursor": {
          "ref": "46efa1da-b45b-4d7f-b8ba-5b5cfbd3217f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "77406b49-83e8-4af2-bf5b-25c4463fc893"
        },
        "item": {
          "id": "e11bc9f6-8906-4a8d-a53d-c1ea4ced3f15",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cc101b05-a307-4d35-ba08-20aa34ef123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271495c3-3740-480f-9c3f-b49876075229",
        "cursor": {
          "ref": "412c22be-c4ba-427f-a756-2f5ff3398126",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "200ce964-d16f-4156-971e-b662c0aa1509"
        },
        "item": {
          "id": "271495c3-3740-480f-9c3f-b49876075229",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7cca9e4b-e825-47e4-bed3-c2187398efad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bee636-a4f2-4552-9136-8ae06a4b4303",
        "cursor": {
          "ref": "b5193d78-4f13-4c3b-a89f-dc30354796d5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "67306d1a-7831-4ca8-8440-7343a32b01d3"
        },
        "item": {
          "id": "08bee636-a4f2-4552-9136-8ae06a4b4303",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4c9bc5f2-2433-4f8f-8948-40f48dc9c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf3d75e-e342-459b-be6c-2b79faa033ef",
        "cursor": {
          "ref": "d02431d0-417d-4155-b1a0-3040eccf67e3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e4aec7c7-3758-48c4-84f5-07241d1f4933"
        },
        "item": {
          "id": "7cf3d75e-e342-459b-be6c-2b79faa033ef",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d88fae13-c27a-49d6-89c7-827eba7b1473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727a2080-b1f7-4a8c-a122-a8f5cf6c8027",
        "cursor": {
          "ref": "efbbf5bf-a489-4ddf-874e-a79a9c3f824b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c39953d8-df29-4b55-98f7-7ca2fa6d5501"
        },
        "item": {
          "id": "727a2080-b1f7-4a8c-a122-a8f5cf6c8027",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30c01a09-5144-4841-b138-3dbe6be49207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2016ea2-a171-4ad8-b396-f397ebd735d6",
        "cursor": {
          "ref": "b80ff169-f5c0-4276-8e2c-9ff7ffdef614",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "549ae3b8-1f5e-4239-a1c0-b85869a8a680"
        },
        "item": {
          "id": "a2016ea2-a171-4ad8-b396-f397ebd735d6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20cd76ee-5eb0-4354-bfd9-0427755ba202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa4ed7-0a05-4e10-aab2-fb21049d052d",
        "cursor": {
          "ref": "c49922e1-4abd-4199-8275-55bba52110ac",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5db4311f-0891-415a-b9b6-3569e27e6b1f"
        },
        "item": {
          "id": "33fa4ed7-0a05-4e10-aab2-fb21049d052d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "67e07a94-61a0-4272-930c-d64e13e331c4",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "509cd35d-680e-452e-8956-5f8ca7cd71c3",
        "cursor": {
          "ref": "d7f9d511-f037-4913-8e29-0ca228e58c5b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3c6191c2-64be-477a-ae5d-cd9ac11f3a77"
        },
        "item": {
          "id": "509cd35d-680e-452e-8956-5f8ca7cd71c3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6e362c15-7d96-47a8-89da-3668032ec268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875e63ef-b5ae-46fc-be67-0e6a06ef88d2",
        "cursor": {
          "ref": "3c5d5c89-6065-42aa-8b12-18e04d9394c9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d2214ef5-582e-40c9-bb28-b3d989db3c32"
        },
        "item": {
          "id": "875e63ef-b5ae-46fc-be67-0e6a06ef88d2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4a4c3c2e-2c4a-46cf-bba6-c194ac367856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c95c10-65a7-4d08-8fe0-91a98a264b50",
        "cursor": {
          "ref": "aa261e70-adbf-4852-bacb-4a360f13b89d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7247ac1c-cdaa-4fdb-8651-c9432b0a2f5a"
        },
        "item": {
          "id": "67c95c10-65a7-4d08-8fe0-91a98a264b50",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "53591146-3e81-44e4-846d-4bdd6b34e57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63bc558-446b-4900-af7f-cb11a089e1ae",
        "cursor": {
          "ref": "f853afc1-bc69-4907-9533-a2fdde219d19",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "192ae78b-df5b-467d-bc04-c3ca247e1aaf"
        },
        "item": {
          "id": "c63bc558-446b-4900-af7f-cb11a089e1ae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19141adf-2cf7-4697-bafe-50ae75efc4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550f2d1-1056-438b-984c-34c6d3a182f4",
        "cursor": {
          "ref": "0bc71cdb-0d58-4c74-9b11-e7ba1c8ea24f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2fcac1e4-a195-4c6d-a45f-e97b877cab19"
        },
        "item": {
          "id": "d550f2d1-1056-438b-984c-34c6d3a182f4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "83145675-c8af-4a31-b365-e71825c43556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe98d991-b766-4a2b-8367-256d7531d78a",
        "cursor": {
          "ref": "be05ad91-28b8-450b-8e91-0280112b8da5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1958498b-15dc-495a-badb-bfd0153ae44e"
        },
        "item": {
          "id": "fe98d991-b766-4a2b-8367-256d7531d78a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cbf66661-db06-42bf-9f22-5671c01dd360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d94e123-8548-40df-a4d8-4c8ae1884060",
        "cursor": {
          "ref": "0f4f0566-e7e3-4214-8ad1-1ac94651597a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fa114091-abe0-4123-9321-5b25a4f4614a"
        },
        "item": {
          "id": "3d94e123-8548-40df-a4d8-4c8ae1884060",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5aead44f-087c-4da3-903b-609eb74d64d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47fa37a-faef-4963-97fc-a2606805034a",
        "cursor": {
          "ref": "04f03e6a-0b2f-4172-b779-c92eeb4f4723",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c8a69188-0122-4133-abb3-514c19c7cc06"
        },
        "item": {
          "id": "d47fa37a-faef-4963-97fc-a2606805034a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b60b9979-3736-4b39-b2b9-c12f083f4fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92724a7d-c790-4c09-8565-7e0dd7be8d6d",
        "cursor": {
          "ref": "861a3d94-a3df-4448-9549-f27948e59dc8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f26ee0f7-6ba8-4d89-a52c-ca92d98c1ac9"
        },
        "item": {
          "id": "92724a7d-c790-4c09-8565-7e0dd7be8d6d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "04301c53-b226-4f2a-aca9-ff832866d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf89e5-f154-4ef3-a929-f4ed33b876f7",
        "cursor": {
          "ref": "2e41b38b-529d-4507-9c00-65b6ca84dae2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7a2afdee-799d-4565-8860-3e2c7dd86034"
        },
        "item": {
          "id": "7bbf89e5-f154-4ef3-a929-f4ed33b876f7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dcae2f89-db64-4051-9717-677ede1b8bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c325d475-8bc7-4983-9184-28e52f497faa",
        "cursor": {
          "ref": "5618fb85-869f-49ac-9318-5738ad69f47e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a894a6c7-fe07-463c-bd71-eef3db8b05d3"
        },
        "item": {
          "id": "c325d475-8bc7-4983-9184-28e52f497faa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a6372eb1-44bf-4d08-9143-cd833903782b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61429d7-2b77-450e-a3b6-e405d42b5a62",
        "cursor": {
          "ref": "fc8073f7-075d-4cd1-88c5-77998788e2d5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2c8e878b-f3e4-4c3c-9166-2c610f8c2523"
        },
        "item": {
          "id": "e61429d7-2b77-450e-a3b6-e405d42b5a62",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9cc8bad9-d003-4401-8f84-e6c9dab7e5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea163d87-6bc6-4877-a40f-be4f2782710e",
        "cursor": {
          "ref": "aaf9151a-54a5-4da2-8e7e-d5d5f6f02c12",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "05632a82-f375-4e68-99c1-e6cf5b675a9a"
        },
        "item": {
          "id": "ea163d87-6bc6-4877-a40f-be4f2782710e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6dbb2718-446e-4089-abae-28049bca6726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c835a0b-1617-4320-83c6-5e2c343ce5ac",
        "cursor": {
          "ref": "bb84d0d2-386e-44a6-a1a3-9b79391e1653",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "923a2442-f447-4faf-a4b5-16141589a748"
        },
        "item": {
          "id": "9c835a0b-1617-4320-83c6-5e2c343ce5ac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4e095917-5fb9-430a-912a-5202807c8de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8911fe-45a4-4265-9c0a-c6768b18b460",
        "cursor": {
          "ref": "618a7fef-fdfc-4990-9d51-e60c1da1d85a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f13b8651-3b9d-4892-a662-b3157d26faaa"
        },
        "item": {
          "id": "1c8911fe-45a4-4265-9c0a-c6768b18b460",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "847aff91-f0d4-412c-99dd-faac992b6267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e11906-19fe-4041-8f4d-2410b937217a",
        "cursor": {
          "ref": "5d8c4c80-9d42-4edc-af80-09eb1907186e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "164dd47d-9047-4da9-804a-05ef239479da"
        },
        "item": {
          "id": "43e11906-19fe-4041-8f4d-2410b937217a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cc2ad234-6ea5-4f2f-b155-4763f16eb501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d0e8e9-53c5-4e73-ac70-5511504839a0",
        "cursor": {
          "ref": "3abadd90-4ebd-409c-aa4f-0ba8afdaac92",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5d0efa92-5d2d-4118-8f67-5b0d87f6e643"
        },
        "item": {
          "id": "83d0e8e9-53c5-4e73-ac70-5511504839a0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a8f44245-6a7b-4436-bcba-32debee032f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e8131c-e385-47a7-8fdf-35a7d9020e62",
        "cursor": {
          "ref": "c44924d1-d460-4789-818d-cc31e4525394",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "05d2da99-0b1d-462a-af00-72401996cdfe"
        },
        "item": {
          "id": "64e8131c-e385-47a7-8fdf-35a7d9020e62",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1a9a4517-e358-42a4-b6f0-ef1a3db800df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1573bae7-2a96-441c-8d38-eb7f6bcb28a3",
        "cursor": {
          "ref": "8b54fa0c-ab3f-4d5c-a7fa-bd7d523cc151",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0790d667-5b85-4926-a423-61fbc51fe97b"
        },
        "item": {
          "id": "1573bae7-2a96-441c-8d38-eb7f6bcb28a3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5d3174ee-d8be-4c21-8bb5-7e5a8791ffd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b116f9-6e3f-40a3-bbb5-90aa186232d4",
        "cursor": {
          "ref": "aee68c0d-5603-4c4b-ab99-5d2cff99298c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e364854c-6720-41df-ba0c-274166b1f9ba"
        },
        "item": {
          "id": "28b116f9-6e3f-40a3-bbb5-90aa186232d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b6666a90-036c-49b8-9add-f2267d5b13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e06426-2dbc-4139-aff4-fe4cfd57092c",
        "cursor": {
          "ref": "aa3a6dd6-ec12-4306-9983-970f231593b3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8cfabb2d-3d0c-4e52-b9ba-3a92022c2c82"
        },
        "item": {
          "id": "84e06426-2dbc-4139-aff4-fe4cfd57092c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5e6a2b01-4fee-4a58-b9ba-756900a218a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea6c4a4-e541-4be1-8d7a-9d6cdcc1812c",
        "cursor": {
          "ref": "97db8009-b88b-4692-8a91-8b5061dae96c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f39fd68a-b0e1-4a2e-a0df-b315391b6e88"
        },
        "item": {
          "id": "dea6c4a4-e541-4be1-8d7a-9d6cdcc1812c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aedb0f2f-0d9e-44d4-87aa-8d6a9fabef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114bf0c7-14e3-4695-b3f0-ba66cefd9837",
        "cursor": {
          "ref": "3d4b018d-bc16-44a0-9d4d-6f537c2265e3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "007e0770-858b-41b8-943d-2caa40e02f67"
        },
        "item": {
          "id": "114bf0c7-14e3-4695-b3f0-ba66cefd9837",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4e000c77-9e11-4e7b-83b0-afe6ec3ae3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03912b79-76dd-4306-a53c-973477463cc3",
        "cursor": {
          "ref": "40d0ddb9-75e7-491f-b01d-dc43a1861770",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "273cdee3-3627-4981-b53b-7a4fba0d6f9c"
        },
        "item": {
          "id": "03912b79-76dd-4306-a53c-973477463cc3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b273be2f-ddfa-4a06-9dd4-bfc7a00776b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9bf6f1-3f47-406e-bd18-a30eae3a3bed",
        "cursor": {
          "ref": "06ca9bb8-cb75-4e74-8ffc-8bd26b1a8094",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "84293283-cb49-49ab-b251-834c43d3d969"
        },
        "item": {
          "id": "6b9bf6f1-3f47-406e-bd18-a30eae3a3bed",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "47be2084-978b-46d5-8546-ad9e267af932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1927fbee-0e91-4791-9990-81cc899d3c01",
        "cursor": {
          "ref": "36dde6ab-ca28-4a5f-a021-095e9de13bd6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0b521417-1224-4490-8db8-8392ab2a60bb"
        },
        "item": {
          "id": "1927fbee-0e91-4791-9990-81cc899d3c01",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7e9a5f52-34ff-44e3-b08e-8f882ad08525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50db9a80-2d0b-4105-9b9c-7ed937aba413",
        "cursor": {
          "ref": "8b52dee5-3326-4413-bdf5-77f1417c0064",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "528e5883-9d71-4276-92b7-d7675acb1448"
        },
        "item": {
          "id": "50db9a80-2d0b-4105-9b9c-7ed937aba413",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "39a67496-050d-4b1f-8a8d-5e1543bdbec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ad3d2a-24e7-4619-b8a9-395c8ea99006",
        "cursor": {
          "ref": "38b95109-82bf-40ee-ad64-d3f0223848cb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fc29ab34-3973-427d-ae1a-4d8c2ce2eda8"
        },
        "item": {
          "id": "66ad3d2a-24e7-4619-b8a9-395c8ea99006",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "81a451fe-a9c0-4d92-b434-effe4cce8de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8ce298-0a88-4b71-9a93-bb8180b919e3",
        "cursor": {
          "ref": "eb999354-f448-43a9-85c5-3147a41c6aa1",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ac907ada-0b79-447e-86a2-7682c2ac518f"
        },
        "item": {
          "id": "ee8ce298-0a88-4b71-9a93-bb8180b919e3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "345467fe-d3b4-4a96-9411-d595f58de849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5afbf1-c7e0-48c5-a0cb-532e3adece68",
        "cursor": {
          "ref": "597e99a2-7fbd-4f09-bf9a-e4be24f3d031",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c0953275-1a37-4708-b573-a846561263cf"
        },
        "item": {
          "id": "1c5afbf1-c7e0-48c5-a0cb-532e3adece68",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b09e2951-dd68-4509-bbd5-6f60f3102f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bdf7b5-52ca-4f55-b356-930ca808ceb2",
        "cursor": {
          "ref": "bb024bff-1e7a-4d34-afaa-19bca4f6c575",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7aa6ec33-62b3-4f46-a551-05541f72f456"
        },
        "item": {
          "id": "74bdf7b5-52ca-4f55-b356-930ca808ceb2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bd30bbf5-3154-4fea-b71f-51c2cb4020a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07a8330-d474-4c52-beba-9ca9b9b5212d",
        "cursor": {
          "ref": "ab2ed908-3d24-45fa-9d68-fbc75a2a0b89",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9276d2f4-00db-4a37-a33a-a64af36e53e9"
        },
        "item": {
          "id": "c07a8330-d474-4c52-beba-9ca9b9b5212d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0668acbc-4e75-459c-a486-711c9bf1c4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b38ff85-a293-4f3e-b040-0efb141889ea",
        "cursor": {
          "ref": "94256c26-d3fe-4835-82e9-772c6a2ac9dd",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e5f61f76-75eb-4e2c-a062-759f9fa0fb00"
        },
        "item": {
          "id": "7b38ff85-a293-4f3e-b040-0efb141889ea",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "310f0772-7e91-45cf-83e1-aca9f74c73f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f668b3b2-c733-4bfe-a997-f00b8d15a7fc",
        "cursor": {
          "ref": "512c8024-5cca-4a65-946e-075332c5a5f9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "070cdd2f-f8f6-4ef4-8e18-20c570f67869"
        },
        "item": {
          "id": "f668b3b2-c733-4bfe-a997-f00b8d15a7fc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "82c1e909-30f4-4242-ae36-f761d4efc42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79393dc7-6236-490f-b756-3dbbe47917fe",
        "cursor": {
          "ref": "9016bc6e-f3cc-48d7-9aaf-d395a872c326",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2a5edaeb-9cbf-46b1-bed8-d180764583d4"
        },
        "item": {
          "id": "79393dc7-6236-490f-b756-3dbbe47917fe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7275cb86-ef1d-4fc3-a20e-fc898bce605c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aa0d9c-34c5-4e65-afb3-ded42688bef5",
        "cursor": {
          "ref": "0eb6702a-aa07-438a-ba69-da5ead3ad4a2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac3d0756-a0bd-4649-99f1-bb7066302d02"
        },
        "item": {
          "id": "10aa0d9c-34c5-4e65-afb3-ded42688bef5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "edfd97cd-83f7-4459-810e-309ecc77c287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b746c37-020a-4ef5-ae9b-263409d3dc4e",
        "cursor": {
          "ref": "e6601232-9a46-4ec6-bf7a-38418662f4bd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "abfcfa86-d9db-428d-b679-72bb8123eb91"
        },
        "item": {
          "id": "6b746c37-020a-4ef5-ae9b-263409d3dc4e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dc607f66-2ac0-45a7-b8d5-32a189620a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c50c47-3696-4ef2-a690-3273b8a53015",
        "cursor": {
          "ref": "cd780729-de49-4ccf-b047-ed70cadb9670",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "856e4740-9973-4c4b-9a32-98c0a13d2ddc"
        },
        "item": {
          "id": "f4c50c47-3696-4ef2-a690-3273b8a53015",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cd8f99c9-a716-4a58-8ac5-5ad2e60af589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bc26e0-028b-4191-91a4-4375b59b8484",
        "cursor": {
          "ref": "eb14fb6f-1e02-45b5-ac30-a05c5fb47652",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3b01c575-2f0d-438d-b02f-8cd9177d1a41"
        },
        "item": {
          "id": "49bc26e0-028b-4191-91a4-4375b59b8484",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "786c8d88-61cd-4b14-9154-43b945bf3347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e71a097-0f14-4202-9c02-0f4627f7ad4f",
        "cursor": {
          "ref": "ff1f883a-91c6-4efc-b75b-9fde0a70e7cf",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c227944a-02a0-4476-a91c-68ac9482184a"
        },
        "item": {
          "id": "3e71a097-0f14-4202-9c02-0f4627f7ad4f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "25d1e8cd-4aea-4016-8985-7c601a56bbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a5dc15-1331-4c45-87f1-c206106768be",
        "cursor": {
          "ref": "0557f9d6-7193-4a5e-b9e8-c60f0a967d61",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ecdd8196-6d92-47d3-9f5c-caa5de40d8ae"
        },
        "item": {
          "id": "32a5dc15-1331-4c45-87f1-c206106768be",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2f135288-4d8b-4a10-ad21-81608f09c16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80627ccd-bd98-42ea-a794-cb8b70d1be2f",
        "cursor": {
          "ref": "17803f83-50ee-4948-a885-4be45f7dab1c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a32708f7-a989-4a7c-8806-84a177462744"
        },
        "item": {
          "id": "80627ccd-bd98-42ea-a794-cb8b70d1be2f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a3546fe5-9af7-4c4e-bc01-971a5a2c49df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542d60b-76f9-4be9-824d-d92a7def34a2",
        "cursor": {
          "ref": "3193d8ea-6c95-4040-a7ff-1de2aefea196",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b22a59e2-e720-4cda-bf75-0c56db13473f"
        },
        "item": {
          "id": "3542d60b-76f9-4be9-824d-d92a7def34a2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "84492c3c-ec62-475d-90e8-cb7939ee75c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a49536-92a3-4190-bcd4-d5940212d5eb",
        "cursor": {
          "ref": "2c2ad9ce-44c3-4749-9a33-6fc19b179714",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eb1861e9-54f7-4514-94ad-ec2cb0f93ca6"
        },
        "item": {
          "id": "e7a49536-92a3-4190-bcd4-d5940212d5eb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d3931435-3d43-4fb2-95af-29c3243807f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9c57aa-a218-4030-bc81-edb490546359",
        "cursor": {
          "ref": "6733d129-ff6f-483f-9773-eca46dc4969d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e83f6ebe-6db8-4aa9-91ce-a5d3d547ac97"
        },
        "item": {
          "id": "1a9c57aa-a218-4030-bc81-edb490546359",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cffc6f3d-99b8-49a2-88a4-ecbefaeef9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cf2950-4585-49ad-bb67-80c30db968f7",
        "cursor": {
          "ref": "4f111f74-d076-420e-bcaf-318f84003b39",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "beb61a6b-d971-4a28-9bba-3d5592e0343f"
        },
        "item": {
          "id": "b3cf2950-4585-49ad-bb67-80c30db968f7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cf0dc290-727e-4447-9702-21cf23e8b980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343258a4-45d5-4709-a964-4be27441e1d1",
        "cursor": {
          "ref": "e4aa13be-1aa6-4585-b6d6-f57f9710aa46",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4a65cb2f-61da-4f78-8cc4-8fb2899ae84c"
        },
        "item": {
          "id": "343258a4-45d5-4709-a964-4be27441e1d1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "047d2ff3-ef9d-4508-bdb9-912f306523ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f815d2c-d5f1-40ee-af7f-5ce0e6de6945",
        "cursor": {
          "ref": "ce3593e4-d77e-41bb-a1d9-279e81131e39",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2b060852-0d09-4351-891d-009c68372389"
        },
        "item": {
          "id": "7f815d2c-d5f1-40ee-af7f-5ce0e6de6945",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cbfd10d0-b06b-4678-a6ab-050837df6871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7dddab-d03a-438e-b0f7-6335860a9f2c",
        "cursor": {
          "ref": "0938e45c-f4e3-43eb-b3f0-1e78ca6dbf1f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9153c2f3-e032-4855-be36-32791cc57365"
        },
        "item": {
          "id": "ee7dddab-d03a-438e-b0f7-6335860a9f2c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d88ee74-0ab5-4006-b0b0-6d0438271d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f58076-4ebd-4dc6-88aa-dcc268fe4d80",
        "cursor": {
          "ref": "0978779d-4209-46c0-9e91-31dfa48df576",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c84c8ce7-5e56-4ac7-8478-8888517a6758"
        },
        "item": {
          "id": "08f58076-4ebd-4dc6-88aa-dcc268fe4d80",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f0ecf4e9-8061-4250-98cd-2e3ee8e0dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9c5328-501f-46a4-bdd8-b0f622fac707",
        "cursor": {
          "ref": "1147d6aa-5455-48eb-9a2e-a8e0ca080531",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f2942f4-5906-444d-b425-b315807c9264"
        },
        "item": {
          "id": "ae9c5328-501f-46a4-bdd8-b0f622fac707",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "294fd0f4-862a-47e5-88f6-5583543d80c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851766cd-f02a-48b0-bd2c-71fe087286ae",
        "cursor": {
          "ref": "acd28236-e201-4092-8cad-0109a573f436",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "867c585f-e8ab-4c7a-ba75-e12f077f7dbd"
        },
        "item": {
          "id": "851766cd-f02a-48b0-bd2c-71fe087286ae",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0fa8e25c-3e5f-45d4-8639-b90a9d13e829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd9f436-910f-407c-8195-2eb9ca4c1aed",
        "cursor": {
          "ref": "3d113302-1947-4be5-a7cd-c9d93b04a09d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f193d328-5da9-4d6b-8fb9-5c8144c5d6c6"
        },
        "item": {
          "id": "0fd9f436-910f-407c-8195-2eb9ca4c1aed",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ab5b8b9f-87c6-4c43-bce7-55907be55607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6870c4a8-c774-4add-9bd5-4e7020c658eb",
        "cursor": {
          "ref": "c7c2f19c-b422-4cca-b1bb-115eb6eb6c83",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e53e458-fade-4c54-a568-c9ef8b5f33ac"
        },
        "item": {
          "id": "6870c4a8-c774-4add-9bd5-4e7020c658eb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "703173d9-7895-4297-b80e-0e43f9060a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20552fd-49d5-45e9-b6d3-bd4f1530c647",
        "cursor": {
          "ref": "c242011e-5ba0-42f8-bc02-34a875fdcfbf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "eb94e52d-e5eb-4eed-bced-d13ce1b3f8b3"
        },
        "item": {
          "id": "a20552fd-49d5-45e9-b6d3-bd4f1530c647",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c387081-ac45-4db9-bd3d-bf287324d9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468d3594-d7bb-40c0-8adf-d52b369c9546",
        "cursor": {
          "ref": "4c6f06ab-c331-4cf8-a076-59bd28b5fae2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "be378d71-6a6b-4c1f-9be2-056aae7251d5"
        },
        "item": {
          "id": "468d3594-d7bb-40c0-8adf-d52b369c9546",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f2a77474-28a3-42f3-a52c-9f5de5b1b6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579dad37-f766-42a2-816b-82099ac99a2f",
        "cursor": {
          "ref": "de04b3b8-b5e5-4db9-8c88-2490c604ff5a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cca1745a-edc8-4ce3-8ad2-406e8944df56"
        },
        "item": {
          "id": "579dad37-f766-42a2-816b-82099ac99a2f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3cbcba67-605a-4f24-ac7f-e131c3d1ed80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee2df3a-ce11-4da8-b6cb-0c088f8f6573",
        "cursor": {
          "ref": "72a01fb2-517c-4509-b015-0ff230f6993c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "551ff3d4-7eca-4cdc-ba30-d72eeaa41314"
        },
        "item": {
          "id": "1ee2df3a-ce11-4da8-b6cb-0c088f8f6573",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fb65d7fc-a30d-415b-a0d9-795cdd4f72ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6499921e-4570-4774-aad8-e157fd7ab703",
        "cursor": {
          "ref": "b53bf736-50f7-4c8b-8022-c388045276ee",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1693d467-876b-4345-83e3-7d4dd86e08a4"
        },
        "item": {
          "id": "6499921e-4570-4774-aad8-e157fd7ab703",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0cef054b-23c9-4696-a748-aed05de86fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45551bde-b2f2-4e3f-b134-008b130cddc9",
        "cursor": {
          "ref": "ad6711b2-28e5-47bb-ae73-1254e825c851",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ede0c45e-ceaa-47fe-abd3-6506cbffdf16"
        },
        "item": {
          "id": "45551bde-b2f2-4e3f-b134-008b130cddc9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a8cf7a63-45c1-4e70-8c19-c8ab9ffa654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70034fc1-d434-48dc-aaf3-8179fa97da4f",
        "cursor": {
          "ref": "1321ff7b-93a0-46d7-b26e-e1b880b40cbd",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e0f2a77a-144f-48e6-8269-a5d106584e96"
        },
        "item": {
          "id": "70034fc1-d434-48dc-aaf3-8179fa97da4f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "500fb005-c383-4a03-99b0-e9dc67dd670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5510210c-61b0-470d-b2c0-114634d56897",
        "cursor": {
          "ref": "2b35a7f0-6ff4-40a6-8500-e5b82f5c3101",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b2791269-2a65-44f6-a17c-72dc92703991"
        },
        "item": {
          "id": "5510210c-61b0-470d-b2c0-114634d56897",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22928da0-082b-4974-bde7-5f7f4e1577e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f28d7cf-2d8a-4e32-8c18-e042423d9fa0",
        "cursor": {
          "ref": "f801a4de-010e-40ad-b23b-3792946b9e40",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ad558f43-6f85-47b9-99f1-dfe738bce1fa"
        },
        "item": {
          "id": "6f28d7cf-2d8a-4e32-8c18-e042423d9fa0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ff30268e-610a-4442-8238-ab8563de7f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beadd324-480b-4733-9030-04db59dfc2d2",
        "cursor": {
          "ref": "91d872d4-9eb4-4a4b-9243-03a85319b3d4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "500657ce-6656-4730-98bd-cf1c9f700005"
        },
        "item": {
          "id": "beadd324-480b-4733-9030-04db59dfc2d2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4f78bcfc-7f76-44ce-90d5-c0ad46b27262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30398153-5cd8-444a-834c-0e1fee98ba87",
        "cursor": {
          "ref": "7f781848-00f6-452b-8d93-2cc2e04db2fd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "92007e01-f0fe-42a9-a993-63220786427c"
        },
        "item": {
          "id": "30398153-5cd8-444a-834c-0e1fee98ba87",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3149ed3b-297f-4e98-8e2d-0476929445e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b20675-182e-4d6d-a8fe-98b207b26d8c",
        "cursor": {
          "ref": "02d7aff0-6329-4823-9ea1-ef12fe52018b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7b4bd400-58c5-4f54-a2e0-915288ff63e2"
        },
        "item": {
          "id": "c3b20675-182e-4d6d-a8fe-98b207b26d8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2585aa46-77e7-48e0-a416-db10ab131816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832594a5-7a09-435a-8c20-038185a22869",
        "cursor": {
          "ref": "390be58f-2642-4796-b89b-b5e028b08463",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "abf5c5fc-88c9-46cf-bc43-9d75afb07de2"
        },
        "item": {
          "id": "832594a5-7a09-435a-8c20-038185a22869",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4551e48a-6024-4758-baca-6acbaa070ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18969bad-603d-4cd6-b54d-8cdda41e9830",
        "cursor": {
          "ref": "e695d16a-3b31-4aac-943e-9d7e1dd93b21",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fa9263a2-0b59-46c4-9b23-1bae698d071f"
        },
        "item": {
          "id": "18969bad-603d-4cd6-b54d-8cdda41e9830",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f09c1e3b-cabf-4b70-b91c-c75a738e2c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c50fe96-174e-44ca-9107-919ee5f2a316",
        "cursor": {
          "ref": "dd7ccd7a-f59c-408d-8a94-8fe7440f04f1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1c71ad0d-2227-4abf-bd91-1619ee848418"
        },
        "item": {
          "id": "5c50fe96-174e-44ca-9107-919ee5f2a316",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "21d5a15b-15dd-4c30-88a4-dea7effc59c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d84c96f-6205-45d6-b5a7-f057059e066e",
        "cursor": {
          "ref": "5563563d-8fb9-47cb-8889-5e8e834380ae",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fcc83a4f-4608-4233-9a2d-bc572126002c"
        },
        "item": {
          "id": "8d84c96f-6205-45d6-b5a7-f057059e066e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d1c716d7-2e34-4589-a01a-4aecf88c6a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0aac32-e7bf-4db6-9076-512d1a1cee10",
        "cursor": {
          "ref": "6e56f544-d11d-42bb-8aa4-8f26cc9445d0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3fec60a1-7ed1-488f-91f8-19c793459058"
        },
        "item": {
          "id": "aa0aac32-e7bf-4db6-9076-512d1a1cee10",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8d07e229-b360-4e67-aaa7-810a0adca0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d979b2-3012-4df9-b730-b15a85546921",
        "cursor": {
          "ref": "a342da03-8073-4ef3-8a2b-619360672ebb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fcea2d3f-09c1-43e1-bbf9-1beeb6dcb16b"
        },
        "item": {
          "id": "24d979b2-3012-4df9-b730-b15a85546921",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "50fd6bda-f4d4-48b0-9a66-11b1cc5c9dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835b933-b5a7-4f7f-a385-1d7a9686a4e1",
        "cursor": {
          "ref": "822ba7b5-e11c-4ee1-a903-f55458f5176c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a7d68bc3-9516-446a-85d9-8db47475e155"
        },
        "item": {
          "id": "1835b933-b5a7-4f7f-a385-1d7a9686a4e1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "999188dc-5ac0-43e6-b037-1d904b45d3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e0a917-c09c-4b65-be52-e4182306db98",
        "cursor": {
          "ref": "ce8efcd3-e256-4a46-b8dd-3e2d2fae201a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1e85a43d-21fc-4862-918d-39a48bc3589d"
        },
        "item": {
          "id": "82e0a917-c09c-4b65-be52-e4182306db98",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0d00f0b6-645a-4370-ae96-787201bdece8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06cef08-0b0d-4f02-a77d-4ff234366baa",
        "cursor": {
          "ref": "d797140a-c73a-4f2d-91b5-72425f90a719",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ce4f1734-bdc0-49dd-845a-35efc32fc220"
        },
        "item": {
          "id": "d06cef08-0b0d-4f02-a77d-4ff234366baa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "711e8b39-01e3-4b11-8492-82e5392d2232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bb6ed7-3ac5-4e40-a4e9-cfc08acd25d5",
        "cursor": {
          "ref": "c73950c7-dff3-429b-8a29-a9029cb9df67",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "aaeb78c5-387f-416e-9b33-8c72cc368320"
        },
        "item": {
          "id": "b8bb6ed7-3ac5-4e40-a4e9-cfc08acd25d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "200473ef-b69f-4c35-a576-0abb3375cfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9106f9-bd5b-457b-bfbe-96ed1faa85cb",
        "cursor": {
          "ref": "f6114852-adf9-4793-96e0-48f0d587f2fd",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6f65b5ad-f089-479e-888f-e93992789480"
        },
        "item": {
          "id": "bc9106f9-bd5b-457b-bfbe-96ed1faa85cb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15f3fc61-8142-40f9-ba92-8f190588b1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139ca220-dcab-4953-afac-c0ad8fe93852",
        "cursor": {
          "ref": "a20bd7df-7c05-4c3c-9f2d-c9cf8f9bae4d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "85ffc39e-c6e4-4f99-8187-3f3ac854cdf6"
        },
        "item": {
          "id": "139ca220-dcab-4953-afac-c0ad8fe93852",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be64d30b-5677-41f8-ba4a-4fa5e3ecde39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507cc27c-b051-4fbe-96bc-af23fb6eb872",
        "cursor": {
          "ref": "80904eec-9ceb-410d-8874-bb4719d13ed2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "36f0a056-19f9-43d2-bf18-d3030e1b67ee"
        },
        "item": {
          "id": "507cc27c-b051-4fbe-96bc-af23fb6eb872",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a072e0e5-06c5-4a49-8ac8-2d53928363fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5512a80-9e9e-4518-9ac0-136d674f65ad",
        "cursor": {
          "ref": "b8a043c4-cf6e-4903-88bc-404adac28e31",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e50253a9-36ad-4dde-a13e-56ad6a695a72"
        },
        "item": {
          "id": "c5512a80-9e9e-4518-9ac0-136d674f65ad",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "43976551-9386-4831-96e8-fe9537e14847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6419009-596c-4da8-aff2-36b5c6b2ff57",
        "cursor": {
          "ref": "3d401ffe-4f53-4c65-81ef-733e109afbb9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8cae8ac1-e9cd-488a-9745-400ddab87e9e"
        },
        "item": {
          "id": "d6419009-596c-4da8-aff2-36b5c6b2ff57",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d9eebec0-0518-4e15-8a90-4482973fe495",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9211ed-9b9d-4ce8-b136-1dd90be2c839",
        "cursor": {
          "ref": "ffb20416-7e35-4525-a5dd-19a3271088f9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "33c34203-a3f1-4318-91cd-8847fab1bcc5"
        },
        "item": {
          "id": "5f9211ed-9b9d-4ce8-b136-1dd90be2c839",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0aa6f13-c320-4bd0-b4f6-b82b9eab5053",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1bc1f8-5a56-4881-98ea-b14e59ab067f",
        "cursor": {
          "ref": "ed2f76ca-ea01-4b5b-ae16-ed8832d8b368",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c68c1f7f-7a61-4f62-bfd4-1583f2accd62"
        },
        "item": {
          "id": "7c1bc1f8-5a56-4881-98ea-b14e59ab067f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b4f846c7-0949-4a12-8ea0-0fab3b6b469b",
          "status": "OK",
          "code": 200,
          "responseTime": 2997,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88447d1-194c-46c8-94b8-b2551c2915f7",
        "cursor": {
          "ref": "e430f32a-7633-4bae-b8d6-18a09e90e306",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "506ba541-b248-4fcb-b1fd-50a23a92cd47"
        },
        "item": {
          "id": "c88447d1-194c-46c8-94b8-b2551c2915f7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e9035199-82be-4ff6-ac95-0b4f161ffb6c",
          "status": "OK",
          "code": 200,
          "responseTime": 2775,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7714a6-1768-47d8-ad1a-e841ff6d306b",
        "cursor": {
          "ref": "96bf07ed-d506-4a03-9bdd-65592f1ea734",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "985863b2-ddc8-4c2f-8cac-eb9c225d368e"
        },
        "item": {
          "id": "2c7714a6-1768-47d8-ad1a-e841ff6d306b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b766ee3b-dfbb-4df1-a3b8-a91516e4e597",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7714a6-1768-47d8-ad1a-e841ff6d306b",
        "cursor": {
          "ref": "96bf07ed-d506-4a03-9bdd-65592f1ea734",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "985863b2-ddc8-4c2f-8cac-eb9c225d368e"
        },
        "item": {
          "id": "2c7714a6-1768-47d8-ad1a-e841ff6d306b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b766ee3b-dfbb-4df1-a3b8-a91516e4e597",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f5b843-e1b4-430f-82ca-da40b1c8066a",
        "cursor": {
          "ref": "d1f19d36-bd9c-4f28-b8ff-61120a747231",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "27bb3d38-b95c-4fe0-9a5d-cd5fa4b2c54b"
        },
        "item": {
          "id": "59f5b843-e1b4-430f-82ca-da40b1c8066a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ad1e62a-8aab-4f30-a630-8bb92e6ceecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2a174f-fdac-4f2d-970f-350d1b25e5ce",
        "cursor": {
          "ref": "a47c0226-c3fe-41c0-8826-9989d6999532",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9d73d94c-7cfb-47a7-b35b-e87632249520"
        },
        "item": {
          "id": "ee2a174f-fdac-4f2d-970f-350d1b25e5ce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4b4eba48-4972-4e50-bffc-e0845d042979",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}