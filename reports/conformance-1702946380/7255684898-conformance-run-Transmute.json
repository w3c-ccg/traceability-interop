{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3391f0ed-ab44-475c-8473-546d64d8dc5b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8ce09e51-0596-40e0-8e07-02ad9550f96e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c2230b4-3f5f-4909-a9ac-f17a47efb867",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32cc9c82-e601-415a-b17d-8f089f43cfb8"
                }
              }
            ]
          },
          {
            "id": "3b68d0de-7e34-4152-8477-9162c1de7d19",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0917e8d4-9b4f-46bb-9168-90debd999c79",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7019536b-751a-43b5-abeb-1467cbd976d5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a89b6d8a-317d-4bd6-98d2-88a4d8a23df2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5a93219-0e85-487d-988e-27e2c46a8b5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8e39d5c-7b12-4b7f-b65e-b3aa5d263508",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "694ec5ae-7223-4e96-aa1a-91ba7f9f2ac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53ebdafb-85b5-41d0-ae50-02ba87ef7a61"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33160138-0095-4ac5-88cb-ee0680ba5092",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f75f8f56-0583-4ea2-9a30-38b16ace6064"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7da904b-9154-43ef-8ba0-4cd8215c9e8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b043bdd8-00ee-4aae-9eb2-5f04718d3bc7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af26beb1-b55c-4b7d-b742-8b42470ffa86",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dd116847-369f-490a-818a-f65ed299610c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d5aff51-7e9e-46f6-af2c-c555db1edd27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71f69035-e330-4e38-b1c8-8526eb3cd50b"
            }
          }
        ]
      },
      {
        "id": "76d4ce08-c9e9-4fed-ad37-924599c47761",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6ba971d5-4e2a-4d07-ac4a-78a0790c6004",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d296f43-1719-46a1-98be-231531a65cc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18d3b22c-f300-4fcc-9f0e-7e8812c0c75d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e148379c-947e-47e1-9ee1-1b93c6d7bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6b9ebaa-86f6-4132-b47b-b736452808de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245a59e9-c664-45ac-86a0-b9e52119c6d5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee70afe-107f-44e9-9f4e-9acf98fd9dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f25d374-c9fc-4e16-95d5-112e4fd8398a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e20fabe-5fd6-4df2-adf9-8b6a0f20d3a8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c92bf2-4ff6-4661-bfcc-86c62dba674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2347cb3-f6f1-44bb-a63e-4694cba111b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5015f72c-751f-4754-ab84-69d43e7ce1bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5e5d037-ccff-475d-a7e8-fe7cdd9f347c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a282274-e514-4aa9-b0e2-22d32365b4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51bc5ae4-0689-4793-b9c7-715faaebd35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149f3b4b-29a8-4f44-be41-258963b141f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c89dd7c-b1ad-4915-b0e1-8959fa47af2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b704440-3aa9-4e44-8f9f-404dd0298f8b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65fa6102-2b9e-4342-a909-f6f49ea5ddcf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d52d8f8-e764-4879-a324-e3ee93e532e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aa35f375-11a8-4d9e-9787-93ce88d8f183"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5aaeb08-e6cc-48fa-8bb9-97cc90487018",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "63d1fa0d-3055-4aaa-8b38-0d26291e03dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8555c2d7-1a44-4b03-a719-15e7aac84432",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98f04177-f224-425b-8e46-d3801e70133c"
            }
          }
        ]
      },
      {
        "id": "5247224d-f54f-4c46-ba91-a49fec02085b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a315ead1-e9c7-4ac3-84f8-94e3bd8993d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfc528d6-e86f-401b-b418-696200d02e21",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7ceeb5bd-5225-4904-aa5b-8d3da6e0432b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a02b81d-e687-44d4-ad06-40eba66833ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126bdddd-9072-4fdf-8df3-4f99a1e9af7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30942119-1ebe-4514-b345-5704be05a50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "975d53dc-3d65-41b5-b6c0-d4b7deaecaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad792ffc-3de2-4d9b-960c-017919eb7990",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd1a261-af09-4648-965a-9d355adfc558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84bfdb3-b5f3-4dd6-9241-bf64453653aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69ee0e5-e1ec-4888-8e90-f891fad3d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b45e650a-e00d-4f1c-9f59-ceebee407c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0434594-f96e-4b53-a5ac-5d1277f1542b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3526c2-3a7e-4574-8dcc-c5b95f35d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ad1566-e314-4ddf-a19d-ccef7cc274ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d5730d-a7de-4ced-b2e6-e8afbbd89dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e634343-902a-4bf4-bcec-af767219bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64119e4-a61d-4caf-a36b-1665a0b33cb1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a0026d-a006-4411-987c-8e2ed44af59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e617b2a5-c07c-4de3-8294-88a400669db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151630f3-2408-4698-af7a-49e152e0733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47565ccc-ddb2-413e-baf0-8eb0bd1b7080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55750239-76b5-4142-8e17-660fba1d24e7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8016a5f7-4d2c-4091-8a2f-26c0d3d8e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a432a734-ee3e-438a-b134-c6ab84094506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868b646d-4d94-4fc8-b520-3278fed2660d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb5cc9e9-909f-4476-8e40-bc252cb797fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36e46be-ca41-4fff-a046-c7cc454d9e0a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba8f027-20b8-41ff-b2c6-519d949c3ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71a1d08-ef96-43c4-aef4-a809c8375f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076748c0-9466-45d2-a042-25aa94bc4f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39bd74e-9d67-43d6-9694-948ca94e672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330f302d-4943-4b87-b1e7-7508acf16c1e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e49a9d-2219-48d4-b435-83827e90f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b9dce1-f56f-4e70-b292-2b2f8897c627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa102bc5-85d8-4eb0-9191-49a6affc2698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7f3153-9267-4f35-902a-df77e9eb7351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4e1dc7-f953-4366-b399-110c69910cfe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ce1825-b821-4010-8818-3f30cfc4053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb17a89b-6743-41c3-8a17-e16fbfcb9602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796eb402-4998-46bb-b700-ec5109f58c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b22066-e8cd-42e3-8416-81b7371af7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc9603e-69be-439e-b2c8-6f4e5967c4e0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a315da-3d5b-4196-9c9a-c4870f1d787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b907068b-7a13-429e-97e4-e8dd3ed55011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de8b0a6-1be9-43db-af52-6cd90913c459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64e765df-54a4-4fca-a8ed-4d179430a620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f3530-4eea-42f8-b581-6c5e9c5cf7ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a343004-df14-4a61-932a-117526b1fb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee99441-c8b2-4450-b9f6-6e923bc308b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edebb7a7-418f-4d24-a80c-b382f5a29cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2534bfe9-c96a-4265-9e31-30ffebad84b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d1cab9-0016-40fc-9f4c-543b44dca269",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a381c-9280-4cd5-a83e-40c1dfb602b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da135838-1f89-491f-b521-67a2257705c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dea37e4-c7c9-459d-8e55-cfbdcb5d141b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b86b1d9e-8e85-4b33-92ae-3fad1c0f9c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c6ea5-bf20-4960-8561-608e36158d85",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b987963-64dd-4abd-84a8-d5f69ea2ddc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00075e71-5a19-461b-a6f9-2bdce39e6d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdc8d53-b59f-469d-b4db-f4a686f28533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9af7e8b-7f9f-408d-848b-faaa2e3dfcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30bccf3-4df5-4f19-b6e8-ecd240662a1a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddb18b6-3964-4c8c-91de-1733b70647c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291d6c11-e56e-4830-b534-c404d6b53b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fef27fb-83d9-4a54-b8a9-ee88ec5207c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5384925b-b39f-429e-9c81-ef73c4a7ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20030d-b054-48ca-b954-7c1d104b0456",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaa3d39-dadd-4fc9-9a64-f82fa64744d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f2d965-9ddb-4c5c-ac2b-2d754c9e5d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bd58d0-063b-4783-859e-00b794f9d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3575e95e-fa50-46f3-8ab5-07f3aa446232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9f23b2-cc6c-4174-b39d-73b8ba298538",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddca936c-5238-4178-b2db-e7d542b23aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8368848d-aadf-493c-be59-b1aefbe2b058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ae68a8-665a-4371-a3c4-39a24c84093b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0582e0a-ce3b-4545-a2d9-05957c29ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c0e51-67ba-4135-87de-e2110ece5848",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b87eb1-cd9c-45e6-98c4-ab8215dee224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e078005-a6b9-47ac-95e6-7f1592188400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512079e9-8af2-4198-affd-b4cbddce7d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd750251-5ddc-4029-b722-329282a2c979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2851ce38-6bb7-434e-afc9-2ce8b9e1c973",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3083464c-6610-4e8a-8b1a-b8787f9e8812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2f0cfe-027f-4db1-9ac7-dfead3013da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a87f1-8781-4586-b7f2-e77db4531598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81400b8f-978e-4326-b8d6-d64fbe948c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d027d5dc-b879-4f38-bcac-5a23f8995eb2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6018e025-a722-49da-808a-5cb719726ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d040f7c2-6c21-4e8e-8b2a-1ea474b6fbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b3509e-26a9-4b56-9aba-eca3212e9f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6ae52a-1fba-49fb-9ba1-ec430e15ed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3984e5-ae88-4b43-856c-b46531d1d314",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92965783-ce4c-4581-af4c-1e407866c1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f07f04-e44c-425d-8513-e17a41d87a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67664a8e-5729-44ae-8642-ee8d67a94d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fb0e67-03b0-453d-a6ba-257265248f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b78224-8851-4126-8e2c-11feba8a75a3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dec2c9-fced-4e74-a1e9-9203c966e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ec44f5-58f9-4bc4-8e59-466e6d78b433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54236a76-f0d5-4026-a592-78dd97900827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b64ade-0baf-4e69-9516-b5dc0ce7333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f056efa3-3be4-48c5-9fb8-bb97fa55cf7f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be3cb1-5377-4db3-8672-85a8bfa5e128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74107e5e-fcae-46c6-a0e0-05ebecd54f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ee053-ded9-442f-9c62-432b55bbc551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd86ad14-7b25-46c1-8173-cf6c79f41888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fff3b6-46fe-4113-985b-096300707037",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9022fce2-3e30-4460-9c0d-6edd2b40cd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d0c4d8-0781-4152-a80a-e6cd296460ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3300e321-a4cb-4a99-b725-aa615cfb717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21723ae1-1b32-40a8-b1ec-ce458259cdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3d81c5-448e-44fb-aad2-64c5170d92dc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe6acda-6937-4a32-aeb8-23aaf870e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f86909-0f8a-4fe0-9e4d-6a4e3ae9de84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497c9532-6ec9-45b0-b595-33174d244db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3454b5-2581-4869-8a08-1c65604bd16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc68070-b647-49fa-83e5-2a59bba94cae",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5339e72-0aeb-4ea3-b485-5fe40696357c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cba64a-80ab-4bdc-aaea-6b7bbfffa511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087aad32-54d5-42a6-bbdd-1b2c7e9121eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d89256-4458-480d-961e-34df15b58b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df33c604-02b2-47e2-ba1d-f11128f0a8dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e14223e-5395-49f5-b4b8-17cb72c5f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d00b91-e8ef-44ce-a93f-3937fadb31eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c095ba8b-a13a-4ac3-adf7-8e382152f448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfc5566-9cac-42bc-9cab-3e8794c45ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de38d46c-dd81-43c2-9f00-0d86c0987a3b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514ef091-9893-4b16-9a36-964e526536db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd291a2-12cd-40b3-b00b-d912b7320d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed725dab-3921-4190-bb04-0902bf86cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f4ebaa-36e0-481c-87ba-62f417573093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f197660-7004-4756-8a9a-754e87a7748b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c900f9-7165-4a2d-849c-5de7f6cb9dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad697da5-f770-402e-af5a-79782ae4accc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f2f0fb-5f52-4e56-a540-e43138c6eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba39249-6438-4a3f-8b40-0d230fdd963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7615ccd7-1419-44a5-aa16-4d11992da0c1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442611c8-67f2-43ac-8f62-2ffe0271f294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df38706d-a7b5-441e-a75c-552fb199c315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa4b73c-5187-47d8-8c4b-3e6e050e9ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b49c95-da14-4d08-8e57-be7c3fd0a412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb56b92b-0540-4663-809c-3d921aa0a86c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c016293-ffe1-480a-9e9a-2d5ff111dbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3c580c-58a9-445e-9b41-dab6726d1499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f06e2-6caf-4a94-9dfa-674227f3531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c436432-0e17-4866-bace-96bdc93767b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a8dd60-7014-4bb8-aeb1-796fe10609b2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715323ff-3cf7-44fa-80c3-85676ef3f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a2524-3d2e-4e92-bad4-4802c1648c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c46ebf-5379-47dc-b9f0-049ead4364b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f5b899-1c88-4eaa-b609-ea7e796439a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e962d4f3-17d7-4657-87da-2fe178dfb0d0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0669bb42-4d92-46b0-b0e7-b922e1f50632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ca791e-0bcb-44c2-a80e-09f20777b80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e643963d-c679-4349-88dc-7cf92fdabb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b43718-94e1-4397-8eb0-ec8043fcbb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee84034-6a36-4095-963f-6aaff38dcbe6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26835a9a-fee4-4a12-b4b0-37d7b392a458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab1cc84-4d3b-4de8-8768-fa3391e5f9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61bab60-ccc3-4f31-9d3d-d4f6ae11f2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "051ad0f2-7ede-4c4e-a9b6-45e3d7a00598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5091f6-aae7-4ab7-8bec-1473259c16e3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9d87e7-6fe4-4932-a6f4-456c22c8ec31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377f2b93-3c34-4b5c-98a9-6f1457a42460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9fb5c8-4ca6-4820-ae77-9c87aa7250b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a486470-5a27-4ea6-90dd-73a3bd4a100c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c5198a-e2b7-4597-a365-47dccc6e4f25",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0873c8a6-67f1-403c-a223-0c0934eccfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e02ff93-1c7c-4585-b5b0-1053f10d655d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628e95e0-1bf0-4014-81d4-f91164a10405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5028974e-e237-454c-a2b9-cd5bbe1c61c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b13a41-7792-4b6c-bec5-80c6aa146e21",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7785247-250b-421e-a1f1-58c667d18553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f760a0c8-90a6-489d-a385-3b5f1d21dd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9804d929-b96e-4bf9-8535-9420da41b581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "11589e23-f253-42be-a333-a9a633bc167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d770c530-c954-43f1-a192-23baaa87981d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019f962c-471e-4f44-8655-38da9d8746f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2498aa65-fb3f-4a6b-9a1f-53e9f4fc2b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b9f233-7178-4913-82a5-02701160b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "263f67b0-49f5-4d51-b853-249cb5fecf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b97d5a6-d775-40ed-be3b-156281da4258",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f4c8a7-90ff-4ff1-b836-52d8ffb775b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22db86d-ab73-42d1-8044-d5f9ab65926e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c39699-4cad-4bf8-97be-5b1c69acae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48a5760-36b3-450b-9d5e-8e933b1c83e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7628ee-2ff8-46e5-9c04-6a4c03c81f01",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a082125-da3a-45b1-a3ea-63dd8b88d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb57e532-9ffc-466f-809b-fdd97361f64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cf4cde-bd2f-4dc6-a4e7-0ae5c52c1b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44cc1b6d-0246-47c5-8250-cbf5ff568432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7defd1-a4ca-4d20-94d6-5094b29626d5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c841de26-a715-4d72-b80d-fd4650881368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2e0954-cc0f-4054-a06c-2c11b143c451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e4809b-425f-4cbb-a825-2d21162931ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "242eebbc-f9ac-44af-a1ef-1f11674d872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c33cfd3-5ae7-4b03-bd49-59e3261a6084",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dbc59c-ed5a-4766-8337-3e93285873c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8096522-a65b-41c1-9cd0-cda17da99e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2351454f-bd96-4c20-b6d4-8e078a510feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a30457-bcc5-4435-8671-049f2fb33728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d51836-80ef-4032-b6a0-6672f38a93b6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0501d8-8029-49a1-a1a8-d7fc32f2602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e821b4-1249-4833-905f-de4e71676995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a498484-8974-405f-b7d4-73e6e3eaa3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "23bc4951-1722-4f90-bde0-0f417f8fb5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ad9962-f313-487e-90e3-18d5236591dc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea33d9d0-c98e-4a6e-b819-f3d5ea53631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35727265-ffc2-4fdb-a682-19d6df9fd079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78496ab7-e217-4054-a34b-2cfad58244b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "97c821bd-b46b-4ec3-bc35-d714e675cea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42efdc01-96e9-480d-bcc5-fa2687cc9745",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3abdf7-5aef-4678-95f7-6dc26d643e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bfab0d-61db-45cc-8a5b-4960db8cc1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7068563a-f5ed-414b-bcfb-c6a6ccc82943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5bdc34-ea01-4572-835e-0ccb62f57189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06640b3-2d4c-4d48-9117-1443389c9f9c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9dcbd5-0b53-4080-b128-4be7b21fe25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28b6d56-62e2-4536-92e8-e684451a0cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580d2617-9291-4c90-868a-2ef35243ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8594f21-8269-4fc5-80c6-37924c26a53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee59e77-44be-4e0f-87aa-afc62f4330a1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133ff42a-b061-4566-8bda-963b0c5b00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a364ddfd-b06f-483d-9468-fd52fa1e6dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25eed36-50b9-45fc-935c-feca920cfbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a63ec9b-8fcb-464f-b6da-11730f01b621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce46de3-066c-4513-8982-9e2d5cf303d0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd6b6e7-c1d1-4b5f-93f8-0ba6c67f82f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dff8a5d-1c2f-4eb7-8c45-e5b9f63019fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaebf60-032f-48e3-b702-5432583bc24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5fdc46-ef1b-4d7d-a83a-7c25ad3650ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1bd423-7639-4d2d-87bf-96d13d2b3a2b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26a9f44-bb6b-4a11-9e0d-186481724cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c46751-c0c5-4b6b-b283-53945315b122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dae4024-13dc-4d92-89d3-f8777da97d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cba373-3482-406f-8428-698d09aca8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265a9af2-e070-4c47-a090-20c51e58d519",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fe871f-53a4-4230-929c-d9eac5e0c592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b597b3-06a4-4f66-bcda-0062c6a50f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948d2e31-3619-4cbf-a026-180863b68209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e38c0cd-0c70-411f-93c2-44f44be2fe45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5552f1f-26c0-46a8-90e7-923bc88d056c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7425071c-c2af-41b5-a0c1-c0c8b10eb235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c902b33f-42e6-4244-9b88-7b955397ab65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0945e34b-a3e4-4970-83b4-97013775fd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f455a52-89a5-40fc-83a7-13157ef46a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b8a45-0243-402b-9cdd-d583cea1aa2c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c1ab66-257b-47ee-aee0-4f0227d517d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb2bd41-90dc-4de6-9eff-c70667ecd56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12bffae-e224-471d-bb08-e042afad9896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0109725d-c222-4d75-bbf1-3164c04d3c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a59863e-924a-4d8f-bfda-3faf71de0d84",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd203e-1214-40f3-9a11-971a43d718e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e12a10d-818f-43a0-a45e-3f5b34b61f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a73c29f-ae48-41a5-8f49-300a85b4da25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67b9fbf-4858-4b76-bf49-528b0e0aebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55fcd66-e426-4050-b45a-9c2ae89f6748",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a869d-64c1-44e5-9eb5-24fb79714d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105a8ba8-440e-4c7c-ab51-53615efc48cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d326b5-fdf2-4d62-9090-46d807a2541c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "561ddbce-846c-4bb0-b4a1-a749524559b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed9a7b4-50b7-41c7-bb24-538bbd6242ad",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c7b672-61a6-4b23-8128-27201dda6959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4384e5-fd6a-42ef-b1c6-27cd618229dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a0ac8e-9ce1-4263-a907-2d4d5a7c9af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af5c371-2ff5-4010-b2a3-fd56a3aae7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77545abc-1aca-47dc-9e0c-70913f96c20c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577076e9-38ba-4acb-84c1-898e44cab87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c6985b-3120-4508-8d57-282ab6258807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04d5971-d1ce-4570-8652-c1ecb9bef4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a168cfc-1dab-476c-9aae-d1819b1cce29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c7ce88-20aa-4bd9-9871-74b8cdc5cdef",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f278edca-f64e-46e1-806d-6c72f700467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35be5084-dfc1-496c-8dd1-834822a1e023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cefa52-3dd1-4c8a-94da-bf8778a73329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe0e18c-d597-4bc7-bdac-1944dd72907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4906f3-99bd-418e-808c-fbb4ec3bb8b8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ef7738-5a4f-4c5b-a3ff-322bb64765c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9420417-9621-4ea6-9a8e-c7e0048417c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d4412-2aaa-4e87-8cc9-ebb74a1d9a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a06d96b3-2ed3-47a0-8243-7ac887c7fa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49cf162-54b7-4b70-b4f5-17878858a181",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb68e6b6-fd6a-4b8f-983e-c50c364100f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9a7212-b585-4110-8d2d-c5902a0cb63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfbe1dd-307a-4074-b503-c9f70093db2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e60bbb26-8c17-41d2-b65f-28262d2a5e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1102a6-8fa7-4377-8ff0-511055571392",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a83e28-d7af-4f61-ad55-5ecc3d012606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01df714-7abd-4839-abf7-af8594a158db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b249cd-f133-4e6e-8bc0-5dd111634e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fe2a4f-139c-4cb9-b5d7-7af4caeba5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd5dffd-31e5-4e86-92a4-0734cb74069a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9230a31d-7fa1-452e-91ae-ec9652a097b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1396f858-2f46-42e8-ad1c-51695ad4a464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0808615c-eabd-4b4a-8f78-b26f0b1cbd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e121409-e74d-43fc-9e70-e4fe4f177b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6381af6f-3fc3-404f-8cb8-54266ff3adff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0985509-466a-4fee-8e01-09ba2074c6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcaafea-59fc-48a8-961b-a2a04b6af5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0600ad4f-09f7-4488-85dc-15dd2c9ee4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e88f5ea6-d63e-4590-9679-328352dc6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686a4dd7-8672-4047-b891-f922e3d89c4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bdd6c8-8e83-47c2-92b7-44b1b21bc849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcb7dae-c779-404e-8191-f34ef175da21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929b9b85-cc4e-4299-a334-2c203d9bdf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2691949d-a667-4992-a6a3-d2a80e708bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e731f955-4354-4528-84b2-9fe46e369828",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bfcb2d-8d44-47c9-8f97-0c80a03434c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a963dc-1f25-41bf-a546-53859570b17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6743718d-53e4-41bf-b228-a5d863e61ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89380ba-6eb8-48ef-9a53-a105dd831697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227cdb0b-5943-4a82-a23e-8f73a1fbba21",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705ee532-f113-4ff4-9a04-ad9261e1c950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38490d79-42d1-4cba-bb11-2b12d31cb439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c49c9a8-1ba4-49ed-a18a-08b374f7fdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e86565-6094-41b4-9921-f20d2d714047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f186a23-d616-4cc5-b866-fbf27a9f28e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2f85c6-ad83-42da-8a23-f300119fd3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c52f25-ed95-40d4-a19e-81b74354d885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a98a85-b528-472d-994b-dcfed446dcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4c91ec-6b17-4a4c-b746-3e1ddc804c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21069bc6-160c-4d87-a76c-e91cac7eb04a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a6d1f5-e0fc-4150-a706-64425b663bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfcece0-9dd7-4c66-90f5-c3e980a2cee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9477e7d-792b-4968-8029-7899b1cb4c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d184115e-2bcd-480c-a53b-317e5c7f2ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c471b89d-1aad-4782-b79a-13add0f26eef",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab86013-1486-444a-8d76-e13e6b086b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf934cc-8769-463b-a494-0f34b41e00e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf51c695-7a98-4bd8-8a1d-67e37c4131f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4705e6-6536-4c1a-91f9-0eae41bd3fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b62527-5d34-430b-960b-f459d33ade82",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659a38dd-3aa7-4c79-9855-0fe316a8aad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cff7c73-ffa3-4ff8-9dfc-3f78fe342808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b962212b-a697-4b54-9a27-7ac4baf4c3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e860d4-dac4-4de5-bfd6-cbf5b9459837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5bd48c-6b33-4dc4-aa20-778dfe98eea8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53255e1-aa37-4ea1-a105-ae599b88db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e569e5-42ef-4df5-b3c9-bed67a955489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503bd0ae-c371-43bd-a891-cca982bc880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aac8c3-4d49-4365-8562-1bc6aea5bbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257ed616-d7e0-44e0-824e-e56279ccddb9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55dbef2-e956-4f88-9b24-4735c312fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c53f698-53b5-4410-8a30-2ed16cb8c17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5debb124-f57c-475e-987d-7de69a8f849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4f2bda-9d73-4e2e-a76b-7d167ce97705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610a9aa7-1057-4486-a334-7834c137815d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33f2719-f29e-4830-a2fa-f0b8653ca96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12138705-4729-4439-9a6e-5d383fb7ddf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acee8e73-93b7-4c8b-b381-7c810b51beec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0fe308-cf83-431c-99dc-4206d8b13c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3a7e40-3fc6-476b-9b25-729a83f6dfed",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a67b42c-f316-4019-aa38-ce03eba951bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f55732-75ce-4df3-a0ff-9cffd807a101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4198b5f-6b3b-4c1e-8768-aa9b0c8a806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d03eed3-6d6c-477f-89d6-15642f50943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c13dbb0-c5eb-4416-ab5c-d54502b9ff32",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3974fec-1e2d-4c0c-972e-0fd18cde1e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376c988d-0af0-4453-8b13-054ec8f58e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d4b696-0c50-4a11-9f0a-da3c278400c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f98cf3b0-3afb-46ea-b919-acc5ee746b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bd0538-94ca-4c19-ab3f-8461dcc6eec4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26b0c0b-74f4-47df-936c-e19ddaeee804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d5e77d-a211-46f1-9a97-ff8c0017096f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8899f78b-3f27-4925-8a59-d7e5398552d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "756e5dac-7e48-48c2-9a07-e7777103d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d2dfa9-9a9c-4f9c-afbd-48496208c86c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc07b856-ff88-4be5-b5ca-60ccd5907d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc55dfd8-9717-4320-a7d1-b6590c2fec4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe1efc2-f673-4e75-a3ed-97ac4780df4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b38b5cc3-f205-4180-8a9c-9dd82a46e0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21069d16-1a2d-4951-9102-8a0dcdd6a2f6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda25547-4d03-4669-bfa7-02b0636bec91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d921a819-e2a4-4188-a69a-1d6619b5b461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eacf65-70f9-4810-82f7-eb5a65c95490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61074963-5ee2-48b1-86b4-d7ca00b17d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74999a06-d459-4810-85bd-a311ff87da58",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27c64c7-0520-4984-888e-ca7b6b8c018c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519c70ee-8b81-40ce-b40b-c8eeacab7c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd727f-b313-4f58-8494-80933b401271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0e7d73-f114-4f1d-827f-136b674a1609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3086172-14d1-49b5-82f3-3a2703f85914",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b69732e-95a5-4070-b149-6c6c879018b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816da6f8-2f4b-47f3-b433-6032d5b940d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07f3534-b3b5-4152-965d-6fde202c8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d418355d-7522-44ec-9898-7b1187c850f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edf0ffb-d99f-4e20-9b36-56539387f87b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3060f58-d12d-4f9f-af70-b5ead10dfa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed42385-1664-432f-8be1-7714f9e161ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daac9bc-f38a-48a2-8dab-51bbb301ae46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ebb6d3-8161-44a0-8569-e40a6c179c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d1a83e-8df5-4efd-a8ed-a872e4e45ef7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41e18f9-29ca-465a-a3db-df6cdc942b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22077b70-cde0-48ca-bfe0-f61b08056e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c40e0c-dd41-4e5a-9d94-c2b713dd2cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e547b54f-b9bc-46e3-a2aa-1a423f0a301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb86b2a-527d-48f2-9541-e6751c02fea0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24180f67-cbbe-4679-ad02-c6176397f73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe59362-a0a9-4a16-bd58-efb85f857981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f98415-7988-493f-b0ac-0590ad57e83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0035d1a9-d4bb-4228-a2c3-4969de71f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8413ceb2-0af0-4877-b2f9-2dd8a197becd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f173ba9a-ef51-413d-a352-6bf8f9a95bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8871bd-4773-4e2f-83b8-1945f1ba0353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b9d198-44dc-46f7-9110-b86b93243016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "befa1904-98ba-47f2-b44f-019abfe1d5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9808be79-b509-4dfa-8fa2-34a30aad5a48",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adea8bf-ba85-4ac4-8b2c-0e853c4a43d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b480cca-e5b9-468e-a440-da21c39f3d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13952fe5-b3d2-47a3-8c31-3e97b0df5f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e024fbf-5821-4e87-917a-f0bce75b8abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc51ea9-c85a-4684-8aab-2c3bbcdcf500",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d288d250-5ce5-4b61-a0df-022097d02ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789503a8-cdee-44de-ba73-72ef3a2ed25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5658a76-51a0-4513-ba2c-41ed0d02acad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6815564-f8d9-4528-a6e8-6116626b4e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e795c3-e6f7-4145-bccd-71d93cc26414",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05002f5-c43d-4f78-9ddb-223ba01fe25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825b5683-6b34-4c63-a3bc-5be451d33413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31554045-3126-4867-a2bd-dab709a42b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11800d5-04ac-4aa3-bfc1-746b13b426ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379d042f-785c-478e-bcfc-77cb0d564b30",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0043da20-a5c5-4bcb-8700-b0fc69e0f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc24f48-3d70-4ba7-b46a-d2c01d144300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73a4901-935e-4072-8a2b-69a3e34542b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f9d0d6-5906-4b14-89a8-7f65ea4627d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b11943f-f1cc-434a-877e-3e102bd2fdd6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ee6471-1280-4877-b868-04a6d8443fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c565b8-c90a-4d11-aafe-34f8b96a85eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6437b997-b686-43bf-83f2-386be394ee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "032da033-f306-42d2-80f2-936f95d7b9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e77952-409d-472d-98e9-163c68356e2b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13f0c0c-be9e-4f5d-9dcf-ede826298ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c786680-cde3-4286-9a76-519e757120d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd31bf3-22fa-40a6-ae76-9ad9494d7edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b244c158-b2c2-4e26-875f-9c87c62666ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3985314d-ec28-4dbd-be4e-331100f8066f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad87d58-3cb0-4cfc-b3d5-ea68214cc2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adf136d-626d-4036-b600-aeabbd5fee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898d16dc-f58b-4b06-a339-a0003168f776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "712b8780-1a62-4c56-b3a1-7b26983bde92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7519ccf-1c27-4637-9d35-641383442dd6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b718d37-13d5-47c7-a0da-aafc3d5b32f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3bd6cf-49a4-4e12-a9f2-0b3bd079452a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c7c3d2-98c3-4298-b198-9f6a730f133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df96a79-09f3-48aa-b7b2-bc73cabf7a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197bc1d-4394-4cb9-8a58-7bf8c13f8cf4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2358b39-c06d-4b9f-aa43-2ee5aca67318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118dd4f1-35bd-4ceb-9431-4edab27b0ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96461361-463b-415f-a4a2-9f7f8ea98033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d40d2bb-ed4c-4e70-9a40-809620c2475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13c1c74-b28e-4f55-a81a-7a5752a83443",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5ec82f-a788-48a5-9cd3-c2843c5ca320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102233c1-37bc-47a4-92f9-feb20c26772e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad5d99-4d18-4081-ad36-6dfbb595b839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "66de1163-bfef-4afe-a8da-bc3b818de9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1639ec6-573c-4a69-894d-4ca5555034fa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2dc4ad-a13d-41bd-bb87-816ad964d9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ced3fe29-378e-4064-b035-c3740db4a809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda261d9-11da-44b6-abb6-d31523693323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "995ebab2-b3c3-458f-9dca-033b95b21287"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "436e5b42-a996-4c20-89c9-28cbf8d0a52e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3020e81-f4b4-497d-8117-de3efdafc42f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6196f169-6ef9-449e-8778-e45d04460e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4579aea0-71ca-4e8c-9804-7b65af5fed72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c470c626-4daf-47be-98c0-839e0f7bdbf0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81fcc970-8170-4ca3-a921-cdf2eb3138cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1195b56-b7cc-43ae-8d4e-bca1f3d36ab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9a4f2d3-0626-475e-9b94-2bea55e97b13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "200be5f3-9239-47c6-8c98-74df53c4929e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25709c32-c7bd-4bdf-b693-177ea0c49df1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "378b43a1-db8d-4dec-b9bd-4e5ca39afe59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94acf444-8295-49a2-9795-b6f7743449e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1065fc33-83c0-4cef-898e-f3f525eccbe2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86835c0b-dd77-4a1c-b90f-738953e73b39"
                }
              }
            ]
          },
          {
            "id": "2fb1773a-eddd-4653-9d8e-27e00990ae30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8318fad7-3744-4a74-8f06-1f4db565f081",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3df13fa2-542a-41c2-8feb-207c4148483c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd45c93-804c-402d-ad10-cca1f2f9a168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f6750281-88df-4415-8d8e-92d024b8c76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cdf95b-97c6-4d5d-bdec-50f47fa71ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe1d352-6da3-448e-9f5d-e9d2ee8eeff6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca65fedb-d5f9-43de-addc-3619c195fdb5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "151ff0a9-5d34-41de-8c81-56778b3c37f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec6cbf10-848b-4ab8-a84a-7235786eb677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "241201ca-2fef-434c-b65c-b51deac4ea8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "499b35ba-5fa0-45d7-9f7c-1abd3273b5df"
                    }
                  }
                ]
              },
              {
                "id": "c8053783-9006-40b2-a610-ff3d8c7f78e5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "156a2262-0e5e-4af9-a5be-3b489b30f024",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64136cdc-a8f0-44e2-86e4-e0bbf41bdfac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0a9c3f2-0290-4c84-9a6d-c8247535dd62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2af1e66b-673f-4b06-84a9-03fbf8757fdb"
                    }
                  }
                ]
              },
              {
                "id": "f2f30186-5565-4ee4-bce4-99e27345d377",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9b1eed-b497-4024-b66c-fac24ce1699a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6df439f8-67ee-49f1-943a-f0008bb4afb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad7fe21a-625c-49f3-8c32-87d479574364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "805c9c9e-acdd-43b0-a024-1f4cd4e27242"
                    }
                  }
                ]
              },
              {
                "id": "591d5fbd-6d41-4e3e-ba78-ddc28bd2fc04",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b487216-5f23-4147-b36f-c61f418522f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33e509a2-b4d8-4c20-8fa2-924fb7e64e9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dce2829-1d40-40f0-a13f-3bc00dc62556",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2f2194da-1ba9-471a-b579-f550003ff000"
                    }
                  }
                ]
              },
              {
                "id": "093c9e43-4413-425e-9e4d-93bdc1a73395",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07126075-1c99-4c0d-950c-575b78a0033f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "addbe053-90a8-475f-953f-677354bc33d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c4ad3cd-5531-4b6e-a358-6a0861269b6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "984025b6-8ecd-48bb-a6ce-4336809a0346"
                    }
                  }
                ]
              },
              {
                "id": "5e3cccb7-9876-4558-ac07-de9f03e77f8b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36817a8-6b65-4147-bc7d-05c3103c50ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19ac9ff1-7bd8-4c02-9798-27169ef7b8a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18dd7951-8567-47cb-8328-7aa17b5c0092",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b5e5b3f-dcc2-425b-ba70-1b9047767b7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ae1b229-9372-4f3d-a481-c423c2bffeca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b29bd049-ad57-46fb-82b5-707d15bad770"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7303d75f-5c77-4f12-919d-af639b63d5a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7459eab-0d6d-4410-a54e-67887ce8138d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "938f867d-a7f4-45a0-a008-1ffe4e82b155",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "23298a52-ad60-4589-aa3f-4592765c0c88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "230f21a6-de9b-4930-ba8e-d754ea93d219",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac5fd9fb-2361-456d-86be-739709935407"
            }
          }
        ]
      },
      {
        "id": "6bf0d48a-7b20-4727-ab80-e1b2f9b1f8c7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c4c20fb-de6c-43ae-9f30-878969c1e58f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6db2be48-2c1c-4dc0-b06b-c471ba3dceeb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a92b1dd7-009e-4e95-a3cb-58b24cd6f73f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4edd17f-c397-44bf-b29d-d06e12d0418f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1b7ffe-d0f7-4f7e-94b4-9f3a0816d06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd902f14-fcf3-4337-8dc0-5602add919d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b148e0f-98f3-4ef5-926d-ec095d34e8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43041be-8ec0-412a-9a44-1a94dda2d49d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640532fa-541a-444f-8f70-31108b196071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e753852-2d36-46a5-9b80-bfe11b536c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b297dd-06cb-4d57-a1ab-a5540c63bf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5953ce-9f19-4193-989c-494a24063828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4076c883-c9aa-4892-8e61-e96f42318eb1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fcc4c1-2a2f-4b09-8eb0-6bb1d30f8571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64572439-d54e-4a4c-a6e4-413aa9d3542a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2591484b-040c-4d65-85bb-bc1b3db4486b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7557fcc-c6df-484f-8ddc-75192a82246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a18f975-600a-4bb1-b0a9-2829d429b424",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04a64d9-31a3-42dc-bb08-96c24cff5876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c76fdbc-e8b4-4760-8307-c937461eefb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aed0970-c649-41f7-a536-a26c12565f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3d81bf-e0b6-4625-a5ee-ddfbc4f4909c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f75e901-556a-4a7c-a079-d979fd9d6344",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb5c798-1bba-40d3-9b83-d36020ead4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08408941-4899-4355-980c-d5e2670c14c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba768de1-df71-4790-a712-1b1821db30e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50d8f6f-4933-4cb8-b36c-d2f1a87c0614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e533629a-6f0a-4726-b9c3-423ca1dbd1b1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65638912-bb03-4b3f-9cfe-6f3ae5f8d115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d257331-c73a-4548-b2dc-cba727771501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d39eea-6536-4411-b825-5048ed5262b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a352fd18-7351-42a6-9e45-484bc248137a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b67a056-3911-420c-9c37-80edc4351c3d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d25a04-ce98-4fce-99df-7931ef6014ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06056985-8ce0-4007-a025-ce3acbdea1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75f1041-145d-4e6d-8f6c-cb1662f15b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c784217-702d-4242-835c-5030bb044a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89200f5c-ae22-44b3-8efb-7377f0e25c4d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d76994-8c9a-4902-9ee3-40e27b54f018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8150aee0-a368-490c-ac5c-3e918a24b7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a17f10b-2dfb-4826-8b89-844ede004794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9fe335-ec74-45af-8d73-cf5d8ffb4455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7199d4af-d289-48a3-a6fe-04574ea0328b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5c39a8-088e-4e81-b8ac-e13e705e7c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53d52b7-a055-4ffc-acc0-c3dad37e6bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184db0c-9a7a-404a-b4c0-5ebeae23be38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da4bfc30-128a-4ab8-bb7b-2a3dff0203ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4d07d7-3fd4-4efe-b89d-d44d86523815",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6228e3b5-8ce3-43dc-8a35-061f4e9952a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78000fbf-5696-488a-b04d-a6242d0a1829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cab386c-135c-4d96-bc9e-e53aee6cc943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bd106f-295c-427f-be48-011ef2a6c54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e23412-609d-4717-8b6d-c90af5b3db6e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37726292-f02e-4c83-98ef-a5c3f0e91229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9270bd6c-6eb7-460d-8678-67b1a189f79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1263871-0e40-4934-9633-7444b8c53173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8da14f84-5055-4d87-b175-f3aebf969b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96641d6-3d39-4014-b023-24d66fb5b2ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26778c58-ccd8-42f0-a7bc-131a66d19412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cae46e-0c13-4a39-afae-a0041b032a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aabea8-f34b-4bfb-aeac-c3fcba82635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "737be627-b726-4d15-b529-5448c849a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2cae91-894c-4a4f-938c-fea7e0a6da29",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fd73eb-467e-4437-a1da-99cd1048f8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2568ce9c-1fb5-4538-a6c7-e0cda03de66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0a0956-bc26-416a-98f6-944c30baf6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04daacfa-1560-4287-bf00-519c3185c9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29662986-8477-4326-aa64-f3c1eb179b4b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0e2dca-b509-4929-9450-04dca6cd55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c9f9e1-5147-4503-afaf-577af7630f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97fcdfd-4955-409d-87b0-2ccd43165b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd79ecd-5a72-4db3-9461-4f7bb5cb9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eb6ee1-d3ba-4eaf-8ef5-b08b2b4ae264",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0588ed-a17e-4af6-b197-8fd6781afb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6844dc85-d15b-43a3-b8e9-a63127895e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2961ae-af77-4590-a7b7-8af97b3acf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "585b18d2-7390-4313-a5c9-db709aff8179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320924b9-507d-4e01-9993-daf48ce7dc57",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca080fa-ce2e-4c0a-8afc-1fcbd5ba7529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37f4dbf-6be1-440a-b4ab-f5e1d317eaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f89e471-5a48-44fc-80bc-641fb811a327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e56dd7-d98f-4a95-9c4d-285c955ce661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5fb38c-63fb-4827-a31b-6e74eb7a676d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ad290-6132-44bb-865f-7e2010513be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686af50d-d825-4d8f-bc53-1fcc52030aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c8bee0-f447-4b3b-96d3-29fff7a4a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8259bf13-77d4-4820-8986-3ede49ce7bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0225ff-f6a9-4c14-9460-e6c6c61be154",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3922a6d-240b-4257-a87b-8c648ea3db7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb3859d-8d0f-4444-81a7-6fe53c8a2058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54de9729-f523-408c-bf27-cd378858916b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a949626-2805-4929-ad5c-570a140160f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63de1dec-145a-4007-893d-8a8d9a50a15d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c567610-7f00-4ffa-b6c1-71df3bdd12a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615caf67-0b3b-4cf1-85d3-cf9bee3bd6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edbf684-7e29-4118-b14c-0adbd1cad8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ccad5b-601a-498e-8677-a7e4a9f14283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94742d95-a1ae-4c83-9f96-9e3793db5074",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20a9452-09ea-40a8-b9ca-8b32cd8b8243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4ec1d7-1328-430b-bc6a-bf3d828ed081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591fd5a-c954-46ff-ac81-fec0b5433aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8155414b-1bca-42d7-b16b-456a9dfc04a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94729d69-b125-4e5f-bef9-3476810baa6a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec59ae1-5887-4e0e-b14c-c4c9627689bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52314765-2ffc-4631-b4b7-10f036f5ad31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f52636-7108-4faa-ba8c-319359a28377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c978f63-da91-4b5c-8e22-d48014fc1d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb65c85-ca03-4cc6-8ea2-2e0be06eb754",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838e8aea-02d6-4d34-add5-64e16e682dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcc8e05-fb3f-4b01-865b-76643d675462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173668d9-8258-461c-8691-4b95dab320e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0230be91-2057-44d9-860d-f2d3910d3619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4093c9bf-f594-4726-8535-2c2d308c26dd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf818ca8-ab9d-46a1-9438-4bc3edac5609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8c7d73-506b-4795-b343-374c5406190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b20fd8-640a-4be9-ba27-03c97e73f2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7974b040-2d24-47b0-853c-e53782dff79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a038b80-9069-4ecf-a3a5-6e97893bf996",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5460ca17-78e1-4c85-bdb3-eaad37780325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1024bd1a-915f-4f28-bf9e-c730831bdc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f311ce3d-3578-4947-a4e8-a3794589e835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74cdf034-ac3f-4fbe-841d-159ff160deb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114691e4-c33a-4313-b1a7-0bc4e4041e43",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4cc7c7-319b-4d0b-afce-9ce5750002c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7405e532-4e25-4225-8a4a-7b339e620e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb62cc75-086f-4cf8-aba5-d59697dd5afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa39863-6a90-4178-8b2c-84522f2d3cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da648f9c-8ea1-43b5-a5a4-1e29a5f4cac7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf7446-49d7-4b1b-a409-8e9bbb5d4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b48ff81-fd7e-418f-9c45-f444b902c75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bece6bc0-74b2-4b28-b49c-3b7a76349733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9635ab-8235-47c2-95f0-c6a43f29b3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f16d37-e8c1-458f-823a-5f8aed25b333",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca45b860-2fb4-43b6-8b5f-2ee0b39c8bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d82f44-f1f1-4de3-8c05-6d9b7ce42855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f65599-a6d0-4938-b7d3-47750a5e30fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7333319f-342b-464d-8974-49700a7d7824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bdbb72-137c-472d-8c79-5b39e23baf14",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b304d0-7193-4dd5-acc7-c00fe316c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badfbf45-9b2c-4e77-931d-b02fed95fd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c99d174-f1c8-4ec5-b6e4-643a33c303a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2331f43-d974-4add-9548-20761c95c52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aad21a-841d-4f2f-8f61-cecc184d69f9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ecc4d5-24d9-4d36-ab88-32211a3479ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d05606e-25e4-44b1-889c-e0a9f5ad8b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab913174-2478-4479-b2a4-331d01e1bfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd6bfb5-9c40-490d-ad79-703476dd64f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5dcd3d-7eca-45c3-a386-9d4fd01c95b9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7ef95e-95fb-4f08-bed0-5af7b426d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df0beaa-1685-4246-bcc9-ece0b88d9a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e059f9-3d54-4465-82e0-042a05de4c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3266a204-c02e-49ff-9e9d-9fef8397c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0ec850-c537-4b6e-abe0-180acb5480cf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67354549-57ed-47a2-a5d4-ce849a48e24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f51ea42-13f6-4aec-a4bc-df15f2f1c1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60e5ac-e834-4de7-99c5-2afb8a7bc2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b555836e-c3a0-4f60-a780-098e9c260c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584c90b8-dd14-446b-9ae1-24aa9b0975f4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd50039b-e2d2-4ced-94d3-38ee4a9db19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51494b11-1e6d-4ee2-845e-09e6b6d18d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10527ff-1f73-4c5c-809c-f19cb1682ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "937c199b-19b4-44bb-b151-b27b5821fdff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0248e02c-cdc1-41de-93c7-182f3f52e35f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fbd193c-28fb-49f1-80be-28088f5de9f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51f7391-a78a-407c-9c84-1e4f2fddafd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb71a39-d7f1-4509-95b6-41f37a7a55b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a5658c-2f2f-492b-957d-2b5754ac2dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa3a7aa4-dd0a-494e-b82b-8597822ed361"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37ca4bdf-082a-451c-90c8-b80ab27685a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1385a78-7b16-488a-8200-27ea30423000"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2458c8d5-5e67-4384-884e-c22ee70df42e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6e3c4f6-63c5-4d0d-ace2-f42feac71eb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89e5de5c-3925-4e3f-9aa4-335470a0879f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec1124e8-2279-4ed8-a495-79931d0803f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da15fa0a-9ce5-4792-87fd-9cb5bc62b73a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba1239a8-ac11-4f6b-a465-728f952bd6cf"
            }
          }
        ]
      },
      {
        "id": "6fc527f6-e5b0-457b-a79d-17c1a3f6ca1e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bb63f364-14b3-405c-99f4-0fca99333262",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cccb47c4-63ad-44bf-8c81-75b125cba438",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4501237-43d3-4e90-bee1-36d0c25942d3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39747174-48f2-4962-a620-ff9b8cf2dd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd20a646-93ca-452f-bb45-a37732e5cdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4e18ce-47a4-4507-8d00-6884290fa992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eb2ebb-dd71-4070-8c32-569845312ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0824fb9-dd1d-42b0-b43c-3542da8cacc5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047896f8-8027-4913-9b6f-9caa82ca0d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8f4313-a057-459c-8885-54897cedcca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817111e8-3f3c-4bf6-bd52-82a6aa1ef34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4fb65b-7f75-43ab-96f8-325e6e233574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3550710-aef6-4da5-9c5c-e9a2651a77d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7151293-669e-4cf5-9bbd-30c4186ef740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e791d4-1837-40ca-8f1a-bacfc946b9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e02a94-6374-4313-8bef-ddc9ef6bd099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b2c082-758d-4a00-8c3e-103c03bc59ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e0c715-c1ca-4c07-bd6f-7ac724d26f5a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80a4641-b7d0-4362-a89a-d33f9feea2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcaad1c-c7c9-45e7-8235-c78e157d07ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f63184-78d0-438e-9fd4-945492df91d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9f98ae-255e-44ed-8dbd-0dbccc90a774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f939cdc-9124-493e-b5cd-90ad83189e38",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7450d9b-7a5d-4b98-a074-f25fb6f777c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41571fc7-4c50-4e0e-9a9f-4e7a73e3cf4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903fe81a-3471-4acf-8b74-a96cff3a867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7f64fa-b559-44df-b264-b36fe19386ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7b7dba-65b8-4fed-8472-659248415204",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c223b0ec-65b3-4d9e-8cc3-c614b6ab3ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe78c51-be7a-47ea-b883-6cdf71b65c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6d1ad7-76d5-43c2-8c56-c4c05f7f5346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab5eb10-4322-406b-8c3e-147470ed0dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e556da01-9b04-4ec2-b36d-a8fdb15fd5a9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6676034c-1f0e-4eb3-88e6-7df87529f44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c24935-641d-43c8-8257-34f01624d8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79009472-b609-48f1-afe0-8b2520dfad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0a79c4-1e48-4ec3-bcf6-e9864716dced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ecce24-9c97-4806-a370-b0fbf35a9dc2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fca848e-24f7-4614-80d9-cb79d6c10f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ce56af-a34a-4010-a3f4-8b17cae1b56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a89f75e-9a60-4134-b51a-235dd47c46f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "757ec64c-f4b5-4129-98a5-4931015a6cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fa7aac-833e-4dc0-86f2-47e867258608",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d95f21-586c-49b3-9109-e4f6aa2ee5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a8dbe2-c1c7-43ef-b6b8-ab0ad6098ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16039715-5a67-4a8c-a005-a60ca35104b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "190a5c86-6570-4b08-a2b2-9590196e146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b9ddde-71f2-4c10-941e-d5de90204440",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f9a022-5a30-4f67-ba0b-1cd13cb5e6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e63342-c1c3-49ed-b017-10cea736c728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df59b1f1-0b8d-4d9d-94d7-f5f85232d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd77037-156c-45ad-9b25-3ff4670bbd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad5a03e-19c7-4a81-a5d3-f6d9a3d5c649",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297066db-ab4d-47c6-b232-72c64eea6a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf9d944-93cd-4c47-8a81-fc2a374b6771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2260596b-09ec-46ec-a893-64f16e592b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "818a90c4-88bf-446c-8bd7-a70883988693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1b60d2-bdce-4e97-9f74-ef8e17840796",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46ac36c-0f21-4905-bce1-14261aef4c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad775516-595f-476e-b617-46e67316dd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8178e2-da84-4703-891a-d9047b0e0f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf14a88a-127c-49b8-a6e0-ad5c695afbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c043447-297b-4137-b8c5-3c7ebb6f4730",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882ddd2a-2f29-4069-a1da-10dd99e57242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e066db2-e4c2-4601-81ca-20d38d22ffa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef90aa-776d-4327-9386-366ad4e9cfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e8ef0f-e277-42fc-97c8-62405636d92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879c7471-aea6-4344-a301-b17fcdc01557",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0935e9fa-4c3c-4be0-9777-89b0f9b79223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc86142-b68e-411c-adad-e042e87c540e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55085e9-df73-4e6e-9e29-f3a8c0406ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "557f0e5e-c122-4b0d-83dd-accc5ff83ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df17963-e486-40ce-9b6d-6369f6007a94",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832d4573-c0b0-41e5-8a7f-703e98da52c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772f3a4d-a328-4f0e-adfe-7ee41666eb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10eef368-c552-4170-962b-ab6afb5549d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6239c162-c384-48e0-a4da-024ba6676cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e35b7a6-f383-4419-bcf1-79b0b30c1d19",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b892327-7bc2-4e9b-9036-301c19fdd9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc13a326-e221-4d9a-b94d-b47910c8526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9609b68-d0bd-49c4-b3ba-d0807622397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d9651f-7e58-4ffb-8e1f-51203717f3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5215b45-f6b1-430a-8a26-0f0c9b6042b7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472590a4-05f0-4171-99fb-256cb951545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f225d9-abf4-4c52-8e98-973a189d7530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb632d3-0e55-4020-b07b-aaf445da9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42fa91c-ce21-4bd4-bc99-d41d268fdfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2939c4cf-7b93-4e26-be8a-86f5a5bc8e85",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2608ab53-7046-4cc1-a05e-64b0f64fd528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c08af81-fea0-4e2d-b845-00aa423a687f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a16e4c-2152-4570-a35e-23b649793e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6f58f0-6a26-413c-ba25-995846d85f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63fe10a-66d1-4479-b839-cbe7a88ab81d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338258a8-ee66-4eed-aaf5-683d341146f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207c62f1-5e0b-4454-8ae1-ce8b7f3118b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d987e5-82e0-4229-b8f7-9fe38d29ba4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f31dd8-f372-401e-a614-ab34bceb37b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9319c3-c874-499a-bf35-9ce3e1e9d2e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782daeb2-af5a-4b4c-bdb6-157c7b04c567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264a589f-fdb9-446e-ad19-ca3d2ac73af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc86f255-dc4f-45c8-9815-493b9a06b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "109cb1ff-afb2-495a-aaf9-527304c39f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9076d0-06e7-4993-a628-ac43037129af",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008fd208-22a7-4e42-bd43-73d56c575c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8970e331-b2ca-4ca1-88b5-e76fd8e00500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2b6180-7d1d-4704-970a-f3b937bdb51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d75f60-9968-418d-b351-649a6aff8bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f90e0-89e1-4752-9129-39a1bf2ce6c2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32616092-16f8-4a77-9624-ff65a1d2a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ea1e59-af00-4151-8070-c9f47450fea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ba08e-7c34-4cec-91bb-b3ff6e038016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05798a69-9239-4c56-9aa3-a7a373e2ffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6ddfbb-ead5-418b-9f48-fbff053deb33",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334b825e-19aa-4d04-aaca-8809bf3a93e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c4c5af-071b-4b89-8330-c7c6f7c8716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b87fe10-01a1-4c8f-bb98-a070e08631b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "597bfa8f-c72b-40bf-a272-1afc34987cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afacb81-3d19-4a6c-a5ab-45aeb16a71f0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada2e216-515b-4aa2-95fd-6d407e48378e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58e21cb-f993-4299-af9b-e0adf5edabe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e98b880-4a8b-40ab-968c-2c9002c30116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce99f37-95e9-439b-80a9-61076af10104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2a6222-58d5-4fcd-9398-47515c36f802",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cf5d97-0d73-4efe-aab7-6720f252ee6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5f4569-0c34-4f30-bb14-0ac7b7d15070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ccf3f-db54-422e-a437-d6d4136f96e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b191be20-7d9a-45b3-9f3f-3385dd7871e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43330f26-44fa-4728-a0bb-5e53d070c74f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35e7dcd-ba6c-4cc8-adaf-207d6c7b09d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a4e4ef-108a-4ee7-a6a0-8b7da3068603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5a208d-6cee-4cda-8919-4c7cf75cf1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afabfc17-89f7-4249-b871-2a90569a7f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f8217a-8e91-4134-b9a1-be27db548805",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0153ad3-a872-458a-8410-03a4fda3f494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2168a4df-3712-46a7-8ddd-2c1219910b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f25d71f-c9a3-4fe9-a1ff-61d8d9b13b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "557ffe6e-60fb-40c2-866a-f85b8eb5e869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131daacc-b6cb-4a22-8703-4d2acd2311f9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce92d9a7-1af9-4342-933c-b50027fe61a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2164ba99-2fd3-4221-bcd7-123dd614db9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fd7388-aea2-41a5-ac3c-11c6d9019455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d293bb1d-de5f-4229-802b-eeaeb1db0551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7ddac0-4052-4b6a-9a91-ae4ef692e89f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d048e48-5800-4465-be40-c15a2200d351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033ac28c-9daf-4e51-b418-72910d880c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001910ef-b6f9-4028-8827-d2481b685c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5bd414-ee31-4d5d-b126-de8b5f1ae878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e58122-b72e-4732-af20-55166d066438",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff02b69f-9083-4bfb-b483-78dc7eb39c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764472e4-db32-4e84-972d-2e7d3d8f8fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3467d74d-042c-43a0-955c-62ea245915ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74810f97-f4f3-40b7-94f4-bf86a699c166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65a6ee4-9e58-4b6e-9d52-62c8c0bcfdd0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2500dba9-bf8c-41a2-b9da-de014a2dc20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f84da7-88b2-46c3-a1a7-9ac635de606e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8006f808-3e90-4644-83ba-05a3d6c0c219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9b16a4-cf43-440b-a4db-b620abf65e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab0bbc2-1e8a-4717-a810-0602c99228d4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fe31f0-8386-40f1-b318-a9b8adde29ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1a2688-5327-4630-8611-24e087aa5445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5335dbf-6996-46cf-9920-0b81a070c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf8e977-b735-4a63-9031-957504785c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b55be16-bf28-4605-abc3-af4298eacd59",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892009e7-5031-4e9f-a568-fbdd06d16513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1229caed-3269-4a5d-a2b4-1606afe5df5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cbd36b-56d5-40e6-a704-110e310b3a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9647a3-7d10-412c-bebd-1245246eff47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373ef31f-823d-4738-83e8-0cc1cca68563",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bde9a96-d83c-4c6a-8f64-5fbcf7bb187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11564a54-0624-4a41-8e84-e3d92f20d37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c83d4a9-bff4-45c8-8e93-06742aa7d2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afdd881-f229-4860-8341-3f0946ab15ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f1a3d1-42c1-4949-a04f-05ab481a4ba3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90088780-16b9-4e80-9fd1-adef6a5ce834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51799ede-9bb3-4e03-916c-f682d99d9ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b669d9fb-74c4-4e85-8745-3cb963f43a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8130b4cc-41fc-4783-b645-34797e632838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2288b33-440d-45c1-8b7c-b23272cf46bd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557896ea-9e34-4322-9d5f-8e4d782dc09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6c3b5e-0c72-4367-9915-2a370678f046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace0a27-1c65-4f83-a7f4-0516a7dfbff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1b4648-8db0-4614-8695-8ec8d345ec3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db4ad2b-5225-4c1e-9152-8c5f2d8959da",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef00a73-02d6-4209-817b-cc6f1abe93a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faee80b-7d14-446a-96f2-bfb3e1710d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa47077-2e31-4167-ab82-920147317e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e7802e-fe97-4a94-975c-4c6d9be8586c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9eabac5f-0e52-481e-baba-6a27ec3024a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce9203d0-0ce1-4d13-a236-6c60e600b967",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4202db28-60b3-4b93-9ce0-ee49669686d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76657f32-eefb-44c8-883b-01d02ab7b5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f53d4cf-3097-4caa-bbe7-7d8c36ad360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71dd8e4a-86c8-4105-86ca-683b190f09c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b4b597e-0a19-410a-87b3-65231a059657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9689d008-74fe-4a53-b723-10421de04231"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc597821-4f64-47b7-be0f-f2fe8d09df33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9fd1eea-1fd0-41ba-af6b-5123c6e52eab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75d8fd44-bf78-437a-bf3b-c07bf19f3e40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99970906-463b-4b7d-9459-d6d8e1f9938f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1608f091-31cc-4a66-80cb-fa080ee41e6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40ffeec3-34c9-4fc5-9c65-da84f070cc4d"
            }
          }
        ]
      },
      {
        "id": "ad28789e-1168-414a-9e92-bdc2bbcbe539",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ce12604c-f117-48f6-983e-bb6ad96188e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51d72df2-e149-4639-897b-9b1ed9722716",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ec2cefb-a1a7-4b06-98fa-3b1fcdeb8604",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acaff3d-5307-41a3-9cd1-9d0cf7212958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2769af2-914c-41ec-83b2-e995184cd04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c51842-b68a-47a9-9381-3fa29f1a9166",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8fabb-74f7-4f96-90ab-0d8e6ce49f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f234493b-4050-4daf-abdb-493cfdad9bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b989aeee-a948-48b4-aac1-58658319e347",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6736fd8-36bc-423b-ae58-4f79085b1b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a70c3cf-29ce-41f0-9653-cb8c22b32669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e021c23-c011-481e-aa19-a176e90d143b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52792553-ad33-42a3-a1f1-6baa1c582a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083b3fb2-3600-4710-89fd-5d42ce260194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d200d0-7067-4ef8-965d-4f90dc3716b6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cde19f-cdc4-4018-a7cf-5c27bfbf0366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6914eda9-5e4e-4cf7-aa67-a142239f6d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37484f4-8370-48a4-9556-e1a670418b3f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306406cf-b078-4991-85c0-628172d45182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eb90ed-e72b-4507-a663-f53f2ba56ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a4e7f7-5582-4a09-a19e-47be25062ad8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d286e18-d89a-4d95-a026-ed531aa19027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64e7c03-25bd-47b9-86b2-71a0a281b610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a10787a-f155-40a2-aeba-c3b3a7aee3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12112b53-8924-42d4-8a21-c8519063d84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99ac374-422f-4938-9d13-6c18348dcf04",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618a791f-c044-4a3e-b631-320f7e49d1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d007050-eec7-4c8c-9571-fc00a1d6a9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73974ee-f534-4f1e-a510-29ddf6a0a817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a7c8ca-6450-40b7-b76d-5babd098f5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490cd6bf-1b3c-4a09-a26f-c3adbde95b63",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec72987-723c-42c2-ba70-8dc093a6eb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043e78cb-9009-4339-982e-b0acfedd35df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7365326-394b-41ff-a121-4018ef736a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2776185-203b-4901-a4b2-9791d964b254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6ef3f0-016f-4503-9191-7016c016b8e3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4977fed-2a6d-4009-bedf-8ceb3953bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ccbfca-65b7-4a48-b132-ea2d4ccce3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7c0211-9e61-427b-a6ff-11611cc38331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165c8b5a-440f-4f59-ba56-486077d26978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265bc417-cfdc-4d29-a17c-494bdc7b74ea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4664add1-6337-4503-b149-7b7e92b285a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087bbb31-3735-4fc7-b870-b9284d8c6f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab771e-e48f-4fb1-8b23-7cfb184b5e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c205d46-b97c-44bd-8645-05ac5492edd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f039ca2-a323-4f5e-bd14-00493cc14907",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f210e5-2ead-4b78-ba75-fe289279356b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559e3bc1-565f-43d4-b0e8-663f9d7695b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af9c98-4d46-4085-9867-85a6698dee42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d991331e-f037-4428-ab2d-314886eea236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d5b6c5-19cc-4efe-8dbd-815fe289e454",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aab5b2-ed8a-4d95-98c6-84fd19ccdf2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76239d05-c9d9-467e-8437-9c680c3451ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a4fa4c-b41d-4b96-bd0f-57c61bf6c1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20573f46-1e21-479d-824e-637c822a3735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119ff476-df6f-4254-bae3-e81b7282b5ef",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1e7685-14e7-4a8e-9610-840e3578f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81c55f9-83c2-40ad-bf74-98b3b5649f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f99c48-86a4-40b8-85f3-9657ea0dda27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3168f61d-f461-4225-abaa-ee05003b2359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258542da-1d2a-4dd9-8875-dec68e9e5dc1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd488aef-79c5-48d0-9f42-dc7e8476dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1455aeab-3ec3-4f26-80d5-17d13c1534d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fffc58-1c12-4783-a514-dbf02c79c25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb02deca-4600-43e4-a23d-a84ae9ff866f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362694a2-e2ff-4eb0-be18-33a437fa218a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c8bec-fa9d-4e8e-aa92-5d17de310ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1978ab53-7cca-4b9b-a55b-2ba41692c357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc36eb3-9c95-4d36-9ab4-4de1dd3db6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbdf230-69c6-40f2-bca3-f3df2fd47067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1be3e0-4be9-4d04-adc8-9c74c29819c4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cb4d61-6a11-4a0a-b7c4-e2dafe9fafff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c953e94-0734-41bf-a935-70055ca0e6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9202cf2b-ad93-4981-bb28-b52ec1ebb2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e76d8c1-3253-45b6-a4b2-094bfa3a71ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca92416-370b-4ab5-81db-d6cddb69010a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e274bcb-aa55-4cbb-8566-2efbe49e0837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab841bf5-2828-41db-b7c4-dd489fd8468a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b256df9-44c8-4d95-b8b7-06681f4450b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df015459-95de-4316-b708-27adb2b10e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33c9162-714f-46e2-99e4-d7fd12f83e90",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4211c1f9-c206-4de7-bf22-32b4e37fea8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5316ad2c-86c2-487a-b47d-db62368a34f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7dc94f-9a4a-4433-88d3-95bc72650451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30962a04-e462-42e1-b08d-547255830a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caae6e8-e453-47ac-83e7-daa65821d047",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e142636-a29d-428f-bc17-1c93eb0a988f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2080c1be-f8a4-4dfb-bd9d-b1b69163d5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789c144-a0de-4b56-9f24-aebae464e946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b80e74b-7afd-4266-99ec-024fed5d39be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0caa79-3baf-4a32-b374-89cfdab4abec",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e617680-3ab3-4239-907d-6aec1f8c99a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32633dad-6e08-4794-9d42-35240ec35515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c9a877-c069-4504-a8b0-a55669a00458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec1c1ac-bcaa-40ef-b7a6-bc5be5473c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b81949-9f01-4582-b81f-124b9ae9ef4d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc613eaf-74a5-420d-a977-d3869ad7a758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a368f40-0d39-456e-95d2-c48b2d96c031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f865fa69-59f5-484d-aedb-ba642f28500c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59266d02-b022-4102-81f7-4581d2cb9868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b379d5-81ea-4462-b284-025062009214",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef491a4-169d-44d7-ae12-c1819db0cf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed68685-108c-49c7-855e-aed491ebb9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a87525b-0c39-4336-aba9-d0762b7b5f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b02b2f-56a2-442c-821d-eb62716a0304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b212130-8873-4183-a93b-c6a5055c8c0e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a03218e-7064-4d45-be88-62106deee8f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3177a4-6d1a-4a19-98ac-c2e822df41aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc6550a-bbb4-4775-bba6-29bd506865f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa446bf-e641-4179-a3c6-40c46c0f004c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b5a698-b6bb-48cf-b3d2-886078728409",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18732f40-b0fb-421b-b6ec-196b9009a499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85df081b-07b4-4fd8-812a-2d66b25fc5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc54c25-53cf-4f38-a2a5-8923dbe9e587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e553c4-14e2-4b38-bb86-d092f7cc5605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739c465a-17e3-429b-b3ae-b7f8191cc81f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f47b3ac-ee6b-4f34-b638-5dc0e2df980c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16dfa5d6-9a6f-441b-8c56-e92d28e73642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79842d8-6ad6-4449-8448-eddb45b063c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f772024d-526d-4e7b-b349-ca066828b99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d17aee0-33b8-49d8-a1b8-90ff1bef442e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c309f5-9640-4059-a175-b4ae38806ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa9c80c4-5e3a-4783-83f8-ea5b342ce1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ab1005-8929-4da1-a5c7-d1851719756c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e32e9a-61ae-4e97-9195-8949b70ea4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03122968-116a-4366-a390-998e989d2af7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a4b1e5-09ca-4797-84c3-58c1e7c2ba31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d037a5ce-4984-41d6-9735-6ff06e534aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de22275e-afd5-4d07-8205-df19cc78e0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198cd897-9f8f-4d1c-bae1-701398967982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6647d6be-0acb-4c1f-8dee-b889bf0444fd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae717f73-cec8-4daa-83e7-3a6007a3bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5908f92-4216-4a62-9651-ae64a83c5daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09180697-a300-4b53-838b-a315089e99a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7d3e5e-b994-44ba-af96-65933b1e7f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab51f5-5ad3-4337-a814-2a280f6e5faf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55de446-a5ce-4d68-b7cb-d3de269b43fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17765ab6-641d-400b-92a1-4401d76cf2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52998dec-69c4-4f1f-9e91-ddb78151f542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1062639-8962-44f0-aad0-9786f10e6c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d85cc3d-b362-4f99-96bb-31bed2e3cab5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862a714f-dcaa-4999-8bee-8ae93b745657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15aae3b-c9ac-42bc-a660-41891c9e2a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aa0d44-fbc2-4346-9d10-911d595fe42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e2a168-5cd7-4cf2-ad35-109033b8ca14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5716380e-e685-48f3-9052-ef485ff038c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a275ec44-f5b9-4438-a365-1f886964a132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e771585-8c23-4f19-83d2-2c1d285ec5ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1615fb-d66f-4494-afe2-aa9c4c51839d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7a7228-06e7-4b3d-8a54-892e50601624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7fbc0b-2a9a-4ce9-92bf-7160773e0bc7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dba218f-ad88-4f41-b06f-befb0f905019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d8b737-2c3e-4684-9823-3792b51d1a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698ac9eb-7540-4228-9e09-718a96a7cede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bb37a6-9387-4bfd-bbc5-a93f8bb115bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864e91fd-5b52-4483-92d5-121e19c4d196",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06d199a-c6a3-4ae1-8676-42d4cd73f121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d119cc1-085b-4a27-8007-d56c9f25ab22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c4032-6066-443e-98ae-d3ba1ba9e4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dff669-7ae4-4448-bb70-bde5e6b09560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2e0972-9a2e-428a-a4d5-08fe12a74fa9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef6b066-4b61-4e24-b0cc-53574865f8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3a4d6f-ef1b-481e-a570-3764f3329ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c1e805-b563-4935-8807-feaf813d4181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be94cc3-e5b7-452f-bc26-f310cb65c62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2c1d09-bea5-49db-8762-abfdd6e4c668",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7231c6-d545-40af-8cb2-aa593f407192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdb393f-9e2e-4b98-8ae4-0f40810ce820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c3574e-7018-4b8b-9bc0-5978df246657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31abe619-253c-461e-ac4a-7673bdbb3b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951cb8cb-f932-4ef9-a17d-2f91f162965a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444a3d2c-515c-4b76-acaf-ce730c1ced67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1a06bc-2fa9-47ce-8860-15620156e161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d53804c-5a25-49a9-baa4-632a1f1f8488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9c85aa-fad5-4c85-8b5b-5f5f182e32bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af0e6eb-2841-4e7b-b7bf-dee8fc1cfff8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc825d5-d0c1-4755-8ab8-1eced025b767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef44e795-d3d0-46e5-8944-a1ed2d18d7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae17d64-0f21-4b73-861c-d1cee4f9aadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672ebf54-f4b9-497f-8875-493e34c396c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195b5db-6779-4041-ab68-03de124b06bd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c70bd1b-aad9-4de0-9f0e-3c9e8f518c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc7e65b-928c-493b-8b38-bfad83199ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ae3399-1b48-4f87-9f00-e9d2364c0e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fe76c3-1eca-4fb8-bb5f-1ecbe94d4a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e41cca-5170-4aa5-bc19-e1fdc74df298",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd983d44-750f-48a5-a95b-8564df6abc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad15754b-2277-4726-87db-72b16c95a838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b2758b-9b9d-45a9-8664-edd22661a46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f05f13-4a21-44d6-8e1b-169f7910dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17b386e-2bed-4348-b9cf-f5fc6e2cc07c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cea9b5d-cc9a-4933-a18b-f9ea33f93f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c284dd8a-d9c2-4567-b5df-64ced37080ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a76cbf-7698-435d-81d4-9d1c8241a8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77aac2e-01ae-4b46-931d-5f48747efa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f406ff2-fb8c-42e0-8e02-100a6ee6a0cd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5f19a1-9230-442e-b083-027f1589161f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2c44b7-a5e0-44e3-8cee-7e1a2fd5f5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2918a27-b9f4-4791-a4c4-e9db7632cbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71b21af-3b63-4082-a7ae-970d38a8a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de813f03-9b6a-497b-bdaf-27af2c364072",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af791290-80b5-4326-933a-b50e5b1f4969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2685ba75-e52f-4bbc-b832-a671d1eb98aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748245a2-5ca3-4c4b-8a10-09e5ec262974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26196b78-e481-42e0-908e-637a09ecf555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b5c081-3f87-4c44-865a-8670f04ca4d7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee667975-9527-4717-b427-7a06dabad69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439c82cb-2a62-43e7-9ce9-05752f95de78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e20fb89-102c-44bc-851f-b4157f9c134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a608b308-2aec-4b2b-b620-9c67b4221be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de47b5fe-ec49-442c-8e75-2b46c13c9891",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa0a7cd-6eec-4355-8a6b-8be8b30a06a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb064277-a6ed-40d3-b670-03d8a5d390bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f378590e-0d0b-476c-ac3f-ed4cd8558c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e96dc32-feea-45fb-8954-b07cd398b9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726eace7-145f-4c7f-9820-942ad723e2d6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823c20e2-6645-4555-bf62-e730bd2625a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ac3139-e76a-43bd-86f6-00a7b0d06804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9fe518-99ef-4204-8d4f-42053f188be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d987c8b-ab36-4d94-acfc-6454fe8e2145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6a5049-664e-42cf-b9d1-2756c7ce8761",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f0d636-b736-4941-a394-26cd7a12532c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1fb665-e680-4bec-9819-6fd5a8cd607d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b7456-7bf2-4d73-a69a-a0bce9c5fa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d8d3b4-7461-4b46-88c0-cd4a4cbaa7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be8bfc8-786d-44dd-8f35-2e3d53702f1b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963d107a-a42b-4c51-829d-7a5e8c11ce6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3175b5-9a0c-4b5f-86d3-d4155b93a052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bbdd64-4185-45f3-a08f-23e189070470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4727eb2b-6a2e-45d2-bce9-6ea74b764d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d916bd44-2c54-4022-9022-efb57b3a1e7a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a9720f-0c78-4700-8c9a-10008f626a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70729af9-622e-462b-8324-37434e833b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61344cda-acd6-41b3-ac16-a8545bde8613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005f281c-ad34-4681-959e-d268fe223d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a26058-faa3-4285-be10-63936e377ed6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4a0a4-5902-4378-99ca-16e9ef6727dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b2f023-b710-4b9c-92ba-bdccaa98d830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12c6b24-2abe-40d8-b09e-4bcdaf9aeba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5dbe6d-02b2-4e05-a1ee-bf9f7f9cfc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33820659-8292-4d51-9d8b-3b06dfbfbd08",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14fbecc-cf99-4e4e-aa10-9d8b096944a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a77df1-039f-4ebd-95ac-0f09f961b88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0686d7-3311-408c-9a1b-e2ad363f2e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f114096f-5769-4424-aa87-4c2c46ec5831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dd17c0-aab9-4b61-92e5-c85ab5c58a76",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98db4e87-0fdf-4d68-968d-6a45ba39cf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a67b827-6cd5-46a3-a733-3b7ea92bc1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9753f402-dd63-496d-a8a9-e431ae5fb426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27406dbc-52bd-4ee8-8c16-d50d33a44b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc82407b-7aca-44e7-b840-8e985e9bea3a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1024b8cd-0845-4bdb-b792-d9d30aabe613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d295d6-b7d0-4dd2-ba77-cd02be08d798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b444380-d417-4ea6-9408-55d6e7bfa983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa3cb75-c3aa-4ba8-80ad-f2b4da2093ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35323da3-1588-445f-8c59-cfa5d38242a5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1b2530-52bd-4807-bccc-bf42437f238b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c71cb-b3d2-486f-bd27-3cf098abcf65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e844cc25-8470-4692-a56d-621d622eb691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca7ffed-80ec-4921-b598-4e8a0cb190e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec41ffd6-0c36-487c-8bef-5902abfff6e4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3be68c-af8f-48b8-aabf-51ce437731b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a35bb6-3d59-4492-912e-90bb0cb952e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abb2a52-d8cc-4e72-af9a-d159be5f402a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83828e2-b140-469f-beab-83aecd743740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e0ea96-303e-4809-b776-c53a439f727e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b6e522-902c-4c21-bd7b-28fbb6a07ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff01494-06b6-42fe-b2f8-1bc8343b5ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe62522d-6b14-420f-9d91-ab96a7864d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0bac91-8390-4c10-938f-9d981150bce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230e0d0d-7ab4-4b78-bad2-78ea66737e1b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd42e4f-469f-4574-a61a-ca63c044e35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ba8eb6-5b51-4238-86b3-e55eabffb00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02262a18-8dc5-4ca3-a522-3dd71e55235d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdeb96a-d9fd-44b7-85f4-b31b67323c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374a3baf-7259-4153-8881-79d381b38f2f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61281fe4-1fe9-4212-a19a-d17bc151aff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa6ee6f-ac5c-44e9-8aa0-bb1bf771f266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e290d582-4f29-4472-bf28-f31d8ecacc7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7038e5c-3115-455f-a6f9-49a7dfd8ff1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f0f2b-7e52-4ea2-ad9e-2882e984dcdf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2246ec84-3f37-4085-8767-00d59778c0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763dd5df-ad2a-4893-9023-69daca8823a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd9aee0-4f83-4b09-acf6-4d8300ee69a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c342a0-fc9d-489d-a5db-d81fa9d6fe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3a9dfd-3785-4b65-aee1-3239b5ec48b8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86088a2-3ccb-45c3-a668-47601c150fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5857ee-e753-410f-8f2f-2f6a092d583f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b7d407-e86e-4195-8fc5-5012546c70c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed90c92-d227-4a24-b29b-637d81e5db58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a462e07f-88a6-4bd9-bf40-0e4c2f97cede",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c2b0db-922e-4883-8a24-f80e87801166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf60b255-d758-454f-b96f-d09ed9d043d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b1c0ca-ac40-493e-ab08-fb207fd678fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2cdc83-f5c7-4a1f-aa69-6bd664aa7cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4a4802-1e40-420e-99f2-022948f60e1f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7975224-99b3-4e80-a237-7d34a466248b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f245db5-53c2-4bd1-9d3a-6d1144830037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5ec919-c30e-4bc9-b76f-0149420f528b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8387077-734b-4ab6-80bb-7c60f5665e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1b4075-fe91-4ad5-9127-8ab7c7cf5ca2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23386ad-d62a-47b8-ba8d-6e1945a33e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d43c0e-fe83-4f6e-a67e-1d2984db9fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc195d30-2345-4a42-a7d8-8749399cfc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8338592-45d3-4633-b906-ae8dc27b51f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde96a8-3be5-4280-a15d-7c6a66e4425d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aae7f6b-4e2c-40b4-8e61-7f1b3b9821cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10002a65-1193-4ab6-84cc-321d3c45fb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e042b6-293f-48ca-8aa7-05e4568bb9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072aace3-e32b-4731-92aa-4839c26f3a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b48be-ec0f-47cb-aeb6-12aa7be0e84e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3c6fd2-6611-43cf-8f53-b0da42af21e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43c9d24-4ff0-469b-99fb-71dcd93834a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a53104c-d56b-414b-8731-a7ff95ef7234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c40a15-fcc8-49a3-88d2-fa972e15a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683a28e1-4159-4c43-813b-55f79d9b7518",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d91329-30f9-43a1-9be8-316c00eee44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3942d09-7518-4289-a943-e377d0211241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4ee612-375b-4d1d-a320-62477b56a703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe059cd2-a76b-481a-b1d5-ddcc346a739d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733ac992-9f4e-41c2-8ff1-d0e2c1c70a71",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c392382-766e-4e91-ba26-1db98dd30727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e3c840-8300-4d59-bfd3-381c8031d4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57448ec-a1be-45fa-a46c-79b9d0dc5f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79a058a-8048-479a-8712-42e7f26aea9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2323aa-4d0c-4f6f-b7f1-0834796f5b56",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbafe6da-7c06-4108-aadb-1a97749ac3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde288b9-b8d9-4c76-bacd-a18482f7a66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8488c5d-0aa4-4cf7-a3fe-c2861ca968cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7a85c5-4548-4fd0-92fc-3b164ccfcebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3362eae3-917c-4954-809b-f01812243a8c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c364639a-3dc3-4efa-946f-85ea004cf12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1866e85-9a91-4e3f-a007-dec1d01eebc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bc2bbd-80e5-4bda-b7c8-fefc6840bf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7764c73-70bf-446b-b8c2-d759489f1d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa5a50a-8288-4916-b34f-3512325525de",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fabf817-5a99-4232-bb43-085aeb079a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23aa0a1-ef1e-4b90-b772-f6f8b2f10cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360c1c58-44c2-41d8-916f-bff73d2bb465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f158c898-76f6-4df6-8d5e-0e993ea63bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb3a4f3-6465-4015-86c5-1415f9fc7147",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc1fd58-64cc-43c4-8d78-54aed375d57e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de464439-9ecc-4a5f-afdd-2d119a6f9ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89030011-9c5e-4a06-87c8-7716b375b812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6734189a-ed4d-4835-96e1-eb775c557bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c1b64-c9aa-45a8-b757-8dea0975184e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a150e48-8835-4aeb-af0d-26f85d39090a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82660b3-fec5-4b29-8fd6-4acc6168ecdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c66660d-6a56-438b-a8ab-1a7201b49d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be07abed-748b-4776-9f36-1dc1de2b156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028153ea-2e04-4afb-b03a-deae72aee87a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d51e39-3b9f-4dbf-9254-7ad590ace4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88982ac8-ed0c-4a23-a222-9992433f4517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5b1250-4bf5-4210-bc2f-ff0c54f4d5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b9644f-1dde-44f6-83e7-5b10b2747641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77490dd-daeb-4596-9006-1bc428dae346",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c66c0fa-9321-46ef-8c03-c056d667ae54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14947ebf-f740-46e6-a70b-2dad300fffd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb64255f-4e0f-4995-8cbd-6c8acb011ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454710df-3ad8-4384-84ff-d63debcbd692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2487ffdc-f710-4df9-8076-863c51bbde39",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248d633f-8340-4217-b4e6-2b73dc20d63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3de2431-542c-44b3-8906-4d5a98787693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610d127c-4574-4f21-84cc-555ddec456d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c690b518-cf15-4e7c-8b06-9bdfc6495974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b7bf52-429a-4040-a1af-d29be360952f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501f81f8-c73a-4a91-8152-36113307f037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ffa550-a005-4792-9c68-5c92de88a40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7e3fcd-1c3e-4b9b-8fde-66e153735966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebfb47b-c447-487e-83a5-85cdbe6b1abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d97b84-e840-4639-aa66-b00ea79ace93",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0dc1b6-9769-4af4-afc5-572c3d128da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b3130e-ebe4-440a-9f00-7f71bf8ebf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30101d6-ec40-4994-bdd1-3da11d4a3cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafd62fc-4103-4986-a43f-758a63c616c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497bafd2-9cad-4c58-9fc8-b3eb61e05314",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a110376-0103-466c-ac66-139cca92b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9889d2d3-1fa9-4303-a487-f2f7ab7a628d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fafcda-e248-4ab3-aecd-ad52ab2a1ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe9a644-e5bb-4baa-91f6-d90dcabb691f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933ebfbd-4b55-4e50-aa57-101155302b9e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80c2511-f85f-4f84-bf84-99a034742df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda37120-6d0a-40ed-a81d-901b0dd25d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8e0e59-b238-4da9-9c82-6ef659e7fc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762f2afb-7308-458c-ba98-07b96ae22ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d172640-a89d-403e-99a5-a6fe33824179",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b7d56e-367f-49f7-af87-0e31aefe53f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0c14e6-f7ab-4423-a208-c1ad07aee885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7d1a9-020b-47a6-b5aa-5d8ca1fb13bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6801d9f8-13a4-4841-b160-e1210a0a1fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e846d0ae-4970-4162-9bfa-d5d239a1a54f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc558540-d7f4-4155-abe5-0918be314841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f639bd58-bce0-43cd-b6bf-09e054def632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0031de-9aca-4c9c-8577-5b664bda4079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2216adb2-b96a-4295-98f0-5090d43ab95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c925ba7-f0e7-4467-89db-394aa61ec1d8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ecc93d-90d1-4685-b135-677b2f5e8a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32cc6ced-cbed-456c-81a5-7f0ead9172f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757752fc-6474-4877-9679-c08efa311da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98dcd08-9e60-4816-8a5a-025996642bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aea703e-96a6-4285-bf17-cbe7bdc73bbe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4540b1-7743-403e-8fc4-b0533623a5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "852821c0-2567-4c81-9ba5-5c8ecf8357f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a589c-5f3b-4327-9609-3e7448b04ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9a012b-a649-43c4-8f33-f5e60fadb7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dfeba3-b2c5-4d0c-838c-340dd2e9e1ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee88e767-47d4-43f1-a3de-8a37e6f009d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd697253-f4d9-4770-9feb-c631b1e9ba72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70478efd-3dc2-4cf9-98c4-5bf8418a97b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7320550-e699-46ad-9aa0-f01c8f2121fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bf51ae-02d2-43a1-a8eb-920e642468a0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb7274b-afd2-45ca-893a-75fc570f7dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6f1579-4adc-423f-8d9a-fe285617574b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e437a21c-9086-4f1b-a5c7-3402e5551fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71696628-8599-4635-92f1-80d91eb99c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f58df5-2715-4a59-9850-1bdd1e1ea434",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0920a30d-a1a6-451a-90f8-917b70948b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04eb4c9e-230c-4b46-9731-db7a2ab3f814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8969b8-e5b0-43f6-a840-f32dc8a37009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d670d3f1-7879-4ef4-847e-1d4b28657000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee028e7d-0269-4162-a7d1-077d1987ead8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97156e89-8ad4-4020-bb26-6e155a4273f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a44429d0-3097-426d-89bf-c8c8df4400f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c62ff45-42ae-4f4f-9595-abdade792b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcc5337-08e0-4945-9c17-48bf5b745e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c438bac9-01f5-450f-b7e7-f6129583504f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c9c047-0526-4c01-af02-45a030cd3801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e233ab1f-69df-44f9-a3a2-1ca0bd95154d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24c7f1b-9450-4524-b237-b05d0d4bfb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1c5236-d9d7-4cbf-a921-47ba6465e67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1414805-7554-4062-ae3c-aaaede866932",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba42f30-5e26-4361-98e7-f01224601c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d85995-c192-477d-a506-629b4e596e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d211fb-51cf-48b9-a9f0-b235cf3d895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a631f3-4ed0-488e-a6bd-927bf5c90afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427f350f-d895-4591-b960-d40dbcc9feb5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c201897-70ef-46f0-ac6e-de19372a4fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1e3cb7-cfe8-4445-9ded-0aa2a92441dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3bef9c-7eee-44b1-bc74-f38cc244843b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ab9415-98fb-40e7-9db4-051f98dfcdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9154bb10-916f-4e4f-8de6-4215c967e241",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36b6ce1-a648-4513-a378-80f3ac37eb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686ffc29-8484-4681-9a42-51acb7c43eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a3171a-db69-421e-a524-7870351c410b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18dcf93-03c7-4aea-957b-d06aadd7a52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7a9cb0-f4b9-477d-9a75-8fe2c0150251",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c76792-9777-44cb-819b-81cb231af73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a4b3b6-36bd-4f92-82ed-1e708c9242ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209b42c8-7a21-47ea-8500-bc1774cff1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b386523-b7a1-444b-9427-2b0de96d41e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c642e28-bc01-4d85-a955-b2fe2aa24b57",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefd1585-f605-4617-aae1-d2922c36a3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "964df428-0e54-4cb0-b70b-f8c5b3784899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8e5d9a-1378-46b8-bc94-bb51b5b56797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6aad8aa-1869-48bc-a0cc-23d66cade762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4793153a-ec15-435c-9a48-f722db826fbf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061efd93-0ce5-47e0-ba44-0cb66fd9d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef929af-c312-4f3d-8124-661c3eac68ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf8e1dc-c446-4524-a6d5-f27b113bcada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1becf3da-b5cd-4960-999a-6851fc7593fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da2095-b8ff-4955-9e1a-20813ff2eb92",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d35d5bd-f048-4f91-a961-5e2d9605b007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ab7acb-0200-4d19-8a59-cb051c6d7c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5943740c-d79a-477d-abc8-7010a7d5e890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a506d6-2f79-48b2-9b0b-8a1f9ed065af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f16d2c-d455-4a2d-9ff5-9f7b000d5eda",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2634c5d6-fc23-4e01-9aee-9661fcfd5b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa8b3a8-54af-4f1b-afb7-be1d0b6be61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f825c4-c350-4c41-8e25-1d248dfa9635",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb6fe9f-7d00-447a-8c3c-f88393d5949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e20e482-41d5-46a5-a539-13710dbbdbcd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5bd2bc-b025-48d7-a71e-f9960519b708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4e7298-3e16-4307-9e07-c659e938a89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6faadb-ada1-4683-98a2-213107d61930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341823af-e7f7-434e-93c5-78dc8d72cb90"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b536e4f-048f-4dbc-9f3c-0bf3c0aa4bb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73658a57-1b3a-49c8-940c-35e746502f47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5789e880-8873-4eee-9f68-470acab8dad6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ef57e7a-0ce5-4292-922b-bc566fddee48"
                    }
                  }
                ]
              },
              {
                "id": "937c12b7-c7a2-49ad-9519-5252b926c2f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22cd3603-9800-4dba-86e1-662ed1a4e1ed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4b80aa-7034-4e13-ad3c-9ec0af8c9754",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bfdd6d48-8abb-4e67-b2b4-d15de5e596d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1d82b2-25e0-4539-9c8a-d01d322f93e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79206cdd-b8d9-472c-8170-5839da755422"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25a9d719-99d8-4121-871a-66ba3cc1614c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a837966e-349e-4ad4-b3bd-4b129a92eb76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dfa7465-d630-4874-a17c-4a434c87184d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7dacfd8-c329-40b8-82f3-5bc588bf51e7"
                    }
                  }
                ]
              },
              {
                "id": "8e6bfa87-17e1-4336-a8bd-e8cff2c8caa4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "daba52af-6d30-4bf3-924e-65417669db43",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbf1347-f295-4c86-aea7-4087820bf745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a0d24a60-3d6c-441f-a4e8-0bf66d1201ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b18f9d-7078-4155-bb81-0a78bcd02e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e2d876-411d-488a-aeef-c7ac40657e6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c090229-6cb6-4a4a-b715-e3f06c8e5a3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a4ad188-68ec-48d5-bd77-9e27adb913f5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0739c318-25b7-48bd-921a-e90d7e605859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04eec67b-76db-451c-bd51-d3ef594c65f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f68ac199-3da5-4822-9deb-d051f8c15e01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c50631bf-632c-41ff-bb93-e1a20ddafb30"
                    }
                  }
                ]
              },
              {
                "id": "21cb49ea-d673-4c1b-a630-4fa636d1698d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8c14c2f-0d78-4e5f-9c61-04b7cbcfee90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66360072-d28d-4334-a128-31dd4aa6734c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59936132-c59a-4e12-a765-5bfdfabe141b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bc68922-db0a-4a2b-b314-61986e43cee9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dc60a03-b7fd-4e1e-b59a-294c8754c8ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "20301931-09a4-4320-bfe0-0acc92f3e4b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1044493b-4be0-434d-9a6b-38f3734460ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f17ef3d-b7b1-416f-878b-49e02fafaeec"
            }
          }
        ]
      },
      {
        "id": "28bcf776-f129-473c-8272-d833fd6edf5c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3670c264-54d9-4560-b694-ace423c7c2a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee3c7139-df3e-4a95-863c-c5013a152da3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d760924-ffd4-4662-8e1d-249509262655",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965b5cc3-82fc-4938-8f62-75da2071d27f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05a57fc7-83df-437b-b616-8a58c34f568c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865cfdd6-a78a-4386-a781-5ed63dbfd921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26db3b70-f95c-45d3-85f5-6813d12f20a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d2fb23d-2471-42e5-a84a-92235462a540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "290df0ff-7ff5-4661-87cc-d12188cb93e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0f81ac1-e54b-4029-84b3-4f7278416c79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d496b0df-3a2c-4129-88bf-ddd5180ac578"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e174d359-3370-4988-8d3b-6b16aa7b03fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c9c6fc44-e2b9-4b7f-8c2e-99c6e0ca2067"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4ae28bb-d0ac-4683-bb21-9629323df725",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e65d7e4-8327-4b1c-9b14-0b5f8bbb52e3"
            }
          }
        ]
      },
      {
        "id": "bdf347ec-f8ea-4c80-8e08-04df1ef37186",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "577ab8f3-d3b4-49de-925d-816005db0819",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02ccf92a-d8e6-415b-928f-724d8c47c6d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bc673f0-3e2f-424b-b153-499e80ebbc79",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb83862-adbc-4895-a0d1-e610b2a37ceb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4acdef68-b201-427d-b336-a06c2eee5978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298f1069-7870-495e-b362-3790c6f95a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "085e1af9-076c-411b-8aca-961cd6d48e57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4936e896-34d5-4f66-a55d-d9ad8880b685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf8f8607-16e0-451e-99db-a68f62c6eaee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf874119-e80d-477d-b4a7-26d476c6335f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3300025-b6b0-4f31-ace5-8456d4bac286"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fef30aa-ff80-4b83-b137-72dbf97420bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3f46a81-7828-457a-b459-e327ecc5d01b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9624e2c-e6f3-4176-be1f-fc7504dde3d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e435efcd-1c29-451b-b757-f2c09dd2e55e"
            }
          }
        ]
      },
      {
        "id": "9411f381-8501-43eb-9eff-1a2018007203",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bff9ae46-fcb3-4ae5-903c-5a8808a2242b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e12f479d-d71c-4a3f-a873-e1dafcae3e63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4767ae86-2997-4d2b-b682-5142542aca7f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b417443a-7f17-4256-ade0-98c305978427",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f12163aa-2a24-4f62-ac37-14239956b583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c34498d-1673-46f3-8118-0206ecdc313f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb00bd47-3b8a-4c6c-81d2-fb47ae044245"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "923b3203-3f85-4861-ac7b-f6fa6e139ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ebc0033-fd5e-4954-99c6-b2dd8127937e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3db9e66f-2246-409c-8337-d82ae60bb6c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54e00641-3bdd-416c-ab82-d82b8646ab24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c80636bd-e8ff-4272-b053-ea8ca2e3db9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e038d24-d5b4-41b5-bde2-c9e37244f329"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24a21710-c8a4-48dd-8680-6a28b0903c48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "865b9049-d841-46fe-826c-1f5ea8202df5"
            }
          }
        ]
      },
      {
        "id": "1508b89d-5ff0-454d-9726-d65a7d5840cd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3254732-12a2-4070-98df-362d8d7a05d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7511451-73c6-4781-a3b5-f4443e57a1f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e721cbda-5930-4b4b-ae7c-cbf5b9670bdf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22b958b6-a678-443c-b524-536eee3edb38",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6178236b-783d-4251-b54b-16c46acd6c8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 144.1964912280702,
      "responseMin": 5,
      "responseMax": 2768,
      "responseSd": 325.1566693715681,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702946169952,
      "completed": 1702946220362
    },
    "executions": [
      {
        "id": "8ce09e51-0596-40e0-8e07-02ad9550f96e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "08b48e50-c64f-4c11-9609-9e8b4d52d9fd",
          "httpRequestId": "900bfdf2-63c5-4fd3-8ac9-3fc9758847aa"
        },
        "item": {
          "id": "8ce09e51-0596-40e0-8e07-02ad9550f96e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a27eceb-70d9-45f0-9266-549be4db6df2",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "3b68d0de-7e34-4152-8477-9162c1de7d19",
        "cursor": {
          "ref": "e1bad2ed-3cbf-49df-8515-1ae77c2477df",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "96258aa1-a15b-490c-a4c7-2963a06a13f2"
        },
        "item": {
          "id": "3b68d0de-7e34-4152-8477-9162c1de7d19",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "649eedf1-4ffa-4f45-9954-9769dfb8d940",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "a8e39d5c-7b12-4b7f-b65e-b3aa5d263508",
        "cursor": {
          "ref": "0ae58931-dc09-4c48-8a7e-b4c0c28cfbb9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1c4b0379-bf15-4f2c-a7b8-bbba91e56295"
        },
        "item": {
          "id": "a8e39d5c-7b12-4b7f-b65e-b3aa5d263508",
          "name": "did_json"
        },
        "response": {
          "id": "c1995f97-2507-4d0a-9c62-5e34ec8d021d",
          "status": "OK",
          "code": 200,
          "responseTime": 598,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3b22c-f300-4fcc-9f0e-7e8812c0c75d",
        "cursor": {
          "ref": "9eaae3cf-8a71-4b04-9b99-1fa7c82acdd1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b20e973-4de7-4571-8547-0dfe8adf6d5f"
        },
        "item": {
          "id": "18d3b22c-f300-4fcc-9f0e-7e8812c0c75d",
          "name": "did:invalid"
        },
        "response": {
          "id": "57ab1c00-2d63-4067-8926-332e0419c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3b22c-f300-4fcc-9f0e-7e8812c0c75d",
        "cursor": {
          "ref": "9eaae3cf-8a71-4b04-9b99-1fa7c82acdd1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b20e973-4de7-4571-8547-0dfe8adf6d5f"
        },
        "item": {
          "id": "18d3b22c-f300-4fcc-9f0e-7e8812c0c75d",
          "name": "did:invalid"
        },
        "response": {
          "id": "57ab1c00-2d63-4067-8926-332e0419c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245a59e9-c664-45ac-86a0-b9e52119c6d5",
        "cursor": {
          "ref": "cd65ec2c-36d5-4465-a22c-06e783420c54",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0f6eed00-daf4-4534-a45b-3899ed166a11"
        },
        "item": {
          "id": "245a59e9-c664-45ac-86a0-b9e52119c6d5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1edab04e-553b-4409-afe4-c03249797e41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 155,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e20fabe-5fd6-4df2-adf9-8b6a0f20d3a8",
        "cursor": {
          "ref": "4a0557ca-b9c5-48a5-afe1-0085dfbf3337",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c53d6251-5931-44b5-9e97-112f9970af9b"
        },
        "item": {
          "id": "9e20fabe-5fd6-4df2-adf9-8b6a0f20d3a8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c49d64ed-beec-4c7e-89c6-e44a143b3666",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e5d037-ccff-475d-a7e8-fe7cdd9f347c",
        "cursor": {
          "ref": "809f27fc-4c57-4fab-9b6d-945e3b76fb9b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c496a4b-b2bc-402c-9539-a92c1ddd715e"
        },
        "item": {
          "id": "b5e5d037-ccff-475d-a7e8-fe7cdd9f347c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2a97ae77-810b-47f0-a5da-ea9fc3d71b4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa6102-2b9e-4342-a909-f6f49ea5ddcf",
        "cursor": {
          "ref": "03e305a5-aef9-4317-aeab-06c9a6c0f8d5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a2cecec6-d6a1-4cfd-bc8c-6218627a33ca"
        },
        "item": {
          "id": "65fa6102-2b9e-4342-a909-f6f49ea5ddcf",
          "name": "identifiers"
        },
        "response": {
          "id": "f9dcf8ea-ef87-4b32-be89-01cd27a3aa41",
          "status": "OK",
          "code": 200,
          "responseTime": 337,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceeb5bd-5225-4904-aa5b-8d3da6e0432b",
        "cursor": {
          "ref": "96c0c637-2203-4b3a-afd8-22bc8746c700",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e4a26442-ec9a-4d94-9259-35ed0e9ebe6b"
        },
        "item": {
          "id": "7ceeb5bd-5225-4904-aa5b-8d3da6e0432b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c3bab102-96ea-4e4f-866e-6e358a7bb8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad792ffc-3de2-4d9b-960c-017919eb7990",
        "cursor": {
          "ref": "6f963f0b-899c-4ba8-af09-7b147a3bb7a2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c48f3127-0abf-4006-8492-5c53ac5df188"
        },
        "item": {
          "id": "ad792ffc-3de2-4d9b-960c-017919eb7990",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "69ea6984-a99d-4442-9073-1e8ba71b32c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0434594-f96e-4b53-a5ac-5d1277f1542b",
        "cursor": {
          "ref": "b1f3b822-6b1f-4e77-87dd-92d3754a3469",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5696db68-af06-472e-b5e0-3546ca6bfe91"
        },
        "item": {
          "id": "e0434594-f96e-4b53-a5ac-5d1277f1542b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ba507653-e354-4f26-b01b-ae3d5dbbf9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64119e4-a61d-4caf-a36b-1665a0b33cb1",
        "cursor": {
          "ref": "5b2aa5a0-a598-4a05-8152-33849c1444ce",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "29851d3f-bc94-40bb-b216-f3c684239023"
        },
        "item": {
          "id": "c64119e4-a61d-4caf-a36b-1665a0b33cb1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "90fa3ff4-88aa-4995-85e1-9cc9c9cf6933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55750239-76b5-4142-8e17-660fba1d24e7",
        "cursor": {
          "ref": "3f5167ed-9b82-4e87-90fa-361791da1873",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9e9ad0aa-9765-498b-be40-fb292b61b19d"
        },
        "item": {
          "id": "55750239-76b5-4142-8e17-660fba1d24e7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "62de7c05-f1d5-43aa-885d-ce55d96e0477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36e46be-ca41-4fff-a046-c7cc454d9e0a",
        "cursor": {
          "ref": "62c53243-81d5-4ab4-a040-75b2378b49c4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "28ceab81-d53a-4992-9ca2-8f7caaf46b8b"
        },
        "item": {
          "id": "e36e46be-ca41-4fff-a046-c7cc454d9e0a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "60704ca5-7361-45a2-8dea-7f1a4613a3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330f302d-4943-4b87-b1e7-7508acf16c1e",
        "cursor": {
          "ref": "f59dc3bc-d9e0-46d0-a4ba-bfbbd8f34502",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fc2d65a9-546d-4e57-a669-de78cc661517"
        },
        "item": {
          "id": "330f302d-4943-4b87-b1e7-7508acf16c1e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c2a65ad3-70a7-4d6e-813a-6f83a59b780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4e1dc7-f953-4366-b399-110c69910cfe",
        "cursor": {
          "ref": "ced9ef9d-418b-42de-a19d-ee374bd493f1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec1687ca-3b3f-4cdf-ab7e-2a6fe48a771b"
        },
        "item": {
          "id": "5e4e1dc7-f953-4366-b399-110c69910cfe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "accfdfde-a0e5-43da-8895-65643f3e840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc9603e-69be-439e-b2c8-6f4e5967c4e0",
        "cursor": {
          "ref": "87c27d21-872a-426d-8e6e-13cd66e8d2ed",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5b73b093-3174-478a-a130-1bdb5990e319"
        },
        "item": {
          "id": "bfc9603e-69be-439e-b2c8-6f4e5967c4e0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2b8ba9d2-5920-485d-a668-f033a0ce6ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f3530-4eea-42f8-b581-6c5e9c5cf7ef",
        "cursor": {
          "ref": "81106dd6-9a13-4590-beb1-ce5fa578acc6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "44c7e432-e2be-42a0-9f2c-273562e5d0a3"
        },
        "item": {
          "id": "4e8f3530-4eea-42f8-b581-6c5e9c5cf7ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "12fbee54-77e5-41b2-b220-8f30c7848a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d1cab9-0016-40fc-9f4c-543b44dca269",
        "cursor": {
          "ref": "fcd6ea07-0f3a-451f-8708-3fa9bd8f3e68",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "72951860-e374-48f6-8450-2f4f94b06e76"
        },
        "item": {
          "id": "77d1cab9-0016-40fc-9f4c-543b44dca269",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9178c93b-ee39-4b46-96bc-7ffc85ac70d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c6ea5-bf20-4960-8561-608e36158d85",
        "cursor": {
          "ref": "64e03b3a-8888-4b0f-be33-1782eea48d01",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ca3457a8-b23e-4d47-b626-5e93775e9429"
        },
        "item": {
          "id": "491c6ea5-bf20-4960-8561-608e36158d85",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "deaeb783-e8a3-4cbb-b32c-f2359bbe0e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30bccf3-4df5-4f19-b6e8-ecd240662a1a",
        "cursor": {
          "ref": "a532c166-fef5-42a3-8fd3-56136afe3e0d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b706dc69-c79d-4407-a262-57e6ce20fd0e"
        },
        "item": {
          "id": "b30bccf3-4df5-4f19-b6e8-ecd240662a1a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "165b4971-4cea-414c-9e2b-9506be8bd8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20030d-b054-48ca-b954-7c1d104b0456",
        "cursor": {
          "ref": "3e220a52-ab4f-43fd-907b-37fed69a89f1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "785955e9-0f96-4084-a9d7-d94dfcde11c8"
        },
        "item": {
          "id": "9d20030d-b054-48ca-b954-7c1d104b0456",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5f4fedb3-f5a6-43bc-a492-8c8ac130840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9f23b2-cc6c-4174-b39d-73b8ba298538",
        "cursor": {
          "ref": "7221ce21-668f-40a6-9068-600157449d86",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "21c6a05a-a095-4ec0-ab9c-9ac6820e1b03"
        },
        "item": {
          "id": "ce9f23b2-cc6c-4174-b39d-73b8ba298538",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f7261687-fa85-4b7a-9903-a97270d72d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c0e51-67ba-4135-87de-e2110ece5848",
        "cursor": {
          "ref": "794be568-8799-40a8-be44-8e95cbe78cc5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4241e554-7322-4950-98e5-db0b372ef40f"
        },
        "item": {
          "id": "3e0c0e51-67ba-4135-87de-e2110ece5848",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "591d8a2e-0fb3-413b-b093-23bfa1a586e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2851ce38-6bb7-434e-afc9-2ce8b9e1c973",
        "cursor": {
          "ref": "501c7942-e46b-4955-b3ce-99c62f85d5cc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2d6419c9-bbe2-4845-8d50-a0b7ba0d164f"
        },
        "item": {
          "id": "2851ce38-6bb7-434e-afc9-2ce8b9e1c973",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c53caa85-5a62-4b02-ab76-f3f3d3f2c317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d027d5dc-b879-4f38-bcac-5a23f8995eb2",
        "cursor": {
          "ref": "ec87cefe-7e37-45f6-888f-bb936510e1ed",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0b64b5e4-e7a9-43b5-9031-cae255149961"
        },
        "item": {
          "id": "d027d5dc-b879-4f38-bcac-5a23f8995eb2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "79a8d52d-23e7-426e-8bdd-ffaa5bb69181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3984e5-ae88-4b43-856c-b46531d1d314",
        "cursor": {
          "ref": "e135c5c0-6302-4572-a05f-71065871a534",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e1f5a3b-a95b-404b-be53-538857f89f28"
        },
        "item": {
          "id": "bd3984e5-ae88-4b43-856c-b46531d1d314",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a8542455-1e1d-456d-81c4-fa691d714bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b78224-8851-4126-8e2c-11feba8a75a3",
        "cursor": {
          "ref": "5cfdaf52-8a5e-4163-a81e-fe94541a5297",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2eecd2f6-8040-4163-93dd-af9957810b88"
        },
        "item": {
          "id": "e1b78224-8851-4126-8e2c-11feba8a75a3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d8011ca9-daae-4c40-8561-2c14a7d1d1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f056efa3-3be4-48c5-9fb8-bb97fa55cf7f",
        "cursor": {
          "ref": "31e3d579-5bf0-4094-bd06-cb14618151c4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6e8cba4e-fd19-4b1c-b970-55dbfb765d6b"
        },
        "item": {
          "id": "f056efa3-3be4-48c5-9fb8-bb97fa55cf7f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e18266a-6676-4463-a7b4-aab4d1a65c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fff3b6-46fe-4113-985b-096300707037",
        "cursor": {
          "ref": "b1b7e743-1ee3-4119-9de7-fb93eb6838c5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "04af7054-e6aa-43da-95d1-3cb7e09186c8"
        },
        "item": {
          "id": "d9fff3b6-46fe-4113-985b-096300707037",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d514c272-e193-4b36-b79f-106e49fef5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3d81c5-448e-44fb-aad2-64c5170d92dc",
        "cursor": {
          "ref": "f6e602b9-67f9-45e0-ab7a-7a9d23204049",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1f55237-abc4-41e7-aa3c-a6bebc3082af"
        },
        "item": {
          "id": "0b3d81c5-448e-44fb-aad2-64c5170d92dc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e700ddf2-3976-4284-8ff9-927d15696dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc68070-b647-49fa-83e5-2a59bba94cae",
        "cursor": {
          "ref": "147476fb-56ed-4bfe-a141-f673166eea75",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "67cda578-92af-4b85-a81c-53fb863368f2"
        },
        "item": {
          "id": "ccc68070-b647-49fa-83e5-2a59bba94cae",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "57dba42d-755e-4a86-8310-9495a5208b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df33c604-02b2-47e2-ba1d-f11128f0a8dd",
        "cursor": {
          "ref": "feed4260-4c63-409c-a88d-1cdfebbe0efa",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6e7fa467-d650-4db5-bc5e-af7d1c71f205"
        },
        "item": {
          "id": "df33c604-02b2-47e2-ba1d-f11128f0a8dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ad5869d7-296e-48d9-87c0-c22f16401378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de38d46c-dd81-43c2-9f00-0d86c0987a3b",
        "cursor": {
          "ref": "40832256-e937-4bb2-b9bb-6685d688715a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "de9a8684-8a20-425a-8194-d10f605f8d62"
        },
        "item": {
          "id": "de38d46c-dd81-43c2-9f00-0d86c0987a3b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fd1c2cb9-9743-413c-85fe-983c38510e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f197660-7004-4756-8a9a-754e87a7748b",
        "cursor": {
          "ref": "e50c50b8-b40d-4284-a091-3f6b0be4439b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6365b771-a4eb-41ae-8501-dc66b42f00e7"
        },
        "item": {
          "id": "2f197660-7004-4756-8a9a-754e87a7748b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c066b6d-b895-4c9b-a1aa-7bfaf3aa2be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7615ccd7-1419-44a5-aa16-4d11992da0c1",
        "cursor": {
          "ref": "9c590ce9-c38e-49f0-b55d-8897170b3fb5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ddf2c1e2-a811-4c9d-aa2e-80e1ee059bb2"
        },
        "item": {
          "id": "7615ccd7-1419-44a5-aa16-4d11992da0c1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34fcd1e5-1df0-4b75-8a6b-7ab8906c56ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56b92b-0540-4663-809c-3d921aa0a86c",
        "cursor": {
          "ref": "fa90bd76-3bc1-4d20-b115-bd0d68b6d1e9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73259888-6722-41e0-817b-b652958264bf"
        },
        "item": {
          "id": "bb56b92b-0540-4663-809c-3d921aa0a86c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "79526662-5aa8-4d35-a4d5-f5bf17d8ee3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a8dd60-7014-4bb8-aeb1-796fe10609b2",
        "cursor": {
          "ref": "e921ab27-fb21-4dfc-b068-66b8dc2207c6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "95b3cced-5e85-47bc-bd92-11db03733a5c"
        },
        "item": {
          "id": "f8a8dd60-7014-4bb8-aeb1-796fe10609b2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "269e03d6-3f75-4bcc-8ac2-898af43c5469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e962d4f3-17d7-4657-87da-2fe178dfb0d0",
        "cursor": {
          "ref": "3039f90a-6368-4676-9dca-6f6ee4222129",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f4719e30-6bc2-49f1-9180-79e6e55e9694"
        },
        "item": {
          "id": "e962d4f3-17d7-4657-87da-2fe178dfb0d0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "de3ce232-0545-4aa2-9eaf-e2444cccd8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee84034-6a36-4095-963f-6aaff38dcbe6",
        "cursor": {
          "ref": "8e7d101e-8ea1-4d4f-81c5-cadc825fe18a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d5c8b644-a153-4b21-9f99-740206c7b794"
        },
        "item": {
          "id": "eee84034-6a36-4095-963f-6aaff38dcbe6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7bf63f43-9919-4037-a8a0-e425fe4f6bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5091f6-aae7-4ab7-8bec-1473259c16e3",
        "cursor": {
          "ref": "4a78f631-63ac-4320-83fb-86fbb5621aec",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9b019f49-649d-415a-a3ee-88a62ff078f6"
        },
        "item": {
          "id": "ea5091f6-aae7-4ab7-8bec-1473259c16e3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "17506d9a-9060-4345-998c-5bc145dd537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c5198a-e2b7-4597-a365-47dccc6e4f25",
        "cursor": {
          "ref": "0447e977-53fc-438a-8ba7-96ed03f78b7a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d18f9a32-5318-480e-9157-c1207eb0703b"
        },
        "item": {
          "id": "73c5198a-e2b7-4597-a365-47dccc6e4f25",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "06ef9c27-913a-4689-91d7-766d930f85b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b13a41-7792-4b6c-bec5-80c6aa146e21",
        "cursor": {
          "ref": "98ce6102-d455-4620-90cc-918c9f36ca36",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b5108a55-bd9a-432c-a87d-04e90475537b"
        },
        "item": {
          "id": "51b13a41-7792-4b6c-bec5-80c6aa146e21",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eb170c21-5253-4511-9c4f-cad0b534c522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d770c530-c954-43f1-a192-23baaa87981d",
        "cursor": {
          "ref": "6894baac-0bbc-4b4b-9e35-aad0593994ea",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "19968b57-66be-48b1-bd35-8588af5ae5ce"
        },
        "item": {
          "id": "d770c530-c954-43f1-a192-23baaa87981d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e1171fc8-c637-495f-bc56-d790f8c1424c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 368,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b97d5a6-d775-40ed-be3b-156281da4258",
        "cursor": {
          "ref": "295780c6-447e-4dd4-930b-2fa3ea975414",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "30c9862e-9af3-4f7f-a6fc-c88ed9e85638"
        },
        "item": {
          "id": "5b97d5a6-d775-40ed-be3b-156281da4258",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e135033f-6d20-4076-90d2-900109037f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7628ee-2ff8-46e5-9c04-6a4c03c81f01",
        "cursor": {
          "ref": "a6e81482-0db5-480b-a85f-3b30b93462bf",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "98ed140b-1e71-4e09-8e67-872ea74ed77a"
        },
        "item": {
          "id": "8e7628ee-2ff8-46e5-9c04-6a4c03c81f01",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f545985a-127a-403e-89d4-76a60d98cfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7defd1-a4ca-4d20-94d6-5094b29626d5",
        "cursor": {
          "ref": "84b3e3f5-1a5e-4d37-9c67-af903a646f66",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0c6b3171-ceda-4c94-857e-d1a1cd0320b8"
        },
        "item": {
          "id": "fe7defd1-a4ca-4d20-94d6-5094b29626d5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d93aff0d-e656-4618-8c24-a62d65caf7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c33cfd3-5ae7-4b03-bd49-59e3261a6084",
        "cursor": {
          "ref": "e4952d09-48f7-4d07-9f5a-d8784c8d8916",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "71fcbf28-b212-4f4a-91c0-70fc4eb430d8"
        },
        "item": {
          "id": "5c33cfd3-5ae7-4b03-bd49-59e3261a6084",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3587573e-c8cc-4033-bbb2-a582e87c34c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d51836-80ef-4032-b6a0-6672f38a93b6",
        "cursor": {
          "ref": "60726b09-c400-4189-a801-83f0d6b8dc11",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "90f66c7a-140b-4249-b226-0abc4d043c4e"
        },
        "item": {
          "id": "07d51836-80ef-4032-b6a0-6672f38a93b6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1f81ca7a-d57c-4449-8251-e80854cfb0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ad9962-f313-487e-90e3-18d5236591dc",
        "cursor": {
          "ref": "5051a1d5-1589-4625-b14b-3de196f418fe",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c2e62878-4489-4236-8a5a-69796c67d909"
        },
        "item": {
          "id": "a7ad9962-f313-487e-90e3-18d5236591dc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "de97477e-837f-4f03-837d-dc2540e1cb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42efdc01-96e9-480d-bcc5-fa2687cc9745",
        "cursor": {
          "ref": "84ce6c52-11b7-45fa-b2fe-b73f3f060988",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1c8ef3ec-f250-4a58-afa8-d42886b84ffa"
        },
        "item": {
          "id": "42efdc01-96e9-480d-bcc5-fa2687cc9745",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "640ad3a6-65de-4048-ad92-c2761063a0af",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 355,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06640b3-2d4c-4d48-9117-1443389c9f9c",
        "cursor": {
          "ref": "5c3ab234-78d6-4b25-b779-30a471d469f0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "198fa355-6365-41df-932b-7cb0fd28985e"
        },
        "item": {
          "id": "f06640b3-2d4c-4d48-9117-1443389c9f9c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2a0fad08-cc9f-4f89-af2f-29571e111ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee59e77-44be-4e0f-87aa-afc62f4330a1",
        "cursor": {
          "ref": "3b112ef9-1fce-4a27-92c5-e9d3689417c4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "57ba55be-f88e-41c0-836a-7c12f1f5033d"
        },
        "item": {
          "id": "3ee59e77-44be-4e0f-87aa-afc62f4330a1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "77f843dd-7995-4744-a0d8-64763a141b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce46de3-066c-4513-8982-9e2d5cf303d0",
        "cursor": {
          "ref": "959c9a57-5e68-45bf-96fa-f163c6324fd6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "107bbcf7-9fb2-41e9-ad04-3060cf989355"
        },
        "item": {
          "id": "0ce46de3-066c-4513-8982-9e2d5cf303d0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "66d3a7fd-6213-43ae-bd4f-8c267eba1ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1bd423-7639-4d2d-87bf-96d13d2b3a2b",
        "cursor": {
          "ref": "d4e0d182-14b2-4af6-976a-ece38f1dca42",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "016f309f-ba03-4368-80c0-bfbdeb3dfc7d"
        },
        "item": {
          "id": "bc1bd423-7639-4d2d-87bf-96d13d2b3a2b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b41361e0-f1f1-49c3-8cab-bdc7fb27c7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265a9af2-e070-4c47-a090-20c51e58d519",
        "cursor": {
          "ref": "0943f7ab-5e9b-46bc-b154-f67764143e8d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "24104bc4-4864-4cbf-938d-91206eef1b80"
        },
        "item": {
          "id": "265a9af2-e070-4c47-a090-20c51e58d519",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "71c719b1-26f6-4ebd-ac61-910bb41fad7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5552f1f-26c0-46a8-90e7-923bc88d056c",
        "cursor": {
          "ref": "bc3ffb7b-8646-4435-bc51-62746350439b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89fe54f8-494b-4fb6-9c3d-a98e75d6b40d"
        },
        "item": {
          "id": "a5552f1f-26c0-46a8-90e7-923bc88d056c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "71991a5f-5738-4f0a-a3b5-f7c2140f1e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b8a45-0243-402b-9cdd-d583cea1aa2c",
        "cursor": {
          "ref": "bd898e83-dd3a-4591-af5d-6a712ba54c42",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e4388e14-679b-4c29-9a33-efcc775b0d10"
        },
        "item": {
          "id": "c59b8a45-0243-402b-9cdd-d583cea1aa2c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "261690ab-e451-4e42-9b45-5b6352adf0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a59863e-924a-4d8f-bfda-3faf71de0d84",
        "cursor": {
          "ref": "6f57fc95-6177-4202-8f1c-139379c77e72",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "842fbbc1-0165-4522-810a-f8327f148ff9"
        },
        "item": {
          "id": "6a59863e-924a-4d8f-bfda-3faf71de0d84",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1b9b68ab-8046-48ea-96ce-9d64523cd79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55fcd66-e426-4050-b45a-9c2ae89f6748",
        "cursor": {
          "ref": "6a8f10f3-f7ed-4b83-83ce-49895d95a123",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3eb4bea1-efeb-4244-8c3c-9f1303634769"
        },
        "item": {
          "id": "d55fcd66-e426-4050-b45a-9c2ae89f6748",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf2cc994-49f8-4bb0-a7f0-0d545a927d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed9a7b4-50b7-41c7-bb24-538bbd6242ad",
        "cursor": {
          "ref": "67891753-1ab8-4666-8323-5f8842b2840d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "24be648d-6164-4288-a4c8-8887a5f6f5ef"
        },
        "item": {
          "id": "3ed9a7b4-50b7-41c7-bb24-538bbd6242ad",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9519a469-b815-48a0-8a08-117624047e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77545abc-1aca-47dc-9e0c-70913f96c20c",
        "cursor": {
          "ref": "c07504b2-cfd2-411e-8d49-e8746a852b4d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "17a96157-52a6-4b8d-b406-81d73b89ef51"
        },
        "item": {
          "id": "77545abc-1aca-47dc-9e0c-70913f96c20c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bc046df9-791f-4fac-bbf9-cf48e1ac7822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c7ce88-20aa-4bd9-9871-74b8cdc5cdef",
        "cursor": {
          "ref": "dec12f29-3d13-40a5-a1ec-6cec79e7b78c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c505929c-c2db-4054-8497-e2fa55bfb8fa"
        },
        "item": {
          "id": "d6c7ce88-20aa-4bd9-9871-74b8cdc5cdef",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f1fd3bbf-0faa-48bd-8c3b-7e44476d47e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4906f3-99bd-418e-808c-fbb4ec3bb8b8",
        "cursor": {
          "ref": "1ae96a62-928b-4e92-9da1-ae07be688e54",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dedfb304-b542-4723-8e32-1b9322d82393"
        },
        "item": {
          "id": "1a4906f3-99bd-418e-808c-fbb4ec3bb8b8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cb68e475-2c05-442c-b768-f11e72b1b764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49cf162-54b7-4b70-b4f5-17878858a181",
        "cursor": {
          "ref": "37fa1df0-d538-4d10-a6e9-ed445b4cab72",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1be06cf3-402b-44fa-b7ea-b06e07431408"
        },
        "item": {
          "id": "c49cf162-54b7-4b70-b4f5-17878858a181",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "97f5cee3-4109-4668-86f3-57b79869b897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1102a6-8fa7-4377-8ff0-511055571392",
        "cursor": {
          "ref": "0dd3681b-03d1-4b1c-adb1-875b18b76820",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "74799c2e-8ba0-44d2-8742-030153fdd350"
        },
        "item": {
          "id": "7d1102a6-8fa7-4377-8ff0-511055571392",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "acc85b8c-14ec-4d4f-916e-6041a871bdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd5dffd-31e5-4e86-92a4-0734cb74069a",
        "cursor": {
          "ref": "5d494992-e177-4892-b636-35099d0b50f1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0fb6590c-f8ea-4c3d-bb8a-44cd0aabd924"
        },
        "item": {
          "id": "4dd5dffd-31e5-4e86-92a4-0734cb74069a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "70a19073-5ac6-4767-98d7-6b648a5e6367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6381af6f-3fc3-404f-8cb8-54266ff3adff",
        "cursor": {
          "ref": "e170fbe2-b029-4f48-8984-de05d22f3758",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f3f410b3-15b6-4d97-9944-31ae0f84acdf"
        },
        "item": {
          "id": "6381af6f-3fc3-404f-8cb8-54266ff3adff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "81a857a2-1f54-482a-bc84-3e659c5abac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686a4dd7-8672-4047-b891-f922e3d89c4b",
        "cursor": {
          "ref": "00f1f7ad-6faf-4486-af83-33acd2ae264f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a147118d-9902-4f94-a75a-a28ad8451ea5"
        },
        "item": {
          "id": "686a4dd7-8672-4047-b891-f922e3d89c4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c37edd77-0e1c-49ac-a771-0c32d1600284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e731f955-4354-4528-84b2-9fe46e369828",
        "cursor": {
          "ref": "08f1f1e5-af5d-4634-97dd-c64bf6f98537",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f98db68f-f40e-45db-abbd-6fc5900c56ca"
        },
        "item": {
          "id": "e731f955-4354-4528-84b2-9fe46e369828",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f766b08d-6642-4dd4-a256-0ebc5cf31c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227cdb0b-5943-4a82-a23e-8f73a1fbba21",
        "cursor": {
          "ref": "4c8f0f73-9ecb-4702-9101-2c9b76b53930",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bb6d0acc-3e69-4602-9906-951bc5fa8339"
        },
        "item": {
          "id": "227cdb0b-5943-4a82-a23e-8f73a1fbba21",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6da6361a-ce80-4fa0-b68f-472eec3786d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f186a23-d616-4cc5-b866-fbf27a9f28e6",
        "cursor": {
          "ref": "30c28057-3b70-4d36-9f8d-62fdbb745770",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "441152f5-4214-41ea-8959-feee0e600671"
        },
        "item": {
          "id": "9f186a23-d616-4cc5-b866-fbf27a9f28e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "55b0e9f4-c250-48b3-b36a-9d749ccbf235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21069bc6-160c-4d87-a76c-e91cac7eb04a",
        "cursor": {
          "ref": "4ccff7e6-3ac8-4135-a4a2-a916c5eafb4b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3e8cd837-58c7-4f9d-8b57-2117a8983fb1"
        },
        "item": {
          "id": "21069bc6-160c-4d87-a76c-e91cac7eb04a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "64216672-e443-4f83-8e08-bb17d95eea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c471b89d-1aad-4782-b79a-13add0f26eef",
        "cursor": {
          "ref": "8025c0b9-9e23-4fdb-a9d1-5019485fae42",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ed2c9f8d-413a-49c4-b077-4da318a97bc7"
        },
        "item": {
          "id": "c471b89d-1aad-4782-b79a-13add0f26eef",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a8685e80-da13-4f1e-995a-5ae6582d2f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b62527-5d34-430b-960b-f459d33ade82",
        "cursor": {
          "ref": "3508c9e2-17f8-4ba0-b5ff-5d26ce0dcaea",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9f3d69ea-ea9a-486f-bbec-6a41e47c9dd3"
        },
        "item": {
          "id": "84b62527-5d34-430b-960b-f459d33ade82",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "78cf51e5-1bab-4554-bdcc-dbddc5d11d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5bd48c-6b33-4dc4-aa20-778dfe98eea8",
        "cursor": {
          "ref": "14b100d0-f4e4-4e39-9420-3309478ceaaf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a28e9881-05de-47be-abee-5efe546170cf"
        },
        "item": {
          "id": "5a5bd48c-6b33-4dc4-aa20-778dfe98eea8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7bac7e67-6812-4ebb-9540-080c95c4f91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257ed616-d7e0-44e0-824e-e56279ccddb9",
        "cursor": {
          "ref": "12b706db-33ac-4579-852c-11e161a354fe",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e0624b66-85af-49e3-824a-9d500a0b7c34"
        },
        "item": {
          "id": "257ed616-d7e0-44e0-824e-e56279ccddb9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dabd628f-9739-4bc6-9309-b57054348f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610a9aa7-1057-4486-a334-7834c137815d",
        "cursor": {
          "ref": "4275d296-eac0-4ac7-9070-5983a51b5eb8",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2ec2726b-ba6c-448c-a139-ba58047f8616"
        },
        "item": {
          "id": "610a9aa7-1057-4486-a334-7834c137815d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ec1855ad-99f5-44db-bd05-14f0713ca505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3a7e40-3fc6-476b-9b25-729a83f6dfed",
        "cursor": {
          "ref": "ed6bfbbd-4120-4aa9-84a6-481e4254ceb9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "979f9bf4-656c-4563-a9da-b8c9467aa042"
        },
        "item": {
          "id": "ed3a7e40-3fc6-476b-9b25-729a83f6dfed",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e2ed9d81-b7af-491a-8149-eed4335e5e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c13dbb0-c5eb-4416-ab5c-d54502b9ff32",
        "cursor": {
          "ref": "2ca2fef9-7b23-457a-8426-6fe1be6bc6c9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e31d1643-f07b-46d6-9b7a-7d1d692ab304"
        },
        "item": {
          "id": "8c13dbb0-c5eb-4416-ab5c-d54502b9ff32",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9a9eac77-fa54-4633-9bf7-fc37d9cb7ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bd0538-94ca-4c19-ab3f-8461dcc6eec4",
        "cursor": {
          "ref": "603b0a88-b601-4935-b7e9-53d450b43df0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "92b53220-5984-4708-b29a-175c6cad6354"
        },
        "item": {
          "id": "57bd0538-94ca-4c19-ab3f-8461dcc6eec4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e77bb4da-f2e0-4cf7-aaec-5777427cd8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d2dfa9-9a9c-4f9c-afbd-48496208c86c",
        "cursor": {
          "ref": "f280c3bb-9649-4c71-ac3e-1964639b4186",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b636f462-e6b6-4616-8c1d-5cd363f3eb46"
        },
        "item": {
          "id": "29d2dfa9-9a9c-4f9c-afbd-48496208c86c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d768f45-9394-4584-b08c-8a95368dcac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21069d16-1a2d-4951-9102-8a0dcdd6a2f6",
        "cursor": {
          "ref": "6a5101e8-6970-4577-8859-e663f9f76483",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b65700c-85aa-46bf-b573-bc1358770c8e"
        },
        "item": {
          "id": "21069d16-1a2d-4951-9102-8a0dcdd6a2f6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e9f3122b-8f8c-4df0-8e26-84fb5203c9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74999a06-d459-4810-85bd-a311ff87da58",
        "cursor": {
          "ref": "da8e28d2-29c6-487e-97e5-7814e02d9b2d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1db5c6b9-7dc0-4bf9-bdb5-9d6577add9bd"
        },
        "item": {
          "id": "74999a06-d459-4810-85bd-a311ff87da58",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ad9bb647-72ec-4ff7-aee0-fc65237cc2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3086172-14d1-49b5-82f3-3a2703f85914",
        "cursor": {
          "ref": "eeec43e3-adc2-478f-ae77-95f7062e04b2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cd24cd0b-c9e7-4c4f-8e37-328ff08bda5c"
        },
        "item": {
          "id": "c3086172-14d1-49b5-82f3-3a2703f85914",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "20d6aae1-1a7e-4bd2-b0d5-318bf8779dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edf0ffb-d99f-4e20-9b36-56539387f87b",
        "cursor": {
          "ref": "a356ea90-8296-44f6-81b4-fc5e651c5654",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "552cb6dd-ea44-4cac-8859-c614f848215a"
        },
        "item": {
          "id": "5edf0ffb-d99f-4e20-9b36-56539387f87b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "af55c36f-8b35-4d1c-8633-a6ff53004e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d1a83e-8df5-4efd-a8ed-a872e4e45ef7",
        "cursor": {
          "ref": "22148c8e-1d19-42d6-a8dd-62a694903d25",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eff41254-cb20-46ac-b517-827685ad2f26"
        },
        "item": {
          "id": "75d1a83e-8df5-4efd-a8ed-a872e4e45ef7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c1fbdbd4-b6ee-48db-a10b-efb9c4f9ef1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb86b2a-527d-48f2-9541-e6751c02fea0",
        "cursor": {
          "ref": "055e8d51-31d3-442b-aa91-ab1bff834eaf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fad23cce-82b5-4ce5-b9fa-89e3f97db3ee"
        },
        "item": {
          "id": "abb86b2a-527d-48f2-9541-e6751c02fea0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2fc5e046-a043-4121-ba0d-477b086ce513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8413ceb2-0af0-4877-b2f9-2dd8a197becd",
        "cursor": {
          "ref": "273d94ab-bc86-4765-a9ae-2a92a2b83f9e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f191d170-52b2-4969-80ad-d63b15eaf79f"
        },
        "item": {
          "id": "8413ceb2-0af0-4877-b2f9-2dd8a197becd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b52032f9-377b-4320-b243-a2685a801505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9808be79-b509-4dfa-8fa2-34a30aad5a48",
        "cursor": {
          "ref": "b80476f4-360c-4884-ace1-f2241f1eb8db",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7eab41e0-88ba-459b-b6a6-96dd0aefd489"
        },
        "item": {
          "id": "9808be79-b509-4dfa-8fa2-34a30aad5a48",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c54dab93-71d8-4af9-9367-ada23e128a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc51ea9-c85a-4684-8aab-2c3bbcdcf500",
        "cursor": {
          "ref": "f2ce8264-d4d4-4c9b-9207-2a6e71aace4c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37847346-e04b-4a2b-8fa5-4d86c2e0eac0"
        },
        "item": {
          "id": "9dc51ea9-c85a-4684-8aab-2c3bbcdcf500",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eed6556a-9e53-43ef-ba7d-361012a371dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e795c3-e6f7-4145-bccd-71d93cc26414",
        "cursor": {
          "ref": "6d06e667-9925-420c-a0bc-fbd6d223ea59",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fc9ab092-464f-4abf-b103-af54d2b6127c"
        },
        "item": {
          "id": "26e795c3-e6f7-4145-bccd-71d93cc26414",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c94824fa-2d1d-49cb-bdbe-3d57205f846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379d042f-785c-478e-bcfc-77cb0d564b30",
        "cursor": {
          "ref": "5a9150e0-6ec6-4dc8-9f8c-ce508f4fb564",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bf67c9e2-28e1-4a7f-bd71-b4e3779cbc3d"
        },
        "item": {
          "id": "379d042f-785c-478e-bcfc-77cb0d564b30",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "49929aad-c355-49eb-ac55-0c075d1173fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b11943f-f1cc-434a-877e-3e102bd2fdd6",
        "cursor": {
          "ref": "ce1775b5-187a-42c1-8927-acec50ba3278",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9b5bb28f-2bb7-4529-a948-d5b0328e2003"
        },
        "item": {
          "id": "1b11943f-f1cc-434a-877e-3e102bd2fdd6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9ef91e14-b851-4899-9b10-0ae76e5b5a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e77952-409d-472d-98e9-163c68356e2b",
        "cursor": {
          "ref": "51077ef1-9aa0-495d-a100-9d66be60876b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ca7416bc-35d3-46e6-a0b3-20b931632f01"
        },
        "item": {
          "id": "e0e77952-409d-472d-98e9-163c68356e2b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5170e81b-8a96-4911-94ca-badfde2c4ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3985314d-ec28-4dbd-be4e-331100f8066f",
        "cursor": {
          "ref": "c8f985c4-5875-4636-b5fc-ba0fb0d56c15",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "57de8160-2b6e-45b2-b241-68596e8a2f7c"
        },
        "item": {
          "id": "3985314d-ec28-4dbd-be4e-331100f8066f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6e9b072a-1f94-4dd1-b3b8-dd06bde738ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7519ccf-1c27-4637-9d35-641383442dd6",
        "cursor": {
          "ref": "58852880-132f-4a3a-9650-405cb74fdcdd",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2a097fc7-0fc0-4430-bfcb-8cad9ddc5899"
        },
        "item": {
          "id": "a7519ccf-1c27-4637-9d35-641383442dd6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "42153373-aeb4-413d-9f9f-92e822b87dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197bc1d-4394-4cb9-8a58-7bf8c13f8cf4",
        "cursor": {
          "ref": "ef03bb37-ea85-4a39-925b-e2cc269a1749",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "42a5b480-841f-48f3-8276-30a3a8089b56"
        },
        "item": {
          "id": "6197bc1d-4394-4cb9-8a58-7bf8c13f8cf4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e541696c-307e-444a-bcac-3aff5ac0f898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13c1c74-b28e-4f55-a81a-7a5752a83443",
        "cursor": {
          "ref": "4f529f50-6698-4c94-a63f-6f78bbb1ce6e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d7e9457e-f231-426e-ad2d-8e9088bc3ca6"
        },
        "item": {
          "id": "f13c1c74-b28e-4f55-a81a-7a5752a83443",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "788bfa4b-5922-43d8-aaa3-30d875dfd77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1639ec6-573c-4a69-894d-4ca5555034fa",
        "cursor": {
          "ref": "e22748b1-daef-483b-bd07-5747d3ca38e2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "593ad8b0-8949-4ab5-a727-e8e7353d9b52"
        },
        "item": {
          "id": "e1639ec6-573c-4a69-894d-4ca5555034fa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4efe76db-8389-4392-987f-8d2cb404b651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3020e81-f4b4-497d-8117-de3efdafc42f",
        "cursor": {
          "ref": "6083aecc-2463-4471-a5f2-aed7268dcc56",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90ed18b9-930c-4b74-a821-0099e996ed5d"
        },
        "item": {
          "id": "f3020e81-f4b4-497d-8117-de3efdafc42f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5aa30270-964d-4dc1-a5e9-8af537817bdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df13fa2-542a-41c2-8feb-207c4148483c",
        "cursor": {
          "ref": "b5cbd902-fed8-4d1f-adb7-1f936a8cfbcd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "97b9c56d-f33a-4d80-bcc2-d6c602f790e8"
        },
        "item": {
          "id": "3df13fa2-542a-41c2-8feb-207c4148483c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1b95c3fa-2227-4c78-a416-31d811a78c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ca65fedb-d5f9-43de-addc-3619c195fdb5",
        "cursor": {
          "ref": "f02bcff1-7963-4bb8-a87a-41d67f59ce14",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4efc03fc-8fc2-49fc-bb7f-8e6c8d080fe5"
        },
        "item": {
          "id": "ca65fedb-d5f9-43de-addc-3619c195fdb5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ba6a346f-8fa2-4aca-956a-6a385cee79af",
          "status": "Created",
          "code": 201,
          "responseTime": 2688,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8053783-9006-40b2-a610-ff3d8c7f78e5",
        "cursor": {
          "ref": "b9907c1b-ebec-4e5d-b58d-0b153ec4458b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2b8a4b22-5d20-4f8d-ab79-dfb26c0e91d8"
        },
        "item": {
          "id": "c8053783-9006-40b2-a610-ff3d8c7f78e5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "055baeea-a583-4dac-a28c-dd14433d0cac",
          "status": "Created",
          "code": 201,
          "responseTime": 2053,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f30186-5565-4ee4-bce4-99e27345d377",
        "cursor": {
          "ref": "98c65e17-7129-4baa-b824-09f7f2c0e0f1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a2374c2c-6981-458a-ac33-caad547ad6bd"
        },
        "item": {
          "id": "f2f30186-5565-4ee4-bce4-99e27345d377",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "45f12c26-4f5b-4eb4-95db-0f0216fc9dff",
          "status": "Created",
          "code": 201,
          "responseTime": 2045,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d5fbd-6d41-4e3e-ba78-ddc28bd2fc04",
        "cursor": {
          "ref": "c99215f7-4b62-443b-89ee-cd6c19c98ce6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "75f415f7-f593-4399-a57e-7862a7cdcedd"
        },
        "item": {
          "id": "591d5fbd-6d41-4e3e-ba78-ddc28bd2fc04",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "60099211-b448-438e-b549-ba6627d6a948",
          "status": "Created",
          "code": 201,
          "responseTime": 2768,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "093c9e43-4413-425e-9e4d-93bdc1a73395",
        "cursor": {
          "ref": "dccdbd2b-34ec-42fa-9491-575f70902add",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b52eea85-e22c-4a6f-b357-fffe45eb2f9c"
        },
        "item": {
          "id": "093c9e43-4413-425e-9e4d-93bdc1a73395",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ca018a0a-9012-4a7a-baf9-4cfd165896e5",
          "status": "Created",
          "code": 201,
          "responseTime": 2179,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3cccb7-9876-4558-ac07-de9f03e77f8b",
        "cursor": {
          "ref": "5cd85cc0-09e4-4a40-b459-e56100490074",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d1f3262f-f7be-4cf0-bf07-5162ab352fb3"
        },
        "item": {
          "id": "5e3cccb7-9876-4558-ac07-de9f03e77f8b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bdad8084-57a0-4e54-ad80-23e145eb1107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a92b1dd7-009e-4e95-a3cb-58b24cd6f73f",
        "cursor": {
          "ref": "f6892c82-d784-41ce-adaa-7a04a992098a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f184b842-9282-4b15-9e35-9e9e6dbab6b9"
        },
        "item": {
          "id": "a92b1dd7-009e-4e95-a3cb-58b24cd6f73f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "40d1563d-7d0a-4599-87c3-67403f28a407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43041be-8ec0-412a-9a44-1a94dda2d49d",
        "cursor": {
          "ref": "272fc40e-eb25-49d1-bcf9-afe62dab10a2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "219a6359-3501-41d9-a4e2-65cab43be097"
        },
        "item": {
          "id": "c43041be-8ec0-412a-9a44-1a94dda2d49d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b636df2f-a204-47be-b2b6-b2759968a5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4076c883-c9aa-4892-8e61-e96f42318eb1",
        "cursor": {
          "ref": "7e424927-6949-4656-8f80-2e0930dc5498",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6bb46f16-6438-4e21-b565-426651e0eaa8"
        },
        "item": {
          "id": "4076c883-c9aa-4892-8e61-e96f42318eb1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03941089-bf1e-4a9e-8f44-163021925cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a18f975-600a-4bb1-b0a9-2829d429b424",
        "cursor": {
          "ref": "d8b819d0-7db6-4009-8519-4fc58e90383c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3d851bbd-2d4c-4bbb-bf52-afbaa9b431f7"
        },
        "item": {
          "id": "2a18f975-600a-4bb1-b0a9-2829d429b424",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a5c9c2a-e1c6-45d1-bae5-802068361b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75e901-556a-4a7c-a079-d979fd9d6344",
        "cursor": {
          "ref": "61c8ca97-d30c-4f98-b345-7dce5da58181",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f297d7fb-64f4-4f0a-9d4f-abd823ade7cf"
        },
        "item": {
          "id": "1f75e901-556a-4a7c-a079-d979fd9d6344",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c8b6e82b-094f-477a-9bcf-8422934aeaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e533629a-6f0a-4726-b9c3-423ca1dbd1b1",
        "cursor": {
          "ref": "c27f7ee3-2ef3-4f1e-961c-5b08a55dfed9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "296c6ebc-3a62-4e54-9557-6a076f4700a0"
        },
        "item": {
          "id": "e533629a-6f0a-4726-b9c3-423ca1dbd1b1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee748144-c49d-4add-8005-e08de95c1a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b67a056-3911-420c-9c37-80edc4351c3d",
        "cursor": {
          "ref": "5e3eb5a8-3246-42eb-b72e-4e0fbe96ff17",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6903a48c-c92e-4e04-a35f-75f9326be0ee"
        },
        "item": {
          "id": "8b67a056-3911-420c-9c37-80edc4351c3d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc15fc55-58ba-4ee5-906b-02f5615778e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89200f5c-ae22-44b3-8efb-7377f0e25c4d",
        "cursor": {
          "ref": "6390b34b-4eb5-44f7-a144-238aa270178d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2b0ee2ba-c359-42af-aeb7-013227ab2ffe"
        },
        "item": {
          "id": "89200f5c-ae22-44b3-8efb-7377f0e25c4d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8ecd54c8-30fe-4f74-a99f-ddb0da09ae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7199d4af-d289-48a3-a6fe-04574ea0328b",
        "cursor": {
          "ref": "6393c698-71e2-4f38-b72c-da6b31a29c0d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0e4866b0-7252-430b-aed1-eca9c1ee70c1"
        },
        "item": {
          "id": "7199d4af-d289-48a3-a6fe-04574ea0328b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "43ee7f56-6e9d-46e9-8f28-64a84cb9ca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4d07d7-3fd4-4efe-b89d-d44d86523815",
        "cursor": {
          "ref": "87a399c3-8825-4393-997d-0d286644b694",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "58e8392e-3586-49d9-876a-b05d346684eb"
        },
        "item": {
          "id": "db4d07d7-3fd4-4efe-b89d-d44d86523815",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "727f82dc-4298-4192-9bff-b39187e5fa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e23412-609d-4717-8b6d-c90af5b3db6e",
        "cursor": {
          "ref": "e994081e-afc8-41d2-97f0-33f6fcd6e596",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b6b1061b-e2ca-4014-81d8-752338ab9940"
        },
        "item": {
          "id": "41e23412-609d-4717-8b6d-c90af5b3db6e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1a74ecda-b671-4b75-b3fd-3d00ef767e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96641d6-3d39-4014-b023-24d66fb5b2ee",
        "cursor": {
          "ref": "a9c39ad6-05cd-4fcd-98bf-ea4489cf9428",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5cf0c8b8-0684-4f9f-b2f3-dc8a0a266f42"
        },
        "item": {
          "id": "b96641d6-3d39-4014-b023-24d66fb5b2ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "697a62bb-57e2-48e4-9641-85f9c3feffc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2cae91-894c-4a4f-938c-fea7e0a6da29",
        "cursor": {
          "ref": "7ea5f1c0-17aa-4f9c-8519-a591db647ae9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b51b84e6-6eb7-46ce-8c07-340a2dc2e0a6"
        },
        "item": {
          "id": "6d2cae91-894c-4a4f-938c-fea7e0a6da29",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "67429d96-d76a-4911-a87b-cf98135298ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29662986-8477-4326-aa64-f3c1eb179b4b",
        "cursor": {
          "ref": "4f1e949d-dc47-4a9e-9835-d62fa692c70c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "77779dad-23ee-458c-afb8-3aa0153dfa79"
        },
        "item": {
          "id": "29662986-8477-4326-aa64-f3c1eb179b4b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf82c7bf-9f2d-4b9e-b337-68842047d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eb6ee1-d3ba-4eaf-8ef5-b08b2b4ae264",
        "cursor": {
          "ref": "804e7a78-c43a-4788-921d-8ba6641b8356",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e5345811-1d4b-4543-9fd0-ce8d81a98db3"
        },
        "item": {
          "id": "50eb6ee1-d3ba-4eaf-8ef5-b08b2b4ae264",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "861e59af-aee9-492f-86e2-28e7317a5ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320924b9-507d-4e01-9993-daf48ce7dc57",
        "cursor": {
          "ref": "91ae59f3-f618-47d7-8052-047498a3dfb9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "726a9614-b109-4e72-9410-f668089536bb"
        },
        "item": {
          "id": "320924b9-507d-4e01-9993-daf48ce7dc57",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5c8dcc8-9531-4db6-bb43-1527190d4599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5fb38c-63fb-4827-a31b-6e74eb7a676d",
        "cursor": {
          "ref": "085f3733-0f85-4e1c-b4ea-ecde1daf0973",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0a9b6c93-9a2a-49e6-9a7c-09e857d1cd7c"
        },
        "item": {
          "id": "eb5fb38c-63fb-4827-a31b-6e74eb7a676d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f5d7bea-2ca2-4574-bb7d-15723aaeb642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0225ff-f6a9-4c14-9460-e6c6c61be154",
        "cursor": {
          "ref": "65adae5f-0b1b-4d40-b42d-03fa8fb6a320",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0146255b-0f23-40f1-b48c-91d2f95f905d"
        },
        "item": {
          "id": "dc0225ff-f6a9-4c14-9460-e6c6c61be154",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7dcb3c6c-c1ef-4f2a-a7ee-7b21a1428ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63de1dec-145a-4007-893d-8a8d9a50a15d",
        "cursor": {
          "ref": "1a2498df-6bed-4808-af43-9dd7ec39428c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc315a47-dac6-48e8-931a-ae234614e2a2"
        },
        "item": {
          "id": "63de1dec-145a-4007-893d-8a8d9a50a15d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c4388a00-1cd0-4dec-98bc-4fa9912a6c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94742d95-a1ae-4c83-9f96-9e3793db5074",
        "cursor": {
          "ref": "b32351c2-6eb1-426b-9300-d52eec3011c2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5cf45a0-68c8-44ce-9f55-c354787e5e1f"
        },
        "item": {
          "id": "94742d95-a1ae-4c83-9f96-9e3793db5074",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9287660-297f-4bb3-8f58-b4ee286ee6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94729d69-b125-4e5f-bef9-3476810baa6a",
        "cursor": {
          "ref": "6c935232-7328-4511-a57b-f08d0ccb924e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5074fa17-78c5-4fcc-afb5-366dbf3db873"
        },
        "item": {
          "id": "94729d69-b125-4e5f-bef9-3476810baa6a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3f968771-9308-40e3-8eb9-5959cbbdbc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb65c85-ca03-4cc6-8ea2-2e0be06eb754",
        "cursor": {
          "ref": "2606f859-aecb-4ccc-9514-4c1d6c70aeb4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "71d3eca0-b6d7-4ec3-974e-443929e97af2"
        },
        "item": {
          "id": "1bb65c85-ca03-4cc6-8ea2-2e0be06eb754",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bb72f8d3-3a04-4d8a-80e3-4f4741f4bafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4093c9bf-f594-4726-8535-2c2d308c26dd",
        "cursor": {
          "ref": "dcf359b6-1730-450d-95c8-39ab5c01d4ce",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "407e0a8e-a9b9-432e-b415-74732ae707a4"
        },
        "item": {
          "id": "4093c9bf-f594-4726-8535-2c2d308c26dd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a79539be-351b-47ed-95fb-cf69e122949a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a038b80-9069-4ecf-a3a5-6e97893bf996",
        "cursor": {
          "ref": "58cb410f-3b8b-4d9a-971e-a3b3bddbda3f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "310b7c33-1fcc-4557-a6bb-d8fcf80048d2"
        },
        "item": {
          "id": "4a038b80-9069-4ecf-a3a5-6e97893bf996",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88d9d7c1-17ab-4f90-83e3-b541b70aa2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114691e4-c33a-4313-b1a7-0bc4e4041e43",
        "cursor": {
          "ref": "544d6cf4-c484-4ce2-8fa3-c15181b61f57",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f152200c-d599-4a10-971b-60ebf3225e3c"
        },
        "item": {
          "id": "114691e4-c33a-4313-b1a7-0bc4e4041e43",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7f620fc3-5147-4c4f-bee9-3729a19ea38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da648f9c-8ea1-43b5-a5a4-1e29a5f4cac7",
        "cursor": {
          "ref": "de27eaae-4236-4cec-9958-192a109a6011",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "75aa1fc8-0798-4f3b-a07e-b8fbd0e7a3b6"
        },
        "item": {
          "id": "da648f9c-8ea1-43b5-a5a4-1e29a5f4cac7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38ee3316-8712-4439-8c8a-b0f01dd95db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f16d37-e8c1-458f-823a-5f8aed25b333",
        "cursor": {
          "ref": "9d18531b-a5bc-4b09-8ca9-9be97765e645",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c986d0c3-a868-4c9a-bc31-cf7e3766f33e"
        },
        "item": {
          "id": "f8f16d37-e8c1-458f-823a-5f8aed25b333",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05b2cb78-b3e6-4c58-a8d9-0030af2a74ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdbb72-137c-472d-8c79-5b39e23baf14",
        "cursor": {
          "ref": "1bc398fd-c05f-4634-8ffe-47ed9cdce77a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "32366eb7-6e73-47d0-8b21-e97a0dc81e25"
        },
        "item": {
          "id": "d6bdbb72-137c-472d-8c79-5b39e23baf14",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "099bcf70-7d01-415a-84df-7ec66618035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aad21a-841d-4f2f-8f61-cecc184d69f9",
        "cursor": {
          "ref": "51aa647f-368c-4117-9ae8-7477ce33eb24",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6415a396-e900-442a-a0f7-4085cdb118fc"
        },
        "item": {
          "id": "75aad21a-841d-4f2f-8f61-cecc184d69f9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4beaed1f-11cc-4457-af56-4d46e0f6417f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5dcd3d-7eca-45c3-a386-9d4fd01c95b9",
        "cursor": {
          "ref": "f5bd4876-283f-499e-b1f9-bd0310dc4d2c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d17c5da7-2d8d-452d-9874-be90282045ab"
        },
        "item": {
          "id": "ba5dcd3d-7eca-45c3-a386-9d4fd01c95b9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "781f5a5f-c2c2-4317-b305-c2526108423a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0ec850-c537-4b6e-abe0-180acb5480cf",
        "cursor": {
          "ref": "b61e90da-edd5-4d6e-882d-65dbce218bb5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f93aade8-e530-423a-9e6f-98b006f0c978"
        },
        "item": {
          "id": "cb0ec850-c537-4b6e-abe0-180acb5480cf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca235e95-684b-47dd-a4ce-c740ca1a0444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584c90b8-dd14-446b-9ae1-24aa9b0975f4",
        "cursor": {
          "ref": "6a6bfa66-be5f-4760-b42d-c2d5b9d49a58",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36aa1a04-8713-43eb-8f83-6f4cf434fe05"
        },
        "item": {
          "id": "584c90b8-dd14-446b-9ae1-24aa9b0975f4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3ca4546e-7cfd-4f43-a7cc-6e5517a5798d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbd193c-28fb-49f1-80be-28088f5de9f3",
        "cursor": {
          "ref": "8b3bf71c-c48f-4494-93c8-ce95da8566a4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e30c6824-fb8d-4fbf-b094-71d5a3d7c3e8"
        },
        "item": {
          "id": "2fbd193c-28fb-49f1-80be-28088f5de9f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "37f5b0eb-f82e-4905-b3f1-ab6f383156a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4501237-43d3-4e90-bee1-36d0c25942d3",
        "cursor": {
          "ref": "6f704540-f9f6-41ec-a61e-8748d06dd8af",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0e8e429f-072f-4db3-b6dc-636b44eaeae5"
        },
        "item": {
          "id": "c4501237-43d3-4e90-bee1-36d0c25942d3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "305fc021-7de3-4a37-916f-3a8929959e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0824fb9-dd1d-42b0-b43c-3542da8cacc5",
        "cursor": {
          "ref": "ef04861d-6c94-40e4-b6ba-73c3c1431237",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4129c862-ca5b-49e1-bd88-7efa9943b438"
        },
        "item": {
          "id": "d0824fb9-dd1d-42b0-b43c-3542da8cacc5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "908d5101-e995-4a32-aa0a-cd16247ad0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3550710-aef6-4da5-9c5c-e9a2651a77d3",
        "cursor": {
          "ref": "b4214cf1-9c57-45dd-b449-72a7389afef9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1b20de57-f32d-4eae-bc8b-ef31992f6a2f"
        },
        "item": {
          "id": "f3550710-aef6-4da5-9c5c-e9a2651a77d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "73e3d63f-aa1f-4206-ac62-8aeb15d628ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e0c715-c1ca-4c07-bd6f-7ac724d26f5a",
        "cursor": {
          "ref": "b3e1a9b5-c3e4-4eeb-99df-d5566aea2dd1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7f13b7b0-66ee-4eae-9e59-be6680c966da"
        },
        "item": {
          "id": "37e0c715-c1ca-4c07-bd6f-7ac724d26f5a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "165c3cf6-0234-4cea-981e-2916c9b7b4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f939cdc-9124-493e-b5cd-90ad83189e38",
        "cursor": {
          "ref": "2b7620e9-fa96-40cb-8f2e-fe2a1d87041e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e7e4d9b-af40-4ec2-bb78-f0fa44404f5c"
        },
        "item": {
          "id": "7f939cdc-9124-493e-b5cd-90ad83189e38",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f82ea01e-cda4-42ec-943f-b48cde1a59a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7b7dba-65b8-4fed-8472-659248415204",
        "cursor": {
          "ref": "9fb9f8fc-0bce-413c-8595-7f5227d7db52",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3b97c780-0cd1-4d05-8d95-229b49288370"
        },
        "item": {
          "id": "dc7b7dba-65b8-4fed-8472-659248415204",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "395bf064-77c3-4619-99f3-81e0c08fca80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e556da01-9b04-4ec2-b36d-a8fdb15fd5a9",
        "cursor": {
          "ref": "52f3720d-985f-45d0-837e-0096bc2d75ff",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "754bf138-9e61-48cc-aaa1-5c2031d624a4"
        },
        "item": {
          "id": "e556da01-9b04-4ec2-b36d-a8fdb15fd5a9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f421fbef-c1f5-46ce-8137-cdd14a322eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ecce24-9c97-4806-a370-b0fbf35a9dc2",
        "cursor": {
          "ref": "b749facc-02a5-437a-bdb3-94926ea30eef",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "941295df-5332-424c-8b5f-c287cd48f0d2"
        },
        "item": {
          "id": "74ecce24-9c97-4806-a370-b0fbf35a9dc2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "499e3795-a7fc-4d12-be8f-2b97cce8c722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fa7aac-833e-4dc0-86f2-47e867258608",
        "cursor": {
          "ref": "dbc16f1d-cb18-49bc-87fe-fa8037a8dde7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "00445179-af68-45a2-8bb6-ea85551ac14f"
        },
        "item": {
          "id": "64fa7aac-833e-4dc0-86f2-47e867258608",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f7169cf-8f4c-4d94-bb35-94aed710c6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b9ddde-71f2-4c10-941e-d5de90204440",
        "cursor": {
          "ref": "5413cbea-a48b-47c4-a982-0b2cfd7d8787",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4f53bf4f-ec50-4042-be80-44120edf59c2"
        },
        "item": {
          "id": "e3b9ddde-71f2-4c10-941e-d5de90204440",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2ec5c50d-9411-4112-900e-39653be771bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad5a03e-19c7-4a81-a5d3-f6d9a3d5c649",
        "cursor": {
          "ref": "b54dfb0c-f40e-4861-98a4-92704cdba21d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2f9c6cf3-1f56-4e65-b14c-434bbc0d05af"
        },
        "item": {
          "id": "6ad5a03e-19c7-4a81-a5d3-f6d9a3d5c649",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2b6b9fd8-2a9e-49c5-8d26-c4a593bd1543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1b60d2-bdce-4e97-9f74-ef8e17840796",
        "cursor": {
          "ref": "02d675cc-577a-4e98-813b-e2fb3100590c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e684f840-4662-43c9-91f9-37ef3ba81498"
        },
        "item": {
          "id": "1e1b60d2-bdce-4e97-9f74-ef8e17840796",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5173aa71-f33b-4147-b553-400bc58d9d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c043447-297b-4137-b8c5-3c7ebb6f4730",
        "cursor": {
          "ref": "90839203-32e7-4eb4-87f9-4edd6bfe8018",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "36d1e9df-d7ca-43ea-9650-628d4c353aba"
        },
        "item": {
          "id": "4c043447-297b-4137-b8c5-3c7ebb6f4730",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e12cab3-532f-4afe-a3f8-ee127a9ca088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879c7471-aea6-4344-a301-b17fcdc01557",
        "cursor": {
          "ref": "ef836809-e10c-4e6c-87c0-d05fb9196f15",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ae6f30e2-1e29-40eb-9431-49ffe05d1b11"
        },
        "item": {
          "id": "879c7471-aea6-4344-a301-b17fcdc01557",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "edc2fdfe-84eb-4a4a-b8a0-7048f4753238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df17963-e486-40ce-9b6d-6369f6007a94",
        "cursor": {
          "ref": "f34dbdee-a9e0-42f4-bf28-07e670c69831",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6c049d5c-077c-491a-8243-e186015f568e"
        },
        "item": {
          "id": "1df17963-e486-40ce-9b6d-6369f6007a94",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53a44fe8-7ad2-4baf-9dd5-3c1387ace033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e35b7a6-f383-4419-bcf1-79b0b30c1d19",
        "cursor": {
          "ref": "64d4bf2c-cab2-4be1-9948-184bf82a8cfb",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e999e0f0-73fe-45f3-b197-aad5e42a735a"
        },
        "item": {
          "id": "0e35b7a6-f383-4419-bcf1-79b0b30c1d19",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d7c9ba92-a0f5-4f5e-b5b2-23d23fd41cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5215b45-f6b1-430a-8a26-0f0c9b6042b7",
        "cursor": {
          "ref": "207016fc-3b86-44bd-8350-e6ffabf8eddc",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a7bc3194-c1e3-4040-aeae-a8e8480d85e5"
        },
        "item": {
          "id": "b5215b45-f6b1-430a-8a26-0f0c9b6042b7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c8e5903a-d217-4a8c-9dcb-b7ead95abffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2939c4cf-7b93-4e26-be8a-86f5a5bc8e85",
        "cursor": {
          "ref": "abae09cb-3838-4a1b-beeb-f3fbc2658c94",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2188141-e1d4-4ab2-9096-c59ffa5b1233"
        },
        "item": {
          "id": "2939c4cf-7b93-4e26-be8a-86f5a5bc8e85",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "906e09b5-a67b-423d-9bf4-4b5e67c88a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63fe10a-66d1-4479-b839-cbe7a88ab81d",
        "cursor": {
          "ref": "80170e61-6acb-4a0e-a54a-40020dc2eaeb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a73f82b4-b14a-45cc-a0d1-7e98514d0b92"
        },
        "item": {
          "id": "d63fe10a-66d1-4479-b839-cbe7a88ab81d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cdd89afb-419f-4eab-9c4c-d8fcb975ca09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9319c3-c874-499a-bf35-9ce3e1e9d2e6",
        "cursor": {
          "ref": "2dfc859d-5791-478c-bbe3-e27ce4889189",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "38f76ca8-48c1-4cd4-803b-f4a576d1b438"
        },
        "item": {
          "id": "1b9319c3-c874-499a-bf35-9ce3e1e9d2e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8e43884d-4b68-4863-ace9-e55aa8672047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9076d0-06e7-4993-a628-ac43037129af",
        "cursor": {
          "ref": "70fdc618-f96a-4328-bae5-2c5a1b32b04a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e33777fb-6001-4562-950e-f74ee1c20a12"
        },
        "item": {
          "id": "7a9076d0-06e7-4993-a628-ac43037129af",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5df52bf5-a3fc-4768-a0c0-3e9c26249ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f90e0-89e1-4752-9129-39a1bf2ce6c2",
        "cursor": {
          "ref": "332db0c0-912d-4ab3-912a-1122414c34d3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "53a1514c-eaeb-4375-8ea7-7373f54dba5d"
        },
        "item": {
          "id": "8e7f90e0-89e1-4752-9129-39a1bf2ce6c2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31b70c34-6c9f-46cd-9c54-c1c79349c828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6ddfbb-ead5-418b-9f48-fbff053deb33",
        "cursor": {
          "ref": "15cb6525-0305-4054-9186-3b93bce0f4d2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc585579-0195-46c4-b150-fa7a75e80edb"
        },
        "item": {
          "id": "7a6ddfbb-ead5-418b-9f48-fbff053deb33",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "76886554-1f3e-42df-a914-9278f17c8abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afacb81-3d19-4a6c-a5ab-45aeb16a71f0",
        "cursor": {
          "ref": "7670d751-d78b-4790-bc67-d4e666fbf2e6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "473c95ca-90cd-4d9b-b33c-ed2b8ae14a19"
        },
        "item": {
          "id": "9afacb81-3d19-4a6c-a5ab-45aeb16a71f0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ffdbcdc6-16a0-48f7-abe3-71e865567683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2a6222-58d5-4fcd-9398-47515c36f802",
        "cursor": {
          "ref": "2c8f4959-bbad-4f25-902b-3e67d382ca76",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1ab17abd-eed6-4207-9b90-544ab7c0c206"
        },
        "item": {
          "id": "4b2a6222-58d5-4fcd-9398-47515c36f802",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0f1e77e3-cba7-4dbc-b94e-e81f3103791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43330f26-44fa-4728-a0bb-5e53d070c74f",
        "cursor": {
          "ref": "4c2dc350-d184-47e1-a52d-11c4c096a464",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "50f677fb-0c08-4dbd-be14-83a924db534d"
        },
        "item": {
          "id": "43330f26-44fa-4728-a0bb-5e53d070c74f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd105110-d72b-4402-bd14-c847b850b5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f8217a-8e91-4134-b9a1-be27db548805",
        "cursor": {
          "ref": "a4ecb787-fc1a-4c19-9dd6-7a5bd4cde324",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "404c626f-3fc5-47ae-b4d2-3b6e35b712fe"
        },
        "item": {
          "id": "72f8217a-8e91-4134-b9a1-be27db548805",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "87ad212e-c7ac-42f7-94e9-9c8bab8cfb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131daacc-b6cb-4a22-8703-4d2acd2311f9",
        "cursor": {
          "ref": "11af7d07-6b9a-4523-b61a-ede53533b44a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1943c7de-9dc0-4b04-be12-d2ae4345274a"
        },
        "item": {
          "id": "131daacc-b6cb-4a22-8703-4d2acd2311f9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "14a8eb4c-8389-4ea8-acbe-5ffa00d00dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7ddac0-4052-4b6a-9a91-ae4ef692e89f",
        "cursor": {
          "ref": "2e9f7d0e-7f59-4680-941d-c6749eec5378",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a74ab8aa-5bfd-4cdf-bfee-e7f4d600456b"
        },
        "item": {
          "id": "0b7ddac0-4052-4b6a-9a91-ae4ef692e89f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ac25bd6f-9a68-4fc5-9acf-7d7d2ece21cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e58122-b72e-4732-af20-55166d066438",
        "cursor": {
          "ref": "9cc4f339-1084-40c4-aa41-e57c33410d3b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "04e4fe97-6106-40d5-9e94-7f867495144f"
        },
        "item": {
          "id": "b4e58122-b72e-4732-af20-55166d066438",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8505e8d1-9ea9-4034-9ab2-09abe84b6fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65a6ee4-9e58-4b6e-9d52-62c8c0bcfdd0",
        "cursor": {
          "ref": "41748f74-ed06-463f-843d-fc347e5872c2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f6588af4-b362-4aad-9426-b11f5e68647e"
        },
        "item": {
          "id": "f65a6ee4-9e58-4b6e-9d52-62c8c0bcfdd0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a63417dc-62b6-40d4-8d53-c81ea99c7224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab0bbc2-1e8a-4717-a810-0602c99228d4",
        "cursor": {
          "ref": "edceb430-f812-4c76-b8e7-857f0a901b7f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "140ab1a3-1e44-4151-9646-e4b969ce7626"
        },
        "item": {
          "id": "6ab0bbc2-1e8a-4717-a810-0602c99228d4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aac318a6-2ea3-46af-86ac-bd2b30ce0fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b55be16-bf28-4605-abc3-af4298eacd59",
        "cursor": {
          "ref": "22eec4a7-7a25-4ec8-8187-8b9cceebc08d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8237811f-61cf-460d-9771-f18e32e5f46a"
        },
        "item": {
          "id": "3b55be16-bf28-4605-abc3-af4298eacd59",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6c3dcad3-0c6a-4fc2-b174-b482439f255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373ef31f-823d-4738-83e8-0cc1cca68563",
        "cursor": {
          "ref": "9ad2d98d-ca2d-43d5-b720-99ca50c05b66",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2ae52c17-67be-4e67-89c5-3f8f1beaabc9"
        },
        "item": {
          "id": "373ef31f-823d-4738-83e8-0cc1cca68563",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cf8c22b5-2663-4a96-92f0-6d679c64deea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f1a3d1-42c1-4949-a04f-05ab481a4ba3",
        "cursor": {
          "ref": "bdf62b9a-a544-43c6-a3bd-03914dbc0ad4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3c297002-dd52-44f2-a79d-5a8c0af3aed7"
        },
        "item": {
          "id": "a1f1a3d1-42c1-4949-a04f-05ab481a4ba3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6e404b5d-3b0a-44c5-b585-dd2180d98d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2288b33-440d-45c1-8b7c-b23272cf46bd",
        "cursor": {
          "ref": "c8e1dceb-3908-4995-bfae-57d078fb15fd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "60e806af-d7e0-4df1-918a-1f85c6177ef7"
        },
        "item": {
          "id": "c2288b33-440d-45c1-8b7c-b23272cf46bd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "301a4692-65b0-4c2b-ad2b-c03e20e54829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db4ad2b-5225-4c1e-9152-8c5f2d8959da",
        "cursor": {
          "ref": "d28905aa-2436-4156-b5d8-0fd6b87a7670",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef0123ce-f0fc-415f-9415-3e5e13bc8f99"
        },
        "item": {
          "id": "9db4ad2b-5225-4c1e-9152-8c5f2d8959da",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fde91138-37d5-4b0f-98c3-01cf001f9338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9203d0-0ce1-4d13-a236-6c60e600b967",
        "cursor": {
          "ref": "4009bc46-a4f8-4987-b9d0-84d28b042441",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4b1cc479-8bec-49be-95b4-3984c2400443"
        },
        "item": {
          "id": "ce9203d0-0ce1-4d13-a236-6c60e600b967",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5210b749-10f5-4f54-a003-b2b3df5c7b84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec2cefb-a1a7-4b06-98fa-3b1fcdeb8604",
        "cursor": {
          "ref": "75d64e8a-b46c-4c04-8ff2-6153caf75334",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "933c090e-9bc4-4f94-b7a8-42c74926c327"
        },
        "item": {
          "id": "2ec2cefb-a1a7-4b06-98fa-3b1fcdeb8604",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "55f1566c-77d3-49ba-8e84-1e1cf4584f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c51842-b68a-47a9-9381-3fa29f1a9166",
        "cursor": {
          "ref": "ef2584b7-3542-4a07-8ef8-fac7ed5c24d4",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9b5f69b-f29e-4ee7-bd52-48a5195bb302"
        },
        "item": {
          "id": "f3c51842-b68a-47a9-9381-3fa29f1a9166",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ebead201-e072-4777-8a9d-b828af140311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b989aeee-a948-48b4-aac1-58658319e347",
        "cursor": {
          "ref": "ca4991e4-9085-40ec-87cf-85f9d24efabc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7ff728d8-1973-4fa4-8a93-f505e806e904"
        },
        "item": {
          "id": "b989aeee-a948-48b4-aac1-58658319e347",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19befb13-1a09-4ee6-b6f2-cc746648e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e021c23-c011-481e-aa19-a176e90d143b",
        "cursor": {
          "ref": "4df102cf-c496-4617-b7a9-d0b38c9f0ee4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0e9b3d0f-e29c-418f-b1a8-14a3e56486fc"
        },
        "item": {
          "id": "0e021c23-c011-481e-aa19-a176e90d143b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "46b91ae7-9e27-4072-9e02-5b01e3df1f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d200d0-7067-4ef8-965d-4f90dc3716b6",
        "cursor": {
          "ref": "7bfbbf76-96c4-4b86-b683-9b3f116077a6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2773a7b2-071a-4e47-b6ae-123cc245ce11"
        },
        "item": {
          "id": "f9d200d0-7067-4ef8-965d-4f90dc3716b6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1a27b26d-7dcd-4a01-a4d0-f80a32b9d44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37484f4-8370-48a4-9556-e1a670418b3f",
        "cursor": {
          "ref": "0ca7c64c-0146-4225-bc55-2b6d896c0dc2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3b4b0f06-68ab-48f5-9ef9-b19880fe16b1"
        },
        "item": {
          "id": "e37484f4-8370-48a4-9556-e1a670418b3f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1e0d9b16-28ff-4d8c-a10a-abfa8482034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a4e7f7-5582-4a09-a19e-47be25062ad8",
        "cursor": {
          "ref": "47c367dd-f8d2-443d-bf94-67800a8a14dd",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b5064cf-aa1d-400b-ac97-1729492dbc0d"
        },
        "item": {
          "id": "53a4e7f7-5582-4a09-a19e-47be25062ad8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "66a313c0-8bec-4ef1-b17c-19a2aa7fe3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99ac374-422f-4938-9d13-6c18348dcf04",
        "cursor": {
          "ref": "69c576b8-5114-47cc-90f2-b7a9b323aa44",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "356fb36d-ab11-4d7e-bc8b-835c9e22d408"
        },
        "item": {
          "id": "c99ac374-422f-4938-9d13-6c18348dcf04",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2eae1761-0176-418e-86ce-83fa042866e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490cd6bf-1b3c-4a09-a26f-c3adbde95b63",
        "cursor": {
          "ref": "681ff611-8a47-4a7e-b63e-870455b8e677",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f8e679ed-c956-4b97-b843-81d552021a8e"
        },
        "item": {
          "id": "490cd6bf-1b3c-4a09-a26f-c3adbde95b63",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "51582b2d-51c4-4319-bccd-2b6c633627fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6ef3f0-016f-4503-9191-7016c016b8e3",
        "cursor": {
          "ref": "cb244617-62b4-4b2d-ac11-3245fb8e8156",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5ed634ef-9ade-48e9-acd1-c0daa25a731d"
        },
        "item": {
          "id": "ff6ef3f0-016f-4503-9191-7016c016b8e3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5dc86138-2b1d-4919-8928-2512e1a82ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265bc417-cfdc-4d29-a17c-494bdc7b74ea",
        "cursor": {
          "ref": "66858235-7eff-409e-94aa-c48a7c6eda79",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "432c546c-e352-48c9-9f88-9f4dbcbb758a"
        },
        "item": {
          "id": "265bc417-cfdc-4d29-a17c-494bdc7b74ea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9ecbc42f-2369-4df6-bc71-4e33523a8369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f039ca2-a323-4f5e-bd14-00493cc14907",
        "cursor": {
          "ref": "c0251e5b-97a5-4d8f-8b9c-71d10d017aae",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4abc63c9-77f4-452d-9744-7d915b5d87c2"
        },
        "item": {
          "id": "5f039ca2-a323-4f5e-bd14-00493cc14907",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "016d7182-8cd9-4804-8b2a-14cc35fa2412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d5b6c5-19cc-4efe-8dbd-815fe289e454",
        "cursor": {
          "ref": "ca7ad178-2afd-46f6-99c4-edab6db54def",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4b2cddbd-30f6-4b05-bde5-84d38cce549b"
        },
        "item": {
          "id": "15d5b6c5-19cc-4efe-8dbd-815fe289e454",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "63feac65-8af3-4186-a7c8-7e3d7fca90a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119ff476-df6f-4254-bae3-e81b7282b5ef",
        "cursor": {
          "ref": "9b127169-44c6-43a1-9eb1-9e2ca8978abc",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf4f9faa-a397-4599-85c7-108da0a2f43e"
        },
        "item": {
          "id": "119ff476-df6f-4254-bae3-e81b7282b5ef",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "140fb5af-3da0-42a8-9d14-53d289487f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258542da-1d2a-4dd9-8875-dec68e9e5dc1",
        "cursor": {
          "ref": "b45ddceb-8ea3-4247-86dd-131b4c89b3da",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0eef5883-5520-43f7-a81f-b2627b575ad7"
        },
        "item": {
          "id": "258542da-1d2a-4dd9-8875-dec68e9e5dc1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c4accfb4-3a99-43df-874a-b794866d9e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362694a2-e2ff-4eb0-be18-33a437fa218a",
        "cursor": {
          "ref": "b5b99289-7d5b-4612-8940-c6e2a8e9f7fe",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e41fda8a-0b19-490a-bb4f-9f3046599908"
        },
        "item": {
          "id": "362694a2-e2ff-4eb0-be18-33a437fa218a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4577d4f3-8026-4b53-af6f-93515aee3cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1be3e0-4be9-4d04-adc8-9c74c29819c4",
        "cursor": {
          "ref": "0764a7eb-ee72-4e4d-a583-13a04ecee299",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c29d74d0-0c1f-4dc3-826d-760bab2fa666"
        },
        "item": {
          "id": "bc1be3e0-4be9-4d04-adc8-9c74c29819c4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0f9bdbe5-5b3b-431a-9d56-7f5e35dee5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca92416-370b-4ab5-81db-d6cddb69010a",
        "cursor": {
          "ref": "ed39c27c-4400-44c0-ab64-3a181df9f356",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ce4ec068-e9ce-4acf-9360-5e2d8f5fc273"
        },
        "item": {
          "id": "9ca92416-370b-4ab5-81db-d6cddb69010a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eb8b0d00-ca2b-4d13-b41f-eacf19ba5068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c9162-714f-46e2-99e4-d7fd12f83e90",
        "cursor": {
          "ref": "97a74e46-69ca-48be-b966-8c2f98833bda",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0b290b69-6056-42c9-bc4e-98deb3c63dc8"
        },
        "item": {
          "id": "a33c9162-714f-46e2-99e4-d7fd12f83e90",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fbd882ab-fb38-45c2-81d6-337251881fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caae6e8-e453-47ac-83e7-daa65821d047",
        "cursor": {
          "ref": "93ac661d-97ab-4180-92e4-498c3d2c478e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b14e69ad-1713-4085-ad19-375c6fb2672e"
        },
        "item": {
          "id": "2caae6e8-e453-47ac-83e7-daa65821d047",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c24b218b-86f8-4581-a2d5-1fccf8289c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0caa79-3baf-4a32-b374-89cfdab4abec",
        "cursor": {
          "ref": "168711ed-8244-43d6-9d52-38c4f7e06a1d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "49d16b9c-2698-465a-a797-539c52b7f2fb"
        },
        "item": {
          "id": "8c0caa79-3baf-4a32-b374-89cfdab4abec",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c1a4e26-4405-4320-be1a-178de0bd5bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b81949-9f01-4582-b81f-124b9ae9ef4d",
        "cursor": {
          "ref": "0b5f9c45-49e5-4c14-8b84-740c6e547833",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "967611ab-4dbf-4b42-88f0-6bb60dffc718"
        },
        "item": {
          "id": "f9b81949-9f01-4582-b81f-124b9ae9ef4d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "48973f9e-0f81-46f1-ae35-4b22f1621dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b379d5-81ea-4462-b284-025062009214",
        "cursor": {
          "ref": "ed145967-a92d-4f9b-bfc7-284760a73834",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "69052fbb-580b-4a87-ac4a-521d72f15026"
        },
        "item": {
          "id": "57b379d5-81ea-4462-b284-025062009214",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8f470640-820c-44d7-9c96-5ade574d55e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b212130-8873-4183-a93b-c6a5055c8c0e",
        "cursor": {
          "ref": "0ac89f1b-f92e-45ee-b75c-7a108aa333ea",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00a2fabd-ed8d-4a04-beec-6a65f47f4c2c"
        },
        "item": {
          "id": "7b212130-8873-4183-a93b-c6a5055c8c0e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0c3c4166-8761-4b77-aedc-ff5846fc7e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b5a698-b6bb-48cf-b3d2-886078728409",
        "cursor": {
          "ref": "0aa9f4e7-935b-4d12-97f7-5bf5f8c0ca39",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8d643353-e31c-4550-a180-7b0f5aacc47d"
        },
        "item": {
          "id": "41b5a698-b6bb-48cf-b3d2-886078728409",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5613e7fa-aea6-447c-b018-289b64d1d5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739c465a-17e3-429b-b3ae-b7f8191cc81f",
        "cursor": {
          "ref": "6f172b34-31fb-46d4-94b9-badcf514abed",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "59408b28-4f55-463e-bfbe-b2b358053859"
        },
        "item": {
          "id": "739c465a-17e3-429b-b3ae-b7f8191cc81f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a08226f6-bc77-4d26-ab88-8465434438c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d17aee0-33b8-49d8-a1b8-90ff1bef442e",
        "cursor": {
          "ref": "a49aa59e-270e-40a3-9aaf-1fcd77a56472",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a0712f50-0092-487b-8c42-9d485400170e"
        },
        "item": {
          "id": "1d17aee0-33b8-49d8-a1b8-90ff1bef442e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "074af514-cf01-40a1-8bdc-c2d258eacbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03122968-116a-4366-a390-998e989d2af7",
        "cursor": {
          "ref": "55e34de3-a6a1-4bb9-840d-4e849b3ad0aa",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3f191eca-84da-4cad-abab-ac6727276fa1"
        },
        "item": {
          "id": "03122968-116a-4366-a390-998e989d2af7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d7546d5c-b4f7-4a82-9eaf-507eb528e593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6647d6be-0acb-4c1f-8dee-b889bf0444fd",
        "cursor": {
          "ref": "fb1d7037-73e3-4ce8-8e72-9bdc2bec6b14",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0da9654c-55bb-45da-8498-bae805a5b560"
        },
        "item": {
          "id": "6647d6be-0acb-4c1f-8dee-b889bf0444fd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eadda06e-113f-4dbd-88e3-232184933000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab51f5-5ad3-4337-a814-2a280f6e5faf",
        "cursor": {
          "ref": "8ce63be3-5268-4f0b-8d9a-fa1e8e2938e7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "da727f2a-dc3d-45b5-9678-41ea32f55a80"
        },
        "item": {
          "id": "0eab51f5-5ad3-4337-a814-2a280f6e5faf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eac24d0c-d732-4cd7-bca6-8cd936218416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d85cc3d-b362-4f99-96bb-31bed2e3cab5",
        "cursor": {
          "ref": "084279ce-e364-4078-ac86-e99155e76303",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4917b6c8-409f-4d3e-9b1f-04bf6e977440"
        },
        "item": {
          "id": "9d85cc3d-b362-4f99-96bb-31bed2e3cab5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b096ed60-8473-4996-91b9-431192d93c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5716380e-e685-48f3-9052-ef485ff038c4",
        "cursor": {
          "ref": "79087283-70e6-4916-947f-9e69a76c244a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7a655581-5981-41fd-bfb3-4e9b3974e7d3"
        },
        "item": {
          "id": "5716380e-e685-48f3-9052-ef485ff038c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ee000204-dbbf-483a-a7e6-c81b0c065444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7fbc0b-2a9a-4ce9-92bf-7160773e0bc7",
        "cursor": {
          "ref": "9992dfbe-4186-4433-857b-b5a7d90b4d25",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2080a720-0650-4598-ae27-8fc390c0a6c0"
        },
        "item": {
          "id": "2a7fbc0b-2a9a-4ce9-92bf-7160773e0bc7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fee9f583-dea3-4bc3-abdc-eec646cb8acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864e91fd-5b52-4483-92d5-121e19c4d196",
        "cursor": {
          "ref": "f2646263-7c12-4d63-833a-ecad0091d7c2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9979008f-081e-43af-8796-a3073bac6a42"
        },
        "item": {
          "id": "864e91fd-5b52-4483-92d5-121e19c4d196",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "98cade66-0343-4a9d-b730-064f9b53eb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2e0972-9a2e-428a-a4d5-08fe12a74fa9",
        "cursor": {
          "ref": "844ae123-96e8-44aa-a661-c15795fe6018",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "79c6c667-e75c-4473-a6bf-93fe0c62c9e1"
        },
        "item": {
          "id": "6b2e0972-9a2e-428a-a4d5-08fe12a74fa9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7db14564-1e65-4244-bfc7-90e254b95e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2c1d09-bea5-49db-8762-abfdd6e4c668",
        "cursor": {
          "ref": "351b78f1-f33e-4f2a-8bf6-1209dcdda991",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c8f02229-2044-4542-b38f-7ccaa36cb5e9"
        },
        "item": {
          "id": "0c2c1d09-bea5-49db-8762-abfdd6e4c668",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "435cc178-7fe1-4c7c-8b50-2af56e4fb880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951cb8cb-f932-4ef9-a17d-2f91f162965a",
        "cursor": {
          "ref": "0071116d-06cd-4107-a3af-2d8d9a62fb7b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6140fca7-cd5e-422c-8bcb-25be6555cc25"
        },
        "item": {
          "id": "951cb8cb-f932-4ef9-a17d-2f91f162965a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "82de0356-6d54-4a60-9612-a4a7244caf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af0e6eb-2841-4e7b-b7bf-dee8fc1cfff8",
        "cursor": {
          "ref": "b5b46aaf-4ed2-4385-a06c-048df38db492",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2ac2d61b-abaa-4a6e-91ba-55e15a848c56"
        },
        "item": {
          "id": "1af0e6eb-2841-4e7b-b7bf-dee8fc1cfff8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1d848723-74ff-49b3-9c6b-e38719003609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195b5db-6779-4041-ab68-03de124b06bd",
        "cursor": {
          "ref": "3bdb1a90-d40f-4ae3-bebe-e6ebb3aba2a4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "da613e0c-5c2b-4820-96f0-351773b1fd22"
        },
        "item": {
          "id": "4195b5db-6779-4041-ab68-03de124b06bd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8f8f2cdf-e7f9-4cd0-8687-04b1b59c964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e41cca-5170-4aa5-bc19-e1fdc74df298",
        "cursor": {
          "ref": "394d1976-88a4-4e51-b3ea-836ae3faa597",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "495d64f2-6488-4092-af3e-23c4b5716f57"
        },
        "item": {
          "id": "23e41cca-5170-4aa5-bc19-e1fdc74df298",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4725b026-3f1a-4b16-845d-64b7fcb6fb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17b386e-2bed-4348-b9cf-f5fc6e2cc07c",
        "cursor": {
          "ref": "3e166cc5-a01e-4861-b6f2-e0d40190650f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "07ac620d-5fe5-4643-9adb-1062690005b3"
        },
        "item": {
          "id": "f17b386e-2bed-4348-b9cf-f5fc6e2cc07c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "234db16b-537b-4d87-97e2-fb0ca236c2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f406ff2-fb8c-42e0-8e02-100a6ee6a0cd",
        "cursor": {
          "ref": "07f237a0-46d9-4f2d-ae28-619f7bfcd414",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8905510a-b6a0-4af0-bb09-398acf6a40dd"
        },
        "item": {
          "id": "8f406ff2-fb8c-42e0-8e02-100a6ee6a0cd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a9ff942f-d737-4465-b32f-b797a48a1dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de813f03-9b6a-497b-bdaf-27af2c364072",
        "cursor": {
          "ref": "f2a1801f-8d8d-4f71-ac6d-0cae3d1826f4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b1bbd86a-4d66-47c9-8a0c-a23ad79871dc"
        },
        "item": {
          "id": "de813f03-9b6a-497b-bdaf-27af2c364072",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "776ac112-6ab5-4b03-9d5c-41c2f962414e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b5c081-3f87-4c44-865a-8670f04ca4d7",
        "cursor": {
          "ref": "9cfde9e9-2b0e-48d2-9c5d-f436b6cd3da8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3be4edb4-2ba6-402d-b846-4999c97d37e9"
        },
        "item": {
          "id": "21b5c081-3f87-4c44-865a-8670f04ca4d7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d6ddd43d-866d-42ea-a906-ecf1756f104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de47b5fe-ec49-442c-8e75-2b46c13c9891",
        "cursor": {
          "ref": "eb045c1a-07a3-481c-a00e-d57126a63d22",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "652ca9a9-1c55-4006-bf5d-a3ca30dc653c"
        },
        "item": {
          "id": "de47b5fe-ec49-442c-8e75-2b46c13c9891",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8320e673-d06c-4f1c-9ab9-67cd3260d246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726eace7-145f-4c7f-9820-942ad723e2d6",
        "cursor": {
          "ref": "bd33d508-23eb-4ef3-bce2-e93ded2ea0de",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f825dd46-979f-435f-8dd5-829ecd55924a"
        },
        "item": {
          "id": "726eace7-145f-4c7f-9820-942ad723e2d6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "eaf3baca-221f-4a51-b6d7-7ea1dd1884a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6a5049-664e-42cf-b9d1-2756c7ce8761",
        "cursor": {
          "ref": "ac631633-319a-4a72-a6bb-2caad73cb44c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7bc3cf48-c4e6-46a4-810e-b35bc68b0c91"
        },
        "item": {
          "id": "ea6a5049-664e-42cf-b9d1-2756c7ce8761",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5051599b-1ddf-4106-85ed-daa5445c9c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be8bfc8-786d-44dd-8f35-2e3d53702f1b",
        "cursor": {
          "ref": "35016af0-a60b-439b-a677-0bad7253f687",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "15a93ffe-85bc-4dc2-bad1-414117886705"
        },
        "item": {
          "id": "5be8bfc8-786d-44dd-8f35-2e3d53702f1b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d6080d75-ece1-4f7f-9664-2cdd8722f3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d916bd44-2c54-4022-9022-efb57b3a1e7a",
        "cursor": {
          "ref": "0fe5caff-dd15-4b9e-9bfe-5ec38fb7d4fa",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2c998ea0-b244-4f53-b571-121ce104a58a"
        },
        "item": {
          "id": "d916bd44-2c54-4022-9022-efb57b3a1e7a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d0afd367-f5b2-4752-a4ab-70ba686637b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a26058-faa3-4285-be10-63936e377ed6",
        "cursor": {
          "ref": "bbefe24a-13a9-465c-b484-497127a98824",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0097a0e5-af75-4539-bcdd-1de3c21776da"
        },
        "item": {
          "id": "a9a26058-faa3-4285-be10-63936e377ed6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "207d38dc-4320-471a-b7be-6c8e464ab0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33820659-8292-4d51-9d8b-3b06dfbfbd08",
        "cursor": {
          "ref": "4c2994bb-ecae-47e8-bc34-0d33de2bb658",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fc859bc3-065a-4df4-b2e8-1d6f0b8c3f56"
        },
        "item": {
          "id": "33820659-8292-4d51-9d8b-3b06dfbfbd08",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b2847048-e842-42dc-bf00-7a476779c2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dd17c0-aab9-4b61-92e5-c85ab5c58a76",
        "cursor": {
          "ref": "6b5c343a-c675-487a-b037-31e3425d92d8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a2d36a32-7003-47dc-bbe4-3d8ca3b39b3e"
        },
        "item": {
          "id": "08dd17c0-aab9-4b61-92e5-c85ab5c58a76",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c5ce08d8-1fd5-4e00-8c3c-4fb22c258b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc82407b-7aca-44e7-b840-8e985e9bea3a",
        "cursor": {
          "ref": "5fc6ce84-398d-432e-8e03-d68fe87ea0e7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "51e283b5-e56c-4de3-8e38-6ff91c7393cf"
        },
        "item": {
          "id": "cc82407b-7aca-44e7-b840-8e985e9bea3a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "534d7485-a5cc-4f75-b66c-a00dc1b64a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35323da3-1588-445f-8c59-cfa5d38242a5",
        "cursor": {
          "ref": "75768965-9efc-4ead-b3e0-53623383c288",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "837984b6-ffc4-4136-8b1f-c52e106f73aa"
        },
        "item": {
          "id": "35323da3-1588-445f-8c59-cfa5d38242a5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab469c57-3350-4f13-8319-de61a586e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec41ffd6-0c36-487c-8bef-5902abfff6e4",
        "cursor": {
          "ref": "133d6fad-9250-4de9-bbc7-9a6de907ec36",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "00831031-6c7d-48fc-a5f5-b4b0168080ba"
        },
        "item": {
          "id": "ec41ffd6-0c36-487c-8bef-5902abfff6e4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "767a7152-3490-4055-8147-26c362b3d665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0ea96-303e-4809-b776-c53a439f727e",
        "cursor": {
          "ref": "f28cfd96-cc77-4da1-b2be-267588e0f9f3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ccd3a0e9-1a79-46e4-9bd1-4270814c956f"
        },
        "item": {
          "id": "30e0ea96-303e-4809-b776-c53a439f727e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75f10a94-99d9-463d-8b08-1cc68c0098c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230e0d0d-7ab4-4b78-bad2-78ea66737e1b",
        "cursor": {
          "ref": "fa488771-508f-4f30-ad13-e3fa253f7bec",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f426af44-07d1-40c0-a655-59cd0443ba2b"
        },
        "item": {
          "id": "230e0d0d-7ab4-4b78-bad2-78ea66737e1b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ebeae586-87f9-4257-9e39-0d862fba3c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374a3baf-7259-4153-8881-79d381b38f2f",
        "cursor": {
          "ref": "95374170-c164-4f3a-b941-62db1af77011",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2cbd7d50-df68-4c0e-850b-1396a61464bf"
        },
        "item": {
          "id": "374a3baf-7259-4153-8881-79d381b38f2f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "baa82c65-1593-4c2a-874c-eef0cdbd7b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f0f2b-7e52-4ea2-ad9e-2882e984dcdf",
        "cursor": {
          "ref": "09e08598-d11a-40a8-ac81-7188acb9e56c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ba93fa5e-ba29-4630-96d0-7faea9cf0635"
        },
        "item": {
          "id": "331f0f2b-7e52-4ea2-ad9e-2882e984dcdf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "39978c3a-71f0-46b4-a4fc-2fc4a7fa54ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3a9dfd-3785-4b65-aee1-3239b5ec48b8",
        "cursor": {
          "ref": "0a7c5fd9-0890-4e23-8735-701778378720",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "99777023-5472-4cf5-8dff-cf916a65a99d"
        },
        "item": {
          "id": "ee3a9dfd-3785-4b65-aee1-3239b5ec48b8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ba6b34ba-bcca-4903-8176-887fdaf8bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a462e07f-88a6-4bd9-bf40-0e4c2f97cede",
        "cursor": {
          "ref": "66b130ce-136a-47d1-8066-bba13418bf96",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d2b8f3f5-0056-420d-95e1-3e5776c3ddb2"
        },
        "item": {
          "id": "a462e07f-88a6-4bd9-bf40-0e4c2f97cede",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a6cdcf6f-d4d5-4077-b61c-5596b7e0282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4a4802-1e40-420e-99f2-022948f60e1f",
        "cursor": {
          "ref": "2b22aa22-4d39-4bfd-9bb4-9840cddcd516",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "469b159f-7af5-4c27-8dae-87fb21a832da"
        },
        "item": {
          "id": "dc4a4802-1e40-420e-99f2-022948f60e1f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b35fc5b8-9ba0-4063-8a16-d978b6ade7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1b4075-fe91-4ad5-9127-8ab7c7cf5ca2",
        "cursor": {
          "ref": "ee2fb190-49fa-48ff-9370-a84136b63bd7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4882bf98-bf03-40a5-9a75-9c52567e9480"
        },
        "item": {
          "id": "ba1b4075-fe91-4ad5-9127-8ab7c7cf5ca2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a9ce39f1-b7e0-4189-831d-7a0681664e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde96a8-3be5-4280-a15d-7c6a66e4425d",
        "cursor": {
          "ref": "e29d492e-86bb-4e1e-b2eb-82a2038cf88b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "beb80837-aa41-4bbb-ab7d-e3f20f8d9eea"
        },
        "item": {
          "id": "2cde96a8-3be5-4280-a15d-7c6a66e4425d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "70daf04a-5678-40f6-9565-29f301f5660e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b48be-ec0f-47cb-aeb6-12aa7be0e84e",
        "cursor": {
          "ref": "d85f2997-18e2-4210-af7e-db7b90e4b51a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef81ac83-80e9-4b64-b8c3-f37279db8027"
        },
        "item": {
          "id": "686b48be-ec0f-47cb-aeb6-12aa7be0e84e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1473bede-3911-4ef1-80d6-95bc266fecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683a28e1-4159-4c43-813b-55f79d9b7518",
        "cursor": {
          "ref": "be62a75b-e9fc-4a9d-ad00-1be2940e5a5c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46d4b50d-86b6-483a-b30f-5ca897d62005"
        },
        "item": {
          "id": "683a28e1-4159-4c43-813b-55f79d9b7518",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "320e1f81-040e-46f1-aed7-f5ef1aca96e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733ac992-9f4e-41c2-8ff1-d0e2c1c70a71",
        "cursor": {
          "ref": "c4a42d07-8624-4b28-b4a1-26f9276a26de",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6b9e1705-59bb-4ac1-b7e8-a73504c09173"
        },
        "item": {
          "id": "733ac992-9f4e-41c2-8ff1-d0e2c1c70a71",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0dbb4333-629c-4a6f-9f88-928ab933fc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2323aa-4d0c-4f6f-b7f1-0834796f5b56",
        "cursor": {
          "ref": "315119f5-96ca-4fe8-a245-7480b02aed60",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77d540cf-28fe-402b-a1fd-bedc49db0b98"
        },
        "item": {
          "id": "5f2323aa-4d0c-4f6f-b7f1-0834796f5b56",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "01f12f38-66fd-4a26-a36f-4d9f39f0ebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3362eae3-917c-4954-809b-f01812243a8c",
        "cursor": {
          "ref": "55f2cac1-0e51-4c73-9911-887c713b91b1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b90ec039-4107-496b-aed2-b6ee69a0327f"
        },
        "item": {
          "id": "3362eae3-917c-4954-809b-f01812243a8c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "03ea97de-7a9a-473e-86e3-fa3027c5880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa5a50a-8288-4916-b34f-3512325525de",
        "cursor": {
          "ref": "c4e19cec-8791-45e1-b59d-e88813b210c8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ee048272-9250-4928-b431-bdf1daa6fc29"
        },
        "item": {
          "id": "efa5a50a-8288-4916-b34f-3512325525de",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "823638d4-02d7-4790-9c75-762892b08fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb3a4f3-6465-4015-86c5-1415f9fc7147",
        "cursor": {
          "ref": "dd4e93d9-9485-44d0-9c58-ee959017fe0b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4860047a-1aea-46c9-a780-0ae2cc9be0ab"
        },
        "item": {
          "id": "6cb3a4f3-6465-4015-86c5-1415f9fc7147",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "09c94986-bcbf-4078-93ed-570a48c475be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c1b64-c9aa-45a8-b757-8dea0975184e",
        "cursor": {
          "ref": "1c194db1-ba81-44e5-adf8-0ff712fc67ef",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fb628f24-12e7-46a7-b6a1-ba9f6bee5e0d"
        },
        "item": {
          "id": "1f0c1b64-c9aa-45a8-b757-8dea0975184e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bd8c6ae1-38b9-4a88-9d73-4d89d7b56803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028153ea-2e04-4afb-b03a-deae72aee87a",
        "cursor": {
          "ref": "bd7c6e52-54b5-457d-849d-05ed1be1628b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b9d78660-13e6-4d55-becb-b77dce94ad3e"
        },
        "item": {
          "id": "028153ea-2e04-4afb-b03a-deae72aee87a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f2b51fd-d2cc-4f22-bea2-07c526d47fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77490dd-daeb-4596-9006-1bc428dae346",
        "cursor": {
          "ref": "a0d83744-79a8-49f8-ab25-2012d7a67cd9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fe946a19-0326-415a-a84c-6ce1b701319d"
        },
        "item": {
          "id": "f77490dd-daeb-4596-9006-1bc428dae346",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "712a1169-e366-4a22-8eaf-62e4fe201e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2487ffdc-f710-4df9-8076-863c51bbde39",
        "cursor": {
          "ref": "a2ed0648-de24-48b3-bddc-755c6ddcf234",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6617e948-3605-441e-8f05-3ae120dfb061"
        },
        "item": {
          "id": "2487ffdc-f710-4df9-8076-863c51bbde39",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5a805a47-0847-47a6-8991-1bd178aaf1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b7bf52-429a-4040-a1af-d29be360952f",
        "cursor": {
          "ref": "cd16b3cf-f7b2-4f7d-8450-c0de4839d2b5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "141455c0-67ab-4e0e-aeb0-2ff600987c41"
        },
        "item": {
          "id": "f6b7bf52-429a-4040-a1af-d29be360952f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6bc70b92-5bbf-45e0-90d8-dfaa174612df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d97b84-e840-4639-aa66-b00ea79ace93",
        "cursor": {
          "ref": "0adfc6c9-b765-40e6-88fa-5b863f66a360",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c113dc9a-6464-4107-9efb-13dec5279543"
        },
        "item": {
          "id": "a7d97b84-e840-4639-aa66-b00ea79ace93",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5314a920-5cc4-4534-8ba4-e1ad20c2f3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497bafd2-9cad-4c58-9fc8-b3eb61e05314",
        "cursor": {
          "ref": "91efa985-f88a-46d8-8780-49bab50008b4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8276ea09-e9f7-4cac-8ec2-c65fd0c9e726"
        },
        "item": {
          "id": "497bafd2-9cad-4c58-9fc8-b3eb61e05314",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "24e80c87-1ddb-4ca7-ad7c-5048fd64e368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933ebfbd-4b55-4e50-aa57-101155302b9e",
        "cursor": {
          "ref": "2f11472a-9ae7-459f-87a5-7e3e616283a2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "64c3bd57-d5e6-4c81-9509-a2afecebe713"
        },
        "item": {
          "id": "933ebfbd-4b55-4e50-aa57-101155302b9e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "96e6e8bb-2f25-455b-ae7a-8ec074671b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d172640-a89d-403e-99a5-a6fe33824179",
        "cursor": {
          "ref": "b4036748-cb38-47ba-bfd8-60cb7c7bb169",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b82bce3b-f0cb-4eda-8b6f-0fc2f9efd54c"
        },
        "item": {
          "id": "4d172640-a89d-403e-99a5-a6fe33824179",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0711dc15-1864-4332-ada9-b4c0920d0217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e846d0ae-4970-4162-9bfa-d5d239a1a54f",
        "cursor": {
          "ref": "f5fb6936-165b-4894-ab40-3f586fdcc3a3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1ba0a885-c2ea-49d8-94c8-095cccc20f61"
        },
        "item": {
          "id": "e846d0ae-4970-4162-9bfa-d5d239a1a54f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5435541a-a6bf-4281-87be-24fb54626047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c925ba7-f0e7-4467-89db-394aa61ec1d8",
        "cursor": {
          "ref": "25ce1b7e-94e6-4ad4-9fc7-4d315c8ef8ea",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e856939e-f5a9-4a8f-85ec-f7b2350609d4"
        },
        "item": {
          "id": "6c925ba7-f0e7-4467-89db-394aa61ec1d8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "38b71c94-d5cf-4094-9ad9-6099cd0a9d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aea703e-96a6-4285-bf17-cbe7bdc73bbe",
        "cursor": {
          "ref": "089d1e0e-6a80-49f3-9a93-9950e422d3d0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b7840d11-75a6-4fb1-815c-5d56bea51f11"
        },
        "item": {
          "id": "1aea703e-96a6-4285-bf17-cbe7bdc73bbe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e3098951-cfd6-4b96-a1fd-307bc8d2a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dfeba3-b2c5-4d0c-838c-340dd2e9e1ca",
        "cursor": {
          "ref": "0d140f01-1832-4b1f-b430-6a45c250d73a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6b69ff88-122d-4962-ba24-6ad1581e1112"
        },
        "item": {
          "id": "61dfeba3-b2c5-4d0c-838c-340dd2e9e1ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "87befd63-43a2-4c62-85e9-10c684db5721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bf51ae-02d2-43a1-a8eb-920e642468a0",
        "cursor": {
          "ref": "27292586-141d-4616-8211-75b82074e304",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9a6cc05d-fcee-410e-84c6-28f44d86b921"
        },
        "item": {
          "id": "f4bf51ae-02d2-43a1-a8eb-920e642468a0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d3af476d-e324-471f-94f8-3c67e425c763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f58df5-2715-4a59-9850-1bdd1e1ea434",
        "cursor": {
          "ref": "f09eb94a-4ac7-4284-8f55-fd003db8fb93",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e0a5aa67-52b0-49ec-8c5c-a77df570eb63"
        },
        "item": {
          "id": "70f58df5-2715-4a59-9850-1bdd1e1ea434",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "18fc1b40-2483-40c8-a62c-9f0020141f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee028e7d-0269-4162-a7d1-077d1987ead8",
        "cursor": {
          "ref": "c653483a-ae83-4134-923b-130c57e4600d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ad46000e-f8d8-4756-809e-18c5417662fd"
        },
        "item": {
          "id": "ee028e7d-0269-4162-a7d1-077d1987ead8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e74b2394-5cb9-4a69-af1a-c12cc98235ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c438bac9-01f5-450f-b7e7-f6129583504f",
        "cursor": {
          "ref": "430d4796-b346-424d-b9e9-1367c815f8aa",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f7b974ec-d3b3-4595-9484-ee3a14b7c595"
        },
        "item": {
          "id": "c438bac9-01f5-450f-b7e7-f6129583504f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "07ab23c8-2981-43ad-91be-92797133a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1414805-7554-4062-ae3c-aaaede866932",
        "cursor": {
          "ref": "25274583-731e-4468-99aa-a8975c5214b1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fd73521e-c2da-47b6-8bde-a4b19beb4f31"
        },
        "item": {
          "id": "f1414805-7554-4062-ae3c-aaaede866932",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6511376-c7c7-4482-bbf5-1241e5eadebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427f350f-d895-4591-b960-d40dbcc9feb5",
        "cursor": {
          "ref": "8e41054b-0aa2-492c-adb7-95155b8265c1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f4616af1-8efe-4fc6-bfbd-3db9412f23a0"
        },
        "item": {
          "id": "427f350f-d895-4591-b960-d40dbcc9feb5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "41e04b76-7ed2-4a1b-85a0-1a8a50b18ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9154bb10-916f-4e4f-8de6-4215c967e241",
        "cursor": {
          "ref": "63043d79-a501-421b-8a54-ca1f57e5c375",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "75a134ec-ee0f-418f-a7e7-e70be3ceac2e"
        },
        "item": {
          "id": "9154bb10-916f-4e4f-8de6-4215c967e241",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "05895b43-81ee-492c-a83d-0150ddc386df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7a9cb0-f4b9-477d-9a75-8fe2c0150251",
        "cursor": {
          "ref": "0d4f52ee-4d92-4a76-be82-198c92e40078",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2b938b87-1bae-42f0-babc-16200ef8c821"
        },
        "item": {
          "id": "bf7a9cb0-f4b9-477d-9a75-8fe2c0150251",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "71225098-9a17-4393-ae79-f19467362528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c642e28-bc01-4d85-a955-b2fe2aa24b57",
        "cursor": {
          "ref": "b0d989f7-b77d-4b01-b600-df0dc6fc61b5",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "85601a9f-2b5d-4075-9f6c-86df2f574459"
        },
        "item": {
          "id": "3c642e28-bc01-4d85-a955-b2fe2aa24b57",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "36cb0a4d-157a-42de-b680-bc9365b5a863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4793153a-ec15-435c-9a48-f722db826fbf",
        "cursor": {
          "ref": "ce8fb56d-04ba-4062-9a1b-96ab4e4b8bd9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ec5fea00-fe11-4bca-a18c-c0698643d826"
        },
        "item": {
          "id": "4793153a-ec15-435c-9a48-f722db826fbf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3f9483c9-d4c7-4acb-8175-2cc4e3865b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da2095-b8ff-4955-9e1a-20813ff2eb92",
        "cursor": {
          "ref": "3ad97a9f-e705-4148-8188-c49fb03bd812",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9e75559f-454b-413d-a275-25feb7ea6e2d"
        },
        "item": {
          "id": "40da2095-b8ff-4955-9e1a-20813ff2eb92",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "263acf75-d357-45a6-bd3d-a47ccf07e839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f16d2c-d455-4a2d-9ff5-9f7b000d5eda",
        "cursor": {
          "ref": "16655942-e527-4557-aec0-87bffd294192",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4c42a1a6-0904-475a-b11a-c624fcaf8f91"
        },
        "item": {
          "id": "b6f16d2c-d455-4a2d-9ff5-9f7b000d5eda",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "de004574-aaca-439e-bbe2-e9aaceaac89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e20e482-41d5-46a5-a539-13710dbbdbcd",
        "cursor": {
          "ref": "d8d1faf1-3c38-4f2d-873d-6d1b92591771",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "62d60e34-decd-4c5b-9c33-72675f94888b"
        },
        "item": {
          "id": "6e20e482-41d5-46a5-a539-13710dbbdbcd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c3059210-fe91-41aa-b944-3fd13cd2c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cd3603-9800-4dba-86e1-662ed1a4e1ed",
        "cursor": {
          "ref": "eaee1c5b-1140-4e7a-94f9-3f2352a8759b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "502fd276-f76c-4252-9bfe-ee562843f609"
        },
        "item": {
          "id": "22cd3603-9800-4dba-86e1-662ed1a4e1ed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "77d59e23-2208-4e43-b072-58c087290f49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daba52af-6d30-4bf3-924e-65417669db43",
        "cursor": {
          "ref": "9497e99c-2e34-40c0-a59a-8a6fd55b6366",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c38f8e68-ed9a-4fcf-8129-9b1637a57d76"
        },
        "item": {
          "id": "daba52af-6d30-4bf3-924e-65417669db43",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5e7d0a2a-7481-41c5-a5d4-a4ceea0c5420",
          "status": "OK",
          "code": 200,
          "responseTime": 139,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4ad188-68ec-48d5-bd77-9e27adb913f5",
        "cursor": {
          "ref": "0a7e749c-0511-49f9-b9df-5651db424571",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "51a37f52-0a8e-4513-ab9e-61323f7e4031"
        },
        "item": {
          "id": "8a4ad188-68ec-48d5-bd77-9e27adb913f5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b9b0d352-35d0-4294-9bfb-addd1b6924de",
          "status": "OK",
          "code": 200,
          "responseTime": 1630,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cb49ea-d673-4c1b-a630-4fa636d1698d",
        "cursor": {
          "ref": "f8db045b-2c64-4d03-9143-737c4db8fe76",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d31ad4b6-b32a-4d47-9cae-5d63724dd199"
        },
        "item": {
          "id": "21cb49ea-d673-4c1b-a630-4fa636d1698d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7d8a8657-19c2-402e-846c-b564b52723bb",
          "status": "OK",
          "code": 200,
          "responseTime": 1461,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d760924-ffd4-4662-8e1d-249509262655",
        "cursor": {
          "ref": "c0de7630-80b1-4a04-8a34-779df09873f1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6ddda189-7dce-4612-a7d7-a89fee82e616"
        },
        "item": {
          "id": "1d760924-ffd4-4662-8e1d-249509262655",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "399fd958-8f82-4b48-bf86-1cdbe7ae39e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d760924-ffd4-4662-8e1d-249509262655",
        "cursor": {
          "ref": "c0de7630-80b1-4a04-8a34-779df09873f1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6ddda189-7dce-4612-a7d7-a89fee82e616"
        },
        "item": {
          "id": "1d760924-ffd4-4662-8e1d-249509262655",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "399fd958-8f82-4b48-bf86-1cdbe7ae39e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc673f0-3e2f-424b-b153-499e80ebbc79",
        "cursor": {
          "ref": "089c4e1f-4552-4bf0-8ee5-2b7fe63b4d9e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "01e4148d-05c1-441b-8d1e-6467a2e47932"
        },
        "item": {
          "id": "7bc673f0-3e2f-424b-b153-499e80ebbc79",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efb2c327-2ae0-43a0-9368-988e5399112f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4767ae86-2997-4d2b-b682-5142542aca7f",
        "cursor": {
          "ref": "7abc8cae-7758-493b-a59d-287b139c14f4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7652bb09-24e4-4032-a648-5638e444c907"
        },
        "item": {
          "id": "4767ae86-2997-4d2b-b682-5142542aca7f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d3a2680b-0515-4990-9607-d69e195dd6bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}